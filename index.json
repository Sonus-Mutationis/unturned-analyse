{
  "api/SDG.Framework.Debug.IInspectableList.html": {
    "href": "api/SDG.Framework.Debug.IInspectableList.html",
    "title": "Interface IInspectableList | Unturned Analyse Doc",
    "keywords": "Interface IInspectableList Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public interface IInspectableList Properties canInspectorAdd Whether add can be called from the inspector. bool canInspectorAdd { get; set; } Property Value bool canInspectorRemove Whether remove can be called from the inspector. bool canInspectorRemove { get; set; } Property Value bool Methods inspectorAdd(object) Called when the inspector adds an element. void inspectorAdd(object instance) Parameters instance object inspectorRemove(object) Called when the inspector removes an element. void inspectorRemove(object instance) Parameters instance object inspectorSet(int) Called when the inspector sets an element to a different value. void inspectorSet(int index) Parameters index int Events inspectorAdded event InspectableListAddedHandler inspectorAdded Event Type InspectableListAddedHandler inspectorChanged event InspectableListChangedHandler inspectorChanged Event Type InspectableListChangedHandler inspectorRemoved event InspectableListRemovedHandler inspectorRemoved Event Type InspectableListRemovedHandler"
  },
  "api/SDG.Framework.Debug.IInspectablePath.html": {
    "href": "api/SDG.Framework.Debug.IInspectablePath.html",
    "title": "Interface IInspectablePath | Unturned Analyse Doc",
    "keywords": "Interface IInspectablePath Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public interface IInspectablePath Properties absolutePath string absolutePath { get; set; } Property Value string"
  },
  "api/SDG.Framework.Debug.InspectableDirectoryPath.html": {
    "href": "api/SDG.Framework.Debug.InspectableDirectoryPath.html",
    "title": "Struct InspectableDirectoryPath | Unturned Analyse Doc",
    "keywords": "Struct InspectableDirectoryPath Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public struct InspectableDirectoryPath : IInspectablePath Implements IInspectablePath Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Properties absolutePath public string absolutePath { readonly get; set; } Property Value string isValid public bool isValid { get; } Property Value bool Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Framework.Debug.InspectableFilePath.html": {
    "href": "api/SDG.Framework.Debug.InspectableFilePath.html",
    "title": "Struct InspectableFilePath | Unturned Analyse Doc",
    "keywords": "Struct InspectableFilePath Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public struct InspectableFilePath : IInspectablePath Implements IInspectablePath Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors InspectableFilePath(string) public InspectableFilePath(string newExtension) Parameters newExtension string Properties absolutePath public string absolutePath { readonly get; set; } Property Value string extension public readonly string extension { get; } Property Value string isValid public bool isValid { get; } Property Value bool Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Framework.Debug.InspectableList-1.html": {
    "href": "api/SDG.Framework.Debug.InspectableList-1.html",
    "title": "Class InspectableList<T> | Unturned Analyse Doc",
    "keywords": "Class InspectableList<T> Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public class InspectableList<T> : List<T>, IList<T>, ICollection<T>, IList, ICollection, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable, IInspectableList Type Parameters T Inheritance object List<T> InspectableList<T> Implements IList<T> ICollection<T> IList ICollection IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IEnumerable IInspectableList Inherited Members List<T>.AddRange(IEnumerable<T>) List<T>.AsReadOnly() List<T>.BinarySearch(int, int, T, IComparer<T>) List<T>.BinarySearch(T) List<T>.BinarySearch(T, IComparer<T>) List<T>.Clear() List<T>.Contains(T) List<T>.ConvertAll<TOutput>(Converter<T, TOutput>) List<T>.CopyTo(T[]) List<T>.CopyTo(int, T[], int, int) List<T>.CopyTo(T[], int) List<T>.Exists(Predicate<T>) List<T>.Find(Predicate<T>) List<T>.FindAll(Predicate<T>) List<T>.FindIndex(Predicate<T>) List<T>.FindIndex(int, Predicate<T>) List<T>.FindIndex(int, int, Predicate<T>) List<T>.FindLast(Predicate<T>) List<T>.FindLastIndex(Predicate<T>) List<T>.FindLastIndex(int, Predicate<T>) List<T>.FindLastIndex(int, int, Predicate<T>) List<T>.ForEach(Action<T>) List<T>.GetEnumerator() List<T>.GetRange(int, int) List<T>.IndexOf(T) List<T>.IndexOf(T, int) List<T>.IndexOf(T, int, int) List<T>.Insert(int, T) List<T>.InsertRange(int, IEnumerable<T>) List<T>.LastIndexOf(T) List<T>.LastIndexOf(T, int) List<T>.LastIndexOf(T, int, int) List<T>.RemoveAll(Predicate<T>) List<T>.RemoveRange(int, int) List<T>.Reverse() List<T>.Reverse(int, int) List<T>.Sort() List<T>.Sort(IComparer<T>) List<T>.Sort(int, int, IComparer<T>) List<T>.Sort(Comparison<T>) List<T>.ToArray() List<T>.TrimExcess() List<T>.TrueForAll(Predicate<T>) List<T>.Capacity List<T>.Count List<T>.this[int] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods ListExtension.GetAndRemoveTail<T>(List<T>) ListExtension.GetRandomIndex<T>(List<T>) ListExtension.GetTail<T>(List<T>) ListExtension.HeadOrDefault<T>(List<T>) ListExtension.IsEmpty<T>(List<T>) ListExtension.RandomOrDefault<T>(List<T>) ListExtension.RemoveTail<T>(List<T>) ListExtension.TailOrDefault<T>(List<T>) ListExtension.GetInternalArray<T>(List<T>) ListExtension.RemoveAtFast<T>(List<T>, int) ListExtension.RemoveFast<T>(List<T>, T) Constructors InspectableList() public InspectableList() InspectableList(IEnumerable<T>) public InspectableList(IEnumerable<T> collection) Parameters collection IEnumerable<T> InspectableList(int) public InspectableList(int capacity) Parameters capacity int Properties canInspectorAdd Whether add can be called from the inspector. public virtual bool canInspectorAdd { get; set; } Property Value bool canInspectorRemove Whether remove can be called from the inspector. public virtual bool canInspectorRemove { get; set; } Property Value bool Methods Add(T) public void Add(T item) Parameters item T Remove(T) public bool Remove(T item) Parameters item T Returns bool RemoveAt(int) public void RemoveAt(int index) Parameters index int inspectorAdd(object) Called when the inspector adds an element. public virtual void inspectorAdd(object instance) Parameters instance object inspectorRemove(object) Called when the inspector removes an element. public virtual void inspectorRemove(object instance) Parameters instance object inspectorSet(int) Called when the inspector sets an element to a different value. public virtual void inspectorSet(int index) Parameters index int triggerAdded(object) protected virtual void triggerAdded(object instance) Parameters instance object triggerChanged() protected virtual void triggerChanged() triggerRemoved(object) protected virtual void triggerRemoved(object instance) Parameters instance object Events inspectorAdded public event InspectableListAddedHandler inspectorAdded Event Type InspectableListAddedHandler inspectorChanged public event InspectableListChangedHandler inspectorChanged Event Type InspectableListChangedHandler inspectorRemoved public event InspectableListRemovedHandler inspectorRemoved Event Type InspectableListRemovedHandler"
  },
  "api/SDG.Framework.Debug.InspectableListAddedHandler.html": {
    "href": "api/SDG.Framework.Debug.InspectableListAddedHandler.html",
    "title": "Delegate InspectableListAddedHandler | Unturned Analyse Doc",
    "keywords": "Delegate InspectableListAddedHandler Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public delegate void InspectableListAddedHandler(IInspectableList list, object instance) Parameters list IInspectableList instance object Constructors InspectableListAddedHandler(object, IntPtr) public InspectableListAddedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IInspectableList, object, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IInspectableList list, object instance, AsyncCallback callback, object @object) Parameters list IInspectableList instance object callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IInspectableList, object) public virtual void Invoke(IInspectableList list, object instance) Parameters list IInspectableList instance object"
  },
  "api/SDG.Framework.Debug.InspectableListChangedHandler.html": {
    "href": "api/SDG.Framework.Debug.InspectableListChangedHandler.html",
    "title": "Delegate InspectableListChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate InspectableListChangedHandler Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public delegate void InspectableListChangedHandler(IInspectableList list) Parameters list IInspectableList Constructors InspectableListChangedHandler(object, IntPtr) public InspectableListChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IInspectableList, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IInspectableList list, AsyncCallback callback, object @object) Parameters list IInspectableList callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IInspectableList) public virtual void Invoke(IInspectableList list) Parameters list IInspectableList"
  },
  "api/SDG.Framework.Debug.InspectableListRemovedHandler.html": {
    "href": "api/SDG.Framework.Debug.InspectableListRemovedHandler.html",
    "title": "Delegate InspectableListRemovedHandler | Unturned Analyse Doc",
    "keywords": "Delegate InspectableListRemovedHandler Namespace SDG.Framework.Debug Assembly Assembly-CSharp.dll public delegate void InspectableListRemovedHandler(IInspectableList list, object instance) Parameters list IInspectableList instance object Constructors InspectableListRemovedHandler(object, IntPtr) public InspectableListRemovedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IInspectableList, object, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IInspectableList list, object instance, AsyncCallback callback, object @object) Parameters list IInspectableList instance object callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IInspectableList, object) public virtual void Invoke(IInspectableList list, object instance) Parameters list IInspectableList instance object"
  },
  "api/SDG.Framework.Debug.html": {
    "href": "api/SDG.Framework.Debug.html",
    "title": "Namespace SDG.Framework.Debug | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Debug Classes InspectableList<T> Structs InspectableDirectoryPath InspectableFilePath Interfaces IInspectableList IInspectablePath Delegates InspectableListAddedHandler InspectableListChangedHandler InspectableListRemovedHandler"
  },
  "api/SDG.Framework.Devkit.AmbianceUtility.html": {
    "href": "api/SDG.Framework.Devkit.AmbianceUtility.html",
    "title": "Class AmbianceUtility | Unturned Analyse Doc",
    "keywords": "Class AmbianceUtility Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class AmbianceUtility Inheritance object AmbianceUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AmbianceUtility() public AmbianceUtility() Methods isPointInsideVolume(AmbianceVolume, Vector3) [Obsolete] public static bool isPointInsideVolume(AmbianceVolume volume, Vector3 point) Parameters volume AmbianceVolume point Vector3 Returns bool isPointInsideVolume(Vector3, out AmbianceVolume) [Obsolete] public static bool isPointInsideVolume(Vector3 point, out AmbianceVolume volume) Parameters point Vector3 volume AmbianceVolume Returns bool"
  },
  "api/SDG.Framework.Devkit.AmbianceVolume.html": {
    "href": "api/SDG.Framework.Devkit.AmbianceVolume.html",
    "title": "Class AmbianceVolume | Unturned Analyse Doc",
    "keywords": "Class AmbianceVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class AmbianceVolume : LevelVolume<AmbianceVolume, AmbianceVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler, IAmbianceNode Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<AmbianceVolume, AmbianceVolumeManager> AmbianceVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler IAmbianceNode Inherited Members LevelVolume<AmbianceVolume, AmbianceVolumeManager>.falloffDistance LevelVolume<AmbianceVolume, AmbianceVolumeManager>.editorGameObject LevelVolume<AmbianceVolume, AmbianceVolumeManager>.editorMeshFilter LevelVolume<AmbianceVolume, AmbianceVolumeManager>.editorMeshRenderer LevelVolume<AmbianceVolume, AmbianceVolumeManager>.forceShouldAddCollider LevelVolume<AmbianceVolume, AmbianceVolumeManager>.supportsBoxShape LevelVolume<AmbianceVolume, AmbianceVolumeManager>.supportsSphereShape LevelVolume<AmbianceVolume, AmbianceVolumeManager>.supportsFalloff LevelVolume<AmbianceVolume, AmbianceVolumeManager>.CreateMenu() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.beginSelection(InteractionData) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.endSelection(InteractionData) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetBoxSize() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetBoxExtents() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetInnerBoxSize() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetInnerBoxExtents() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetLocalInnerBoxSize() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetSphereRadius() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetLocalSphereRadius() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.SetSphereRadius(float) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.CalculateWorldBounds() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.CalculateLocalBounds() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.OnEnable() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.OnDisable() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.Awake() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.Start() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.OnDestroy() LevelVolume<AmbianceVolume, AmbianceVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<AmbianceVolume, AmbianceVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors AmbianceVolume() public AmbianceVolume() Fields _fogColor protected Color _fogColor Field Value Color _fogIntensity protected float _fogIntensity Field Value float _id Kept because lots of modders have been using this script in Unity, so removing legacy effect id would break their content. protected ushort _id Field Value ushort _noLighting protected bool _noLighting Field Value bool _noWater protected bool _noWater Field Value bool _overrideFog protected bool _overrideFog Field Value bool overrideAtmosphericFog public bool overrideAtmosphericFog Field Value bool weatherMask If per-weather mask AND is non zero the weather will blend in. public uint weatherMask Field Value uint Properties EffectGuid public Guid EffectGuid { get; } Property Value Guid fogColor public Color fogColor { get; set; } Property Value Color fogIntensity public float fogIntensity { get; set; } Property Value float id public ushort id { get; set; } Property Value ushort noLighting public bool noLighting { get; set; } Property Value bool noWater public bool noWater { get; set; } Property Value bool overrideFog public bool overrideFog { get; set; } Property Value bool Methods CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement GetEffectAsset() Used by lighting to get the currently active effect. public EffectAsset GetEffectAsset() Returns EffectAsset readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.AmbianceVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.AmbianceVolumeManager.html",
    "title": "Class AmbianceVolumeManager | Unturned Analyse Doc",
    "keywords": "Class AmbianceVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class AmbianceVolumeManager : VolumeManager<AmbianceVolume, AmbianceVolumeManager> Inheritance object VolumeManagerBase VolumeManager<AmbianceVolume, AmbianceVolumeManager> AmbianceVolumeManager Inherited Members VolumeManager<AmbianceVolume, AmbianceVolumeManager>.allowInstantiation VolumeManager<AmbianceVolume, AmbianceVolumeManager>.supportsFalloff VolumeManager<AmbianceVolume, AmbianceVolumeManager>.allVolumes VolumeManager<AmbianceVolume, AmbianceVolumeManager>.Get() VolumeManager<AmbianceVolume, AmbianceVolumeManager>.GetAllVolumes() VolumeManager<AmbianceVolume, AmbianceVolumeManager>.GetRandomVolumeOrNull() VolumeManager<AmbianceVolume, AmbianceVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<AmbianceVolume, AmbianceVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.EnumerateAllVolumes() VolumeManager<AmbianceVolume, AmbianceVolumeManager>.Raycast(Ray, out RaycastHit, out AmbianceVolume, float) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.AddVolume(AmbianceVolume) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.RemoveVolume(AmbianceVolume) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.SetDebugColor(Color) VolumeManager<AmbianceVolume, AmbianceVolumeManager>.Visibility VolumeManager<AmbianceVolume, AmbianceVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AmbianceVolumeManager() public AmbianceVolumeManager()"
  },
  "api/SDG.Framework.Devkit.DeadzoneUtility.html": {
    "href": "api/SDG.Framework.Devkit.DeadzoneUtility.html",
    "title": "Class DeadzoneUtility | Unturned Analyse Doc",
    "keywords": "Class DeadzoneUtility Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class DeadzoneUtility Inheritance object DeadzoneUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DeadzoneUtility() public DeadzoneUtility() Methods isPointInsideVolume(DeadzoneVolume, Vector3) [Obsolete] public static bool isPointInsideVolume(DeadzoneVolume volume, Vector3 point) Parameters volume DeadzoneVolume point Vector3 Returns bool isPointInsideVolume(Vector3, out DeadzoneVolume) [Obsolete] public static bool isPointInsideVolume(Vector3 point, out DeadzoneVolume volume) Parameters point Vector3 volume DeadzoneVolume Returns bool"
  },
  "api/SDG.Framework.Devkit.DeadzoneVolume.html": {
    "href": "api/SDG.Framework.Devkit.DeadzoneVolume.html",
    "title": "Class DeadzoneVolume | Unturned Analyse Doc",
    "keywords": "Class DeadzoneVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class DeadzoneVolume : LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler, IDeadzoneNode Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<DeadzoneVolume, DeadzoneVolumeManager> DeadzoneVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler IDeadzoneNode Inherited Members LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.falloffDistance LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.editorGameObject LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.editorMeshFilter LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.editorMeshRenderer LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.forceShouldAddCollider LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.supportsBoxShape LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.supportsSphereShape LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.supportsFalloff LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.CreateMenu() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.beginSelection(InteractionData) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.endSelection(InteractionData) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetBoxSize() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetBoxExtents() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetInnerBoxSize() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetInnerBoxExtents() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetLocalInnerBoxSize() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetSphereRadius() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetLocalSphereRadius() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.SetSphereRadius(float) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.CalculateWorldBounds() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.CalculateLocalBounds() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.OnEnable() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.OnDisable() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.Awake() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.Start() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.OnDestroy() LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<DeadzoneVolume, DeadzoneVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors DeadzoneVolume() public DeadzoneVolume() Properties DeadzoneType public EDeadzoneType DeadzoneType { get; set; } Property Value EDeadzoneType MaskFilterDamagePerSecond Rate of depletion from gasmask filter's quality/durability. Defaults to 0.4 to preserve behavior from before adding this property. public float MaskFilterDamagePerSecond { get; set; } Property Value float ProtectedDamagePerSecond Damage dealt to players while inside the volume if they do have clothing matching the deadzone type. For example, an area could be so dangerous that even with protection they take a constant 0.1 DPS. public float ProtectedDamagePerSecond { get; set; } Property Value float UnprotectedDamagePerSecond Damage dealt to players while inside the volume if they don't have clothing matching the deadzone type. Could help prevent players from running in and out to grab a few items without dieing. public float UnprotectedDamagePerSecond { get; set; } Property Value float UnprotectedRadiationPerSecond Virus damage to players while inside the volume if they don't have clothing matching the deadzone type. Defaults to 6.25 to preserve behavior from before adding this property. public float UnprotectedRadiationPerSecond { get; set; } Property Value float Methods CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.DeadzoneVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.DeadzoneVolumeManager.html",
    "title": "Class DeadzoneVolumeManager | Unturned Analyse Doc",
    "keywords": "Class DeadzoneVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class DeadzoneVolumeManager : VolumeManager<DeadzoneVolume, DeadzoneVolumeManager> Inheritance object VolumeManagerBase VolumeManager<DeadzoneVolume, DeadzoneVolumeManager> DeadzoneVolumeManager Inherited Members VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.allowInstantiation VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.supportsFalloff VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.allVolumes VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.Get() VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.GetAllVolumes() VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.GetRandomVolumeOrNull() VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.EnumerateAllVolumes() VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.Raycast(Ray, out RaycastHit, out DeadzoneVolume, float) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.AddVolume(DeadzoneVolume) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.RemoveVolume(DeadzoneVolume) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.SetDebugColor(Color) VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.Visibility VolumeManager<DeadzoneVolume, DeadzoneVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DeadzoneVolumeManager() public DeadzoneVolumeManager() Methods GetMostDangerousOverlappingVolume(Vector3) public DeadzoneVolume GetMostDangerousOverlappingVolume(Vector3 position) Parameters position Vector3 Returns DeadzoneVolume IsNavmeshCenterInsideAnyVolume(Vector3) Hacked to check horizontal distance. public bool IsNavmeshCenterInsideAnyVolume(Vector3 position) Parameters position Vector3 Returns bool"
  },
  "api/SDG.Framework.Devkit.DevkitHierarchyItemBase.html": {
    "href": "api/SDG.Framework.Devkit.DevkitHierarchyItemBase.html",
    "title": "Class DevkitHierarchyItemBase | Unturned Analyse Doc",
    "keywords": "Class DevkitHierarchyItemBase Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public abstract class DevkitHierarchyItemBase : MonoBehaviour, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitHierarchyItemBase Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable Derived DevkitHierarchyWorldItem FoliageSystem Landscape Constructors DevkitHierarchyItemBase() protected DevkitHierarchyItemBase() Properties CanBeSelected If true, editor tools can select and transform. False for items like the object-owned culling volumes. public virtual bool CanBeSelected { get; } Property Value bool ShouldSave If true, write to LevelHierarchy file. False for externally managed objects like legacy lighting WaterVolume. public virtual bool ShouldSave { get; } Property Value bool areaSelectGameObject public virtual GameObject areaSelectGameObject { get; } Property Value GameObject instanceID public virtual uint instanceID { get; set; } Property Value uint Methods GetNetIdFromInstanceId() public NetId GetNetIdFromInstanceId() Returns NetId read(IFormattedFileReader) public abstract void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public abstract void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.DevkitHierarchyWorldItem.html": {
    "href": "api/SDG.Framework.Devkit.DevkitHierarchyWorldItem.html",
    "title": "Class DevkitHierarchyWorldItem | Unturned Analyse Doc",
    "keywords": "Class DevkitHierarchyWorldItem Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class DevkitHierarchyWorldItem : DevkitHierarchyItemBase, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable Derived DevkitHierarchyWorldObject TempNodeBase VolumeBase Inherited Members DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors DevkitHierarchyWorldItem() public DevkitHierarchyWorldItem() Properties inspectablePosition public Vector3 inspectablePosition { get; set; } Property Value Vector3 inspectableRotation public Quaternion inspectableRotation { get; set; } Property Value Quaternion inspectableScale public Vector3 inspectableScale { get; set; } Property Value Vector3 Methods read(IFormattedFileReader) public override void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader readHierarchyItem(IFormattedFileReader) protected virtual void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public override void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter writeHierarchyItem(IFormattedFileWriter) protected virtual void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.DevkitHierarchyWorldObject.html": {
    "href": "api/SDG.Framework.Devkit.DevkitHierarchyWorldObject.html",
    "title": "Class DevkitHierarchyWorldObject | Unturned Analyse Doc",
    "keywords": "Class DevkitHierarchyWorldObject Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll [Obsolete] public class DevkitHierarchyWorldObject : DevkitHierarchyWorldItem, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem DevkitHierarchyWorldObject Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable Inherited Members DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.CanBeSelected Constructors DevkitHierarchyWorldObject() public DevkitHierarchyWorldObject() Fields GUID public Guid GUID Field Value Guid customMaterialOverride public AssetReference<MaterialPaletteAsset> customMaterialOverride Field Value AssetReference<MaterialPaletteAsset> materialIndexOverride public int materialIndexOverride Field Value int placementOrigin public ELevelObjectPlacementOrigin placementOrigin Field Value ELevelObjectPlacementOrigin Properties ShouldSave Devkit objects are now converted to regular objects and excluded from the file when re-saving. public override bool ShouldSave { get; } Property Value bool Methods OnDisable() protected void OnDisable() OnEnable() protected void OnEnable() Start() protected void Start() readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader"
  },
  "api/SDG.Framework.Devkit.DevkitSelection.html": {
    "href": "api/SDG.Framework.Devkit.DevkitSelection.html",
    "title": "Class DevkitSelection | Unturned Analyse Doc",
    "keywords": "Class DevkitSelection Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll Hold onto collider and gameobject separately because collider isn't necessarily attached to gameobject. public class DevkitSelection : IEquatable<DevkitSelection> Inheritance object DevkitSelection Implements IEquatable<DevkitSelection> Inherited Members object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors DevkitSelection(GameObject, Collider) public DevkitSelection(GameObject newGameObject, Collider newCollider) Parameters newGameObject GameObject newCollider Collider Fields collider public Collider collider Field Value Collider gameObject public GameObject gameObject Field Value GameObject invalid public static DevkitSelection invalid Field Value DevkitSelection localToWorld public Matrix4x4 localToWorld Field Value Matrix4x4 preTransformLocalScale public Vector3 preTransformLocalScale Field Value Vector3 preTransformPosition public Vector3 preTransformPosition Field Value Vector3 preTransformRotation public Quaternion preTransformRotation Field Value Quaternion relativeToPivot public Matrix4x4 relativeToPivot Field Value Matrix4x4 Properties isValid public bool isValid { get; } Property Value bool transform public Transform transform { get; set; } Property Value Transform Methods Equals(DevkitSelection) public bool Equals(DevkitSelection other) Parameters other DevkitSelection Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/SDG.Framework.Devkit.DevkitSelectionManager.html": {
    "href": "api/SDG.Framework.Devkit.DevkitSelectionManager.html",
    "title": "Class DevkitSelectionManager | Unturned Analyse Doc",
    "keywords": "Class DevkitSelectionManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class DevkitSelectionManager Inheritance object DevkitSelectionManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitSelectionManager() public DevkitSelectionManager() Fields beginSelectionHandlers protected static List<IDevkitInteractableBeginSelectionHandler> beginSelectionHandlers Field Value List<IDevkitInteractableBeginSelectionHandler> data public static InteractionData data Field Value InteractionData endSelectionHandlers protected static List<IDevkitInteractableEndSelectionHandler> endSelectionHandlers Field Value List<IDevkitInteractableEndSelectionHandler> mostRecentGameObject public static GameObject mostRecentGameObject Field Value GameObject selection public static HashSet<DevkitSelection> selection Field Value HashSet<DevkitSelection> Methods add(DevkitSelection) public static void add(DevkitSelection select) Parameters select DevkitSelection beginSelection(DevkitSelection) public static bool beginSelection(DevkitSelection select) Parameters select DevkitSelection Returns bool clear() public static void clear() endSelection(DevkitSelection) public static bool endSelection(DevkitSelection select) Parameters select DevkitSelection Returns bool remove(DevkitSelection) public static void remove(DevkitSelection select) Parameters select DevkitSelection select(DevkitSelection) public static void select(DevkitSelection select) Parameters select DevkitSelection"
  },
  "api/SDG.Framework.Devkit.DevkitTypeFactory.html": {
    "href": "api/SDG.Framework.Devkit.DevkitTypeFactory.html",
    "title": "Class DevkitTypeFactory | Unturned Analyse Doc",
    "keywords": "Class DevkitTypeFactory Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class DevkitTypeFactory Inheritance object DevkitTypeFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitTypeFactory() public DevkitTypeFactory() Methods instantiate(Type, Vector3, Quaternion, Vector3) public static void instantiate(Type type, Vector3 position, Quaternion rotation, Vector3 scale) Parameters type Type position Vector3 rotation Quaternion scale Vector3"
  },
  "api/SDG.Framework.Devkit.DirtyManager.html": {
    "href": "api/SDG.Framework.Devkit.DirtyManager.html",
    "title": "Class DirtyManager | Unturned Analyse Doc",
    "keywords": "Class DirtyManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class DirtyManager Inheritance object DirtyManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DirtyManager() public DirtyManager() Fields _dirty protected static List<IDirtyable> _dirty Field Value List<IDirtyable> _notSaveable public static HashSet<IDirtyable> _notSaveable Field Value HashSet<IDirtyable> isSaving protected static bool isSaving Field Value bool Properties dirty public static List<IDirtyable> dirty { get; } Property Value List<IDirtyable> notSaveable public static HashSet<IDirtyable> notSaveable { get; } Property Value HashSet<IDirtyable> Methods checkSaveable(IDirtyable) public static bool checkSaveable(IDirtyable item) Parameters item IDirtyable Returns bool markClean(IDirtyable) public static void markClean(IDirtyable item) Parameters item IDirtyable markDirty(IDirtyable) public static void markDirty(IDirtyable item) Parameters item IDirtyable save() public static void save() toggleSaveable(IDirtyable) public static void toggleSaveable(IDirtyable item) Parameters item IDirtyable triggerMarkedClean(IDirtyable) protected static void triggerMarkedClean(IDirtyable item) Parameters item IDirtyable triggerMarkedDirty(IDirtyable) protected static void triggerMarkedDirty(IDirtyable item) Parameters item IDirtyable triggerSaveableChanged(IDirtyable, bool) protected static void triggerSaveableChanged(IDirtyable item, bool isSaveable) Parameters item IDirtyable isSaveable bool triggerSaved() protected static void triggerSaved() Events markedClean public static event MarkedCleanHandler markedClean Event Type MarkedCleanHandler markedDirty public static event MarkedDirtyHandler markedDirty Event Type MarkedDirtyHandler saveableChanged public static event SaveableChangedHandler saveableChanged Event Type SaveableChangedHandler saved public static event DirtySaved saved Event Type DirtySaved"
  },
  "api/SDG.Framework.Devkit.DirtySaved.html": {
    "href": "api/SDG.Framework.Devkit.DirtySaved.html",
    "title": "Delegate DirtySaved | Unturned Analyse Doc",
    "keywords": "Delegate DirtySaved Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void DirtySaved() Constructors DirtySaved(object, IntPtr) public DirtySaved(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Devkit.EffectVolume.html": {
    "href": "api/SDG.Framework.Devkit.EffectVolume.html",
    "title": "Class EffectVolume | Unturned Analyse Doc",
    "keywords": "Class EffectVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class EffectVolume : LevelVolume<EffectVolume, EffectVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<EffectVolume, EffectVolumeManager> EffectVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<EffectVolume, EffectVolumeManager>.falloffDistance LevelVolume<EffectVolume, EffectVolumeManager>.editorGameObject LevelVolume<EffectVolume, EffectVolumeManager>.editorMeshFilter LevelVolume<EffectVolume, EffectVolumeManager>.editorMeshRenderer LevelVolume<EffectVolume, EffectVolumeManager>.forceShouldAddCollider LevelVolume<EffectVolume, EffectVolumeManager>.supportsBoxShape LevelVolume<EffectVolume, EffectVolumeManager>.supportsSphereShape LevelVolume<EffectVolume, EffectVolumeManager>.supportsFalloff LevelVolume<EffectVolume, EffectVolumeManager>.CreateMenu() LevelVolume<EffectVolume, EffectVolumeManager>.beginSelection(InteractionData) LevelVolume<EffectVolume, EffectVolumeManager>.endSelection(InteractionData) LevelVolume<EffectVolume, EffectVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<EffectVolume, EffectVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<EffectVolume, EffectVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<EffectVolume, EffectVolumeManager>.GetBoxSize() LevelVolume<EffectVolume, EffectVolumeManager>.GetBoxExtents() LevelVolume<EffectVolume, EffectVolumeManager>.GetInnerBoxSize() LevelVolume<EffectVolume, EffectVolumeManager>.GetInnerBoxExtents() LevelVolume<EffectVolume, EffectVolumeManager>.GetLocalInnerBoxSize() LevelVolume<EffectVolume, EffectVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<EffectVolume, EffectVolumeManager>.GetSphereRadius() LevelVolume<EffectVolume, EffectVolumeManager>.GetLocalSphereRadius() LevelVolume<EffectVolume, EffectVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<EffectVolume, EffectVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<EffectVolume, EffectVolumeManager>.SetSphereRadius(float) LevelVolume<EffectVolume, EffectVolumeManager>.CalculateWorldBounds() LevelVolume<EffectVolume, EffectVolumeManager>.CalculateLocalBounds() LevelVolume<EffectVolume, EffectVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<EffectVolume, EffectVolumeManager>.OnEnable() LevelVolume<EffectVolume, EffectVolumeManager>.OnDisable() LevelVolume<EffectVolume, EffectVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<EffectVolume, EffectVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<EffectVolume, EffectVolumeManager>.Awake() LevelVolume<EffectVolume, EffectVolumeManager>.Start() LevelVolume<EffectVolume, EffectVolumeManager>.OnDestroy() LevelVolume<EffectVolume, EffectVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<EffectVolume, EffectVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors EffectVolume() public EffectVolume() Fields _audioRangeMultiplier protected float _audioRangeMultiplier Field Value float _emissionMultiplier protected float _emissionMultiplier Field Value float _id Kept because lots of modders have been using this script in Unity, so removing legacy effect id would break their content. protected ushort _id Field Value ushort effect protected Transform effect Field Value Transform maxParticlesBase protected int maxParticlesBase Field Value int rateOverTimeBase protected float rateOverTimeBase Field Value float Properties EffectGuid public Guid EffectGuid { get; } Property Value Guid audioRangeMultiplier public float audioRangeMultiplier { get; set; } Property Value float emissionMultiplier public float emissionMultiplier { get; set; } Property Value float id public ushort id { get; set; } Property Value ushort Methods Awake() protected override void Awake() CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement Start() protected override void Start() applyAudioRange() protected virtual void applyAudioRange() applyEmission() protected virtual void applyEmission() readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.EffectVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.EffectVolumeManager.html",
    "title": "Class EffectVolumeManager | Unturned Analyse Doc",
    "keywords": "Class EffectVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class EffectVolumeManager : VolumeManager<EffectVolume, EffectVolumeManager> Inheritance object VolumeManagerBase VolumeManager<EffectVolume, EffectVolumeManager> EffectVolumeManager Inherited Members VolumeManager<EffectVolume, EffectVolumeManager>.allowInstantiation VolumeManager<EffectVolume, EffectVolumeManager>.supportsFalloff VolumeManager<EffectVolume, EffectVolumeManager>.allVolumes VolumeManager<EffectVolume, EffectVolumeManager>.Get() VolumeManager<EffectVolume, EffectVolumeManager>.GetAllVolumes() VolumeManager<EffectVolume, EffectVolumeManager>.GetRandomVolumeOrNull() VolumeManager<EffectVolume, EffectVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<EffectVolume, EffectVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<EffectVolume, EffectVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<EffectVolume, EffectVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<EffectVolume, EffectVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<EffectVolume, EffectVolumeManager>.EnumerateAllVolumes() VolumeManager<EffectVolume, EffectVolumeManager>.Raycast(Ray, out RaycastHit, out EffectVolume, float) VolumeManager<EffectVolume, EffectVolumeManager>.AddVolume(EffectVolume) VolumeManager<EffectVolume, EffectVolumeManager>.RemoveVolume(EffectVolume) VolumeManager<EffectVolume, EffectVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<EffectVolume, EffectVolumeManager>.SetDebugColor(Color) VolumeManager<EffectVolume, EffectVolumeManager>.Visibility VolumeManager<EffectVolume, EffectVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EffectVolumeManager() public EffectVolumeManager()"
  },
  "api/SDG.Framework.Devkit.IDevkitHierarchyItem.html": {
    "href": "api/SDG.Framework.Devkit.IDevkitHierarchyItem.html",
    "title": "Interface IDevkitHierarchyItem | Unturned Analyse Doc",
    "keywords": "Interface IDevkitHierarchyItem Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public interface IDevkitHierarchyItem : IFormattedFileReadable, IFormattedFileWritable Inherited Members IFormattedFileReadable.read(IFormattedFileReader) IFormattedFileWritable.write(IFormattedFileWriter) Properties CanBeSelected If true, editor tools can select and transform. False for items like the object-owned culling volumes. bool CanBeSelected { get; } Property Value bool ShouldSave If true, write to LevelHierarchy file. False for externally managed objects like legacy lighting WaterVolume. bool ShouldSave { get; } Property Value bool areaSelectGameObject GameObject areaSelectGameObject { get; } Property Value GameObject instanceID uint instanceID { get; set; } Property Value uint"
  },
  "api/SDG.Framework.Devkit.IDevkitTool.html": {
    "href": "api/SDG.Framework.Devkit.IDevkitTool.html",
    "title": "Interface IDevkitTool | Unturned Analyse Doc",
    "keywords": "Interface IDevkitTool Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public interface IDevkitTool Methods dequip() void dequip() equip() void equip() update() void update()"
  },
  "api/SDG.Framework.Devkit.IDirtyable.html": {
    "href": "api/SDG.Framework.Devkit.IDirtyable.html",
    "title": "Interface IDirtyable | Unturned Analyse Doc",
    "keywords": "Interface IDirtyable Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public interface IDirtyable Properties isDirty bool isDirty { get; set; } Property Value bool Methods save() void save()"
  },
  "api/SDG.Framework.Devkit.Interactable.IDevkitInteractableBeginSelectionHandler.html": {
    "href": "api/SDG.Framework.Devkit.Interactable.IDevkitInteractableBeginSelectionHandler.html",
    "title": "Interface IDevkitInteractableBeginSelectionHandler | Unturned Analyse Doc",
    "keywords": "Interface IDevkitInteractableBeginSelectionHandler Namespace SDG.Framework.Devkit.Interactable Assembly Assembly-CSharp.dll public interface IDevkitInteractableBeginSelectionHandler Methods beginSelection(InteractionData) void beginSelection(InteractionData data) Parameters data InteractionData"
  },
  "api/SDG.Framework.Devkit.Interactable.IDevkitInteractableEndSelectionHandler.html": {
    "href": "api/SDG.Framework.Devkit.Interactable.IDevkitInteractableEndSelectionHandler.html",
    "title": "Interface IDevkitInteractableEndSelectionHandler | Unturned Analyse Doc",
    "keywords": "Interface IDevkitInteractableEndSelectionHandler Namespace SDG.Framework.Devkit.Interactable Assembly Assembly-CSharp.dll public interface IDevkitInteractableEndSelectionHandler Methods endSelection(InteractionData) void endSelection(InteractionData data) Parameters data InteractionData"
  },
  "api/SDG.Framework.Devkit.Interactable.IDevkitSelectionCopyableHandler.html": {
    "href": "api/SDG.Framework.Devkit.Interactable.IDevkitSelectionCopyableHandler.html",
    "title": "Interface IDevkitSelectionCopyableHandler | Unturned Analyse Doc",
    "keywords": "Interface IDevkitSelectionCopyableHandler Namespace SDG.Framework.Devkit.Interactable Assembly Assembly-CSharp.dll public interface IDevkitSelectionCopyableHandler Methods copySelection() GameObject copySelection() Returns GameObject Identical to this object."
  },
  "api/SDG.Framework.Devkit.Interactable.IDevkitSelectionTransformableHandler.html": {
    "href": "api/SDG.Framework.Devkit.Interactable.IDevkitSelectionTransformableHandler.html",
    "title": "Interface IDevkitSelectionTransformableHandler | Unturned Analyse Doc",
    "keywords": "Interface IDevkitSelectionTransformableHandler Namespace SDG.Framework.Devkit.Interactable Assembly Assembly-CSharp.dll public interface IDevkitSelectionTransformableHandler Methods transformSelection() Called when we position, rotate or scale this transform. void transformSelection()"
  },
  "api/SDG.Framework.Devkit.Interactable.InteractionData.html": {
    "href": "api/SDG.Framework.Devkit.Interactable.InteractionData.html",
    "title": "Class InteractionData | Unturned Analyse Doc",
    "keywords": "Class InteractionData Namespace SDG.Framework.Devkit.Interactable Assembly Assembly-CSharp.dll public class InteractionData Inheritance object InteractionData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InteractionData() public InteractionData() Fields collider public Collider collider Field Value Collider point public Vector3 point Field Value Vector3"
  },
  "api/SDG.Framework.Devkit.Interactable.html": {
    "href": "api/SDG.Framework.Devkit.Interactable.html",
    "title": "Namespace SDG.Framework.Devkit.Interactable | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Devkit.Interactable Classes InteractionData Interfaces IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler IDevkitSelectionCopyableHandler IDevkitSelectionTransformableHandler"
  },
  "api/SDG.Framework.Devkit.KillVolume.html": {
    "href": "api/SDG.Framework.Devkit.KillVolume.html",
    "title": "Class KillVolume | Unturned Analyse Doc",
    "keywords": "Class KillVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class KillVolume : LevelVolume<KillVolume, KillVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<KillVolume, KillVolumeManager> KillVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<KillVolume, KillVolumeManager>.falloffDistance LevelVolume<KillVolume, KillVolumeManager>.editorGameObject LevelVolume<KillVolume, KillVolumeManager>.editorMeshFilter LevelVolume<KillVolume, KillVolumeManager>.editorMeshRenderer LevelVolume<KillVolume, KillVolumeManager>.forceShouldAddCollider LevelVolume<KillVolume, KillVolumeManager>.supportsBoxShape LevelVolume<KillVolume, KillVolumeManager>.supportsSphereShape LevelVolume<KillVolume, KillVolumeManager>.supportsFalloff LevelVolume<KillVolume, KillVolumeManager>.CreateMenu() LevelVolume<KillVolume, KillVolumeManager>.beginSelection(InteractionData) LevelVolume<KillVolume, KillVolumeManager>.endSelection(InteractionData) LevelVolume<KillVolume, KillVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<KillVolume, KillVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<KillVolume, KillVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<KillVolume, KillVolumeManager>.GetBoxSize() LevelVolume<KillVolume, KillVolumeManager>.GetBoxExtents() LevelVolume<KillVolume, KillVolumeManager>.GetInnerBoxSize() LevelVolume<KillVolume, KillVolumeManager>.GetInnerBoxExtents() LevelVolume<KillVolume, KillVolumeManager>.GetLocalInnerBoxSize() LevelVolume<KillVolume, KillVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<KillVolume, KillVolumeManager>.GetSphereRadius() LevelVolume<KillVolume, KillVolumeManager>.GetLocalSphereRadius() LevelVolume<KillVolume, KillVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<KillVolume, KillVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<KillVolume, KillVolumeManager>.SetSphereRadius(float) LevelVolume<KillVolume, KillVolumeManager>.CalculateWorldBounds() LevelVolume<KillVolume, KillVolumeManager>.CalculateLocalBounds() LevelVolume<KillVolume, KillVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<KillVolume, KillVolumeManager>.OnEnable() LevelVolume<KillVolume, KillVolumeManager>.OnDisable() LevelVolume<KillVolume, KillVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<KillVolume, KillVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<KillVolume, KillVolumeManager>.Awake() LevelVolume<KillVolume, KillVolumeManager>.Start() LevelVolume<KillVolume, KillVolumeManager>.OnDestroy() LevelVolume<KillVolume, KillVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<KillVolume, KillVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors KillVolume() public KillVolume() Fields deathCause public EDeathCause deathCause Field Value EDeathCause killAnimals public bool killAnimals Field Value bool killPlayers public bool killPlayers Field Value bool killVehicles public bool killVehicles Field Value bool killZombies public bool killZombies Field Value bool Methods Awake() protected override void Awake() CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.KillVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.KillVolumeManager.html",
    "title": "Class KillVolumeManager | Unturned Analyse Doc",
    "keywords": "Class KillVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class KillVolumeManager : VolumeManager<KillVolume, KillVolumeManager> Inheritance object VolumeManagerBase VolumeManager<KillVolume, KillVolumeManager> KillVolumeManager Inherited Members VolumeManager<KillVolume, KillVolumeManager>.allowInstantiation VolumeManager<KillVolume, KillVolumeManager>.supportsFalloff VolumeManager<KillVolume, KillVolumeManager>.allVolumes VolumeManager<KillVolume, KillVolumeManager>.Get() VolumeManager<KillVolume, KillVolumeManager>.GetAllVolumes() VolumeManager<KillVolume, KillVolumeManager>.GetRandomVolumeOrNull() VolumeManager<KillVolume, KillVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<KillVolume, KillVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<KillVolume, KillVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<KillVolume, KillVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<KillVolume, KillVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<KillVolume, KillVolumeManager>.EnumerateAllVolumes() VolumeManager<KillVolume, KillVolumeManager>.Raycast(Ray, out RaycastHit, out KillVolume, float) VolumeManager<KillVolume, KillVolumeManager>.AddVolume(KillVolume) VolumeManager<KillVolume, KillVolumeManager>.RemoveVolume(KillVolume) VolumeManager<KillVolume, KillVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<KillVolume, KillVolumeManager>.SetDebugColor(Color) VolumeManager<KillVolume, KillVolumeManager>.Visibility VolumeManager<KillVolume, KillVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KillVolumeManager() public KillVolumeManager()"
  },
  "api/SDG.Framework.Devkit.LevelHiearchyItemAdded.html": {
    "href": "api/SDG.Framework.Devkit.LevelHiearchyItemAdded.html",
    "title": "Delegate LevelHiearchyItemAdded | Unturned Analyse Doc",
    "keywords": "Delegate LevelHiearchyItemAdded Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void LevelHiearchyItemAdded(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem Constructors LevelHiearchyItemAdded(object, IntPtr) public LevelHiearchyItemAdded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IDevkitHierarchyItem, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IDevkitHierarchyItem item, AsyncCallback callback, object @object) Parameters item IDevkitHierarchyItem callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IDevkitHierarchyItem) public virtual void Invoke(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem"
  },
  "api/SDG.Framework.Devkit.LevelHierarchy.html": {
    "href": "api/SDG.Framework.Devkit.LevelHierarchy.html",
    "title": "Class LevelHierarchy | Unturned Analyse Doc",
    "keywords": "Class LevelHierarchy Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class LevelHierarchy : IModuleNexus, IDirtyable Inheritance object LevelHierarchy Implements IModuleNexus IDirtyable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelHierarchy() public LevelHierarchy() Fields _isDirty protected bool _isDirty Field Value bool Properties instance public static LevelHierarchy instance { get; protected set; } Property Value LevelHierarchy isDirty public bool isDirty { get; set; } Property Value bool items public List<IDevkitHierarchyItem> items { get; protected set; } Property Value List<IDevkitHierarchyItem> Methods AssignInstanceIdAndMarkDirty(IDevkitHierarchyItem) public static void AssignInstanceIdAndMarkDirty(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem MarkDirty() public static void MarkDirty() addItem(IDevkitHierarchyItem) public static void addItem(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem generateUniqueInstanceID() public static uint generateUniqueInstanceID() Returns uint handleLoadUpdated() protected void handleLoadUpdated() handleLoadingStep() protected void handleLoadingStep() handleTransactionsChanged() protected void handleTransactionsChanged() initItem(IDevkitHierarchyItem) [Obsolete(\"Renamed to AssignInstanceIdAndMarkDirty\")] public static void initItem(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem initialize() Register components of this module. public void initialize() load() public void load() read(IFormattedFileReader) public virtual void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader removeItem(IDevkitHierarchyItem) public static void removeItem(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem save() public void save() shutdown() Cleanup after this module. public void shutdown() triggerItemAdded(IDevkitHierarchyItem) protected static void triggerItemAdded(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem triggerItemRemoved(IDevkitHierarchyItem) protected static void triggerItemRemoved(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem triggerLoaded() protected static void triggerLoaded() triggerReady() protected static void triggerReady() write(IFormattedFileWriter) public virtual void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Events itemAdded public static event LevelHiearchyItemAdded itemAdded Event Type LevelHiearchyItemAdded itemRemoved public static event LevelHierarchyItemRemoved itemRemoved Event Type LevelHierarchyItemRemoved loaded public static event LevelHierarchyLoaded loaded Event Type LevelHierarchyLoaded ready public static event LevelHierarchyReady ready Event Type LevelHierarchyReady"
  },
  "api/SDG.Framework.Devkit.LevelHierarchyItemRemoved.html": {
    "href": "api/SDG.Framework.Devkit.LevelHierarchyItemRemoved.html",
    "title": "Delegate LevelHierarchyItemRemoved | Unturned Analyse Doc",
    "keywords": "Delegate LevelHierarchyItemRemoved Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void LevelHierarchyItemRemoved(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem Constructors LevelHierarchyItemRemoved(object, IntPtr) public LevelHierarchyItemRemoved(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IDevkitHierarchyItem, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IDevkitHierarchyItem item, AsyncCallback callback, object @object) Parameters item IDevkitHierarchyItem callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IDevkitHierarchyItem) public virtual void Invoke(IDevkitHierarchyItem item) Parameters item IDevkitHierarchyItem"
  },
  "api/SDG.Framework.Devkit.LevelHierarchyLoaded.html": {
    "href": "api/SDG.Framework.Devkit.LevelHierarchyLoaded.html",
    "title": "Delegate LevelHierarchyLoaded | Unturned Analyse Doc",
    "keywords": "Delegate LevelHierarchyLoaded Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void LevelHierarchyLoaded() Constructors LevelHierarchyLoaded(object, IntPtr) public LevelHierarchyLoaded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Devkit.LevelHierarchyReady.html": {
    "href": "api/SDG.Framework.Devkit.LevelHierarchyReady.html",
    "title": "Delegate LevelHierarchyReady | Unturned Analyse Doc",
    "keywords": "Delegate LevelHierarchyReady Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void LevelHierarchyReady() Constructors LevelHierarchyReady(object, IntPtr) public LevelHierarchyReady(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Devkit.MarkedCleanHandler.html": {
    "href": "api/SDG.Framework.Devkit.MarkedCleanHandler.html",
    "title": "Delegate MarkedCleanHandler | Unturned Analyse Doc",
    "keywords": "Delegate MarkedCleanHandler Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void MarkedCleanHandler(IDirtyable item) Parameters item IDirtyable Constructors MarkedCleanHandler(object, IntPtr) public MarkedCleanHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IDirtyable, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IDirtyable item, AsyncCallback callback, object @object) Parameters item IDirtyable callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IDirtyable) public virtual void Invoke(IDirtyable item) Parameters item IDirtyable"
  },
  "api/SDG.Framework.Devkit.MarkedDirtyHandler.html": {
    "href": "api/SDG.Framework.Devkit.MarkedDirtyHandler.html",
    "title": "Delegate MarkedDirtyHandler | Unturned Analyse Doc",
    "keywords": "Delegate MarkedDirtyHandler Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void MarkedDirtyHandler(IDirtyable item) Parameters item IDirtyable Constructors MarkedDirtyHandler(object, IntPtr) public MarkedDirtyHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IDirtyable, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IDirtyable item, AsyncCallback callback, object @object) Parameters item IDirtyable callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IDirtyable) public virtual void Invoke(IDirtyable item) Parameters item IDirtyable"
  },
  "api/SDG.Framework.Devkit.NPCRewardVolume.html": {
    "href": "api/SDG.Framework.Devkit.NPCRewardVolume.html",
    "title": "Class NPCRewardVolume | Unturned Analyse Doc",
    "keywords": "Class NPCRewardVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class NPCRewardVolume : LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<NPCRewardVolume, NPCRewardVolumeManager> NPCRewardVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.falloffDistance LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.editorGameObject LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.editorMeshFilter LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.editorMeshRenderer LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.forceShouldAddCollider LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.supportsBoxShape LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.supportsSphereShape LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.supportsFalloff LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.CreateMenu() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.beginSelection(InteractionData) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.endSelection(InteractionData) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetBoxSize() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetBoxExtents() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetInnerBoxSize() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetInnerBoxExtents() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetLocalInnerBoxSize() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetSphereRadius() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetLocalSphereRadius() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.SetSphereRadius(float) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.CalculateWorldBounds() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.CalculateLocalBounds() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.OnEnable() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.OnDisable() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.Awake() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.Start() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.OnDestroy() LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<NPCRewardVolume, NPCRewardVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors NPCRewardVolume() public NPCRewardVolume() Methods Awake() protected override void Awake() CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.NPCRewardVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.NPCRewardVolumeManager.html",
    "title": "Class NPCRewardVolumeManager | Unturned Analyse Doc",
    "keywords": "Class NPCRewardVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class NPCRewardVolumeManager : VolumeManager<NPCRewardVolume, NPCRewardVolumeManager> Inheritance object VolumeManagerBase VolumeManager<NPCRewardVolume, NPCRewardVolumeManager> NPCRewardVolumeManager Inherited Members VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.allowInstantiation VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.supportsFalloff VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.allVolumes VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.Get() VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.GetAllVolumes() VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.GetRandomVolumeOrNull() VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.EnumerateAllVolumes() VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.Raycast(Ray, out RaycastHit, out NPCRewardVolume, float) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.AddVolume(NPCRewardVolume) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.RemoveVolume(NPCRewardVolume) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.SetDebugColor(Color) VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.Visibility VolumeManager<NPCRewardVolume, NPCRewardVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCRewardVolumeManager() public NPCRewardVolumeManager()"
  },
  "api/SDG.Framework.Devkit.NavClipVolume.html": {
    "href": "api/SDG.Framework.Devkit.NavClipVolume.html",
    "title": "Class NavClipVolume | Unturned Analyse Doc",
    "keywords": "Class NavClipVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class NavClipVolume : LevelVolume<NavClipVolume, NavClipVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<NavClipVolume, NavClipVolumeManager> NavClipVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<NavClipVolume, NavClipVolumeManager>.falloffDistance LevelVolume<NavClipVolume, NavClipVolumeManager>.editorGameObject LevelVolume<NavClipVolume, NavClipVolumeManager>.editorMeshFilter LevelVolume<NavClipVolume, NavClipVolumeManager>.editorMeshRenderer LevelVolume<NavClipVolume, NavClipVolumeManager>.forceShouldAddCollider LevelVolume<NavClipVolume, NavClipVolumeManager>.supportsBoxShape LevelVolume<NavClipVolume, NavClipVolumeManager>.supportsSphereShape LevelVolume<NavClipVolume, NavClipVolumeManager>.supportsFalloff LevelVolume<NavClipVolume, NavClipVolumeManager>.CreateMenu() LevelVolume<NavClipVolume, NavClipVolumeManager>.beginSelection(InteractionData) LevelVolume<NavClipVolume, NavClipVolumeManager>.endSelection(InteractionData) LevelVolume<NavClipVolume, NavClipVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<NavClipVolume, NavClipVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<NavClipVolume, NavClipVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<NavClipVolume, NavClipVolumeManager>.GetBoxSize() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetBoxExtents() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetInnerBoxSize() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetInnerBoxExtents() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetLocalInnerBoxSize() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetSphereRadius() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetLocalSphereRadius() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<NavClipVolume, NavClipVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<NavClipVolume, NavClipVolumeManager>.SetSphereRadius(float) LevelVolume<NavClipVolume, NavClipVolumeManager>.CalculateWorldBounds() LevelVolume<NavClipVolume, NavClipVolumeManager>.CalculateLocalBounds() LevelVolume<NavClipVolume, NavClipVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<NavClipVolume, NavClipVolumeManager>.OnEnable() LevelVolume<NavClipVolume, NavClipVolumeManager>.OnDisable() LevelVolume<NavClipVolume, NavClipVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<NavClipVolume, NavClipVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<NavClipVolume, NavClipVolumeManager>.Awake() LevelVolume<NavClipVolume, NavClipVolumeManager>.Start() LevelVolume<NavClipVolume, NavClipVolumeManager>.OnDestroy() LevelVolume<NavClipVolume, NavClipVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<NavClipVolume, NavClipVolumeManager>.Shape VolumeBase.CreateMenu() DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.readHierarchyItem(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors NavClipVolume() public NavClipVolume() Methods Awake() protected override void Awake()"
  },
  "api/SDG.Framework.Devkit.NavClipVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.NavClipVolumeManager.html",
    "title": "Class NavClipVolumeManager | Unturned Analyse Doc",
    "keywords": "Class NavClipVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class NavClipVolumeManager : VolumeManager<NavClipVolume, NavClipVolumeManager> Inheritance object VolumeManagerBase VolumeManager<NavClipVolume, NavClipVolumeManager> NavClipVolumeManager Inherited Members VolumeManager<NavClipVolume, NavClipVolumeManager>.allowInstantiation VolumeManager<NavClipVolume, NavClipVolumeManager>.supportsFalloff VolumeManager<NavClipVolume, NavClipVolumeManager>.allVolumes VolumeManager<NavClipVolume, NavClipVolumeManager>.Get() VolumeManager<NavClipVolume, NavClipVolumeManager>.GetAllVolumes() VolumeManager<NavClipVolume, NavClipVolumeManager>.GetRandomVolumeOrNull() VolumeManager<NavClipVolume, NavClipVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<NavClipVolume, NavClipVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<NavClipVolume, NavClipVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<NavClipVolume, NavClipVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<NavClipVolume, NavClipVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<NavClipVolume, NavClipVolumeManager>.EnumerateAllVolumes() VolumeManager<NavClipVolume, NavClipVolumeManager>.Raycast(Ray, out RaycastHit, out NavClipVolume, float) VolumeManager<NavClipVolume, NavClipVolumeManager>.AddVolume(NavClipVolume) VolumeManager<NavClipVolume, NavClipVolumeManager>.RemoveVolume(NavClipVolume) VolumeManager<NavClipVolume, NavClipVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<NavClipVolume, NavClipVolumeManager>.SetDebugColor(Color) VolumeManager<NavClipVolume, NavClipVolumeManager>.Visibility VolumeManager<NavClipVolume, NavClipVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NavClipVolumeManager() public NavClipVolumeManager()"
  },
  "api/SDG.Framework.Devkit.PlayerClipVolume.html": {
    "href": "api/SDG.Framework.Devkit.PlayerClipVolume.html",
    "title": "Class PlayerClipVolume | Unturned Analyse Doc",
    "keywords": "Class PlayerClipVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class PlayerClipVolume : LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<PlayerClipVolume, PlayerClipVolumeManager> PlayerClipVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.falloffDistance LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.editorGameObject LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.editorMeshFilter LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.editorMeshRenderer LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.forceShouldAddCollider LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.supportsBoxShape LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.supportsSphereShape LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.supportsFalloff LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.CreateMenu() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.beginSelection(InteractionData) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.endSelection(InteractionData) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetBoxSize() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetBoxExtents() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetInnerBoxSize() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetInnerBoxExtents() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetLocalInnerBoxSize() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetSphereRadius() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetLocalSphereRadius() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.SetSphereRadius(float) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.CalculateWorldBounds() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.CalculateLocalBounds() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.OnEnable() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.OnDisable() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.Awake() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.Start() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.OnDestroy() LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<PlayerClipVolume, PlayerClipVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors PlayerClipVolume() public PlayerClipVolume() Fields _blockPlayer protected bool _blockPlayer Field Value bool Properties blockPlayer public bool blockPlayer { get; set; } Property Value bool Methods Awake() protected override void Awake() CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.PlayerClipVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.PlayerClipVolumeManager.html",
    "title": "Class PlayerClipVolumeManager | Unturned Analyse Doc",
    "keywords": "Class PlayerClipVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class PlayerClipVolumeManager : VolumeManager<PlayerClipVolume, PlayerClipVolumeManager> Inheritance object VolumeManagerBase VolumeManager<PlayerClipVolume, PlayerClipVolumeManager> PlayerClipVolumeManager Inherited Members VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.allowInstantiation VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.supportsFalloff VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.allVolumes VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.Get() VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.GetAllVolumes() VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.GetRandomVolumeOrNull() VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.EnumerateAllVolumes() VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.Raycast(Ray, out RaycastHit, out PlayerClipVolume, float) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.AddVolume(PlayerClipVolume) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.RemoveVolume(PlayerClipVolume) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.SetDebugColor(Color) VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.Visibility VolumeManager<PlayerClipVolume, PlayerClipVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerClipVolumeManager() public PlayerClipVolumeManager()"
  },
  "api/SDG.Framework.Devkit.PlayerClipVolumeUtility.html": {
    "href": "api/SDG.Framework.Devkit.PlayerClipVolumeUtility.html",
    "title": "Class PlayerClipVolumeUtility | Unturned Analyse Doc",
    "keywords": "Class PlayerClipVolumeUtility Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class PlayerClipVolumeUtility Inheritance object PlayerClipVolumeUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerClipVolumeUtility() public PlayerClipVolumeUtility() Methods isPointInsideVolume(Vector3) [Obsolete] public static bool isPointInsideVolume(Vector3 point) Parameters point Vector3 Returns bool"
  },
  "api/SDG.Framework.Devkit.SaveableChangedHandler.html": {
    "href": "api/SDG.Framework.Devkit.SaveableChangedHandler.html",
    "title": "Delegate SaveableChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate SaveableChangedHandler Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public delegate void SaveableChangedHandler(IDirtyable item, bool isSaveable) Parameters item IDirtyable isSaveable bool Constructors SaveableChangedHandler(object, IntPtr) public SaveableChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IDirtyable, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IDirtyable item, bool isSaveable, AsyncCallback callback, object @object) Parameters item IDirtyable isSaveable bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IDirtyable, bool) public virtual void Invoke(IDirtyable item, bool isSaveable) Parameters item IDirtyable isSaveable bool"
  },
  "api/SDG.Framework.Devkit.Spawnpoint.html": {
    "href": "api/SDG.Framework.Devkit.Spawnpoint.html",
    "title": "Class Spawnpoint | Unturned Analyse Doc",
    "keywords": "Class Spawnpoint Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class Spawnpoint : TempNodeBase, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem TempNodeBase Spawnpoint Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler Inherited Members TempNodeBase.isSelected TempNodeBase.beginSelection(InteractionData) TempNodeBase.endSelection(InteractionData) DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors Spawnpoint() public Spawnpoint() Fields id public string id Field Value string Properties sphere public SphereCollider sphere { get; protected set; } Property Value SphereCollider Methods Awake() protected void Awake() OnDisable() protected void OnDisable() OnEnable() protected void OnEnable() readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.SpawnpointSystem.html": {
    "href": "api/SDG.Framework.Devkit.SpawnpointSystem.html",
    "title": "Class SpawnpointSystem | Unturned Analyse Doc",
    "keywords": "Class SpawnpointSystem Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll [Obsolete(\"Made SpawnpointSystem no longer static\")] public static class SpawnpointSystem Inheritance object SpawnpointSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties spawnpoints [Obsolete(\"Made SpawnpointSystem no longer static\")] public static List<Spawnpoint> spawnpoints { get; } Property Value List<Spawnpoint> Methods getSpawnpoint(string) [Obsolete(\"Made SpawnpointSystem no longer static\")] public static Spawnpoint getSpawnpoint(string id) Parameters id string Returns Spawnpoint"
  },
  "api/SDG.Framework.Devkit.SpawnpointSystemV2.html": {
    "href": "api/SDG.Framework.Devkit.SpawnpointSystemV2.html",
    "title": "Class SpawnpointSystemV2 | Unturned Analyse Doc",
    "keywords": "Class SpawnpointSystemV2 Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class SpawnpointSystemV2 : TempNodeSystemBase Inheritance object TempNodeSystemBase SpawnpointSystemV2 Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties IsVisible public bool IsVisible { get; set; } Property Value bool Methods FindSpawnpoint(string) public Spawnpoint FindSpawnpoint(string id) Parameters id string Returns Spawnpoint Get() public static SpawnpointSystemV2 Get() Returns SpawnpointSystemV2 GetAllSpawnpoints() public IReadOnlyList<Spawnpoint> GetAllSpawnpoints() Returns IReadOnlyList<Spawnpoint>"
  },
  "api/SDG.Framework.Devkit.TeleporterEntranceVolume.html": {
    "href": "api/SDG.Framework.Devkit.TeleporterEntranceVolume.html",
    "title": "Class TeleporterEntranceVolume | Unturned Analyse Doc",
    "keywords": "Class TeleporterEntranceVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class TeleporterEntranceVolume : LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager> TeleporterEntranceVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.falloffDistance LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.editorGameObject LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.editorMeshFilter LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.editorMeshRenderer LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.forceShouldAddCollider LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.supportsBoxShape LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.supportsSphereShape LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.supportsFalloff LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.CreateMenu() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.beginSelection(InteractionData) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.endSelection(InteractionData) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetBoxSize() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetBoxExtents() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetInnerBoxSize() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetInnerBoxExtents() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetLocalInnerBoxSize() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetSphereRadius() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetLocalSphereRadius() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.SetSphereRadius(float) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.CalculateWorldBounds() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.CalculateLocalBounds() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.OnEnable() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.OnDisable() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.Awake() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.Start() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.OnDestroy() LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors TeleporterEntranceVolume() public TeleporterEntranceVolume() Fields pairId public string pairId Field Value string Methods Awake() protected override void Awake() CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement OnTriggerEnter(Collider) public void OnTriggerEnter(Collider other) Parameters other Collider readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.TeleporterEntranceVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.TeleporterEntranceVolumeManager.html",
    "title": "Class TeleporterEntranceVolumeManager | Unturned Analyse Doc",
    "keywords": "Class TeleporterEntranceVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class TeleporterEntranceVolumeManager : VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager> Inheritance object VolumeManagerBase VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager> TeleporterEntranceVolumeManager Inherited Members VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.allowInstantiation VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.supportsFalloff VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.allVolumes VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.Get() VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetAllVolumes() VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetRandomVolumeOrNull() VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.EnumerateAllVolumes() VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.Raycast(Ray, out RaycastHit, out TeleporterEntranceVolume, float) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.AddVolume(TeleporterEntranceVolume) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.RemoveVolume(TeleporterEntranceVolume) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.SetDebugColor(Color) VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.Visibility VolumeManager<TeleporterEntranceVolume, TeleporterEntranceVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TeleporterEntranceVolumeManager() public TeleporterEntranceVolumeManager() Methods OnUpdateGizmos(RuntimeGizmos) protected override void OnUpdateGizmos(RuntimeGizmos runtimeGizmos) Parameters runtimeGizmos RuntimeGizmos"
  },
  "api/SDG.Framework.Devkit.TeleporterExitVolume.html": {
    "href": "api/SDG.Framework.Devkit.TeleporterExitVolume.html",
    "title": "Class TeleporterExitVolume | Unturned Analyse Doc",
    "keywords": "Class TeleporterExitVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class TeleporterExitVolume : LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager> TeleporterExitVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.falloffDistance LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.editorGameObject LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.editorMeshFilter LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.editorMeshRenderer LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.forceShouldAddCollider LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.supportsBoxShape LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.supportsSphereShape LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.supportsFalloff LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.CreateMenu() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.beginSelection(InteractionData) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.endSelection(InteractionData) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetBoxSize() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetBoxExtents() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetInnerBoxSize() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetInnerBoxExtents() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetLocalInnerBoxSize() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetSphereRadius() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetLocalSphereRadius() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.SetSphereRadius(float) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.CalculateWorldBounds() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.CalculateLocalBounds() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.OnEnable() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.OnDisable() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.Awake() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.Start() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.OnDestroy() LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<TeleporterExitVolume, TeleporterExitVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors TeleporterExitVolume() public TeleporterExitVolume() Properties id public string id { get; set; } Property Value string Methods CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.TeleporterExitVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.TeleporterExitVolumeManager.html",
    "title": "Class TeleporterExitVolumeManager | Unturned Analyse Doc",
    "keywords": "Class TeleporterExitVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class TeleporterExitVolumeManager : VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager> Inheritance object VolumeManagerBase VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager> TeleporterExitVolumeManager Inherited Members VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.allowInstantiation VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.supportsFalloff VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.allVolumes VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.Get() VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.GetAllVolumes() VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.GetRandomVolumeOrNull() VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.EnumerateAllVolumes() VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.Raycast(Ray, out RaycastHit, out TeleporterExitVolume, float) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.AddVolume(TeleporterExitVolume) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.RemoveVolume(TeleporterExitVolume) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.SetDebugColor(Color) VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.Visibility VolumeManager<TeleporterExitVolume, TeleporterExitVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TeleporterExitVolumeManager() public TeleporterExitVolumeManager() Methods AddVolume(TeleporterExitVolume) public override void AddVolume(TeleporterExitVolume volume) Parameters volume TeleporterExitVolume FindExitVolume(string) public TeleporterExitVolume FindExitVolume(string id) Parameters id string Returns TeleporterExitVolume OnUpdateGizmos(RuntimeGizmos) protected override void OnUpdateGizmos(RuntimeGizmos runtimeGizmos) Parameters runtimeGizmos RuntimeGizmos RemoveVolume(TeleporterExitVolume) public override void RemoveVolume(TeleporterExitVolume volume) Parameters volume TeleporterExitVolume"
  },
  "api/SDG.Framework.Devkit.Tools.DevkitFoliageToolOptions.html": {
    "href": "api/SDG.Framework.Devkit.Tools.DevkitFoliageToolOptions.html",
    "title": "Class DevkitFoliageToolOptions | Unturned Analyse Doc",
    "keywords": "Class DevkitFoliageToolOptions Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public class DevkitFoliageToolOptions : IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitFoliageToolOptions Implements IFormattedFileReadable IFormattedFileWritable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitFoliageToolOptions() public DevkitFoliageToolOptions() Fields _addSensitivity protected static float _addSensitivity Field Value float _removeSensitivity protected static float _removeSensitivity Field Value float bakeApplyScale public bool bakeApplyScale Field Value bool bakeClear public bool bakeClear Field Value bool bakeInstancedMeshes public bool bakeInstancedMeshes Field Value bool bakeObjects public bool bakeObjects Field Value bool bakeResources public bool bakeResources Field Value bool brushFalloff public float brushFalloff Field Value float brushStrength public float brushStrength Field Value float densityTarget public float densityTarget Field Value float maxPreviewSamples public uint maxPreviewSamples Field Value uint surfaceMask public ERayMask surfaceMask Field Value ERayMask wasLoaded protected static bool wasLoaded Field Value bool Properties addSensitivity public static float addSensitivity { get; set; } Property Value float brushRadius public float brushRadius { get; set; } Property Value float instance public static DevkitFoliageToolOptions instance { get; } Property Value DevkitFoliageToolOptions removeSensitivity public static float removeSensitivity { get; set; } Property Value float Methods load() public static void load() read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader save() public static void save() write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.Tools.DevkitLandscapeToolHeightmapOptions.html": {
    "href": "api/SDG.Framework.Devkit.Tools.DevkitLandscapeToolHeightmapOptions.html",
    "title": "Class DevkitLandscapeToolHeightmapOptions | Unturned Analyse Doc",
    "keywords": "Class DevkitLandscapeToolHeightmapOptions Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public class DevkitLandscapeToolHeightmapOptions : IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitLandscapeToolHeightmapOptions Implements IFormattedFileReadable IFormattedFileWritable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitLandscapeToolHeightmapOptions() public DevkitLandscapeToolHeightmapOptions() Fields _adjustSensitivity protected static float _adjustSensitivity Field Value float _flattenSensitivity protected static float _flattenSensitivity Field Value float brushFalloff public float brushFalloff Field Value float brushStrength public float brushStrength Field Value float flattenMethod public EDevkitLandscapeToolHeightmapFlattenMethod flattenMethod Field Value EDevkitLandscapeToolHeightmapFlattenMethod flattenStrength public float flattenStrength Field Value float flattenTarget public float flattenTarget Field Value float maxPreviewSamples public uint maxPreviewSamples Field Value uint smoothMethod public EDevkitLandscapeToolHeightmapSmoothMethod smoothMethod Field Value EDevkitLandscapeToolHeightmapSmoothMethod smoothStrength public float smoothStrength Field Value float wasLoaded protected static bool wasLoaded Field Value bool Properties adjustSensitivity public static float adjustSensitivity { get; set; } Property Value float brushRadius public float brushRadius { get; set; } Property Value float flattenSensitivity public static float flattenSensitivity { get; set; } Property Value float instance public static DevkitLandscapeToolHeightmapOptions instance { get; } Property Value DevkitLandscapeToolHeightmapOptions Methods load() public static void load() read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader save() public static void save() write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.Tools.DevkitLandscapeToolSplatmapOptions.html": {
    "href": "api/SDG.Framework.Devkit.Tools.DevkitLandscapeToolSplatmapOptions.html",
    "title": "Class DevkitLandscapeToolSplatmapOptions | Unturned Analyse Doc",
    "keywords": "Class DevkitLandscapeToolSplatmapOptions Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public class DevkitLandscapeToolSplatmapOptions : IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitLandscapeToolSplatmapOptions Implements IFormattedFileReadable IFormattedFileWritable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitLandscapeToolSplatmapOptions() public DevkitLandscapeToolSplatmapOptions() Fields _paintSensitivity protected static float _paintSensitivity Field Value float autoMaxAngleBegin public float autoMaxAngleBegin Field Value float autoMaxAngleEnd public float autoMaxAngleEnd Field Value float autoMinAngleBegin public float autoMinAngleBegin Field Value float autoMinAngleEnd public float autoMinAngleEnd Field Value float autoRayLength public float autoRayLength Field Value float autoRayMask public ERayMask autoRayMask Field Value ERayMask autoRayRadius public float autoRayRadius Field Value float autoStrength public float autoStrength Field Value float brushFalloff public float brushFalloff Field Value float brushStrength public float brushStrength Field Value float maxPreviewSamples public uint maxPreviewSamples Field Value uint previewMethod public EDevkitLandscapeToolSplatmapPreviewMethod previewMethod Field Value EDevkitLandscapeToolSplatmapPreviewMethod smoothMethod public EDevkitLandscapeToolSplatmapSmoothMethod smoothMethod Field Value EDevkitLandscapeToolSplatmapSmoothMethod smoothStrength public float smoothStrength Field Value float useAutoFoundation public bool useAutoFoundation Field Value bool useAutoSlope public bool useAutoSlope Field Value bool useWeightTarget public bool useWeightTarget Field Value bool wasLoaded protected static bool wasLoaded Field Value bool weightTarget public float weightTarget Field Value float Properties brushRadius public float brushRadius { get; set; } Property Value float instance public static DevkitLandscapeToolSplatmapOptions instance { get; } Property Value DevkitLandscapeToolSplatmapOptions paintSensitivity public static float paintSensitivity { get; set; } Property Value float Methods load() public static void load() read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader save() public static void save() write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.Tools.DevkitSelectionToolOptions.html": {
    "href": "api/SDG.Framework.Devkit.Tools.DevkitSelectionToolOptions.html",
    "title": "Class DevkitSelectionToolOptions | Unturned Analyse Doc",
    "keywords": "Class DevkitSelectionToolOptions Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public class DevkitSelectionToolOptions : IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitSelectionToolOptions Implements IFormattedFileReadable IFormattedFileWritable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitSelectionToolOptions() public DevkitSelectionToolOptions() Fields localSpace public bool localSpace Field Value bool lockHandles public bool lockHandles Field Value bool selectionMask public ERayMask selectionMask Field Value ERayMask snapPosition public float snapPosition Field Value float snapRotation public float snapRotation Field Value float snapScale public float snapScale Field Value float surfaceAlign public bool surfaceAlign Field Value bool surfaceOffset public float surfaceOffset Field Value float wasLoaded protected static bool wasLoaded Field Value bool Properties instance public static DevkitSelectionToolOptions instance { get; } Property Value DevkitSelectionToolOptions Methods load() public static void load() read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader save() public static void save() write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolHeightmapFlattenMethod.html": {
    "href": "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolHeightmapFlattenMethod.html",
    "title": "Enum EDevkitLandscapeToolHeightmapFlattenMethod | Unturned Analyse Doc",
    "keywords": "Enum EDevkitLandscapeToolHeightmapFlattenMethod Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public enum EDevkitLandscapeToolHeightmapFlattenMethod Fields MAX = 2 Only blend current value toward target value if current is less than target. MIN = 1 Only blend current value toward target value if current is greater than target. REGULAR = 0 Directly blend current value toward target value."
  },
  "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolHeightmapSmoothMethod.html": {
    "href": "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolHeightmapSmoothMethod.html",
    "title": "Enum EDevkitLandscapeToolHeightmapSmoothMethod | Unturned Analyse Doc",
    "keywords": "Enum EDevkitLandscapeToolHeightmapSmoothMethod Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public enum EDevkitLandscapeToolHeightmapSmoothMethod Fields BRUSH_AVERAGE = 0 PIXEL_AVERAGE = 1"
  },
  "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolSplatmapPreviewMethod.html": {
    "href": "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolSplatmapPreviewMethod.html",
    "title": "Enum EDevkitLandscapeToolSplatmapPreviewMethod | Unturned Analyse Doc",
    "keywords": "Enum EDevkitLandscapeToolSplatmapPreviewMethod Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public enum EDevkitLandscapeToolSplatmapPreviewMethod Fields BRUSH_ALPHA = 0 WEIGHT = 1"
  },
  "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolSplatmapSmoothMethod.html": {
    "href": "api/SDG.Framework.Devkit.Tools.EDevkitLandscapeToolSplatmapSmoothMethod.html",
    "title": "Enum EDevkitLandscapeToolSplatmapSmoothMethod | Unturned Analyse Doc",
    "keywords": "Enum EDevkitLandscapeToolSplatmapSmoothMethod Namespace SDG.Framework.Devkit.Tools Assembly Assembly-CSharp.dll public enum EDevkitLandscapeToolSplatmapSmoothMethod Fields BRUSH_AVERAGE = 0 PIXEL_AVERAGE = 1"
  },
  "api/SDG.Framework.Devkit.Tools.html": {
    "href": "api/SDG.Framework.Devkit.Tools.html",
    "title": "Namespace SDG.Framework.Devkit.Tools | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Devkit.Tools Classes DevkitFoliageToolOptions DevkitLandscapeToolHeightmapOptions DevkitLandscapeToolSplatmapOptions DevkitSelectionToolOptions Enums EDevkitLandscapeToolHeightmapFlattenMethod EDevkitLandscapeToolHeightmapSmoothMethod EDevkitLandscapeToolSplatmapPreviewMethod EDevkitLandscapeToolSplatmapSmoothMethod"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitGameObjectDestructionTransaction.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitGameObjectDestructionTransaction.html",
    "title": "Class DevkitGameObjectDestructionTransaction | Unturned Analyse Doc",
    "keywords": "Class DevkitGameObjectDestructionTransaction Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class DevkitGameObjectDestructionTransaction : IDevkitTransaction Inheritance object DevkitGameObjectDestructionTransaction Implements IDevkitTransaction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitGameObjectDestructionTransaction(GameObject) public DevkitGameObjectDestructionTransaction(GameObject newGO) Parameters newGO GameObject Fields go protected GameObject go Field Value GameObject isActive protected bool isActive Field Value bool Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. public bool delta { get; } Property Value bool Methods begin() public void begin() end() public void end() forget() Called when history buffer is too long so this transaction is discarded. public void forget() redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitGameObjectInstantiationTransaction.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitGameObjectInstantiationTransaction.html",
    "title": "Class DevkitGameObjectInstantiationTransaction | Unturned Analyse Doc",
    "keywords": "Class DevkitGameObjectInstantiationTransaction Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class DevkitGameObjectInstantiationTransaction : IDevkitTransaction Inheritance object DevkitGameObjectInstantiationTransaction Implements IDevkitTransaction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitGameObjectInstantiationTransaction(GameObject) public DevkitGameObjectInstantiationTransaction(GameObject newGO) Parameters newGO GameObject Fields go protected GameObject go Field Value GameObject isActive protected bool isActive Field Value bool Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. public bool delta { get; } Property Value bool Methods begin() public void begin() end() public void end() forget() Called when history buffer is too long so this transaction is discarded. public void forget() redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitObjectDeltaTransaction.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitObjectDeltaTransaction.html",
    "title": "Class DevkitObjectDeltaTransaction | Unturned Analyse Doc",
    "keywords": "Class DevkitObjectDeltaTransaction Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class DevkitObjectDeltaTransaction : IDevkitTransaction Inheritance object DevkitObjectDeltaTransaction Implements IDevkitTransaction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitObjectDeltaTransaction(object) public DevkitObjectDeltaTransaction(object newInstance) Parameters newInstance object Fields deltas protected List<ITransactionDelta> deltas Field Value List<ITransactionDelta> instance protected object instance Field Value object tempFields protected List<object> tempFields Field Value List<object> tempProperties protected List<object> tempProperties Field Value List<object> Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. public bool delta { get; } Property Value bool Methods begin() public void begin() changed(object, object) protected bool changed(object before, object after) Parameters before object after object Returns bool end() public void end() forget() Called when history buffer is too long so this transaction is discarded. public void forget() redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitTransactionGroup.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitTransactionGroup.html",
    "title": "Class DevkitTransactionGroup | Unturned Analyse Doc",
    "keywords": "Class DevkitTransactionGroup Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class DevkitTransactionGroup Inheritance object DevkitTransactionGroup Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitTransactionGroup(string) public DevkitTransactionGroup(string newName) Parameters newName string Properties delta public bool delta { get; } Property Value bool name public string name { get; protected set; } Property Value string transactions public List<IDevkitTransaction> transactions { get; protected set; } Property Value List<IDevkitTransaction> Methods end() public void end() forget() public void forget() record(IDevkitTransaction) public void record(IDevkitTransaction transaction) Parameters transaction IDevkitTransaction redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitTransactionManager.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitTransactionManager.html",
    "title": "Class DevkitTransactionManager | Unturned Analyse Doc",
    "keywords": "Class DevkitTransactionManager Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class DevkitTransactionManager Inheritance object DevkitTransactionManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitTransactionManager() public DevkitTransactionManager() Fields pendingGroup protected static DevkitTransactionGroup pendingGroup Field Value DevkitTransactionGroup redoable protected static Stack<DevkitTransactionGroup> redoable Field Value Stack<DevkitTransactionGroup> transactionDepth protected static int transactionDepth Field Value int undoable protected static LinkedList<DevkitTransactionGroup> undoable Field Value LinkedList<DevkitTransactionGroup> Properties canRedo public static bool canRedo { get; } Property Value bool canUndo public static bool canUndo { get; } Property Value bool historyLength public static uint historyLength { get; set; } Property Value uint Methods beginTransaction(string) Open a new transaction group which stores multiple undo/redoable actions, for example this would be called before moving an object. public static void beginTransaction(string name) Parameters name string clearRedo() protected static void clearRedo() clearUndo() protected static void clearUndo() endTransaction() Close the pending transaction and finalize any change checks. public static void endTransaction() getRedoable() public static IEnumerable<DevkitTransactionGroup> getRedoable() Returns IEnumerable<DevkitTransactionGroup> getUndoable() public static IEnumerable<DevkitTransactionGroup> getUndoable() Returns IEnumerable<DevkitTransactionGroup> popRedo() protected static DevkitTransactionGroup popRedo() Returns DevkitTransactionGroup popUndo() protected static DevkitTransactionGroup popUndo() Returns DevkitTransactionGroup pushRedo(DevkitTransactionGroup) protected static void pushRedo(DevkitTransactionGroup group) Parameters group DevkitTransactionGroup pushUndo(DevkitTransactionGroup) protected static void pushUndo(DevkitTransactionGroup group) Parameters group DevkitTransactionGroup recordTransaction(IDevkitTransaction) public static void recordTransaction(IDevkitTransaction transaction) Parameters transaction IDevkitTransaction redo() public static DevkitTransactionGroup redo() Returns DevkitTransactionGroup resetTransactions() Clear the undo/redo queues. public static void resetTransactions() triggerTransactionPerformed(DevkitTransactionGroup) protected static void triggerTransactionPerformed(DevkitTransactionGroup group) Parameters group DevkitTransactionGroup triggerTransactionsChanged() protected static void triggerTransactionsChanged() undo() public static DevkitTransactionGroup undo() Returns DevkitTransactionGroup Events transactionPerformed public static event DevkitTransactionPerformedHandler transactionPerformed Event Type DevkitTransactionPerformedHandler transactionsChanged public static event DevkitTransactionsChangedHandler transactionsChanged Event Type DevkitTransactionsChangedHandler"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitTransactionPerformedHandler.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitTransactionPerformedHandler.html",
    "title": "Delegate DevkitTransactionPerformedHandler | Unturned Analyse Doc",
    "keywords": "Delegate DevkitTransactionPerformedHandler Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public delegate void DevkitTransactionPerformedHandler(DevkitTransactionGroup group) Parameters group DevkitTransactionGroup Constructors DevkitTransactionPerformedHandler(object, IntPtr) public DevkitTransactionPerformedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(DevkitTransactionGroup, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(DevkitTransactionGroup group, AsyncCallback callback, object @object) Parameters group DevkitTransactionGroup callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(DevkitTransactionGroup) public virtual void Invoke(DevkitTransactionGroup group) Parameters group DevkitTransactionGroup"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitTransactionUtility.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitTransactionUtility.html",
    "title": "Class DevkitTransactionUtility | Unturned Analyse Doc",
    "keywords": "Class DevkitTransactionUtility Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class DevkitTransactionUtility Inheritance object DevkitTransactionUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitTransactionUtility() public DevkitTransactionUtility() Methods beginGenericTransaction() public static void beginGenericTransaction() endGenericTransaction() public static void endGenericTransaction() recordDestruction(GameObject) public static void recordDestruction(GameObject go) Parameters go GameObject recordInstantiation(GameObject) public static void recordInstantiation(GameObject go) Parameters go GameObject recordObjectDelta(object) Save the state of all the fields and properties on this object to the current transaction group so that they can be checked for changes once the transaction has ended. public static void recordObjectDelta(object instance) Parameters instance object recordTransformChangeParent(Transform, Transform) public static void recordTransformChangeParent(Transform transform, Transform parent) Parameters transform Transform parent Transform"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitTransactionsChangedHandler.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitTransactionsChangedHandler.html",
    "title": "Delegate DevkitTransactionsChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate DevkitTransactionsChangedHandler Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public delegate void DevkitTransactionsChangedHandler() Constructors DevkitTransactionsChangedHandler(object, IntPtr) public DevkitTransactionsChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Devkit.Transactions.DevkitTransformChangeParentTransaction.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.DevkitTransformChangeParentTransaction.html",
    "title": "Class DevkitTransformChangeParentTransaction | Unturned Analyse Doc",
    "keywords": "Class DevkitTransformChangeParentTransaction Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class DevkitTransformChangeParentTransaction : IDevkitTransaction Inheritance object DevkitTransformChangeParentTransaction Implements IDevkitTransaction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DevkitTransformChangeParentTransaction(Transform, Transform) public DevkitTransformChangeParentTransaction(Transform newTransform, Transform newParent) Parameters newTransform Transform newParent Transform Fields parentAfter protected TransformDelta parentAfter Field Value TransformDelta parentBefore protected TransformDelta parentBefore Field Value TransformDelta transform protected Transform transform Field Value Transform Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. public bool delta { get; } Property Value bool Methods begin() public void begin() end() public void end() forget() Called when history buffer is too long so this transaction is discarded. public void forget() redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Devkit.Transactions.IDevkitTransaction.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.IDevkitTransaction.html",
    "title": "Interface IDevkitTransaction | Unturned Analyse Doc",
    "keywords": "Interface IDevkitTransaction Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public interface IDevkitTransaction Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. bool delta { get; } Property Value bool Methods begin() void begin() end() void end() forget() Called when history buffer is too long so this transaction is discarded. void forget() redo() void redo() undo() void undo()"
  },
  "api/SDG.Framework.Devkit.Transactions.ITransactionDelta.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.ITransactionDelta.html",
    "title": "Interface ITransactionDelta | Unturned Analyse Doc",
    "keywords": "Interface ITransactionDelta Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public interface ITransactionDelta Methods redo(object) void redo(object instance) Parameters instance object undo(object) void undo(object instance) Parameters instance object"
  },
  "api/SDG.Framework.Devkit.Transactions.TransactionFieldDelta.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.TransactionFieldDelta.html",
    "title": "Struct TransactionFieldDelta | Unturned Analyse Doc",
    "keywords": "Struct TransactionFieldDelta Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public struct TransactionFieldDelta : ITransactionDelta Implements ITransactionDelta Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors TransactionFieldDelta(FieldInfo) public TransactionFieldDelta(FieldInfo newField) Parameters newField FieldInfo TransactionFieldDelta(FieldInfo, object, object) public TransactionFieldDelta(FieldInfo newField, object newBefore, object newAfter) Parameters newField FieldInfo newBefore object newAfter object Fields after public object after Field Value object before public object before Field Value object field public FieldInfo field Field Value FieldInfo Methods redo(object) public void redo(object instance) Parameters instance object undo(object) public void undo(object instance) Parameters instance object"
  },
  "api/SDG.Framework.Devkit.Transactions.TransactionPropertyDelta.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.TransactionPropertyDelta.html",
    "title": "Struct TransactionPropertyDelta | Unturned Analyse Doc",
    "keywords": "Struct TransactionPropertyDelta Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public struct TransactionPropertyDelta : ITransactionDelta Implements ITransactionDelta Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors TransactionPropertyDelta(PropertyInfo) public TransactionPropertyDelta(PropertyInfo newProperty) Parameters newProperty PropertyInfo TransactionPropertyDelta(PropertyInfo, object, object) public TransactionPropertyDelta(PropertyInfo newProperty, object newBefore, object newAfter) Parameters newProperty PropertyInfo newBefore object newAfter object Fields after public object after Field Value object before public object before Field Value object property public PropertyInfo property Field Value PropertyInfo Methods redo(object) public void redo(object instance) Parameters instance object undo(object) public void undo(object instance) Parameters instance object"
  },
  "api/SDG.Framework.Devkit.Transactions.TransformDelta.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.TransformDelta.html",
    "title": "Class TransformDelta | Unturned Analyse Doc",
    "keywords": "Class TransformDelta Namespace SDG.Framework.Devkit.Transactions Assembly Assembly-CSharp.dll public class TransformDelta Inheritance object TransformDelta Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TransformDelta(Transform) public TransformDelta(Transform newParent) Parameters newParent Transform Fields localPosition public Vector3 localPosition Field Value Vector3 localRotation public Quaternion localRotation Field Value Quaternion localScale public Vector3 localScale Field Value Vector3 parent public Transform parent Field Value Transform Methods get(Transform) public void get(Transform transform) Parameters transform Transform set(Transform) public void set(Transform transform) Parameters transform Transform"
  },
  "api/SDG.Framework.Devkit.Transactions.html": {
    "href": "api/SDG.Framework.Devkit.Transactions.html",
    "title": "Namespace SDG.Framework.Devkit.Transactions | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Devkit.Transactions Classes DevkitGameObjectDestructionTransaction DevkitGameObjectInstantiationTransaction DevkitObjectDeltaTransaction DevkitTransactionGroup DevkitTransactionManager DevkitTransactionUtility DevkitTransformChangeParentTransaction TransformDelta Structs TransactionFieldDelta TransactionPropertyDelta Interfaces IDevkitTransaction ITransactionDelta Delegates DevkitTransactionPerformedHandler DevkitTransactionsChangedHandler"
  },
  "api/SDG.Framework.Devkit.UndergroundWhitelistVolume.html": {
    "href": "api/SDG.Framework.Devkit.UndergroundWhitelistVolume.html",
    "title": "Class UndergroundWhitelistVolume | Unturned Analyse Doc",
    "keywords": "Class UndergroundWhitelistVolume Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class UndergroundWhitelistVolume : LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager> UndergroundWhitelistVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.falloffDistance LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.editorGameObject LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.editorMeshFilter LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.editorMeshRenderer LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.forceShouldAddCollider LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.supportsBoxShape LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.supportsSphereShape LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.supportsFalloff LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.CreateMenu() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.beginSelection(InteractionData) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.endSelection(InteractionData) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetBoxSize() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetBoxExtents() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetInnerBoxSize() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetInnerBoxExtents() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetLocalInnerBoxSize() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetSphereRadius() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetLocalSphereRadius() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.SetSphereRadius(float) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.CalculateWorldBounds() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.CalculateLocalBounds() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.OnEnable() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.OnDisable() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.Awake() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.Start() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.OnDestroy() LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.Shape VolumeBase.CreateMenu() DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.readHierarchyItem(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors UndergroundWhitelistVolume() public UndergroundWhitelistVolume()"
  },
  "api/SDG.Framework.Devkit.UndergroundWhitelistVolumeManager.html": {
    "href": "api/SDG.Framework.Devkit.UndergroundWhitelistVolumeManager.html",
    "title": "Class UndergroundWhitelistVolumeManager | Unturned Analyse Doc",
    "keywords": "Class UndergroundWhitelistVolumeManager Namespace SDG.Framework.Devkit Assembly Assembly-CSharp.dll public class UndergroundWhitelistVolumeManager : VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager> Inheritance object VolumeManagerBase VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager> UndergroundWhitelistVolumeManager Inherited Members VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.allowInstantiation VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.supportsFalloff VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.allVolumes VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.Get() VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetAllVolumes() VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetRandomVolumeOrNull() VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.EnumerateAllVolumes() VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.Raycast(Ray, out RaycastHit, out UndergroundWhitelistVolume, float) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.AddVolume(UndergroundWhitelistVolume) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.RemoveVolume(UndergroundWhitelistVolume) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.SetDebugColor(Color) VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.Visibility VolumeManager<UndergroundWhitelistVolume, UndergroundWhitelistVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UndergroundWhitelistVolumeManager() public UndergroundWhitelistVolumeManager()"
  },
  "api/SDG.Framework.Devkit.html": {
    "href": "api/SDG.Framework.Devkit.html",
    "title": "Namespace SDG.Framework.Devkit | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Devkit Classes AmbianceUtility AmbianceVolume AmbianceVolumeManager DeadzoneUtility DeadzoneVolume DeadzoneVolumeManager DevkitHierarchyItemBase DevkitHierarchyWorldItem DevkitHierarchyWorldObject DevkitSelection Hold onto collider and gameobject separately because collider isn't necessarily attached to gameobject. DevkitSelectionManager DevkitTypeFactory DirtyManager EffectVolume EffectVolumeManager KillVolume KillVolumeManager LevelHierarchy NPCRewardVolume NPCRewardVolumeManager NavClipVolume NavClipVolumeManager PlayerClipVolume PlayerClipVolumeManager PlayerClipVolumeUtility Spawnpoint SpawnpointSystem SpawnpointSystemV2 TeleporterEntranceVolume TeleporterEntranceVolumeManager TeleporterExitVolume TeleporterExitVolumeManager UndergroundWhitelistVolume UndergroundWhitelistVolumeManager Interfaces IDevkitHierarchyItem IDevkitTool IDirtyable Delegates DirtySaved LevelHiearchyItemAdded LevelHierarchyItemRemoved LevelHierarchyLoaded LevelHierarchyReady MarkedCleanHandler MarkedDirtyHandler SaveableChangedHandler"
  },
  "api/SDG.Framework.Foliage.FoliageBakeSettings.html": {
    "href": "api/SDG.Framework.Foliage.FoliageBakeSettings.html",
    "title": "Struct FoliageBakeSettings | Unturned Analyse Doc",
    "keywords": "Struct FoliageBakeSettings Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public struct FoliageBakeSettings Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields bakeApplyScale public bool bakeApplyScale Field Value bool bakeClear public bool bakeClear Field Value bool bakeInstancesMeshes public bool bakeInstancesMeshes Field Value bool bakeObjects public bool bakeObjects Field Value bool bakeResources public bool bakeResources Field Value bool"
  },
  "api/SDG.Framework.Foliage.FoliageBounds.html": {
    "href": "api/SDG.Framework.Foliage.FoliageBounds.html",
    "title": "Struct FoliageBounds | Unturned Analyse Doc",
    "keywords": "Struct FoliageBounds Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public struct FoliageBounds Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FoliageBounds(FoliageCoord, FoliageCoord) public FoliageBounds(FoliageCoord newMin, FoliageCoord newMax) Parameters newMin FoliageCoord newMax FoliageCoord FoliageBounds(Bounds) public FoliageBounds(Bounds worldBounds) Parameters worldBounds Bounds Fields max public FoliageCoord max Field Value FoliageCoord min public FoliageCoord min Field Value FoliageCoord Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Framework.Foliage.FoliageCoord.html": {
    "href": "api/SDG.Framework.Foliage.FoliageCoord.html",
    "title": "Struct FoliageCoord | Unturned Analyse Doc",
    "keywords": "Struct FoliageCoord Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public struct FoliageCoord : IFormattedFileReadable, IFormattedFileWritable, IEquatable<FoliageCoord> Implements IFormattedFileReadable IFormattedFileWritable IEquatable<FoliageCoord> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FoliageCoord(int, int) public FoliageCoord(int new_x, int new_y) Parameters new_x int new_y int FoliageCoord(Vector3) public FoliageCoord(Vector3 position) Parameters position Vector3 Fields ZERO public static FoliageCoord ZERO Field Value FoliageCoord x public int x Field Value int y public int y Field Value int Methods Equals(FoliageCoord) public bool Equals(FoliageCoord other) Parameters other FoliageCoord Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Operators operator ==(FoliageCoord, FoliageCoord) public static bool operator ==(FoliageCoord a, FoliageCoord b) Parameters a FoliageCoord b FoliageCoord Returns bool operator !=(FoliageCoord, FoliageCoord) public static bool operator !=(FoliageCoord a, FoliageCoord b) Parameters a FoliageCoord b FoliageCoord Returns bool"
  },
  "api/SDG.Framework.Foliage.FoliageCut.html": {
    "href": "api/SDG.Framework.Foliage.FoliageCut.html",
    "title": "Class FoliageCut | Unturned Analyse Doc",
    "keywords": "Class FoliageCut Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageCut Inheritance object FoliageCut Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageCut(Vector3, float, float) public FoliageCut(Vector3 center, float radius, float height) Parameters center Vector3 radius float height float Methods ContainsPoint(Vector3) public bool ContainsPoint(Vector3 position) Parameters position Vector3 Returns bool"
  },
  "api/SDG.Framework.Foliage.FoliageInfoAsset.BakeFoliageStepHandler.html": {
    "href": "api/SDG.Framework.Foliage.FoliageInfoAsset.BakeFoliageStepHandler.html",
    "title": "Delegate FoliageInfoAsset.BakeFoliageStepHandler | Unturned Analyse Doc",
    "keywords": "Delegate FoliageInfoAsset.BakeFoliageStepHandler Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll protected delegate void FoliageInfoAsset.BakeFoliageStepHandler(IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight) Parameters surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float Constructors BakeFoliageStepHandler(object, IntPtr) public BakeFoliageStepHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IFoliageSurface, Bounds, float, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight, AsyncCallback callback, object @object) Parameters surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IFoliageSurface, Bounds, float, float) public virtual void Invoke(IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight) Parameters surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float"
  },
  "api/SDG.Framework.Foliage.FoliageInfoAsset.html": {
    "href": "api/SDG.Framework.Foliage.FoliageInfoAsset.html",
    "title": "Class FoliageInfoAsset | Unturned Analyse Doc",
    "keywords": "Class FoliageInfoAsset Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public abstract class FoliageInfoAsset : Asset, IAssetErrorContext Inheritance object Asset FoliageInfoAsset Implements IAssetErrorContext Derived FoliageInstancedMeshInfoAsset FoliageObjectInfoAsset FoliageResourceInfoAsset Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageInfoAsset() public FoliageInfoAsset() Fields density public float density Field Value float maxNormalPositionOffset public float maxNormalPositionOffset Field Value float maxRotation public Vector3 maxRotation Field Value Vector3 maxScale public Vector3 maxScale Field Value Vector3 maxSurfaceAngle public float maxSurfaceAngle Field Value float maxSurfaceWeight public float maxSurfaceWeight Field Value float minNormalPositionOffset public float minNormalPositionOffset Field Value float minRotation public Vector3 minRotation Field Value Vector3 minScale public Vector3 minScale Field Value Vector3 minSurfaceAngle public float minSurfaceAngle Field Value float minSurfaceWeight public float minSurfaceWeight Field Value float normalRotationAlignment public float normalRotationAlignment Field Value float normalRotationOffset public Vector3 normalRotationOffset Field Value Vector3 Properties randomNormalPositionOffset public virtual float randomNormalPositionOffset { get; } Property Value float randomRotation public virtual Quaternion randomRotation { get; } Property Value Quaternion randomScale public virtual Vector3 randomScale { get; } Property Value Vector3 Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local addFoliage(Vector3, Quaternion, Vector3, bool) protected abstract void addFoliage(Vector3 position, Quaternion rotation, Vector3 scale, bool clearWhenBaked) Parameters position Vector3 rotation Quaternion scale Vector3 clearWhenBaked bool addFoliageToSurface(Vector3, Vector3, bool, bool) public virtual void addFoliageToSurface(Vector3 surfacePosition, Vector3 surfaceNormal, bool clearWhenBaked, bool followRules) Parameters surfacePosition Vector3 surfaceNormal Vector3 clearWhenBaked bool followRules bool Should angle limits and subtractive volumes be respected? Disabled when manually placing individually. bakeFoliage(FoliageBakeSettings, IFoliageSurface, Bounds, float, float) public virtual void bakeFoliage(FoliageBakeSettings bakeSettings, IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight) Parameters bakeSettings FoliageBakeSettings surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float bakeFoliageSteps(IFoliageSurface, Bounds, float, float, BakeFoliageStepHandler) protected virtual void bakeFoliageSteps(IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight, FoliageInfoAsset.BakeFoliageStepHandler callback) Parameters surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float callback FoliageInfoAsset.BakeFoliageStepHandler getInstanceCountInVolume(IShapeVolume) public abstract int getInstanceCountInVolume(IShapeVolume volume) Parameters volume IShapeVolume Returns int getTestPosition(Bounds) Pick a point inside the bounds to test for foliage placement. The base implementation is completely random, but a blue noise implementation could be very nice. protected virtual Vector3 getTestPosition(Bounds bounds) Parameters bounds Bounds Returns Vector3 handleBakeFoliageStep(IFoliageSurface, Bounds, float, float) protected virtual void handleBakeFoliageStep(IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight) Parameters surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float isAngleValid(Vector3) protected virtual bool isAngleValid(Vector3 surfaceNormal) Parameters surfaceNormal Vector3 Returns bool isPositionValid(Vector3) protected abstract bool isPositionValid(Vector3 position) Parameters position Vector3 Returns bool isSurfaceWeightValid(float) protected virtual bool isSurfaceWeightValid(float surfaceWeight) Parameters surfaceWeight float Returns bool resetFoliageInfo() protected virtual void resetFoliageInfo()"
  },
  "api/SDG.Framework.Foliage.FoliageInfoCollectionAsset.FoliageInfoCollectionElement.html": {
    "href": "api/SDG.Framework.Foliage.FoliageInfoCollectionAsset.FoliageInfoCollectionElement.html",
    "title": "Struct FoliageInfoCollectionAsset.FoliageInfoCollectionElement | Unturned Analyse Doc",
    "keywords": "Struct FoliageInfoCollectionAsset.FoliageInfoCollectionElement Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public struct FoliageInfoCollectionAsset.FoliageInfoCollectionElement : IDatParseable Implements IDatParseable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields asset public AssetReference<FoliageInfoAsset> asset Field Value AssetReference<FoliageInfoAsset> weight public float weight Field Value float Methods TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool"
  },
  "api/SDG.Framework.Foliage.FoliageInfoCollectionAsset.html": {
    "href": "api/SDG.Framework.Foliage.FoliageInfoCollectionAsset.html",
    "title": "Class FoliageInfoCollectionAsset | Unturned Analyse Doc",
    "keywords": "Class FoliageInfoCollectionAsset Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageInfoCollectionAsset : Asset, IAssetErrorContext Inheritance object Asset FoliageInfoCollectionAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageInfoCollectionAsset() public FoliageInfoCollectionAsset() Fields elements public List<FoliageInfoCollectionAsset.FoliageInfoCollectionElement> elements Field Value List<FoliageInfoCollectionAsset.FoliageInfoCollectionElement> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local bakeFoliage(FoliageBakeSettings, IFoliageSurface, Bounds, float) public virtual void bakeFoliage(FoliageBakeSettings bakeSettings, IFoliageSurface surface, Bounds bounds, float weight) Parameters bakeSettings FoliageBakeSettings surface IFoliageSurface bounds Bounds weight float"
  },
  "api/SDG.Framework.Foliage.FoliageInstanceGroup.html": {
    "href": "api/SDG.Framework.Foliage.FoliageInstanceGroup.html",
    "title": "Struct FoliageInstanceGroup | Unturned Analyse Doc",
    "keywords": "Struct FoliageInstanceGroup Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public struct FoliageInstanceGroup Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FoliageInstanceGroup(AssetReference<FoliageInstancedMeshInfoAsset>, Matrix4x4, bool) public FoliageInstanceGroup(AssetReference<FoliageInstancedMeshInfoAsset> newAssetReference, Matrix4x4 newMatrix, bool newClearWhenBaked) Parameters newAssetReference AssetReference<FoliageInstancedMeshInfoAsset> newMatrix Matrix4x4 newClearWhenBaked bool Fields assetReference public AssetReference<FoliageInstancedMeshInfoAsset> assetReference Field Value AssetReference<FoliageInstancedMeshInfoAsset> clearWhenBaked public bool clearWhenBaked Field Value bool matrix public Matrix4x4 matrix Field Value Matrix4x4"
  },
  "api/SDG.Framework.Foliage.FoliageInstanceList.html": {
    "href": "api/SDG.Framework.Foliage.FoliageInstanceList.html",
    "title": "Class FoliageInstanceList | Unturned Analyse Doc",
    "keywords": "Class FoliageInstanceList Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageInstanceList : IPoolable Inheritance object FoliageInstanceList Implements IPoolable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageInstanceList() public FoliageInstanceList() Fields assetReference public AssetReference<FoliageInstancedMeshInfoAsset> assetReference Field Value AssetReference<FoliageInstancedMeshInfoAsset> Properties castShadows public bool castShadows { get; protected set; } Property Value bool clearWhenBaked public List<List<bool>> clearWhenBaked { get; protected set; } Property Value List<List<bool>> isAssetLoaded public bool isAssetLoaded { get; protected set; } Property Value bool material public Material material { get; protected set; } Property Value Material matrices public List<List<Matrix4x4>> matrices { get; protected set; } Property Value List<List<Matrix4x4>> mesh public Mesh mesh { get; protected set; } Property Value Mesh sqrDrawDistance public int sqrDrawDistance { get; protected set; } Property Value int tileDither public bool tileDither { get; protected set; } Property Value bool Methods IsListEmpty() public bool IsListEmpty() Returns bool addInstanceAppend(FoliageInstanceGroup) public virtual void addInstanceAppend(FoliageInstanceGroup group) Parameters group FoliageInstanceGroup addInstanceRandom(FoliageInstanceGroup) public virtual void addInstanceRandom(FoliageInstanceGroup group) Parameters group FoliageInstanceGroup applyScale() public virtual void applyScale() clearGeneratedInstances() public virtual void clearGeneratedInstances() getOrAddLists(out List<Matrix4x4>, out List<bool>) protected virtual void getOrAddLists(out List<Matrix4x4> matrixList, out List<bool> clearWhenBakedList) Parameters matrixList List<Matrix4x4> clearWhenBakedList List<bool> loadAsset() public virtual void loadAsset() poolClaim() Called when this instance is getting claimed. public virtual void poolClaim() poolRelease() Called when this instance is returned to the pool. public virtual void poolRelease() removeInstance(int, int) public virtual void removeInstance(int matricesIndex, int matrixIndex) Parameters matricesIndex int matrixIndex int"
  },
  "api/SDG.Framework.Foliage.FoliageInstancedMeshInfoAsset.html": {
    "href": "api/SDG.Framework.Foliage.FoliageInstancedMeshInfoAsset.html",
    "title": "Class FoliageInstancedMeshInfoAsset | Unturned Analyse Doc",
    "keywords": "Class FoliageInstancedMeshInfoAsset Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageInstancedMeshInfoAsset : FoliageInfoAsset, IAssetErrorContext Inheritance object Asset FoliageInfoAsset FoliageInstancedMeshInfoAsset Implements IAssetErrorContext Inherited Members FoliageInfoAsset.density FoliageInfoAsset.minNormalPositionOffset FoliageInfoAsset.maxNormalPositionOffset FoliageInfoAsset.normalRotationOffset FoliageInfoAsset.normalRotationAlignment FoliageInfoAsset.minSurfaceWeight FoliageInfoAsset.maxSurfaceWeight FoliageInfoAsset.minSurfaceAngle FoliageInfoAsset.maxSurfaceAngle FoliageInfoAsset.minRotation FoliageInfoAsset.maxRotation FoliageInfoAsset.minScale FoliageInfoAsset.maxScale FoliageInfoAsset.addFoliageToSurface(Vector3, Vector3, bool, bool) FoliageInfoAsset.bakeFoliageSteps(IFoliageSurface, Bounds, float, float, FoliageInfoAsset.BakeFoliageStepHandler) FoliageInfoAsset.getTestPosition(Bounds) FoliageInfoAsset.handleBakeFoliageStep(IFoliageSurface, Bounds, float, float) FoliageInfoAsset.isAngleValid(Vector3) FoliageInfoAsset.isSurfaceWeightValid(float) FoliageInfoAsset.resetFoliageInfo() FoliageInfoAsset.randomNormalPositionOffset FoliageInfoAsset.randomRotation FoliageInfoAsset.randomScale Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageInstancedMeshInfoAsset() public FoliageInstancedMeshInfoAsset() Fields castShadows public bool castShadows Field Value bool christmasRedirect Foliage to use during the Christmas event instead. public AssetReference<FoliageInstancedMeshInfoAsset>? christmasRedirect Field Value AssetReference<FoliageInstancedMeshInfoAsset>? drawDistance public int drawDistance Field Value int halloweenRedirect Foliage to use during the Halloween event instead. public AssetReference<FoliageInstancedMeshInfoAsset>? halloweenRedirect Field Value AssetReference<FoliageInstancedMeshInfoAsset>? material public ContentReference<Material> material Field Value ContentReference<Material> mesh public ContentReference<Mesh> mesh Field Value ContentReference<Mesh> tileDither public bool tileDither Field Value bool Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local addFoliage(Vector3, Quaternion, Vector3, bool) protected override void addFoliage(Vector3 position, Quaternion rotation, Vector3 scale, bool clearWhenBaked) Parameters position Vector3 rotation Quaternion scale Vector3 clearWhenBaked bool bakeFoliage(FoliageBakeSettings, IFoliageSurface, Bounds, float, float) public override void bakeFoliage(FoliageBakeSettings bakeSettings, IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight) Parameters bakeSettings FoliageBakeSettings surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float getHolidayRedirect() Get asset ref to replace this one for holiday, invalid to disable, or null if it should not be redirected. public AssetReference<FoliageInstancedMeshInfoAsset>? getHolidayRedirect() Returns AssetReference<FoliageInstancedMeshInfoAsset>? getInstanceCountInVolume(IShapeVolume) public override int getInstanceCountInVolume(IShapeVolume volume) Parameters volume IShapeVolume Returns int isPositionValid(Vector3) protected override bool isPositionValid(Vector3 position) Parameters position Vector3 Returns bool resetInstancedMeshInfo() protected virtual void resetInstancedMeshInfo()"
  },
  "api/SDG.Framework.Foliage.FoliageObjectInfoAsset.html": {
    "href": "api/SDG.Framework.Foliage.FoliageObjectInfoAsset.html",
    "title": "Class FoliageObjectInfoAsset | Unturned Analyse Doc",
    "keywords": "Class FoliageObjectInfoAsset Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageObjectInfoAsset : FoliageInfoAsset, IAssetErrorContext Inheritance object Asset FoliageInfoAsset FoliageObjectInfoAsset Implements IAssetErrorContext Inherited Members FoliageInfoAsset.density FoliageInfoAsset.minNormalPositionOffset FoliageInfoAsset.maxNormalPositionOffset FoliageInfoAsset.normalRotationOffset FoliageInfoAsset.normalRotationAlignment FoliageInfoAsset.minSurfaceWeight FoliageInfoAsset.maxSurfaceWeight FoliageInfoAsset.minSurfaceAngle FoliageInfoAsset.maxSurfaceAngle FoliageInfoAsset.minRotation FoliageInfoAsset.maxRotation FoliageInfoAsset.minScale FoliageInfoAsset.maxScale FoliageInfoAsset.addFoliageToSurface(Vector3, Vector3, bool, bool) FoliageInfoAsset.bakeFoliageSteps(IFoliageSurface, Bounds, float, float, FoliageInfoAsset.BakeFoliageStepHandler) FoliageInfoAsset.getTestPosition(Bounds) FoliageInfoAsset.handleBakeFoliageStep(IFoliageSurface, Bounds, float, float) FoliageInfoAsset.isAngleValid(Vector3) FoliageInfoAsset.isSurfaceWeightValid(float) FoliageInfoAsset.resetFoliageInfo() FoliageInfoAsset.randomNormalPositionOffset FoliageInfoAsset.randomRotation FoliageInfoAsset.randomScale Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageObjectInfoAsset() public FoliageObjectInfoAsset() Fields obj public AssetReference<ObjectAsset> obj Field Value AssetReference<ObjectAsset> obstructionRadius public float obstructionRadius Field Value float Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local addFoliage(Vector3, Quaternion, Vector3, bool) protected override void addFoliage(Vector3 position, Quaternion rotation, Vector3 scale, bool clearWhenBaked) Parameters position Vector3 rotation Quaternion scale Vector3 clearWhenBaked bool bakeFoliage(FoliageBakeSettings, IFoliageSurface, Bounds, float, float) public override void bakeFoliage(FoliageBakeSettings bakeSettings, IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight) Parameters bakeSettings FoliageBakeSettings surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float getInstanceCountInVolume(IShapeVolume) public override int getInstanceCountInVolume(IShapeVolume volume) Parameters volume IShapeVolume Returns int isPositionValid(Vector3) protected override bool isPositionValid(Vector3 position) Parameters position Vector3 Returns bool resetObject() protected virtual void resetObject()"
  },
  "api/SDG.Framework.Foliage.FoliagePreviewSample.html": {
    "href": "api/SDG.Framework.Foliage.FoliagePreviewSample.html",
    "title": "Struct FoliagePreviewSample | Unturned Analyse Doc",
    "keywords": "Struct FoliagePreviewSample Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public struct FoliagePreviewSample Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FoliagePreviewSample(Vector3, Color) public FoliagePreviewSample(Vector3 newPosition, Color newColor) Parameters newPosition Vector3 newColor Color Fields color public Color color Field Value Color position public Vector3 position Field Value Vector3"
  },
  "api/SDG.Framework.Foliage.FoliageResourceInfoAsset.html": {
    "href": "api/SDG.Framework.Foliage.FoliageResourceInfoAsset.html",
    "title": "Class FoliageResourceInfoAsset | Unturned Analyse Doc",
    "keywords": "Class FoliageResourceInfoAsset Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageResourceInfoAsset : FoliageInfoAsset, IAssetErrorContext Inheritance object Asset FoliageInfoAsset FoliageResourceInfoAsset Implements IAssetErrorContext Inherited Members FoliageInfoAsset.density FoliageInfoAsset.minNormalPositionOffset FoliageInfoAsset.maxNormalPositionOffset FoliageInfoAsset.normalRotationOffset FoliageInfoAsset.normalRotationAlignment FoliageInfoAsset.minSurfaceWeight FoliageInfoAsset.maxSurfaceWeight FoliageInfoAsset.minSurfaceAngle FoliageInfoAsset.maxSurfaceAngle FoliageInfoAsset.minRotation FoliageInfoAsset.maxRotation FoliageInfoAsset.minScale FoliageInfoAsset.maxScale FoliageInfoAsset.addFoliageToSurface(Vector3, Vector3, bool, bool) FoliageInfoAsset.bakeFoliageSteps(IFoliageSurface, Bounds, float, float, FoliageInfoAsset.BakeFoliageStepHandler) FoliageInfoAsset.getTestPosition(Bounds) FoliageInfoAsset.handleBakeFoliageStep(IFoliageSurface, Bounds, float, float) FoliageInfoAsset.isAngleValid(Vector3) FoliageInfoAsset.isSurfaceWeightValid(float) FoliageInfoAsset.resetFoliageInfo() FoliageInfoAsset.randomNormalPositionOffset FoliageInfoAsset.randomRotation FoliageInfoAsset.randomScale Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageResourceInfoAsset() public FoliageResourceInfoAsset() Fields obstructionRadius public float obstructionRadius Field Value float resource public AssetReference<ResourceAsset> resource Field Value AssetReference<ResourceAsset> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local addFoliage(Vector3, Quaternion, Vector3, bool) protected override void addFoliage(Vector3 position, Quaternion rotation, Vector3 scale, bool clearWhenBaked) Parameters position Vector3 rotation Quaternion scale Vector3 clearWhenBaked bool bakeFoliage(FoliageBakeSettings, IFoliageSurface, Bounds, float, float) public override void bakeFoliage(FoliageBakeSettings bakeSettings, IFoliageSurface surface, Bounds bounds, float surfaceWeight, float collectionWeight) Parameters bakeSettings FoliageBakeSettings surface IFoliageSurface bounds Bounds surfaceWeight float collectionWeight float getInstanceCountInVolume(IShapeVolume) public override int getInstanceCountInVolume(IShapeVolume volume) Parameters volume IShapeVolume Returns int isPositionValid(Vector3) protected override bool isPositionValid(Vector3 position) Parameters position Vector3 Returns bool resetResource() protected virtual void resetResource()"
  },
  "api/SDG.Framework.Foliage.FoliageSettings.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSettings.html",
    "title": "Class FoliageSettings | Unturned Analyse Doc",
    "keywords": "Class FoliageSettings Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageSettings Inheritance object FoliageSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageSettings() public FoliageSettings() Properties drawDistance public static int drawDistance { get; set; } Property Value int drawFocus public static bool drawFocus { get; set; } Property Value bool drawFocusDistance public static int drawFocusDistance { get; set; } Property Value int enabled public static bool enabled { get; set; } Property Value bool focusDistance public static float focusDistance { get; set; } Property Value float forceInstancingOff public static bool forceInstancingOff { get; set; } Property Value bool instanceDensity public static float instanceDensity { get; set; } Property Value float"
  },
  "api/SDG.Framework.Foliage.FoliageStorageV1.html": {
    "href": "api/SDG.Framework.Foliage.FoliageStorageV1.html",
    "title": "Class FoliageStorageV1 | Unturned Analyse Doc",
    "keywords": "Class FoliageStorageV1 Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll Legacy implementation of foliage storage, with one file per tile. public class FoliageStorageV1 : IFoliageStorage Inheritance object FoliageStorageV1 Implements IFoliageStorage Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageStorageV1() public FoliageStorageV1() Fields hasAllTilesInMemory protected bool hasAllTilesInMemory Field Value bool pendingLoad protected LinkedList<FoliageTile> pendingLoad Field Value LinkedList<FoliageTile> Methods EditorLoadAllTiles(IEnumerable<FoliageTile>) Load known tiles during level load. public void EditorLoadAllTiles(IEnumerable<FoliageTile> tiles) Parameters tiles IEnumerable<FoliageTile> EditorSaveAllTiles(IEnumerable<FoliageTile>) Save tiles during level save. public void EditorSaveAllTiles(IEnumerable<FoliageTile> tiles) Parameters tiles IEnumerable<FoliageTile> Initialize() Called after creating instance for level, prior to any loading. Not called when creating the auto-upgrade instance for editorSaveAllTiles. public void Initialize() Shutdown() Called prior to destroying instance. public void Shutdown() TileBecameRelevantToViewer(FoliageTile) Called when tile wants to be drawn. public void TileBecameRelevantToViewer(FoliageTile tile) Parameters tile FoliageTile TileNoLongerRelevantToViewer(FoliageTile) Called when tile no longer wants to be drawn. public void TileNoLongerRelevantToViewer(FoliageTile tile) Parameters tile FoliageTile Update() Called during Unity's Update loop. public void Update() formatTilePath(FoliageTile) protected string formatTilePath(FoliageTile tile) Parameters tile FoliageTile Returns string readInstances(FoliageTile) protected void readInstances(FoliageTile tile) Parameters tile FoliageTile writeInstances(FoliageTile) public void writeInstances(FoliageTile tile) Parameters tile FoliageTile"
  },
  "api/SDG.Framework.Foliage.FoliageStorageV2.html": {
    "href": "api/SDG.Framework.Foliage.FoliageStorageV2.html",
    "title": "Class FoliageStorageV2 | Unturned Analyse Doc",
    "keywords": "Class FoliageStorageV2 Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll Replacement foliage storage with all tiles in a single file. In the level editor all tiles are loaded into memory, whereas during gameplay the relevant tiles are loaded as-needed by a worker thread. public class FoliageStorageV2 : IFoliageStorage Inheritance object FoliageStorageV2 Implements IFoliageStorage Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageStorageV2() public FoliageStorageV2() Methods EditorLoadAllTiles(IEnumerable<FoliageTile>) Load known tiles during level load. public void EditorLoadAllTiles(IEnumerable<FoliageTile> tiles) Parameters tiles IEnumerable<FoliageTile> EditorSaveAllTiles(IEnumerable<FoliageTile>) Save tiles during level save. public void EditorSaveAllTiles(IEnumerable<FoliageTile> tiles) Parameters tiles IEnumerable<FoliageTile> Initialize() Called after creating instance for level, prior to any loading. Not called when creating the auto-upgrade instance for editorSaveAllTiles. public void Initialize() Shutdown() Called prior to destroying instance. public void Shutdown() TileBecameRelevantToViewer(FoliageTile) Called when tile wants to be drawn. public void TileBecameRelevantToViewer(FoliageTile tile) Parameters tile FoliageTile TileNoLongerRelevantToViewer(FoliageTile) Called when tile no longer wants to be drawn. public void TileNoLongerRelevantToViewer(FoliageTile tile) Parameters tile FoliageTile Update() Called during Unity's Update loop. public void Update()"
  },
  "api/SDG.Framework.Foliage.FoliageSurfaceComponent.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSurfaceComponent.html",
    "title": "Class FoliageSurfaceComponent | Unturned Analyse Doc",
    "keywords": "Class FoliageSurfaceComponent Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageSurfaceComponent : MonoBehaviour, IFoliageSurface Inheritance object FoliageSurfaceComponent Implements IFoliageSurface Constructors FoliageSurfaceComponent() public FoliageSurfaceComponent() Fields foliage public AssetReference<FoliageInfoCollectionAsset> foliage Field Value AssetReference<FoliageInfoCollectionAsset> isRegistered protected bool isRegistered Field Value bool surfaceCollider public Collider surfaceCollider Field Value Collider Properties IsValidFoliageSurface Nelson 2024-11-11: Collider may have been destroyed by an unexpected mod script configuration (or perhaps simply missing in the first place). Should fix/prevent public issue #4749. public bool IsValidFoliageSurface { get; } Property Value bool Methods OnDestroy() protected void OnDestroy() OnEnable() protected void OnEnable() bakeFoliageSurface(FoliageBakeSettings, FoliageTile) public void bakeFoliageSurface(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile getFoliageSurfaceBounds() public FoliageBounds getFoliageSurfaceBounds() Returns FoliageBounds getFoliageSurfaceInfo(Vector3, out Vector3, out Vector3) public bool getFoliageSurfaceInfo(Vector3 position, out Vector3 surfacePosition, out Vector3 surfaceNormal) Parameters position Vector3 surfacePosition Vector3 surfaceNormal Vector3 Returns bool"
  },
  "api/SDG.Framework.Foliage.FoliageSystem.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSystem.html",
    "title": "Class FoliageSystem | Unturned Analyse Doc",
    "keywords": "Class FoliageSystem Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageSystem : DevkitHierarchyItemBase, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitHierarchyItemBase FoliageSystem Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable Inherited Members DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors FoliageSystem() public FoliageSystem() Fields SPLATMAP_RESOLUTION_PER_TILE public static int SPLATMAP_RESOLUTION_PER_TILE Field Value int TILE_SIZE public static float TILE_SIZE Field Value float TILE_SIZE_INT public static int TILE_SIZE_INT Field Value int activeTiles protected static Dictionary<FoliageCoord, FoliageTile> activeTiles Field Value Dictionary<FoliageCoord, FoliageTile> bakeEnd protected static FoliageSystemPostBakeHandler bakeEnd Field Value FoliageSystemPostBakeHandler bakeLocalPosition protected static Vector3 bakeLocalPosition Field Value Vector3 bakeQueue protected static Queue<KeyValuePair<FoliageTile, List<IFoliageSurface>>> bakeQueue Field Value Queue<KeyValuePair<FoliageTile, List<IFoliageSurface>>> focusCamera public static Camera focusCamera Field Value Camera focusPosition public static Vector3 focusPosition Field Value Vector3 hiddenByHeightEditor public bool hiddenByHeightEditor Field Value bool hiddenByMaterialEditor public bool hiddenByMaterialEditor Field Value bool isFocused public static bool isFocused Field Value bool prevTiles protected static Dictionary<FoliageCoord, FoliageTile> prevTiles Field Value Dictionary<FoliageCoord, FoliageTile> storage Implementation of tile data storage. protected static IFoliageStorage storage Field Value IFoliageStorage tiles protected static Dictionary<FoliageCoord, FoliageTile> tiles Field Value Dictionary<FoliageCoord, FoliageTile> version Version number associated with this particular system instance. protected uint version Field Value uint Properties bakeQueueProgress public static int bakeQueueProgress { get; } Property Value int bakeQueueTotal public static int bakeQueueTotal { get; } Property Value int bakeSettings Settings configured when starting the bake. public static FoliageBakeSettings bakeSettings { get; } Property Value FoliageBakeSettings instance public static FoliageSystem instance { get; } Property Value FoliageSystem surfaces public static List<IFoliageSurface> surfaces { get; } Property Value List<IFoliageSurface> Methods Awake() protected void Awake() CreateInLevelIfMissing() public static void CreateInLevelIfMissing() OnDestroy() protected void OnDestroy() OnDisable() protected void OnDisable() OnEnable() protected void OnEnable() Update() protected void Update() addCut(IShapeVolume) [Obsolete] public static void addCut(IShapeVolume cut) Parameters cut IShapeVolume addInstance(AssetReference<FoliageInstancedMeshInfoAsset>, Vector3, Quaternion, Vector3, bool) public static void addInstance(AssetReference<FoliageInstancedMeshInfoAsset> assetReference, Vector3 position, Quaternion rotation, Vector3 scale, bool clearWhenBaked) Parameters assetReference AssetReference<FoliageInstancedMeshInfoAsset> position Vector3 rotation Quaternion scale Vector3 clearWhenBaked bool addSurface(IFoliageSurface) public static void addSurface(IFoliageSurface surface) Parameters surface IFoliageSurface bakeCancel() public static void bakeCancel() bakeGlobal(FoliageBakeSettings) public static void bakeGlobal(FoliageBakeSettings bakeSettings) Parameters bakeSettings FoliageBakeSettings bakeLocal(FoliageBakeSettings) public static void bakeLocal(FoliageBakeSettings bakeSettings) Parameters bakeSettings FoliageBakeSettings clearAndReleaseTiles() protected static void clearAndReleaseTiles() getOrAddTile(FoliageCoord) public static FoliageTile getOrAddTile(FoliageCoord tileCoord) Parameters tileCoord FoliageCoord Returns FoliageTile getOrAddTile(Vector3) public static FoliageTile getOrAddTile(Vector3 worldPosition) Parameters worldPosition Vector3 Returns FoliageTile getTile(FoliageCoord) public static FoliageTile getTile(FoliageCoord tileCoord) Parameters tileCoord FoliageCoord Returns FoliageTile getTile(Vector3) public static FoliageTile getTile(Vector3 worldPosition) Parameters worldPosition Vector3 Returns FoliageTile read(IFormattedFileReader) public override void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader removeSurface(IFoliageSurface) public static void removeSurface(IFoliageSurface surface) Parameters surface IFoliageSurface shutdownStorage() protected static void shutdownStorage() tickBakeQueue() Automatically placing foliage onto tiles in editor. protected void tickBakeQueue() write(IFormattedFileWriter) public override void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Events globalBake public static event FoliageSystemGlobalBakeHandler globalBake Event Type FoliageSystemGlobalBakeHandler localBake public static event FoliageSystemLocalBakeHandler localBake Event Type FoliageSystemLocalBakeHandler postBake public static event FoliageSystemPostBakeHandler postBake Event Type FoliageSystemPostBakeHandler postBakeTile public static event FoliageSystemPostBakeTileHandler postBakeTile Event Type FoliageSystemPostBakeTileHandler preBake public static event FoliageSystemPreBakeHandler preBake Event Type FoliageSystemPreBakeHandler preBakeTile public static event FoliageSystemPreBakeTileHandler preBakeTile Event Type FoliageSystemPreBakeTileHandler"
  },
  "api/SDG.Framework.Foliage.FoliageSystemGlobalBakeHandler.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSystemGlobalBakeHandler.html",
    "title": "Delegate FoliageSystemGlobalBakeHandler | Unturned Analyse Doc",
    "keywords": "Delegate FoliageSystemGlobalBakeHandler Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public delegate void FoliageSystemGlobalBakeHandler() Constructors FoliageSystemGlobalBakeHandler(object, IntPtr) public FoliageSystemGlobalBakeHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Foliage.FoliageSystemLocalBakeHandler.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSystemLocalBakeHandler.html",
    "title": "Delegate FoliageSystemLocalBakeHandler | Unturned Analyse Doc",
    "keywords": "Delegate FoliageSystemLocalBakeHandler Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public delegate void FoliageSystemLocalBakeHandler(Vector3 localPosition) Parameters localPosition Vector3 Constructors FoliageSystemLocalBakeHandler(object, IntPtr) public FoliageSystemLocalBakeHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Vector3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Vector3 localPosition, AsyncCallback callback, object @object) Parameters localPosition Vector3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Vector3) public virtual void Invoke(Vector3 localPosition) Parameters localPosition Vector3"
  },
  "api/SDG.Framework.Foliage.FoliageSystemPostBakeHandler.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSystemPostBakeHandler.html",
    "title": "Delegate FoliageSystemPostBakeHandler | Unturned Analyse Doc",
    "keywords": "Delegate FoliageSystemPostBakeHandler Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public delegate void FoliageSystemPostBakeHandler() Constructors FoliageSystemPostBakeHandler(object, IntPtr) public FoliageSystemPostBakeHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Foliage.FoliageSystemPostBakeTileHandler.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSystemPostBakeTileHandler.html",
    "title": "Delegate FoliageSystemPostBakeTileHandler | Unturned Analyse Doc",
    "keywords": "Delegate FoliageSystemPostBakeTileHandler Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public delegate void FoliageSystemPostBakeTileHandler(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile Constructors FoliageSystemPostBakeTileHandler(object, IntPtr) public FoliageSystemPostBakeTileHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(FoliageBakeSettings, FoliageTile, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(FoliageBakeSettings bakeSettings, FoliageTile foliageTile, AsyncCallback callback, object @object) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(FoliageBakeSettings, FoliageTile) public virtual void Invoke(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile"
  },
  "api/SDG.Framework.Foliage.FoliageSystemPreBakeHandler.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSystemPreBakeHandler.html",
    "title": "Delegate FoliageSystemPreBakeHandler | Unturned Analyse Doc",
    "keywords": "Delegate FoliageSystemPreBakeHandler Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public delegate void FoliageSystemPreBakeHandler() Constructors FoliageSystemPreBakeHandler(object, IntPtr) public FoliageSystemPreBakeHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Foliage.FoliageSystemPreBakeTileHandler.html": {
    "href": "api/SDG.Framework.Foliage.FoliageSystemPreBakeTileHandler.html",
    "title": "Delegate FoliageSystemPreBakeTileHandler | Unturned Analyse Doc",
    "keywords": "Delegate FoliageSystemPreBakeTileHandler Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public delegate void FoliageSystemPreBakeTileHandler(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile Constructors FoliageSystemPreBakeTileHandler(object, IntPtr) public FoliageSystemPreBakeTileHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(FoliageBakeSettings, FoliageTile, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(FoliageBakeSettings bakeSettings, FoliageTile foliageTile, AsyncCallback callback, object @object) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(FoliageBakeSettings, FoliageTile) public virtual void Invoke(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile"
  },
  "api/SDG.Framework.Foliage.FoliageTile.html": {
    "href": "api/SDG.Framework.Foliage.FoliageTile.html",
    "title": "Class FoliageTile | Unturned Analyse Doc",
    "keywords": "Class FoliageTile Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageTile : IFormattedFileReadable, IFormattedFileWritable Inheritance object FoliageTile Implements IFormattedFileReadable IFormattedFileWritable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageTile(FoliageCoord) public FoliageTile(FoliageCoord newCoord) Parameters newCoord FoliageCoord Fields _coord protected FoliageCoord _coord Field Value FoliageCoord hasUnsavedChanges public bool hasUnsavedChanges Field Value bool instances public Dictionary<AssetReference<FoliageInstancedMeshInfoAsset>, FoliageInstanceList> instances Field Value Dictionary<AssetReference<FoliageInstancedMeshInfoAsset>, FoliageInstanceList> isRelevantToViewer public bool isRelevantToViewer Field Value bool Properties coord public FoliageCoord coord { get; protected set; } Property Value FoliageCoord worldBounds public Bounds worldBounds { get; protected set; } Property Value Bounds Methods addCut(IShapeVolume) [Obsolete] public void addCut(IShapeVolume cut) Parameters cut IShapeVolume addInstance(FoliageInstanceGroup) public void addInstance(FoliageInstanceGroup instance) Parameters instance FoliageInstanceGroup applyScale() public void applyScale() clearAndReleaseInstances() public void clearAndReleaseInstances() clearGeneratedInstances() public void clearGeneratedInstances() getOrAddList(AssetReference<FoliageInstancedMeshInfoAsset>) public FoliageInstanceList getOrAddList(AssetReference<FoliageInstancedMeshInfoAsset> assetReference) Parameters assetReference AssetReference<FoliageInstancedMeshInfoAsset> Returns FoliageInstanceList isEmpty() Does this tile contain any placed foliage? public bool isEmpty() Returns bool isInstanceCut(Vector3) public bool isInstanceCut(Vector3 point) Parameters point Vector3 Returns bool read(IFormattedFileReader) public virtual void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader removeInstance(FoliageInstanceList, int, int) public void removeInstance(FoliageInstanceList list, int matricesIndex, int matrixIndex) Parameters list FoliageInstanceList matricesIndex int matrixIndex int updateBounds() public void updateBounds() write(IFormattedFileWriter) public virtual void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Foliage.FoliageVolume.EFoliageVolumeMode.html": {
    "href": "api/SDG.Framework.Foliage.FoliageVolume.EFoliageVolumeMode.html",
    "title": "Enum FoliageVolume.EFoliageVolumeMode | Unturned Analyse Doc",
    "keywords": "Enum FoliageVolume.EFoliageVolumeMode Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public enum FoliageVolume.EFoliageVolumeMode Fields ADDITIVE = 0 SUBTRACTIVE = 1"
  },
  "api/SDG.Framework.Foliage.FoliageVolume.html": {
    "href": "api/SDG.Framework.Foliage.FoliageVolume.html",
    "title": "Class FoliageVolume | Unturned Analyse Doc",
    "keywords": "Class FoliageVolume Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageVolume : LevelVolume<FoliageVolume, FoliageVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<FoliageVolume, FoliageVolumeManager> FoliageVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<FoliageVolume, FoliageVolumeManager>.falloffDistance LevelVolume<FoliageVolume, FoliageVolumeManager>.editorGameObject LevelVolume<FoliageVolume, FoliageVolumeManager>.editorMeshFilter LevelVolume<FoliageVolume, FoliageVolumeManager>.editorMeshRenderer LevelVolume<FoliageVolume, FoliageVolumeManager>.forceShouldAddCollider LevelVolume<FoliageVolume, FoliageVolumeManager>.supportsBoxShape LevelVolume<FoliageVolume, FoliageVolumeManager>.supportsSphereShape LevelVolume<FoliageVolume, FoliageVolumeManager>.supportsFalloff LevelVolume<FoliageVolume, FoliageVolumeManager>.CreateMenu() LevelVolume<FoliageVolume, FoliageVolumeManager>.beginSelection(InteractionData) LevelVolume<FoliageVolume, FoliageVolumeManager>.endSelection(InteractionData) LevelVolume<FoliageVolume, FoliageVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<FoliageVolume, FoliageVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<FoliageVolume, FoliageVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<FoliageVolume, FoliageVolumeManager>.GetBoxSize() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetBoxExtents() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetInnerBoxSize() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetInnerBoxExtents() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetLocalInnerBoxSize() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetSphereRadius() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetLocalSphereRadius() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<FoliageVolume, FoliageVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<FoliageVolume, FoliageVolumeManager>.SetSphereRadius(float) LevelVolume<FoliageVolume, FoliageVolumeManager>.CalculateWorldBounds() LevelVolume<FoliageVolume, FoliageVolumeManager>.CalculateLocalBounds() LevelVolume<FoliageVolume, FoliageVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<FoliageVolume, FoliageVolumeManager>.OnEnable() LevelVolume<FoliageVolume, FoliageVolumeManager>.OnDisable() LevelVolume<FoliageVolume, FoliageVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<FoliageVolume, FoliageVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<FoliageVolume, FoliageVolumeManager>.Awake() LevelVolume<FoliageVolume, FoliageVolumeManager>.Start() LevelVolume<FoliageVolume, FoliageVolumeManager>.OnDestroy() LevelVolume<FoliageVolume, FoliageVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<FoliageVolume, FoliageVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors FoliageVolume() public FoliageVolume() Fields _mode protected FoliageVolume.EFoliageVolumeMode _mode Field Value FoliageVolume.EFoliageVolumeMode instancedMeshes public bool instancedMeshes Field Value bool objects public bool objects Field Value bool resources public bool resources Field Value bool Properties mode public FoliageVolume.EFoliageVolumeMode mode { get; set; } Property Value FoliageVolume.EFoliageVolumeMode Methods CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Foliage.FoliageVolumeManager.html": {
    "href": "api/SDG.Framework.Foliage.FoliageVolumeManager.html",
    "title": "Class FoliageVolumeManager | Unturned Analyse Doc",
    "keywords": "Class FoliageVolumeManager Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageVolumeManager : VolumeManager<FoliageVolume, FoliageVolumeManager> Inheritance object VolumeManagerBase VolumeManager<FoliageVolume, FoliageVolumeManager> FoliageVolumeManager Inherited Members VolumeManager<FoliageVolume, FoliageVolumeManager>.allowInstantiation VolumeManager<FoliageVolume, FoliageVolumeManager>.supportsFalloff VolumeManager<FoliageVolume, FoliageVolumeManager>.allVolumes VolumeManager<FoliageVolume, FoliageVolumeManager>.Get() VolumeManager<FoliageVolume, FoliageVolumeManager>.GetAllVolumes() VolumeManager<FoliageVolume, FoliageVolumeManager>.GetRandomVolumeOrNull() VolumeManager<FoliageVolume, FoliageVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<FoliageVolume, FoliageVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<FoliageVolume, FoliageVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<FoliageVolume, FoliageVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<FoliageVolume, FoliageVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<FoliageVolume, FoliageVolumeManager>.EnumerateAllVolumes() VolumeManager<FoliageVolume, FoliageVolumeManager>.Raycast(Ray, out RaycastHit, out FoliageVolume, float) VolumeManager<FoliageVolume, FoliageVolumeManager>.AddVolume(FoliageVolume) VolumeManager<FoliageVolume, FoliageVolumeManager>.RemoveVolume(FoliageVolume) VolumeManager<FoliageVolume, FoliageVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<FoliageVolume, FoliageVolumeManager>.SetDebugColor(Color) VolumeManager<FoliageVolume, FoliageVolumeManager>.Visibility VolumeManager<FoliageVolume, FoliageVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageVolumeManager() public FoliageVolumeManager() Methods AddVolume(FoliageVolume) public override void AddVolume(FoliageVolume volume) Parameters volume FoliageVolume IsPositionBakeable(Vector3, bool, bool, bool) public bool IsPositionBakeable(Vector3 point, bool instancedMeshes, bool resources, bool objects) Parameters point Vector3 instancedMeshes bool resources bool objects bool Returns bool IsTileBakeable(FoliageTile) public bool IsTileBakeable(FoliageTile tile) Parameters tile FoliageTile Returns bool RemoveVolume(FoliageVolume) public override void RemoveVolume(FoliageVolume volume) Parameters volume FoliageVolume"
  },
  "api/SDG.Framework.Foliage.FoliageVolumeSystem.html": {
    "href": "api/SDG.Framework.Foliage.FoliageVolumeSystem.html",
    "title": "Class FoliageVolumeSystem | Unturned Analyse Doc",
    "keywords": "Class FoliageVolumeSystem Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public static class FoliageVolumeSystem Inheritance object FoliageVolumeSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties additiveVolumes [Obsolete] public static List<FoliageVolume> additiveVolumes { get; } Property Value List<FoliageVolume> subtractiveVolumes [Obsolete] public static List<FoliageVolume> subtractiveVolumes { get; } Property Value List<FoliageVolume>"
  },
  "api/SDG.Framework.Foliage.FoliageVolumeUtility.html": {
    "href": "api/SDG.Framework.Foliage.FoliageVolumeUtility.html",
    "title": "Class FoliageVolumeUtility | Unturned Analyse Doc",
    "keywords": "Class FoliageVolumeUtility Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public class FoliageVolumeUtility Inheritance object FoliageVolumeUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FoliageVolumeUtility() public FoliageVolumeUtility() Methods isPointInsideVolume(FoliageVolume, Vector3) [Obsolete] public static bool isPointInsideVolume(FoliageVolume volume, Vector3 point) Parameters volume FoliageVolume point Vector3 Returns bool isPointValid(Vector3, bool, bool, bool) [Obsolete] public static bool isPointValid(Vector3 point, bool instancedMeshes, bool resources, bool objects) Parameters point Vector3 instancedMeshes bool resources bool objects bool Returns bool isTileBakeable(FoliageTile) [Obsolete] public static bool isTileBakeable(FoliageTile tile) Parameters tile FoliageTile Returns bool"
  },
  "api/SDG.Framework.Foliage.IFoliageStorage.html": {
    "href": "api/SDG.Framework.Foliage.IFoliageStorage.html",
    "title": "Interface IFoliageStorage | Unturned Analyse Doc",
    "keywords": "Interface IFoliageStorage Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll Responsible for reading and writing persistent foliage data. public interface IFoliageStorage Methods EditorLoadAllTiles(IEnumerable<FoliageTile>) Load known tiles during level load. void EditorLoadAllTiles(IEnumerable<FoliageTile> tiles) Parameters tiles IEnumerable<FoliageTile> EditorSaveAllTiles(IEnumerable<FoliageTile>) Save tiles during level save. void EditorSaveAllTiles(IEnumerable<FoliageTile> tiles) Parameters tiles IEnumerable<FoliageTile> Initialize() Called after creating instance for level, prior to any loading. Not called when creating the auto-upgrade instance for editorSaveAllTiles. void Initialize() Shutdown() Called prior to destroying instance. void Shutdown() TileBecameRelevantToViewer(FoliageTile) Called when tile wants to be drawn. void TileBecameRelevantToViewer(FoliageTile tile) Parameters tile FoliageTile TileNoLongerRelevantToViewer(FoliageTile) Called when tile no longer wants to be drawn. void TileNoLongerRelevantToViewer(FoliageTile tile) Parameters tile FoliageTile Update() Called during Unity's Update loop. void Update()"
  },
  "api/SDG.Framework.Foliage.IFoliageSurface.html": {
    "href": "api/SDG.Framework.Foliage.IFoliageSurface.html",
    "title": "Interface IFoliageSurface | Unturned Analyse Doc",
    "keywords": "Interface IFoliageSurface Namespace SDG.Framework.Foliage Assembly Assembly-CSharp.dll public interface IFoliageSurface Properties IsValidFoliageSurface bool IsValidFoliageSurface { get; } Property Value bool True if other IFoliageSurface methods can be called. Methods bakeFoliageSurface(FoliageBakeSettings, FoliageTile) void bakeFoliageSurface(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile getFoliageSurfaceBounds() FoliageBounds getFoliageSurfaceBounds() Returns FoliageBounds getFoliageSurfaceInfo(Vector3, out Vector3, out Vector3) bool getFoliageSurfaceInfo(Vector3 position, out Vector3 surfacePosition, out Vector3 surfaceNormal) Parameters position Vector3 surfacePosition Vector3 surfaceNormal Vector3 Returns bool"
  },
  "api/SDG.Framework.Foliage.html": {
    "href": "api/SDG.Framework.Foliage.html",
    "title": "Namespace SDG.Framework.Foliage | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Foliage Classes FoliageCut FoliageInfoAsset FoliageInfoCollectionAsset FoliageInstanceList FoliageInstancedMeshInfoAsset FoliageObjectInfoAsset FoliageResourceInfoAsset FoliageSettings FoliageStorageV1 Legacy implementation of foliage storage, with one file per tile. FoliageStorageV2 Replacement foliage storage with all tiles in a single file. In the level editor all tiles are loaded into memory, whereas during gameplay the relevant tiles are loaded as-needed by a worker thread. FoliageSurfaceComponent FoliageSystem FoliageTile FoliageVolume FoliageVolumeManager FoliageVolumeSystem FoliageVolumeUtility Structs FoliageBakeSettings FoliageBounds FoliageCoord FoliageInfoCollectionAsset.FoliageInfoCollectionElement FoliageInstanceGroup FoliagePreviewSample Interfaces IFoliageStorage Responsible for reading and writing persistent foliage data. IFoliageSurface Enums FoliageVolume.EFoliageVolumeMode Delegates FoliageInfoAsset.BakeFoliageStepHandler FoliageSystemGlobalBakeHandler FoliageSystemLocalBakeHandler FoliageSystemPostBakeHandler FoliageSystemPostBakeTileHandler FoliageSystemPreBakeHandler FoliageSystemPreBakeTileHandler"
  },
  "api/SDG.Framework.FrameworkNexus.html": {
    "href": "api/SDG.Framework.FrameworkNexus.html",
    "title": "Class FrameworkNexus | Unturned Analyse Doc",
    "keywords": "Class FrameworkNexus Namespace SDG.Framework Assembly Assembly-CSharp.dll public class FrameworkNexus : IModuleNexus Inheritance object FrameworkNexus Implements IModuleNexus Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FrameworkNexus() public FrameworkNexus() Methods initialize() Register components of this module. public void initialize() shutdown() Cleanup after this module. public void shutdown()"
  },
  "api/SDG.Framework.IO.Deserialization.IDeserializer.html": {
    "href": "api/SDG.Framework.IO.Deserialization.IDeserializer.html",
    "title": "Interface IDeserializer | Unturned Analyse Doc",
    "keywords": "Interface IDeserializer Namespace SDG.Framework.IO.Deserialization Assembly Assembly-CSharp.dll public interface IDeserializer Methods deserialize<T>(byte[], int) T deserialize<T>(byte[] data, int offset) Parameters data byte[] offset int Returns T Type Parameters T deserialize<T>(MemoryStream) T deserialize<T>(MemoryStream memoryStream) Parameters memoryStream MemoryStream Returns T Type Parameters T deserialize<T>(string) T deserialize<T>(string path) Parameters path string Returns T Type Parameters T"
  },
  "api/SDG.Framework.IO.Deserialization.JSONDeserializer.html": {
    "href": "api/SDG.Framework.IO.Deserialization.JSONDeserializer.html",
    "title": "Class JSONDeserializer | Unturned Analyse Doc",
    "keywords": "Class JSONDeserializer Namespace SDG.Framework.IO.Deserialization Assembly Assembly-CSharp.dll public class JSONDeserializer : IDeserializer Inheritance object JSONDeserializer Implements IDeserializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors JSONDeserializer() public JSONDeserializer() Methods deserialize<T>(byte[], int) public T deserialize<T>(byte[] data, int offset) Parameters data byte[] offset int Returns T Type Parameters T deserialize<T>(MemoryStream) public T deserialize<T>(MemoryStream memoryStream) Parameters memoryStream MemoryStream Returns T Type Parameters T deserialize<T>(string) public T deserialize<T>(string path) Parameters path string Returns T Type Parameters T"
  },
  "api/SDG.Framework.IO.Deserialization.XMLDeserializer.html": {
    "href": "api/SDG.Framework.IO.Deserialization.XMLDeserializer.html",
    "title": "Class XMLDeserializer | Unturned Analyse Doc",
    "keywords": "Class XMLDeserializer Namespace SDG.Framework.IO.Deserialization Assembly Assembly-CSharp.dll public class XMLDeserializer : IDeserializer Inheritance object XMLDeserializer Implements IDeserializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLDeserializer() public XMLDeserializer() Methods deserialize<T>(byte[], int) public T deserialize<T>(byte[] data, int offset) Parameters data byte[] offset int Returns T Type Parameters T deserialize<T>(MemoryStream) public T deserialize<T>(MemoryStream memoryStream) Parameters memoryStream MemoryStream Returns T Type Parameters T deserialize<T>(string) public T deserialize<T>(string path) Parameters path string Returns T Type Parameters T"
  },
  "api/SDG.Framework.IO.Deserialization.html": {
    "href": "api/SDG.Framework.IO.Deserialization.html",
    "title": "Namespace SDG.Framework.IO.Deserialization | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.Deserialization Classes JSONDeserializer XMLDeserializer Interfaces IDeserializer"
  },
  "api/SDG.Framework.IO.FormattedFiles.IFormattedFileReadable.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.IFormattedFileReadable.html",
    "title": "Interface IFormattedFileReadable | Unturned Analyse Doc",
    "keywords": "Interface IFormattedFileReadable Namespace SDG.Framework.IO.FormattedFiles Assembly Assembly-CSharp.dll public interface IFormattedFileReadable Methods read(IFormattedFileReader) void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader"
  },
  "api/SDG.Framework.IO.FormattedFiles.IFormattedFileReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.IFormattedFileReader.html",
    "title": "Interface IFormattedFileReader | Unturned Analyse Doc",
    "keywords": "Interface IFormattedFileReader Namespace SDG.Framework.IO.FormattedFiles Assembly Assembly-CSharp.dll public interface IFormattedFileReader Methods containsKey(string) bool containsKey(string key) Parameters key string Returns bool getKeys() IEnumerable<string> getKeys() Returns IEnumerable<string> readArrayIndex(int) void readArrayIndex(int index) Parameters index int readArrayIndex(string, int) void readArrayIndex(string key, int index) Parameters key string index int readArrayLength() int readArrayLength() Returns int readArrayLength(string) int readArrayLength(string key) Parameters key string Returns int readKey(string) void readKey(string key) Parameters key string readObject() IFormattedFileReader readObject() Returns IFormattedFileReader readObject(int) IFormattedFileReader readObject(int index) Parameters index int Returns IFormattedFileReader readObject(string) IFormattedFileReader readObject(string key) Parameters key string Returns IFormattedFileReader readObject(string, int) IFormattedFileReader readObject(string key, int index) Parameters key string index int Returns IFormattedFileReader readValue() string readValue() Returns string readValue(int) string readValue(int index) Parameters index int Returns string readValue(string) string readValue(string key) Parameters key string Returns string readValue(string, int) string readValue(string key, int index) Parameters key string index int Returns string readValue(Type) object readValue(Type type) Parameters type Type Returns object readValue(Type, int) object readValue(Type type, int index) Parameters type Type index int Returns object readValue(Type, string) object readValue(Type type, string key) Parameters type Type key string Returns object readValue(Type, string, int) object readValue(Type type, string key, int index) Parameters type Type key string index int Returns object readValue<T>() T readValue<T>() Returns T Type Parameters T readValue<T>(int) T readValue<T>(int index) Parameters index int Returns T Type Parameters T readValue<T>(string) T readValue<T>(string key) Parameters key string Returns T Type Parameters T readValue<T>(string, int) T readValue<T>(string key, int index) Parameters key string index int Returns T Type Parameters T"
  },
  "api/SDG.Framework.IO.FormattedFiles.IFormattedFileWritable.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.IFormattedFileWritable.html",
    "title": "Interface IFormattedFileWritable | Unturned Analyse Doc",
    "keywords": "Interface IFormattedFileWritable Namespace SDG.Framework.IO.FormattedFiles Assembly Assembly-CSharp.dll public interface IFormattedFileWritable Methods write(IFormattedFileWriter) void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.IO.FormattedFiles.IFormattedFileWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.IFormattedFileWriter.html",
    "title": "Interface IFormattedFileWriter | Unturned Analyse Doc",
    "keywords": "Interface IFormattedFileWriter Namespace SDG.Framework.IO.FormattedFiles Assembly Assembly-CSharp.dll public interface IFormattedFileWriter Methods beginArray() void beginArray() beginArray(string) void beginArray(string key) Parameters key string beginObject() void beginObject() beginObject(string) void beginObject(string key) Parameters key string endArray() void endArray() endObject() void endObject() writeKey(string) void writeKey(string key) Parameters key string writeValue(object) void writeValue(object value) Parameters value object writeValue(string) void writeValue(string value) Parameters value string writeValue(string, object) void writeValue(string key, object value) Parameters key string value object writeValue(string, string) void writeValue(string key, string value) Parameters key string value string writeValue<T>(string, T) void writeValue<T>(string key, T value) Parameters key string value T Type Parameters T writeValue<T>(T) void writeValue<T>(T value) Parameters value T Type Parameters T"
  },
  "api/SDG.Framework.IO.FormattedFiles.IFormattedTypeReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.IFormattedTypeReader.html",
    "title": "Interface IFormattedTypeReader | Unturned Analyse Doc",
    "keywords": "Interface IFormattedTypeReader Namespace SDG.Framework.IO.FormattedFiles Assembly Assembly-CSharp.dll public interface IFormattedTypeReader Methods read(IFormattedFileReader) object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.IFormattedTypeWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.IFormattedTypeWriter.html",
    "title": "Interface IFormattedTypeWriter | Unturned Analyse Doc",
    "keywords": "Interface IFormattedTypeWriter Namespace SDG.Framework.IO.FormattedFiles Assembly Assembly-CSharp.dll public interface IFormattedTypeWriter Methods write(IFormattedFileWriter, object) void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableReader.html",
    "title": "Class KeyValueTableReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables Assembly Assembly-CSharp.dll public class KeyValueTableReader : IFormattedFileReader Inheritance object KeyValueTableReader Implements IFormattedFileReader Derived LimitedKeyValueTableReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableReader() public KeyValueTableReader() KeyValueTableReader(StreamReader) public KeyValueTableReader(StreamReader input) Parameters input StreamReader Fields builder protected static StringBuilder builder Field Value StringBuilder dictionaryIgnoreNextChar protected bool dictionaryIgnoreNextChar Field Value bool dictionaryInQuotes protected bool dictionaryInQuotes Field Value bool dictionaryKey protected string dictionaryKey Field Value string index protected int index Field Value int key protected string key Field Value string listIgnoreNextChar protected bool listIgnoreNextChar Field Value bool listInQuotes protected bool listInQuotes Field Value bool Properties table public Dictionary<string, object> table { get; protected set; } Property Value Dictionary<string, object> Methods canContinueReadDictionary(StreamReader, Dictionary<string, object>) protected virtual bool canContinueReadDictionary(StreamReader input, Dictionary<string, object> scope) Parameters input StreamReader scope Dictionary<string, object> Returns bool containsKey(string) public virtual bool containsKey(string key) Parameters key string Returns bool getKeys() public virtual IEnumerable<string> getKeys() Returns IEnumerable<string> readArrayIndex(int) public virtual void readArrayIndex(int index) Parameters index int readArrayIndex(string, int) public virtual void readArrayIndex(string key, int index) Parameters key string index int readArrayLength() public virtual int readArrayLength() Returns int readArrayLength(string) public virtual int readArrayLength(string key) Parameters key string Returns int readDictionary(StreamReader, Dictionary<string, object>) public virtual void readDictionary(StreamReader input, Dictionary<string, object> scope) Parameters input StreamReader scope Dictionary<string, object> readKey(string) public virtual void readKey(string key) Parameters key string readList(StreamReader, List<object>) public virtual void readList(StreamReader input, List<object> scope) Parameters input StreamReader scope List<object> readObject() public virtual IFormattedFileReader readObject() Returns IFormattedFileReader readObject(int) public virtual IFormattedFileReader readObject(int index) Parameters index int Returns IFormattedFileReader readObject(string) public virtual IFormattedFileReader readObject(string key) Parameters key string Returns IFormattedFileReader readObject(string, int) public virtual IFormattedFileReader readObject(string key, int index) Parameters key string index int Returns IFormattedFileReader readValue() public virtual string readValue() Returns string readValue(int) public virtual string readValue(int index) Parameters index int Returns string readValue(string) public virtual string readValue(string key) Parameters key string Returns string readValue(string, int) public virtual string readValue(string key, int index) Parameters key string index int Returns string readValue(Type) public virtual object readValue(Type type) Parameters type Type Returns object readValue(Type, int) public virtual object readValue(Type type, int index) Parameters type Type index int Returns object readValue(Type, string) public virtual object readValue(Type type, string key) Parameters type Type key string Returns object readValue(Type, string, int) public virtual object readValue(Type type, string key, int index) Parameters type Type key string index int Returns object readValue<T>() public virtual T readValue<T>() Returns T Type Parameters T readValue<T>(int) public virtual T readValue<T>(int index) Parameters index int Returns T Type Parameters T readValue<T>(string) public virtual T readValue<T>(string key) Parameters key string Returns T Type Parameters T readValue<T>(string, int) public virtual T readValue<T>(string key, int index) Parameters key string index int Returns T Type Parameters T"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableTypeReaderRegistry.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableTypeReaderRegistry.html",
    "title": "Class KeyValueTableTypeReaderRegistry | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableTypeReaderRegistry Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables Assembly Assembly-CSharp.dll public class KeyValueTableTypeReaderRegistry Inheritance object KeyValueTableTypeReaderRegistry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableTypeReaderRegistry() public KeyValueTableTypeReaderRegistry() Methods add(Type, IFormattedTypeReader) public static void add(Type type, IFormattedTypeReader reader) Parameters type Type reader IFormattedTypeReader add<T>(IFormattedTypeReader) public static void add<T>(IFormattedTypeReader reader) Parameters reader IFormattedTypeReader Type Parameters T read(IFormattedFileReader, Type) public static object read(IFormattedFileReader input, Type type) Parameters input IFormattedFileReader type Type Returns object read<T>(IFormattedFileReader) public static T read<T>(IFormattedFileReader input) Parameters input IFormattedFileReader Returns T Type Parameters T remove(Type) public static void remove(Type type) Parameters type Type remove<T>() public static void remove<T>() Type Parameters T"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableTypeRedirectorRegistry.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableTypeRedirectorRegistry.html",
    "title": "Class KeyValueTableTypeRedirectorRegistry | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableTypeRedirectorRegistry Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables Assembly Assembly-CSharp.dll public static class KeyValueTableTypeRedirectorRegistry Inheritance object KeyValueTableTypeRedirectorRegistry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods add(string, string) public static void add(string oldAssemblyQualifiedName, string newAssemblyQualifiedName) Parameters oldAssemblyQualifiedName string newAssemblyQualifiedName string chase(string) If the type name has been redirected this method will be called recursively until the most recent name is found and returned. public static string chase(string assemblyQualifiedName) Parameters assemblyQualifiedName string Returns string remove(string) public static void remove(string oldAssemblyQualifiedName) Parameters oldAssemblyQualifiedName string"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableTypeWriterRegistry.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableTypeWriterRegistry.html",
    "title": "Class KeyValueTableTypeWriterRegistry | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableTypeWriterRegistry Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables Assembly Assembly-CSharp.dll public class KeyValueTableTypeWriterRegistry Inheritance object KeyValueTableTypeWriterRegistry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableTypeWriterRegistry() public KeyValueTableTypeWriterRegistry() Methods add(Type, IFormattedTypeWriter) public static void add(Type type, IFormattedTypeWriter writer) Parameters type Type writer IFormattedTypeWriter add<T>(IFormattedTypeWriter) public static void add<T>(IFormattedTypeWriter writer) Parameters writer IFormattedTypeWriter Type Parameters T remove(Type) public static void remove(Type type) Parameters type Type remove<T>() public static void remove<T>() Type Parameters T write(IFormattedFileWriter, object) public static void write(IFormattedFileWriter output, object value) Parameters output IFormattedFileWriter value object write<T>(IFormattedFileWriter, T) public static void write<T>(IFormattedFileWriter output, T value) Parameters output IFormattedFileWriter value T Type Parameters T"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.KeyValueTableWriter.html",
    "title": "Class KeyValueTableWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables Assembly Assembly-CSharp.dll public class KeyValueTableWriter : IFormattedFileWriter Inheritance object KeyValueTableWriter Implements IFormattedFileWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableWriter(StreamWriter) public KeyValueTableWriter(StreamWriter writer) Parameters writer StreamWriter Fields hasWritten protected bool hasWritten Field Value bool indentationCount protected int indentationCount Field Value int writer protected StreamWriter writer Field Value StreamWriter wroteKey protected bool wroteKey Field Value bool Methods beginArray() public virtual void beginArray() beginArray(string) public virtual void beginArray(string key) Parameters key string beginObject() public virtual void beginObject() beginObject(string) public virtual void beginObject(string key) Parameters key string endArray() public virtual void endArray() endObject() public virtual void endObject() writeIndents() protected virtual void writeIndents() writeKey(string) public virtual void writeKey(string key) Parameters key string writeValue(object) public virtual void writeValue(object value) Parameters value object writeValue(string) public virtual void writeValue(string value) Parameters value string writeValue(string, object) public virtual void writeValue(string key, object value) Parameters key string value object writeValue(string, string) public virtual void writeValue(string key, string value) Parameters key string value string writeValue<T>(string, T) public virtual void writeValue<T>(string key, T value) Parameters key string value T Type Parameters T writeValue<T>(T) public virtual void writeValue<T>(T value) Parameters value T Type Parameters T"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.LimitedKeyValueTableReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.LimitedKeyValueTableReader.html",
    "title": "Class LimitedKeyValueTableReader | Unturned Analyse Doc",
    "keywords": "Class LimitedKeyValueTableReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables Assembly Assembly-CSharp.dll public class LimitedKeyValueTableReader : KeyValueTableReader, IFormattedFileReader Inheritance object KeyValueTableReader LimitedKeyValueTableReader Implements IFormattedFileReader Inherited Members KeyValueTableReader.builder KeyValueTableReader.key KeyValueTableReader.index KeyValueTableReader.dictionaryKey KeyValueTableReader.dictionaryInQuotes KeyValueTableReader.dictionaryIgnoreNextChar KeyValueTableReader.listInQuotes KeyValueTableReader.listIgnoreNextChar KeyValueTableReader.getKeys() KeyValueTableReader.containsKey(string) KeyValueTableReader.readKey(string) KeyValueTableReader.readArrayLength(string) KeyValueTableReader.readArrayLength() KeyValueTableReader.readArrayIndex(string, int) KeyValueTableReader.readArrayIndex(int) KeyValueTableReader.readValue(string) KeyValueTableReader.readValue(int) KeyValueTableReader.readValue(string, int) KeyValueTableReader.readValue() KeyValueTableReader.readValue(Type, string) KeyValueTableReader.readValue(Type, int) KeyValueTableReader.readValue(Type, string, int) KeyValueTableReader.readValue(Type) KeyValueTableReader.readValue<T>(string) KeyValueTableReader.readValue<T>(int) KeyValueTableReader.readValue<T>(string, int) KeyValueTableReader.readValue<T>() KeyValueTableReader.readObject(string) KeyValueTableReader.readObject(int) KeyValueTableReader.readObject(string, int) KeyValueTableReader.readObject() KeyValueTableReader.readDictionary(StreamReader, Dictionary<string, object>) KeyValueTableReader.readList(StreamReader, List<object>) KeyValueTableReader.table object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LimitedKeyValueTableReader() public LimitedKeyValueTableReader() LimitedKeyValueTableReader(StreamReader) public LimitedKeyValueTableReader(StreamReader input) Parameters input StreamReader LimitedKeyValueTableReader(string, StreamReader) public LimitedKeyValueTableReader(string newLimit, StreamReader input) Parameters newLimit string input StreamReader Properties limit After the key \"limit\" is loaded we stop reading. public string limit { get; protected set; } Property Value string Methods canContinueReadDictionary(StreamReader, Dictionary<string, object>) protected override bool canContinueReadDictionary(StreamReader input, Dictionary<string, object> scope) Parameters input StreamReader scope Dictionary<string, object> Returns bool"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableBoolReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableBoolReader.html",
    "title": "Class KeyValueTableBoolReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableBoolReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableBoolReader : IFormattedTypeReader Inheritance object KeyValueTableBoolReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableBoolReader() public KeyValueTableBoolReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableByteReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableByteReader.html",
    "title": "Class KeyValueTableByteReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableByteReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableByteReader : IFormattedTypeReader Inheritance object KeyValueTableByteReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableByteReader() public KeyValueTableByteReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableFloatReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableFloatReader.html",
    "title": "Class KeyValueTableFloatReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableFloatReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableFloatReader : IFormattedTypeReader Inheritance object KeyValueTableFloatReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableFloatReader() public KeyValueTableFloatReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableIntReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableIntReader.html",
    "title": "Class KeyValueTableIntReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableIntReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableIntReader : IFormattedTypeReader Inheritance object KeyValueTableIntReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableIntReader() public KeyValueTableIntReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableLongReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableLongReader.html",
    "title": "Class KeyValueTableLongReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableLongReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableLongReader : IFormattedTypeReader Inheritance object KeyValueTableLongReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableLongReader() public KeyValueTableLongReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableSByteReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableSByteReader.html",
    "title": "Class KeyValueTableSByteReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableSByteReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableSByteReader : IFormattedTypeReader Inheritance object KeyValueTableSByteReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableSByteReader() public KeyValueTableSByteReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableShortReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableShortReader.html",
    "title": "Class KeyValueTableShortReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableShortReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableShortReader : IFormattedTypeReader Inheritance object KeyValueTableShortReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableShortReader() public KeyValueTableShortReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableStringReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableStringReader.html",
    "title": "Class KeyValueTableStringReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableStringReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableStringReader : IFormattedTypeReader Inheritance object KeyValueTableStringReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableStringReader() public KeyValueTableStringReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableUIntReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableUIntReader.html",
    "title": "Class KeyValueTableUIntReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableUIntReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableUIntReader : IFormattedTypeReader Inheritance object KeyValueTableUIntReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableUIntReader() public KeyValueTableUIntReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableULongReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableULongReader.html",
    "title": "Class KeyValueTableULongReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableULongReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableULongReader : IFormattedTypeReader Inheritance object KeyValueTableULongReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableULongReader() public KeyValueTableULongReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableUShortReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.KeyValueTableUShortReader.html",
    "title": "Class KeyValueTableUShortReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableUShortReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableUShortReader : IFormattedTypeReader Inheritance object KeyValueTableUShortReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableUShortReader() public KeyValueTableUShortReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.CoreTypes Classes KeyValueTableBoolReader KeyValueTableByteReader KeyValueTableFloatReader KeyValueTableIntReader KeyValueTableLongReader KeyValueTableSByteReader KeyValueTableShortReader KeyValueTableStringReader KeyValueTableUIntReader KeyValueTableULongReader KeyValueTableUShortReader"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes.KeyValueTableGUIDReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes.KeyValueTableGUIDReader.html",
    "title": "Class KeyValueTableGUIDReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableGUIDReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes Assembly Assembly-CSharp.dll public class KeyValueTableGUIDReader : IFormattedTypeReader Inheritance object KeyValueTableGUIDReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableGUIDReader() public KeyValueTableGUIDReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes.KeyValueTableTypeReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes.KeyValueTableTypeReader.html",
    "title": "Class KeyValueTableTypeReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableTypeReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes Assembly Assembly-CSharp.dll public class KeyValueTableTypeReader : IFormattedTypeReader Inheritance object KeyValueTableTypeReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableTypeReader() public KeyValueTableTypeReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.SystemTypes Classes KeyValueTableGUIDReader KeyValueTableTypeReader"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableColor32Reader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableColor32Reader.html",
    "title": "Class KeyValueTableColor32Reader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableColor32Reader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableColor32Reader : IFormattedTypeReader Inheritance object KeyValueTableColor32Reader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableColor32Reader() public KeyValueTableColor32Reader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableColorReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableColorReader.html",
    "title": "Class KeyValueTableColorReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableColorReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableColorReader : IFormattedTypeReader Inheritance object KeyValueTableColorReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableColorReader() public KeyValueTableColorReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableQuaternionReader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableQuaternionReader.html",
    "title": "Class KeyValueTableQuaternionReader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableQuaternionReader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableQuaternionReader : IFormattedTypeReader Inheritance object KeyValueTableQuaternionReader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableQuaternionReader() public KeyValueTableQuaternionReader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableVector2Reader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableVector2Reader.html",
    "title": "Class KeyValueTableVector2Reader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableVector2Reader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableVector2Reader : IFormattedTypeReader Inheritance object KeyValueTableVector2Reader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableVector2Reader() public KeyValueTableVector2Reader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableVector3Reader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableVector3Reader.html",
    "title": "Class KeyValueTableVector3Reader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableVector3Reader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableVector3Reader : IFormattedTypeReader Inheritance object KeyValueTableVector3Reader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableVector3Reader() public KeyValueTableVector3Reader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableVector4Reader.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.KeyValueTableVector4Reader.html",
    "title": "Class KeyValueTableVector4Reader | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableVector4Reader Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableVector4Reader : IFormattedTypeReader Inheritance object KeyValueTableVector4Reader Implements IFormattedTypeReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableVector4Reader() public KeyValueTableVector4Reader() Methods read(IFormattedFileReader) public object read(IFormattedFileReader reader) Parameters reader IFormattedFileReader Returns object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeReaders.UnityTypes Classes KeyValueTableColor32Reader KeyValueTableColorReader KeyValueTableQuaternionReader KeyValueTableVector2Reader KeyValueTableVector3Reader KeyValueTableVector4Reader"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.KeyValueTableBoolWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.KeyValueTableBoolWriter.html",
    "title": "Class KeyValueTableBoolWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableBoolWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableBoolWriter : IFormattedTypeWriter Inheritance object KeyValueTableBoolWriter Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableBoolWriter() public KeyValueTableBoolWriter() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.KeyValueTableDoubleWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.KeyValueTableDoubleWriter.html",
    "title": "Class KeyValueTableDoubleWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableDoubleWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableDoubleWriter : IFormattedTypeWriter Inheritance object KeyValueTableDoubleWriter Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableDoubleWriter() public KeyValueTableDoubleWriter() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.KeyValueTableFloatWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.KeyValueTableFloatWriter.html",
    "title": "Class KeyValueTableFloatWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableFloatWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes Assembly Assembly-CSharp.dll public class KeyValueTableFloatWriter : IFormattedTypeWriter Inheritance object KeyValueTableFloatWriter Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableFloatWriter() public KeyValueTableFloatWriter() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.CoreTypes Classes KeyValueTableBoolWriter KeyValueTableDoubleWriter KeyValueTableFloatWriter"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes.KeyValueTableGUIDWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes.KeyValueTableGUIDWriter.html",
    "title": "Class KeyValueTableGUIDWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableGUIDWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes Assembly Assembly-CSharp.dll public class KeyValueTableGUIDWriter : IFormattedTypeWriter Inheritance object KeyValueTableGUIDWriter Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableGUIDWriter() public KeyValueTableGUIDWriter() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes.KeyValueTableTypeWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes.KeyValueTableTypeWriter.html",
    "title": "Class KeyValueTableTypeWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableTypeWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes Assembly Assembly-CSharp.dll public class KeyValueTableTypeWriter : IFormattedTypeWriter Inheritance object KeyValueTableTypeWriter Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableTypeWriter() public KeyValueTableTypeWriter() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.SystemTypes Classes KeyValueTableGUIDWriter KeyValueTableTypeWriter"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableColor32Writer.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableColor32Writer.html",
    "title": "Class KeyValueTableColor32Writer | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableColor32Writer Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableColor32Writer : IFormattedTypeWriter Inheritance object KeyValueTableColor32Writer Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableColor32Writer() public KeyValueTableColor32Writer() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableColorWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableColorWriter.html",
    "title": "Class KeyValueTableColorWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableColorWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableColorWriter : IFormattedTypeWriter Inheritance object KeyValueTableColorWriter Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableColorWriter() public KeyValueTableColorWriter() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableQuaternionWriter.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableQuaternionWriter.html",
    "title": "Class KeyValueTableQuaternionWriter | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableQuaternionWriter Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableQuaternionWriter : IFormattedTypeWriter Inheritance object KeyValueTableQuaternionWriter Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableQuaternionWriter() public KeyValueTableQuaternionWriter() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableVector2Writer.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableVector2Writer.html",
    "title": "Class KeyValueTableVector2Writer | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableVector2Writer Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableVector2Writer : IFormattedTypeWriter Inheritance object KeyValueTableVector2Writer Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableVector2Writer() public KeyValueTableVector2Writer() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableVector3Writer.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableVector3Writer.html",
    "title": "Class KeyValueTableVector3Writer | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableVector3Writer Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableVector3Writer : IFormattedTypeWriter Inheritance object KeyValueTableVector3Writer Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableVector3Writer() public KeyValueTableVector3Writer() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableVector4Writer.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.KeyValueTableVector4Writer.html",
    "title": "Class KeyValueTableVector4Writer | Unturned Analyse Doc",
    "keywords": "Class KeyValueTableVector4Writer Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes Assembly Assembly-CSharp.dll public class KeyValueTableVector4Writer : IFormattedTypeWriter Inheritance object KeyValueTableVector4Writer Implements IFormattedTypeWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyValueTableVector4Writer() public KeyValueTableVector4Writer() Methods write(IFormattedFileWriter, object) public void write(IFormattedFileWriter writer, object value) Parameters writer IFormattedFileWriter value object"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables.TypeWriters.UnityTypes Classes KeyValueTableColor32Writer KeyValueTableColorWriter KeyValueTableQuaternionWriter KeyValueTableVector2Writer KeyValueTableVector3Writer KeyValueTableVector4Writer"
  },
  "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.KeyValueTables.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles.KeyValueTables Classes KeyValueTableReader KeyValueTableTypeReaderRegistry KeyValueTableTypeRedirectorRegistry KeyValueTableTypeWriterRegistry KeyValueTableWriter LimitedKeyValueTableReader"
  },
  "api/SDG.Framework.IO.FormattedFiles.html": {
    "href": "api/SDG.Framework.IO.FormattedFiles.html",
    "title": "Namespace SDG.Framework.IO.FormattedFiles | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.FormattedFiles Interfaces IFormattedFileReadable IFormattedFileReader IFormattedFileWritable IFormattedFileWriter IFormattedTypeReader IFormattedTypeWriter"
  },
  "api/SDG.Framework.IO.IONexus.html": {
    "href": "api/SDG.Framework.IO.IONexus.html",
    "title": "Class IONexus | Unturned Analyse Doc",
    "keywords": "Class IONexus Namespace SDG.Framework.IO Assembly Assembly-CSharp.dll public class IONexus : IModuleNexus Inheritance object IONexus Implements IModuleNexus Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors IONexus() public IONexus() Methods initialize() Register components of this module. public void initialize() shutdown() Cleanup after this module. public void shutdown()"
  },
  "api/SDG.Framework.IO.IOUtility.html": {
    "href": "api/SDG.Framework.IO.IOUtility.html",
    "title": "Class IOUtility | Unturned Analyse Doc",
    "keywords": "Class IOUtility Namespace SDG.Framework.IO Assembly Assembly-CSharp.dll public class IOUtility Inheritance object IOUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors IOUtility() public IOUtility() Fields jsonDeserializer public static IDeserializer jsonDeserializer Field Value IDeserializer jsonSerializer public static ISerializer jsonSerializer Field Value ISerializer xmlDeserializer public static IDeserializer xmlDeserializer Field Value IDeserializer xmlSerializer public static ISerializer xmlSerializer Field Value ISerializer Properties rootPath Path to the folder which contains the Unity player executable. [Obsolete(\"Replaced by UnturnedPaths.RootDirectory\")] public static string rootPath { get; } Property Value string"
  },
  "api/SDG.Framework.IO.Serialization.ISerializer.html": {
    "href": "api/SDG.Framework.IO.Serialization.ISerializer.html",
    "title": "Interface ISerializer | Unturned Analyse Doc",
    "keywords": "Interface ISerializer Namespace SDG.Framework.IO.Serialization Assembly Assembly-CSharp.dll public interface ISerializer Methods serialize<T>(T, byte[], int, out int, bool) void serialize<T>(T instance, byte[] data, int offset, out int size, bool isFormatted) Parameters instance T data byte[] offset int size int isFormatted bool Type Parameters T serialize<T>(T, MemoryStream, bool) void serialize<T>(T instance, MemoryStream memoryStream, bool isFormatted) Parameters instance T memoryStream MemoryStream isFormatted bool Type Parameters T serialize<T>(T, string, bool) void serialize<T>(T instance, string path, bool isFormatted) Parameters instance T path string isFormatted bool Type Parameters T"
  },
  "api/SDG.Framework.IO.Serialization.JSONSerializer.html": {
    "href": "api/SDG.Framework.IO.Serialization.JSONSerializer.html",
    "title": "Class JSONSerializer | Unturned Analyse Doc",
    "keywords": "Class JSONSerializer Namespace SDG.Framework.IO.Serialization Assembly Assembly-CSharp.dll public class JSONSerializer : ISerializer Inheritance object JSONSerializer Implements ISerializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors JSONSerializer() public JSONSerializer() Methods serialize<T>(T, byte[], int, out int, bool) public void serialize<T>(T instance, byte[] data, int index, out int size, bool isFormatted) Parameters instance T data byte[] index int size int isFormatted bool Type Parameters T serialize<T>(T, MemoryStream, bool) public void serialize<T>(T instance, MemoryStream memoryStream, bool isFormatted) Parameters instance T memoryStream MemoryStream isFormatted bool Type Parameters T serialize<T>(T, string, bool) public void serialize<T>(T instance, string path, bool isFormatted) Parameters instance T path string isFormatted bool Type Parameters T"
  },
  "api/SDG.Framework.IO.Serialization.JsonTextWriterFormatted.html": {
    "href": "api/SDG.Framework.IO.Serialization.JsonTextWriterFormatted.html",
    "title": "Class JsonTextWriterFormatted | Unturned Analyse Doc",
    "keywords": "Class JsonTextWriterFormatted Namespace SDG.Framework.IO.Serialization Assembly Assembly-CSharp.dll public class JsonTextWriterFormatted : JsonTextWriter Inheritance object JsonTextWriterFormatted Constructors JsonTextWriterFormatted(TextWriter) public JsonTextWriterFormatted(TextWriter textWriter) Parameters textWriter TextWriter Methods WriteStartArray() public override void WriteStartArray()"
  },
  "api/SDG.Framework.IO.Serialization.XMLSerializer.html": {
    "href": "api/SDG.Framework.IO.Serialization.XMLSerializer.html",
    "title": "Class XMLSerializer | Unturned Analyse Doc",
    "keywords": "Class XMLSerializer Namespace SDG.Framework.IO.Serialization Assembly Assembly-CSharp.dll public class XMLSerializer : ISerializer Inheritance object XMLSerializer Implements ISerializer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLSerializer() public XMLSerializer() Methods serialize<T>(T, byte[], int, out int, bool) public void serialize<T>(T instance, byte[] data, int index, out int size, bool isFormatted) Parameters instance T data byte[] index int size int isFormatted bool Type Parameters T serialize<T>(T, MemoryStream, bool) public void serialize<T>(T instance, MemoryStream memoryStream, bool isFormatted) Parameters instance T memoryStream MemoryStream isFormatted bool Type Parameters T serialize<T>(T, string, bool) public void serialize<T>(T instance, string path, bool isFormatted) Parameters instance T path string isFormatted bool Type Parameters T"
  },
  "api/SDG.Framework.IO.Serialization.html": {
    "href": "api/SDG.Framework.IO.Serialization.html",
    "title": "Namespace SDG.Framework.IO.Serialization | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.Serialization Classes JSONSerializer JsonTextWriterFormatted XMLSerializer Interfaces ISerializer"
  },
  "api/SDG.Framework.IO.Streams.BitStreams.BitStreamReader.html": {
    "href": "api/SDG.Framework.IO.Streams.BitStreams.BitStreamReader.html",
    "title": "Class BitStreamReader | Unturned Analyse Doc",
    "keywords": "Class BitStreamReader Namespace SDG.Framework.IO.Streams.BitStreams Assembly Assembly-CSharp.dll public class BitStreamReader Inheritance object BitStreamReader Derived PrimitiveBitStreamReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BitStreamReader(Stream) public BitStreamReader(Stream newStream) Parameters newStream Stream Properties stream public Stream stream { get; protected set; } Property Value Stream Methods readBit(ref byte) public void readBit(ref byte data) Parameters data byte readBits(ref byte, byte) public void readBits(ref byte data, byte length) Parameters data byte length byte reset() public void reset()"
  },
  "api/SDG.Framework.IO.Streams.BitStreams.BitStreamWriter.html": {
    "href": "api/SDG.Framework.IO.Streams.BitStreams.BitStreamWriter.html",
    "title": "Class BitStreamWriter | Unturned Analyse Doc",
    "keywords": "Class BitStreamWriter Namespace SDG.Framework.IO.Streams.BitStreams Assembly Assembly-CSharp.dll public class BitStreamWriter Inheritance object BitStreamWriter Derived PrimitiveBitStreamWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BitStreamWriter(Stream) public BitStreamWriter(Stream newStream) Parameters newStream Stream Properties stream public Stream stream { get; protected set; } Property Value Stream Methods flush() public void flush() reset() public void reset() writeBit(byte) public void writeBit(byte data) Parameters data byte writeBits(byte, byte) public void writeBits(byte data, byte length) Parameters data byte length byte"
  },
  "api/SDG.Framework.IO.Streams.BitStreams.PrimitiveBitStreamReader.html": {
    "href": "api/SDG.Framework.IO.Streams.BitStreams.PrimitiveBitStreamReader.html",
    "title": "Class PrimitiveBitStreamReader | Unturned Analyse Doc",
    "keywords": "Class PrimitiveBitStreamReader Namespace SDG.Framework.IO.Streams.BitStreams Assembly Assembly-CSharp.dll public class PrimitiveBitStreamReader : BitStreamReader Inheritance object BitStreamReader PrimitiveBitStreamReader Inherited Members BitStreamReader.readBit(ref byte) BitStreamReader.readBits(ref byte, byte) BitStreamReader.reset() BitStreamReader.stream object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrimitiveBitStreamReader(Stream) public PrimitiveBitStreamReader(Stream newStream) Parameters newStream Stream Methods readByte(ref byte) public void readByte(ref byte data) Parameters data byte readInt16(ref short) public void readInt16(ref short data) Parameters data short readInt16(ref short, byte) public void readInt16(ref short data, byte length) Parameters data short length byte readInt32(ref int) public void readInt32(ref int data) Parameters data int readInt32(ref int, byte) public void readInt32(ref int data, byte length) Parameters data int length byte readUInt16(ref ushort) public void readUInt16(ref ushort data) Parameters data ushort readUInt16(ref ushort, byte) public void readUInt16(ref ushort data, byte length) Parameters data ushort length byte"
  },
  "api/SDG.Framework.IO.Streams.BitStreams.PrimitiveBitStreamWriter.html": {
    "href": "api/SDG.Framework.IO.Streams.BitStreams.PrimitiveBitStreamWriter.html",
    "title": "Class PrimitiveBitStreamWriter | Unturned Analyse Doc",
    "keywords": "Class PrimitiveBitStreamWriter Namespace SDG.Framework.IO.Streams.BitStreams Assembly Assembly-CSharp.dll public class PrimitiveBitStreamWriter : BitStreamWriter Inheritance object BitStreamWriter PrimitiveBitStreamWriter Inherited Members BitStreamWriter.writeBit(byte) BitStreamWriter.writeBits(byte, byte) BitStreamWriter.flush() BitStreamWriter.reset() BitStreamWriter.stream object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PrimitiveBitStreamWriter(Stream) public PrimitiveBitStreamWriter(Stream newStream) Parameters newStream Stream Methods writeByte(byte) public void writeByte(byte data) Parameters data byte writeInt16(short) public void writeInt16(short data) Parameters data short writeInt16(short, byte) public void writeInt16(short data, byte length) Parameters data short length byte writeInt32(int) public void writeInt32(int data) Parameters data int writeInt32(int, byte) public void writeInt32(int data, byte length) Parameters data int length byte writeUInt16(ushort) public void writeUInt16(ushort data) Parameters data ushort writeUInt16(ushort, byte) public void writeUInt16(ushort data, byte length) Parameters data ushort length byte"
  },
  "api/SDG.Framework.IO.Streams.BitStreams.html": {
    "href": "api/SDG.Framework.IO.Streams.BitStreams.html",
    "title": "Namespace SDG.Framework.IO.Streams.BitStreams | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.Streams.BitStreams Classes BitStreamReader BitStreamWriter PrimitiveBitStreamReader PrimitiveBitStreamWriter"
  },
  "api/SDG.Framework.IO.Streams.INetworkStreamable.html": {
    "href": "api/SDG.Framework.IO.Streams.INetworkStreamable.html",
    "title": "Interface INetworkStreamable | Unturned Analyse Doc",
    "keywords": "Interface INetworkStreamable Namespace SDG.Framework.IO.Streams Assembly Assembly-CSharp.dll public interface INetworkStreamable Methods readFromStream(NetworkStream) void readFromStream(NetworkStream networkStream) Parameters networkStream NetworkStream writeToStream(NetworkStream) void writeToStream(NetworkStream networkStream) Parameters networkStream NetworkStream"
  },
  "api/SDG.Framework.IO.Streams.NetworkStream.html": {
    "href": "api/SDG.Framework.IO.Streams.NetworkStream.html",
    "title": "Class NetworkStream | Unturned Analyse Doc",
    "keywords": "Class NetworkStream Namespace SDG.Framework.IO.Streams Assembly Assembly-CSharp.dll public class NetworkStream Inheritance object NetworkStream Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NetworkStream(Stream) public NetworkStream(Stream newStream) Parameters newStream Stream Methods readByte() public byte readByte() Returns byte readBytes(byte[], ulong, ulong) public void readBytes(byte[] data, ulong offset, ulong length) Parameters data byte[] offset ulong length ulong readChar() public char readChar() Returns char readInt16() public short readInt16() Returns short readInt32() public int readInt32() Returns int readInt64() public long readInt64() Returns long readSByte() public sbyte readSByte() Returns sbyte readString() public string readString() Returns string readUInt16() public ushort readUInt16() Returns ushort readUInt32() public uint readUInt32() Returns uint readUInt64() public ulong readUInt64() Returns ulong writeByte(byte) public void writeByte(byte data) Parameters data byte writeBytes(byte[], ulong, ulong) public void writeBytes(byte[] data, ulong offset, ulong length) Parameters data byte[] offset ulong length ulong writeChar(char) public void writeChar(char data) Parameters data char writeInt16(short) public void writeInt16(short data) Parameters data short writeInt32(int) public void writeInt32(int data) Parameters data int writeInt64(long) public void writeInt64(long data) Parameters data long writeSByte(sbyte) public void writeSByte(sbyte data) Parameters data sbyte writeString(string) public void writeString(string data) Parameters data string writeUInt16(ushort) public void writeUInt16(ushort data) Parameters data ushort writeUInt32(uint) public void writeUInt32(uint data) Parameters data uint writeUInt64(ulong) public void writeUInt64(ulong data) Parameters data ulong"
  },
  "api/SDG.Framework.IO.Streams.html": {
    "href": "api/SDG.Framework.IO.Streams.html",
    "title": "Namespace SDG.Framework.IO.Streams | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO.Streams Classes NetworkStream Interfaces INetworkStreamable"
  },
  "api/SDG.Framework.IO.html": {
    "href": "api/SDG.Framework.IO.html",
    "title": "Namespace SDG.Framework.IO | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.IO Classes IONexus IOUtility"
  },
  "api/SDG.Framework.Landscapes.HeightmapBounds.html": {
    "href": "api/SDG.Framework.Landscapes.HeightmapBounds.html",
    "title": "Struct HeightmapBounds | Unturned Analyse Doc",
    "keywords": "Struct HeightmapBounds Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public struct HeightmapBounds Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors HeightmapBounds(HeightmapCoord, HeightmapCoord) public HeightmapBounds(HeightmapCoord newMin, HeightmapCoord newMax) Parameters newMin HeightmapCoord newMax HeightmapCoord HeightmapBounds(LandscapeCoord, Bounds) public HeightmapBounds(LandscapeCoord tileCoord, Bounds worldBounds) Parameters tileCoord LandscapeCoord worldBounds Bounds Fields max public HeightmapCoord max Field Value HeightmapCoord min public HeightmapCoord min Field Value HeightmapCoord Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Framework.Landscapes.HeightmapCoord.html": {
    "href": "api/SDG.Framework.Landscapes.HeightmapCoord.html",
    "title": "Struct HeightmapCoord | Unturned Analyse Doc",
    "keywords": "Struct HeightmapCoord Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public struct HeightmapCoord : IEquatable<HeightmapCoord> Implements IEquatable<HeightmapCoord> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors HeightmapCoord(LandscapeCoord, Vector3) public HeightmapCoord(LandscapeCoord tileCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord worldPosition Vector3 HeightmapCoord(int, int) public HeightmapCoord(int new_x, int new_y) Parameters new_x int new_y int Fields x public int x Field Value int y public int y Field Value int Methods Equals(HeightmapCoord) public bool Equals(HeightmapCoord other) Parameters other HeightmapCoord Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HeightmapCoord, HeightmapCoord) public static bool operator ==(HeightmapCoord a, HeightmapCoord b) Parameters a HeightmapCoord b HeightmapCoord Returns bool operator !=(HeightmapCoord, HeightmapCoord) public static bool operator !=(HeightmapCoord a, HeightmapCoord b) Parameters a HeightmapCoord b HeightmapCoord Returns bool"
  },
  "api/SDG.Framework.Landscapes.ILandscaleHoleVolumeInteractionHandler.html": {
    "href": "api/SDG.Framework.Landscapes.ILandscaleHoleVolumeInteractionHandler.html",
    "title": "Interface ILandscaleHoleVolumeInteractionHandler | Unturned Analyse Doc",
    "keywords": "Interface ILandscaleHoleVolumeInteractionHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll [Obsolete] public interface ILandscaleHoleVolumeInteractionHandler Properties landscapeHoleAutoIgnoreTerrainCollision bool landscapeHoleAutoIgnoreTerrainCollision { get; } Property Value bool Methods landscapeHoleBeginCollision(LandscapeHoleVolume, List<TerrainCollider>) void landscapeHoleBeginCollision(LandscapeHoleVolume volume, List<TerrainCollider> terrainColliders) Parameters volume LandscapeHoleVolume terrainColliders List<TerrainCollider> landscapeHoleEndCollision(LandscapeHoleVolume, List<TerrainCollider>) void landscapeHoleEndCollision(LandscapeHoleVolume volume, List<TerrainCollider> terrainColliders) Parameters volume LandscapeHoleVolume terrainColliders List<TerrainCollider>"
  },
  "api/SDG.Framework.Landscapes.Landscape.LandscapeGetHeightmapVerticesHandler.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.LandscapeGetHeightmapVerticesHandler.html",
    "title": "Delegate Landscape.LandscapeGetHeightmapVerticesHandler | Unturned Analyse Doc",
    "keywords": "Delegate Landscape.LandscapeGetHeightmapVerticesHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate void Landscape.LandscapeGetHeightmapVerticesHandler(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 Constructors LandscapeGetHeightmapVerticesHandler(object, IntPtr) public LandscapeGetHeightmapVerticesHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LandscapeCoord, HeightmapCoord, Vector3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, AsyncCallback callback, object @object) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(LandscapeCoord, HeightmapCoord, Vector3) public virtual void Invoke(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3"
  },
  "api/SDG.Framework.Landscapes.Landscape.LandscapeGetSplatmapVerticesHandler.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.LandscapeGetSplatmapVerticesHandler.html",
    "title": "Delegate Landscape.LandscapeGetSplatmapVerticesHandler | Unturned Analyse Doc",
    "keywords": "Delegate Landscape.LandscapeGetSplatmapVerticesHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate void Landscape.LandscapeGetSplatmapVerticesHandler(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 Constructors LandscapeGetSplatmapVerticesHandler(object, IntPtr) public LandscapeGetSplatmapVerticesHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LandscapeCoord, SplatmapCoord, Vector3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, AsyncCallback callback, object @object) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(LandscapeCoord, SplatmapCoord, Vector3) public virtual void Invoke(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3"
  },
  "api/SDG.Framework.Landscapes.Landscape.LandscapeReadHeightmapHandler.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.LandscapeReadHeightmapHandler.html",
    "title": "Delegate Landscape.LandscapeReadHeightmapHandler | Unturned Analyse Doc",
    "keywords": "Delegate Landscape.LandscapeReadHeightmapHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate void Landscape.LandscapeReadHeightmapHandler(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float Constructors LandscapeReadHeightmapHandler(object, IntPtr) public LandscapeReadHeightmapHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LandscapeCoord, HeightmapCoord, Vector3, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight, AsyncCallback callback, object @object) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(LandscapeCoord, HeightmapCoord, Vector3, float) public virtual void Invoke(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float"
  },
  "api/SDG.Framework.Landscapes.Landscape.LandscapeReadSplatmapHandler.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.LandscapeReadSplatmapHandler.html",
    "title": "Delegate Landscape.LandscapeReadSplatmapHandler | Unturned Analyse Doc",
    "keywords": "Delegate Landscape.LandscapeReadSplatmapHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate void Landscape.LandscapeReadSplatmapHandler(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] Constructors LandscapeReadSplatmapHandler(object, IntPtr) public LandscapeReadSplatmapHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LandscapeCoord, SplatmapCoord, Vector3, float[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights, AsyncCallback callback, object @object) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(LandscapeCoord, SplatmapCoord, Vector3, float[]) public virtual void Invoke(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[]"
  },
  "api/SDG.Framework.Landscapes.Landscape.LandscapeWriteHeightmapHandler.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.LandscapeWriteHeightmapHandler.html",
    "title": "Delegate Landscape.LandscapeWriteHeightmapHandler | Unturned Analyse Doc",
    "keywords": "Delegate Landscape.LandscapeWriteHeightmapHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate float Landscape.LandscapeWriteHeightmapHandler(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float Returns float Constructors LandscapeWriteHeightmapHandler(object, IntPtr) public LandscapeWriteHeightmapHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LandscapeCoord, HeightmapCoord, Vector3, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight, AsyncCallback callback, object @object) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual float EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns float Invoke(LandscapeCoord, HeightmapCoord, Vector3, float) public virtual float Invoke(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float Returns float"
  },
  "api/SDG.Framework.Landscapes.Landscape.LandscapeWriteHolesHandler.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.LandscapeWriteHolesHandler.html",
    "title": "Delegate Landscape.LandscapeWriteHolesHandler | Unturned Analyse Doc",
    "keywords": "Delegate Landscape.LandscapeWriteHolesHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate bool Landscape.LandscapeWriteHolesHandler(Vector3 worldPosition, bool currentlyVisible) Parameters worldPosition Vector3 currentlyVisible bool Returns bool Constructors LandscapeWriteHolesHandler(object, IntPtr) public LandscapeWriteHolesHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Vector3, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Vector3 worldPosition, bool currentlyVisible, AsyncCallback callback, object @object) Parameters worldPosition Vector3 currentlyVisible bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual bool EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns bool Invoke(Vector3, bool) public virtual bool Invoke(Vector3 worldPosition, bool currentlyVisible) Parameters worldPosition Vector3 currentlyVisible bool Returns bool"
  },
  "api/SDG.Framework.Landscapes.Landscape.LandscapeWriteSplatmapHandler.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.LandscapeWriteSplatmapHandler.html",
    "title": "Delegate Landscape.LandscapeWriteSplatmapHandler | Unturned Analyse Doc",
    "keywords": "Delegate Landscape.LandscapeWriteSplatmapHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate void Landscape.LandscapeWriteSplatmapHandler(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] Constructors LandscapeWriteSplatmapHandler(object, IntPtr) public LandscapeWriteSplatmapHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LandscapeCoord, SplatmapCoord, Vector3, float[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights, AsyncCallback callback, object @object) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(LandscapeCoord, SplatmapCoord, Vector3, float[]) public virtual void Invoke(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[]"
  },
  "api/SDG.Framework.Landscapes.Landscape.html": {
    "href": "api/SDG.Framework.Landscapes.Landscape.html",
    "title": "Class Landscape | Unturned Analyse Doc",
    "keywords": "Class Landscape Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class Landscape : DevkitHierarchyItemBase, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitHierarchyItemBase Landscape Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable Inherited Members DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors Landscape() public Landscape() Fields BASEMAP_RESOLUTION public static readonly int BASEMAP_RESOLUTION Field Value int HALF_DIAGONAL_SPLATMAP_WORLD_UNIT public const float HALF_DIAGONAL_SPLATMAP_WORLD_UNIT = 2.828427 Field Value float HALF_HEIGHTMAP_WORLD_UNIT public static readonly float HALF_HEIGHTMAP_WORLD_UNIT Field Value float HALF_SPLATMAP_WORLD_UNIT public static readonly float HALF_SPLATMAP_WORLD_UNIT Field Value float HEIGHTMAP_RESOLUTION public static readonly int HEIGHTMAP_RESOLUTION Field Value int HEIGHTMAP_RESOLUTION_MINUS_ONE public static readonly int HEIGHTMAP_RESOLUTION_MINUS_ONE Field Value int HEIGHTMAP_WORLD_UNIT public static readonly float HEIGHTMAP_WORLD_UNIT Field Value float HOLES_RESOLUTION public const int HOLES_RESOLUTION = 256 Field Value int SPLATMAP_CHANNELS public static readonly int SPLATMAP_CHANNELS Field Value int SPLATMAP_COUNT public static readonly int SPLATMAP_COUNT Field Value int SPLATMAP_LAYERS public static readonly int SPLATMAP_LAYERS Field Value int SPLATMAP_LAYER_BUFFER protected static readonly float[] SPLATMAP_LAYER_BUFFER Field Value float[] SPLATMAP_RESOLUTION public static readonly int SPLATMAP_RESOLUTION Field Value int SPLATMAP_RESOLUTION_MINUS_ONE public static readonly int SPLATMAP_RESOLUTION_MINUS_ONE Field Value int SPLATMAP_WORLD_UNIT public static readonly float SPLATMAP_WORLD_UNIT Field Value float TILE_HEIGHT public static readonly float TILE_HEIGHT Field Value float TILE_HEIGHT_INT public static readonly int TILE_HEIGHT_INT Field Value int TILE_SIZE public static readonly float TILE_SIZE Field Value float TILE_SIZE_INT public static readonly int TILE_SIZE_INT Field Value int heightmapTransactions protected static Dictionary<LandscapeCoord, LandscapeHeightmapTransaction> heightmapTransactions Field Value Dictionary<LandscapeCoord, LandscapeHeightmapTransaction> holeTransactions protected static Dictionary<LandscapeCoord, LandscapeHoleTransaction> holeTransactions Field Value Dictionary<LandscapeCoord, LandscapeHoleTransaction> splatmapTransactions protected static Dictionary<LandscapeCoord, LandscapeSplatmapTransaction> splatmapTransactions Field Value Dictionary<LandscapeCoord, LandscapeSplatmapTransaction> tiles protected static Dictionary<LandscapeCoord, LandscapeTile> tiles Field Value Dictionary<LandscapeCoord, LandscapeTile> Properties DisableHoleColliders Hacky workaround for height and material brushes in editor. As far as I can tell in Unity 2019 LTS there is no method to ignore holes when raycasting against terrain (e.g. when painting holes), so we use a duplicate TerrainData without holes in the editor. public static bool DisableHoleColliders { get; set; } Property Value bool HighlightHoles public static bool HighlightHoles { get; set; } Property Value bool instance public static Landscape instance { get; protected set; } Property Value Landscape Methods Awake() protected void Awake() CopyLayersToAllTiles(LandscapeTile) public static void CopyLayersToAllTiles(LandscapeTile source) Parameters source LandscapeTile GetUniqueMaterials(List<LandscapeMaterialAsset>) public static void GetUniqueMaterials(List<LandscapeMaterialAsset> materials) Parameters materials List<LandscapeMaterialAsset> IsPointInsideHole(Vector3) Is point (on XZ plane) inside a masked-out pixel? public static bool IsPointInsideHole(Vector3 worldPosition) Parameters worldPosition Vector3 Returns bool OnDestroy() protected void OnDestroy() OnDisable() protected void OnDisable() OnEnable() protected void OnEnable() Start() protected void Start() SyncHoles() public static void SyncHoles() addTile(LandscapeCoord) public static LandscapeTile addTile(LandscapeCoord coord) Parameters coord LandscapeCoord Returns LandscapeTile applyLOD() public static void applyLOD() clearHeightmapTransactions() public static void clearHeightmapTransactions() clearHoleTransactions() public static void clearHoleTransactions() clearSplatmapTransactions() public static void clearSplatmapTransactions() clearTiles() protected static void clearTiles() convertLegacyTerrain(InspectableList<AssetReference<LandscapeMaterialAsset>>) public void convertLegacyTerrain(InspectableList<AssetReference<LandscapeMaterialAsset>> materials) Parameters materials InspectableList<AssetReference<LandscapeMaterialAsset>> getHeight01(LandscapeCoord, HeightmapCoord, out float) public static bool getHeight01(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, out float height) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord height float Returns bool getHeight01(Vector3, out float) public static bool getHeight01(Vector3 position, out float height) Parameters position Vector3 height float Returns bool getHeightmapVertices(Bounds, LandscapeGetHeightmapVerticesHandler) Appends heightmap vertices to points list. public static void getHeightmapVertices(Bounds worldBounds, Landscape.LandscapeGetHeightmapVerticesHandler callback) Parameters worldBounds Bounds callback Landscape.LandscapeGetHeightmapVerticesHandler getNormal(Vector3, out Vector3) public static bool getNormal(Vector3 position, out Vector3 normal) Parameters position Vector3 normal Vector3 Returns bool getOrAddTile(LandscapeCoord) public static LandscapeTile getOrAddTile(LandscapeCoord coord) Parameters coord LandscapeCoord Returns LandscapeTile getOrAddTile(Vector3) public static LandscapeTile getOrAddTile(Vector3 worldPosition) Parameters worldPosition Vector3 Returns LandscapeTile getSplatmapHighestWeightLayerIndex(SplatmapCoord, float[,,], int) public static int getSplatmapHighestWeightLayerIndex(SplatmapCoord splatmapCoord, float[,,] currentWeights, int ignoreLayer = -1) Parameters splatmapCoord SplatmapCoord currentWeights float[,,] ignoreLayer int If the highest weight layer is ignoreLayer then the next highest will be returned. Returns int getSplatmapHighestWeightLayerIndex(float[], int) public static int getSplatmapHighestWeightLayerIndex(float[] currentWeights, int ignoreLayer = -1) Parameters currentWeights float[] ignoreLayer int If the highest weight layer is ignoreLayer then the next highest will be returned. Returns int getSplatmapLayer(LandscapeCoord, SplatmapCoord, out int) public static bool getSplatmapLayer(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, out int layer) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord layer int Returns bool getSplatmapLayer(Vector3, out int) public static bool getSplatmapLayer(Vector3 position, out int layer) Parameters position Vector3 layer int Returns bool getSplatmapMaterial(LandscapeCoord, SplatmapCoord, out AssetReference<LandscapeMaterialAsset>) public static bool getSplatmapMaterial(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, out AssetReference<LandscapeMaterialAsset> materialAsset) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord materialAsset AssetReference<LandscapeMaterialAsset> Returns bool getSplatmapMaterial(Vector3, out AssetReference<LandscapeMaterialAsset>) public static bool getSplatmapMaterial(Vector3 position, out AssetReference<LandscapeMaterialAsset> materialAsset) Parameters position Vector3 materialAsset AssetReference<LandscapeMaterialAsset> Returns bool getSplatmapVertices(Bounds, LandscapeGetSplatmapVerticesHandler) Appends heightmap vertices to points list. public static void getSplatmapVertices(Bounds worldBounds, Landscape.LandscapeGetSplatmapVerticesHandler callback) Parameters worldBounds Bounds callback Landscape.LandscapeGetSplatmapVerticesHandler getTile(LandscapeCoord) public static LandscapeTile getTile(LandscapeCoord coord) Parameters coord LandscapeCoord Returns LandscapeTile getTile(Vector3) public static LandscapeTile getTile(Vector3 worldPosition) Parameters worldPosition Vector3 Returns LandscapeTile getWorldHeight(LandscapeCoord, HeightmapCoord, out float) public static bool getWorldHeight(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, out float height) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord height float Returns bool getWorldHeight(Vector3, out float) public static bool getWorldHeight(Vector3 position, out float height) Parameters position Vector3 height float Returns bool getWorldPosition(LandscapeCoord, HeightmapCoord, float) public static Vector3 getWorldPosition(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, float height) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord height float Returns Vector3 getWorldPosition(LandscapeCoord, SplatmapCoord) public static Vector3 getWorldPosition(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord Returns Vector3 handleGraphicsSettingsApplied() protected void handleGraphicsSettingsApplied() handlePlanarReflectionPostRender() protected void handlePlanarReflectionPostRender() handlePlanarReflectionPreRender() protected void handlePlanarReflectionPreRender() isPointerInTile(Vector3) public static bool isPointerInTile(Vector3 worldPosition) Parameters worldPosition Vector3 Returns bool linkNeighbors() Call this after you're done adding new tiles. public static void linkNeighbors() onSatellitePostCapture() Finished capturing ortho view of map, so we restore the terrain to preferred quality. protected void onSatellitePostCapture() onSatellitePreCapture() Capturing ortho view of map, so we raise the terrain to max quality. protected void onSatellitePreCapture() read(IFormattedFileReader) public override void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader readHeightmap(Bounds, LandscapeReadHeightmapHandler) public static void readHeightmap(Bounds worldBounds, Landscape.LandscapeReadHeightmapHandler callback) Parameters worldBounds Bounds callback Landscape.LandscapeReadHeightmapHandler readSplatmap(Bounds, LandscapeReadSplatmapHandler) public static void readSplatmap(Bounds worldBounds, Landscape.LandscapeReadSplatmapHandler callback) Parameters worldBounds Bounds callback Landscape.LandscapeReadSplatmapHandler reconcileNeighbors(LandscapeTile) Call this to sync a new tile up with nearby tiles. public static void reconcileNeighbors(LandscapeTile tile) Parameters tile LandscapeTile removeTile(LandscapeCoord) public static bool removeTile(LandscapeCoord coord) Parameters coord LandscapeCoord Returns bool triggerLandscapeLoaded() protected void triggerLandscapeLoaded() write(IFormattedFileWriter) public override void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter writeHeightmap(Bounds, LandscapeWriteHeightmapHandler) public static void writeHeightmap(Bounds worldBounds, Landscape.LandscapeWriteHeightmapHandler callback) Parameters worldBounds Bounds callback Landscape.LandscapeWriteHeightmapHandler writeHoles(Bounds, LandscapeWriteHolesHandler) public static void writeHoles(Bounds worldBounds, Landscape.LandscapeWriteHolesHandler callback) Parameters worldBounds Bounds callback Landscape.LandscapeWriteHolesHandler writeSplatmap(Bounds, LandscapeWriteSplatmapHandler) public static void writeSplatmap(Bounds worldBounds, Landscape.LandscapeWriteSplatmapHandler callback) Parameters worldBounds Bounds callback Landscape.LandscapeWriteSplatmapHandler Events loaded public static event LandscapeLoadedHandler loaded Event Type LandscapeLoadedHandler"
  },
  "api/SDG.Framework.Landscapes.LandscapeBounds.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeBounds.html",
    "title": "Struct LandscapeBounds | Unturned Analyse Doc",
    "keywords": "Struct LandscapeBounds Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public struct LandscapeBounds Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors LandscapeBounds(LandscapeCoord, LandscapeCoord) public LandscapeBounds(LandscapeCoord newMin, LandscapeCoord newMax) Parameters newMin LandscapeCoord newMax LandscapeCoord LandscapeBounds(Bounds) public LandscapeBounds(Bounds worldBounds) Parameters worldBounds Bounds Fields max public LandscapeCoord max Field Value LandscapeCoord min public LandscapeCoord min Field Value LandscapeCoord Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Framework.Landscapes.LandscapeCoord.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeCoord.html",
    "title": "Struct LandscapeCoord | Unturned Analyse Doc",
    "keywords": "Struct LandscapeCoord Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public struct LandscapeCoord : IFormattedFileReadable, IFormattedFileWritable, IEquatable<LandscapeCoord> Implements IFormattedFileReadable IFormattedFileWritable IEquatable<LandscapeCoord> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors LandscapeCoord(int, int) public LandscapeCoord(int new_x, int new_y) Parameters new_x int new_y int LandscapeCoord(Vector3) public LandscapeCoord(Vector3 position) Parameters position Vector3 Fields ZERO public static LandscapeCoord ZERO Field Value LandscapeCoord x public int x Field Value int y public int y Field Value int Methods Equals(LandscapeCoord) public bool Equals(LandscapeCoord other) Parameters other LandscapeCoord Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Operators operator ==(LandscapeCoord, LandscapeCoord) public static bool operator ==(LandscapeCoord a, LandscapeCoord b) Parameters a LandscapeCoord b LandscapeCoord Returns bool operator !=(LandscapeCoord, LandscapeCoord) public static bool operator !=(LandscapeCoord a, LandscapeCoord b) Parameters a LandscapeCoord b LandscapeCoord Returns bool"
  },
  "api/SDG.Framework.Landscapes.LandscapeHeightmapCopyPool.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeHeightmapCopyPool.html",
    "title": "Class LandscapeHeightmapCopyPool | Unturned Analyse Doc",
    "keywords": "Class LandscapeHeightmapCopyPool Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public static class LandscapeHeightmapCopyPool Inheritance object LandscapeHeightmapCopyPool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods claim() public static float[,] claim() Returns float[,] empty() public static void empty() release(float[,]) public static void release(float[,] copy) Parameters copy float[,] warmup(uint) public static void warmup(uint count) Parameters count uint"
  },
  "api/SDG.Framework.Landscapes.LandscapeHeightmapTransaction.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeHeightmapTransaction.html",
    "title": "Class LandscapeHeightmapTransaction | Unturned Analyse Doc",
    "keywords": "Class LandscapeHeightmapTransaction Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeHeightmapTransaction : IDevkitTransaction Inheritance object LandscapeHeightmapTransaction Implements IDevkitTransaction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeHeightmapTransaction(LandscapeTile) public LandscapeHeightmapTransaction(LandscapeTile newTile) Parameters newTile LandscapeTile Fields heightmapCopy protected float[,] heightmapCopy Field Value float[,] tile protected LandscapeTile tile Field Value LandscapeTile Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. public bool delta { get; } Property Value bool Methods begin() public void begin() end() public void end() forget() Called when history buffer is too long so this transaction is discarded. public void forget() redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Landscapes.LandscapeHoleCopyPool.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeHoleCopyPool.html",
    "title": "Class LandscapeHoleCopyPool | Unturned Analyse Doc",
    "keywords": "Class LandscapeHoleCopyPool Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public static class LandscapeHoleCopyPool Inheritance object LandscapeHoleCopyPool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods claim() public static bool[,] claim() Returns bool[,] empty() public static void empty() release(bool[,]) public static void release(bool[,] copy) Parameters copy bool[,] warmup(uint) public static void warmup(uint count) Parameters count uint"
  },
  "api/SDG.Framework.Landscapes.LandscapeHoleTransaction.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeHoleTransaction.html",
    "title": "Class LandscapeHoleTransaction | Unturned Analyse Doc",
    "keywords": "Class LandscapeHoleTransaction Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeHoleTransaction : IDevkitTransaction Inheritance object LandscapeHoleTransaction Implements IDevkitTransaction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeHoleTransaction(LandscapeTile) public LandscapeHoleTransaction(LandscapeTile newTile) Parameters newTile LandscapeTile Fields holesCopy protected bool[,] holesCopy Field Value bool[,] tile protected LandscapeTile tile Field Value LandscapeTile Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. public bool delta { get; } Property Value bool Methods begin() public void begin() end() public void end() forget() Called when history buffer is too long so this transaction is discarded. public void forget() redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Landscapes.LandscapeHoleUtility.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeHoleUtility.html",
    "title": "Class LandscapeHoleUtility | Unturned Analyse Doc",
    "keywords": "Class LandscapeHoleUtility Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeHoleUtility Inheritance object LandscapeHoleUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeHoleUtility() public LandscapeHoleUtility() Methods doesRayIntersectHoleVolume(LandscapeHoleVolume, Ray, out RaycastHit, float) [Obsolete] public static bool doesRayIntersectHoleVolume(LandscapeHoleVolume volume, Ray ray, out RaycastHit hit, float maxDistance) Parameters volume LandscapeHoleVolume ray Ray hit RaycastHit maxDistance float Returns bool doesRayIntersectHoleVolume(Ray, out RaycastHit, out LandscapeHoleVolume, float) [Obsolete] public static bool doesRayIntersectHoleVolume(Ray ray, out RaycastHit hit, out LandscapeHoleVolume volume, float maxDistance) Parameters ray Ray hit RaycastHit volume LandscapeHoleVolume maxDistance float Returns bool isPointInsideHoleVolume(LandscapeHoleVolume, Vector3) [Obsolete] public static bool isPointInsideHoleVolume(LandscapeHoleVolume volume, Vector3 point) Parameters volume LandscapeHoleVolume point Vector3 Returns bool isPointInsideHoleVolume(Vector3) [Obsolete(\"New code should probably be using Landscape.IsPointInsideHole\")] public static bool isPointInsideHoleVolume(Vector3 point) Parameters point Vector3 Returns bool isPointInsideHoleVolume(Vector3, out LandscapeHoleVolume) [Obsolete(\"New code should probably be using Landscape.IsPointInsideHole\")] public static bool isPointInsideHoleVolume(Vector3 point, out LandscapeHoleVolume volume) Parameters point Vector3 volume LandscapeHoleVolume Returns bool raycastIgnoreLandscapeIfNecessary(Ray, float, ref int) [Obsolete(\"Hole collision is handled by Unity now\")] public static void raycastIgnoreLandscapeIfNecessary(Ray ray, float maxDistance, ref int layerMask) Parameters ray Ray maxDistance float layerMask int shouldRaycastIgnoreLandscape(Ray, float) [Obsolete(\"Hole collision is handled by Unity now\")] public static bool shouldRaycastIgnoreLandscape(Ray ray, float maxDistance) Parameters ray Ray maxDistance float Returns bool shouldSpherecastIgnoreLandscape(Ray, float, float) [Obsolete(\"Hole collision is handled by Unity now\")] public static bool shouldSpherecastIgnoreLandscape(Ray ray, float radius, float maxDistance) Parameters ray Ray radius float maxDistance float Returns bool spherecastIgnoreLandscapeIfNecessary(Ray, float, float, ref int) [Obsolete(\"Hole collision is handled by Unity now\")] public static void spherecastIgnoreLandscapeIfNecessary(Ray ray, float radius, float maxDistance, ref int layerMask) Parameters ray Ray radius float maxDistance float layerMask int"
  },
  "api/SDG.Framework.Landscapes.LandscapeHoleVolume.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeHoleVolume.html",
    "title": "Class LandscapeHoleVolume | Unturned Analyse Doc",
    "keywords": "Class LandscapeHoleVolume Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeHoleVolume : LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager> LandscapeHoleVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.falloffDistance LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.editorGameObject LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.editorMeshFilter LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.editorMeshRenderer LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.forceShouldAddCollider LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.supportsBoxShape LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.supportsSphereShape LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.supportsFalloff LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.CreateMenu() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.beginSelection(InteractionData) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.endSelection(InteractionData) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetBoxSize() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetBoxExtents() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetInnerBoxSize() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetInnerBoxExtents() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetLocalInnerBoxSize() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetSphereRadius() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetLocalSphereRadius() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.SetSphereRadius(float) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.CalculateWorldBounds() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.CalculateLocalBounds() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.OnEnable() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.OnDisable() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.Awake() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.Start() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.OnDestroy() LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<LandscapeHoleVolume, LandscapeHoleVolumeManager>.Shape VolumeBase.CreateMenu() DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.readHierarchyItem(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors LandscapeHoleVolume() public LandscapeHoleVolume() Methods Awake() protected override void Awake()"
  },
  "api/SDG.Framework.Landscapes.LandscapeHoleVolumeManager.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeHoleVolumeManager.html",
    "title": "Class LandscapeHoleVolumeManager | Unturned Analyse Doc",
    "keywords": "Class LandscapeHoleVolumeManager Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeHoleVolumeManager : VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager> Inheritance object VolumeManagerBase VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager> LandscapeHoleVolumeManager Inherited Members VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.allowInstantiation VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.supportsFalloff VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.allVolumes VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.Get() VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetAllVolumes() VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetRandomVolumeOrNull() VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.EnumerateAllVolumes() VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.Raycast(Ray, out RaycastHit, out LandscapeHoleVolume, float) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.AddVolume(LandscapeHoleVolume) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.RemoveVolume(LandscapeHoleVolume) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.SetDebugColor(Color) VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.Visibility VolumeManager<LandscapeHoleVolume, LandscapeHoleVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeHoleVolumeManager() public LandscapeHoleVolumeManager() Methods ApplyToTerrain() Called by loading after landscapes (and legacy conversion) have been loaded. public void ApplyToTerrain()"
  },
  "api/SDG.Framework.Landscapes.LandscapeLoadedHandler.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeLoadedHandler.html",
    "title": "Delegate LandscapeLoadedHandler | Unturned Analyse Doc",
    "keywords": "Delegate LandscapeLoadedHandler Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public delegate void LandscapeLoadedHandler() Constructors LandscapeLoadedHandler(object, IntPtr) public LandscapeLoadedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Landscapes.LandscapePreviewSample.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapePreviewSample.html",
    "title": "Struct LandscapePreviewSample | Unturned Analyse Doc",
    "keywords": "Struct LandscapePreviewSample Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public struct LandscapePreviewSample Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors LandscapePreviewSample(Vector3, float) public LandscapePreviewSample(Vector3 newPosition, float newWeight) Parameters newPosition Vector3 newWeight float Fields position public Vector3 position Field Value Vector3 weight public float weight Field Value float"
  },
  "api/SDG.Framework.Landscapes.LandscapeSplatmapCopyPool.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeSplatmapCopyPool.html",
    "title": "Class LandscapeSplatmapCopyPool | Unturned Analyse Doc",
    "keywords": "Class LandscapeSplatmapCopyPool Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public static class LandscapeSplatmapCopyPool Inheritance object LandscapeSplatmapCopyPool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods claim() public static float[,,] claim() Returns float[,,] empty() public static void empty() release(float[,,]) public static void release(float[,,] copy) Parameters copy float[,,] warmup(uint) public static void warmup(uint count) Parameters count uint"
  },
  "api/SDG.Framework.Landscapes.LandscapeSplatmapTransaction.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeSplatmapTransaction.html",
    "title": "Class LandscapeSplatmapTransaction | Unturned Analyse Doc",
    "keywords": "Class LandscapeSplatmapTransaction Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeSplatmapTransaction : IDevkitTransaction Inheritance object LandscapeSplatmapTransaction Implements IDevkitTransaction Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeSplatmapTransaction(LandscapeTile) public LandscapeSplatmapTransaction(LandscapeTile newTile) Parameters newTile LandscapeTile Fields splatmapCopy protected float[,,] splatmapCopy Field Value float[,,] tile protected LandscapeTile tile Field Value LandscapeTile Properties delta If false this transaction is ignored. If there were no changes at all in the group it's discarded. public bool delta { get; } Property Value bool Methods begin() public void begin() end() public void end() forget() Called when history buffer is too long so this transaction is discarded. public void forget() redo() public void redo() undo() public void undo()"
  },
  "api/SDG.Framework.Landscapes.LandscapeTile.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeTile.html",
    "title": "Class LandscapeTile | Unturned Analyse Doc",
    "keywords": "Class LandscapeTile Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeTile : IFormattedFileReadable, IFormattedFileWritable, IFoliageSurface Inheritance object LandscapeTile Implements IFormattedFileReadable IFormattedFileWritable IFoliageSurface Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeTile(LandscapeCoord) public LandscapeTile(LandscapeCoord newCoord) Parameters newCoord LandscapeCoord Fields _coord protected LandscapeCoord _coord Field Value LandscapeCoord dataWithoutHoles Heightmap-only data used in level editor. Refer to Landscape.DisableHoleColliders for explanation. public TerrainData dataWithoutHoles Field Value TerrainData hasAnyHolesData Marked true when level editor or legacy hole volumes modify hole data. Defaults to false in which case holes do not need to be saved. Initially this was not going to be marked by hole volumes because they can re-generate the holes, but saving hole volume cuts is helpful when upgrading to remove hole volumes from a map. public bool hasAnyHolesData Field Value bool heightmap public float[,] heightmap Field Value float[,] holes True is solid and false is empty. public bool[,] holes Field Value bool[,] splatmap public float[,,] splatmap Field Value float[,,] Properties IsValidFoliageSurface public bool IsValidFoliageSurface { get; } Property Value bool True if other IFoliageSurface methods can be called. collider public TerrainCollider collider { get; protected set; } Property Value TerrainCollider coord public LandscapeCoord coord { get; protected set; } Property Value LandscapeCoord data public TerrainData data { get; protected set; } Property Value TerrainData gameObject public GameObject gameObject { get; protected set; } Property Value GameObject localBounds public Bounds localBounds { get; } Property Value Bounds materials public InspectableList<AssetReference<LandscapeMaterialAsset>> materials { get; protected set; } Property Value InspectableList<AssetReference<LandscapeMaterialAsset>> terrain public Terrain terrain { get; protected set; } Property Value Terrain worldBounds public Bounds worldBounds { get; } Property Value Bounds Methods SetHeightsDelayLOD() public void SetHeightsDelayLOD() SyncHeightmap() public void SyncHeightmap() applyGraphicsSettings() public void applyGraphicsSettings() bakeFoliageSurface(FoliageBakeSettings, FoliageTile) public void bakeFoliageSurface(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile convertLegacyHeightmap() public void convertLegacyHeightmap() convertLegacySplatmap() public void convertLegacySplatmap() disable() public virtual void disable() enable() public virtual void enable() getFoliageSurfaceBounds() public FoliageBounds getFoliageSurfaceBounds() Returns FoliageBounds getFoliageSurfaceInfo(Vector3, out Vector3, out Vector3) public bool getFoliageSurfaceInfo(Vector3 position, out Vector3 surfacePosition, out Vector3 surfaceNormal) Parameters position Vector3 surfacePosition Vector3 surfaceNormal Vector3 Returns bool handleMaterialsInspectorChanged(IInspectableList) protected virtual void handleMaterialsInspectorChanged(IInspectableList list) Parameters list IInspectableList normalizeSplatmap() public void normalizeSplatmap() read(IFormattedFileReader) public virtual void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader readHeightmap(string, float[,]) protected virtual void readHeightmap(string suffix, float[,] heightmap) Parameters suffix string heightmap float[,] readHeightmaps() public virtual void readHeightmaps() readSplatmap(string, float[,,]) protected virtual void readSplatmap(string suffix, float[,,] splatmap) Parameters suffix string splatmap float[,,] readSplatmaps() public virtual void readSplatmaps() resetHeightmap() public void resetHeightmap() resetSplatmap() public void resetSplatmap() updatePrototypes() Call this when done changing material references to grab their textures and pass them to the terrain renderer. public void updatePrototypes() updateTransform() protected void updateTransform() write(IFormattedFileWriter) public virtual void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter writeHeightmap(string, float[,]) protected virtual void writeHeightmap(string suffix, float[,] heightmap) Parameters suffix string heightmap float[,] writeHeightmaps() public virtual void writeHeightmaps() writeSplatmap(string, float[,,]) protected virtual void writeSplatmap(string suffix, float[,,] splatmap) Parameters suffix string splatmap float[,,] writeSplatmaps() public virtual void writeSplatmaps()"
  },
  "api/SDG.Framework.Landscapes.LandscapeUtility.html": {
    "href": "api/SDG.Framework.Landscapes.LandscapeUtility.html",
    "title": "Class LandscapeUtility | Unturned Analyse Doc",
    "keywords": "Class LandscapeUtility Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public class LandscapeUtility Inheritance object LandscapeUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeUtility() public LandscapeUtility() Methods cleanHeightmapCoord(ref LandscapeCoord, ref HeightmapCoord) If a heightmap coordinate is out of bounds the tile/heightamp coordinate will be adjusted so that it is in bounds again. public static void cleanHeightmapCoord(ref LandscapeCoord tileCoord, ref HeightmapCoord heightmapCoord) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord cleanSplatmapCoord(ref LandscapeCoord, ref SplatmapCoord) If a splatmap coordinate is out of bounds the tile/splatmap coordinate will be adjusted so that it is in bounds again. public static void cleanSplatmapCoord(ref LandscapeCoord tileCoord, ref SplatmapCoord splatmapCoord) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord"
  },
  "api/SDG.Framework.Landscapes.SplatmapBounds.html": {
    "href": "api/SDG.Framework.Landscapes.SplatmapBounds.html",
    "title": "Struct SplatmapBounds | Unturned Analyse Doc",
    "keywords": "Struct SplatmapBounds Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public struct SplatmapBounds Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SplatmapBounds(LandscapeCoord, Bounds) public SplatmapBounds(LandscapeCoord tileCoord, Bounds worldBounds) Parameters tileCoord LandscapeCoord worldBounds Bounds SplatmapBounds(SplatmapCoord, SplatmapCoord) public SplatmapBounds(SplatmapCoord newMin, SplatmapCoord newMax) Parameters newMin SplatmapCoord newMax SplatmapCoord Fields max public SplatmapCoord max Field Value SplatmapCoord min public SplatmapCoord min Field Value SplatmapCoord Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Framework.Landscapes.SplatmapCoord.html": {
    "href": "api/SDG.Framework.Landscapes.SplatmapCoord.html",
    "title": "Struct SplatmapCoord | Unturned Analyse Doc",
    "keywords": "Struct SplatmapCoord Namespace SDG.Framework.Landscapes Assembly Assembly-CSharp.dll public struct SplatmapCoord : IEquatable<SplatmapCoord> Implements IEquatable<SplatmapCoord> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SplatmapCoord(LandscapeCoord, Vector3) public SplatmapCoord(LandscapeCoord tileCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord worldPosition Vector3 SplatmapCoord(int, int) public SplatmapCoord(int new_x, int new_y) Parameters new_x int new_y int Fields x public int x Field Value int y public int y Field Value int Methods Equals(SplatmapCoord) public bool Equals(SplatmapCoord other) Parameters other SplatmapCoord Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SplatmapCoord, SplatmapCoord) public static bool operator ==(SplatmapCoord a, SplatmapCoord b) Parameters a SplatmapCoord b SplatmapCoord Returns bool operator !=(SplatmapCoord, SplatmapCoord) public static bool operator !=(SplatmapCoord a, SplatmapCoord b) Parameters a SplatmapCoord b SplatmapCoord Returns bool"
  },
  "api/SDG.Framework.Landscapes.html": {
    "href": "api/SDG.Framework.Landscapes.html",
    "title": "Namespace SDG.Framework.Landscapes | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Landscapes Classes Landscape LandscapeHeightmapCopyPool LandscapeHeightmapTransaction LandscapeHoleCopyPool LandscapeHoleTransaction LandscapeHoleUtility LandscapeHoleVolume LandscapeHoleVolumeManager LandscapeSplatmapCopyPool LandscapeSplatmapTransaction LandscapeTile LandscapeUtility Structs HeightmapBounds HeightmapCoord LandscapeBounds LandscapeCoord LandscapePreviewSample SplatmapBounds SplatmapCoord Interfaces ILandscaleHoleVolumeInteractionHandler Delegates Landscape.LandscapeGetHeightmapVerticesHandler Landscape.LandscapeGetSplatmapVerticesHandler Landscape.LandscapeReadHeightmapHandler Landscape.LandscapeReadSplatmapHandler Landscape.LandscapeWriteHeightmapHandler Landscape.LandscapeWriteHolesHandler Landscape.LandscapeWriteSplatmapHandler LandscapeLoadedHandler"
  },
  "api/SDG.Framework.Modules.EModuleRole.html": {
    "href": "api/SDG.Framework.Modules.EModuleRole.html",
    "title": "Enum EModuleRole | Unturned Analyse Doc",
    "keywords": "Enum EModuleRole Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public enum EModuleRole Fields Both_Optional = 3 Both_Required = 4 Client = 1 None = 0 Server = 2"
  },
  "api/SDG.Framework.Modules.EModuleStatus.html": {
    "href": "api/SDG.Framework.Modules.EModuleStatus.html",
    "title": "Enum EModuleStatus | Unturned Analyse Doc",
    "keywords": "Enum EModuleStatus Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public enum EModuleStatus Fields Initialized = 1 None = 0 Shutdown = 2"
  },
  "api/SDG.Framework.Modules.IModuleNexus.html": {
    "href": "api/SDG.Framework.Modules.IModuleNexus.html",
    "title": "Interface IModuleNexus | Unturned Analyse Doc",
    "keywords": "Interface IModuleNexus Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll ModuleHook looks for module entry/exit points, then calls initialize() when enabled and shutdown() when disabled. public interface IModuleNexus Methods initialize() Register components of this module. void initialize() shutdown() Cleanup after this module. void shutdown()"
  },
  "api/SDG.Framework.Modules.Module.html": {
    "href": "api/SDG.Framework.Modules.Module.html",
    "title": "Class Module | Unturned Analyse Doc",
    "keywords": "Class Module Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll Wraps module assembly and handles initialization. public class Module Inheritance object Module Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Module(ModuleConfig) public Module(ModuleConfig newConfig) Parameters newConfig ModuleConfig Fields _isEnabled True when config is enabled and dependencies are enabled. protected bool _isEnabled Field Value bool Properties assemblies Assembly files loaded. public Assembly[] assemblies { get; protected set; } Property Value Assembly[] config Metadata. public ModuleConfig config { get; protected set; } Property Value ModuleConfig isEnabled public bool isEnabled { get; set; } Property Value bool status How far along the initialization to shutdown lifecycle this module is. public EModuleStatus status { get; protected set; } Property Value EModuleStatus types Types in the assemblies of this module. Refer to this for types rather than the assemblies to avoid exception and garbage. public Type[] types { get; protected set; } Property Value Type[] Methods initialize() protected void initialize() load() protected void load() register() protected void register() shutdown() protected void shutdown() Events onModuleInitialized public event ModuleInitialized onModuleInitialized Event Type ModuleInitialized onModuleLoaded public event ModuleLoaded onModuleLoaded Event Type ModuleLoaded onModuleShutdown public event ModuleShutdown onModuleShutdown Event Type ModuleShutdown"
  },
  "api/SDG.Framework.Modules.ModuleAssembly.html": {
    "href": "api/SDG.Framework.Modules.ModuleAssembly.html",
    "title": "Class ModuleAssembly | Unturned Analyse Doc",
    "keywords": "Class ModuleAssembly Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public class ModuleAssembly Inheritance object ModuleAssembly Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleAssembly() public ModuleAssembly() Fields Load_As_Byte_Array Requested by Trojaner. LoadFile locks the file while in use which prevents OpenMod from updating itself. public bool Load_As_Byte_Array Field Value bool Path public string Path Field Value string Role public EModuleRole Role Field Value EModuleRole"
  },
  "api/SDG.Framework.Modules.ModuleComparer.html": {
    "href": "api/SDG.Framework.Modules.ModuleComparer.html",
    "title": "Class ModuleComparer | Unturned Analyse Doc",
    "keywords": "Class ModuleComparer Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll Sorts modules by dependencies. public class ModuleComparer : IComparer<ModuleConfig> Inheritance object ModuleComparer Implements IComparer<ModuleConfig> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleComparer() public ModuleComparer() Methods Compare(ModuleConfig, ModuleConfig) public int Compare(ModuleConfig x, ModuleConfig y) Parameters x ModuleConfig y ModuleConfig Returns int"
  },
  "api/SDG.Framework.Modules.ModuleConfig.html": {
    "href": "api/SDG.Framework.Modules.ModuleConfig.html",
    "title": "Class ModuleConfig | Unturned Analyse Doc",
    "keywords": "Class ModuleConfig Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll Holds module configuration. public class ModuleConfig Inheritance object ModuleConfig Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleConfig() public ModuleConfig() Fields Assemblies Relative file paths of .dlls to load. public List<ModuleAssembly> Assemblies Field Value List<ModuleAssembly> Dependencies Modules that must be loaded before this module. public List<ModuleDependency> Dependencies Field Value List<ModuleDependency> DirectoryPath Directory containing Module file, set when loading. public string DirectoryPath Field Value string FilePath Path to the Module file, set when loading. public string FilePath Field Value string IsEnabled Whether to load assemblies. public bool IsEnabled Field Value bool Name Used for module dependencies. public string Name Field Value string Version Nicely formatted version, converted into Version_Internal. public string Version Field Value string Version_Internal Used for module dependencies. public uint Version_Internal Field Value uint"
  },
  "api/SDG.Framework.Modules.ModuleDependency.html": {
    "href": "api/SDG.Framework.Modules.ModuleDependency.html",
    "title": "Class ModuleDependency | Unturned Analyse Doc",
    "keywords": "Class ModuleDependency Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public class ModuleDependency Inheritance object ModuleDependency Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModuleDependency() public ModuleDependency() Fields Name public string Name Field Value string Version Nicely formatted version, converted into Version_Internal. public string Version Field Value string Version_Internal Used for module dependencies. public uint Version_Internal Field Value uint"
  },
  "api/SDG.Framework.Modules.ModuleHook.AssemblyFileSettings.html": {
    "href": "api/SDG.Framework.Modules.ModuleHook.AssemblyFileSettings.html",
    "title": "Class ModuleHook.AssemblyFileSettings | Unturned Analyse Doc",
    "keywords": "Class ModuleHook.AssemblyFileSettings Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll protected class ModuleHook.AssemblyFileSettings Inheritance object ModuleHook.AssemblyFileSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AssemblyFileSettings() public AssemblyFileSettings() Fields absolutePath public string absolutePath Field Value string loadAsByteArray public bool loadAsByteArray Field Value bool"
  },
  "api/SDG.Framework.Modules.ModuleHook.html": {
    "href": "api/SDG.Framework.Modules.ModuleHook.html",
    "title": "Class ModuleHook | Unturned Analyse Doc",
    "keywords": "Class ModuleHook Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll Runs before everything else to find and load modules. public class ModuleHook : MonoBehaviour Inheritance object ModuleHook Constructors ModuleHook() public ModuleHook() Fields discoveredNameToPath These are *.dll files discovered in the modules folder. protected static Dictionary<AssemblyName, string> discoveredNameToPath Field Value Dictionary<AssemblyName, string> nameToAssembly protected static Dictionary<string, Assembly> nameToAssembly Field Value Dictionary<string, Assembly> nameToPath protected static Dictionary<string, ModuleHook.AssemblyFileSettings> nameToPath Field Value Dictionary<string, ModuleHook.AssemblyFileSettings> Properties coreAssembly Temporarily contains Unturned's code untils it's moved into modules. public static Assembly coreAssembly { get; protected set; } Property Value Assembly coreTypes Temporarily contains coreAssembly types. public static Type[] coreTypes { get; protected set; } Property Value Type[] modules public static List<Module> modules { get; protected set; } Property Value List<Module> Methods OnTypeResolve(object, ResolveEventArgs) protected Assembly OnTypeResolve(object sender, ResolveEventArgs args) Parameters sender object args ResolveEventArgs Returns Assembly awake() public void awake() getModuleByName(string) Find module using dependency name. public static Module getModuleByName(string name) Parameters name string Returns Module getRequiredModules(List<Module>) Find modules containing an assembly with the Both_Required role. public static void getRequiredModules(List<Module> result) Parameters result List<Module> Modules to append to. handleAssemblyResolve(object, ResolveEventArgs) protected Assembly handleAssemblyResolve(object sender, ResolveEventArgs args) Parameters sender object args ResolveEventArgs Returns Assembly registerAssemblyPath(string) public static void registerAssemblyPath(string path) Parameters path string registerAssemblyPath(string, bool) public static void registerAssemblyPath(string path, bool loadAsByteArray) Parameters path string loadAsByteArray bool resolveAssemblyName(string) public static Assembly resolveAssemblyName(string name) Parameters name string Returns Assembly resolveAssemblyPath(string) public static Assembly resolveAssemblyPath(string path) Parameters path string Returns Assembly start() public void start() toggleModuleEnabled(int) public static void toggleModuleEnabled(int index) Parameters index int Events PostVanillaAssemblyResolve public static event ResolveEventHandler PostVanillaAssemblyResolve Event Type ResolveEventHandler PreVanillaAssemblyResolve Event for plugin frameworks (e.g., Rocket) to override AssemblyResolve handling. public static event ResolveEventHandler PreVanillaAssemblyResolve Event Type ResolveEventHandler PreVanillaAssemblyResolvePostRedirects public static event ResolveEventHandler PreVanillaAssemblyResolvePostRedirects Event Type ResolveEventHandler onModulesInitialized Called once after all startup enabled modules are loaded. Not called when modules are initialized due to enabling/disabling. public static event ModulesInitializedHandler onModulesInitialized Event Type ModulesInitializedHandler onModulesShutdown Called once after all modules are shutdown. Not called when modules are shutdown due to enabling/disabling. public static event ModulesShutdownHandler onModulesShutdown Event Type ModulesShutdownHandler"
  },
  "api/SDG.Framework.Modules.ModuleInitialized.html": {
    "href": "api/SDG.Framework.Modules.ModuleInitialized.html",
    "title": "Delegate ModuleInitialized | Unturned Analyse Doc",
    "keywords": "Delegate ModuleInitialized Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public delegate void ModuleInitialized(Module module) Parameters module Module Constructors ModuleInitialized(object, IntPtr) public ModuleInitialized(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Module, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Module module, AsyncCallback callback, object @object) Parameters module Module callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Module) public virtual void Invoke(Module module) Parameters module Module"
  },
  "api/SDG.Framework.Modules.ModuleLoaded.html": {
    "href": "api/SDG.Framework.Modules.ModuleLoaded.html",
    "title": "Delegate ModuleLoaded | Unturned Analyse Doc",
    "keywords": "Delegate ModuleLoaded Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public delegate void ModuleLoaded(Module module) Parameters module Module Constructors ModuleLoaded(object, IntPtr) public ModuleLoaded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Module, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Module module, AsyncCallback callback, object @object) Parameters module Module callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Module) public virtual void Invoke(Module module) Parameters module Module"
  },
  "api/SDG.Framework.Modules.ModuleShutdown.html": {
    "href": "api/SDG.Framework.Modules.ModuleShutdown.html",
    "title": "Delegate ModuleShutdown | Unturned Analyse Doc",
    "keywords": "Delegate ModuleShutdown Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public delegate void ModuleShutdown(Module module) Parameters module Module Constructors ModuleShutdown(object, IntPtr) public ModuleShutdown(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Module, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Module module, AsyncCallback callback, object @object) Parameters module Module callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Module) public virtual void Invoke(Module module) Parameters module Module"
  },
  "api/SDG.Framework.Modules.ModulesInitializedHandler.html": {
    "href": "api/SDG.Framework.Modules.ModulesInitializedHandler.html",
    "title": "Delegate ModulesInitializedHandler | Unturned Analyse Doc",
    "keywords": "Delegate ModulesInitializedHandler Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public delegate void ModulesInitializedHandler() Constructors ModulesInitializedHandler(object, IntPtr) public ModulesInitializedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Modules.ModulesShutdownHandler.html": {
    "href": "api/SDG.Framework.Modules.ModulesShutdownHandler.html",
    "title": "Delegate ModulesShutdownHandler | Unturned Analyse Doc",
    "keywords": "Delegate ModulesShutdownHandler Namespace SDG.Framework.Modules Assembly Assembly-CSharp.dll public delegate void ModulesShutdownHandler() Constructors ModulesShutdownHandler(object, IntPtr) public ModulesShutdownHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Modules.html": {
    "href": "api/SDG.Framework.Modules.html",
    "title": "Namespace SDG.Framework.Modules | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Modules Classes Module Wraps module assembly and handles initialization. ModuleAssembly ModuleComparer Sorts modules by dependencies. ModuleConfig Holds module configuration. ModuleDependency ModuleHook Runs before everything else to find and load modules. ModuleHook.AssemblyFileSettings Interfaces IModuleNexus ModuleHook looks for module entry/exit points, then calls initialize() when enabled and shutdown() when disabled. Enums EModuleRole EModuleStatus Delegates ModuleInitialized ModuleLoaded ModuleShutdown ModulesInitializedHandler ModulesShutdownHandler"
  },
  "api/SDG.Framework.Rendering.GLCircleOffsetHandler.html": {
    "href": "api/SDG.Framework.Rendering.GLCircleOffsetHandler.html",
    "title": "Delegate GLCircleOffsetHandler | Unturned Analyse Doc",
    "keywords": "Delegate GLCircleOffsetHandler Namespace SDG.Framework.Rendering Assembly Assembly-CSharp.dll public delegate void GLCircleOffsetHandler(ref Vector3 point) Parameters point Vector3 Constructors GLCircleOffsetHandler(object, IntPtr) public GLCircleOffsetHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ref Vector3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ref Vector3 point, AsyncCallback callback, object @object) Parameters point Vector3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, IAsyncResult) public virtual void EndInvoke(ref Vector3 point, IAsyncResult result) Parameters point Vector3 result IAsyncResult Invoke(ref Vector3) public virtual void Invoke(ref Vector3 point) Parameters point Vector3"
  },
  "api/SDG.Framework.Rendering.GLRenderHandler.html": {
    "href": "api/SDG.Framework.Rendering.GLRenderHandler.html",
    "title": "Delegate GLRenderHandler | Unturned Analyse Doc",
    "keywords": "Delegate GLRenderHandler Namespace SDG.Framework.Rendering Assembly Assembly-CSharp.dll public delegate void GLRenderHandler() Constructors GLRenderHandler(object, IntPtr) public GLRenderHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Rendering.GLRenderer.html": {
    "href": "api/SDG.Framework.Rendering.GLRenderer.html",
    "title": "Class GLRenderer | Unturned Analyse Doc",
    "keywords": "Class GLRenderer Namespace SDG.Framework.Rendering Assembly Assembly-CSharp.dll public class GLRenderer : MonoBehaviour Inheritance object GLRenderer Constructors GLRenderer() public GLRenderer() Events OnGameRender public static event GLRenderHandler OnGameRender Event Type GLRenderHandler render public static event GLRenderHandler render Event Type GLRenderHandler"
  },
  "api/SDG.Framework.Rendering.GLUtility.html": {
    "href": "api/SDG.Framework.Rendering.GLUtility.html",
    "title": "Class GLUtility | Unturned Analyse Doc",
    "keywords": "Class GLUtility Namespace SDG.Framework.Rendering Assembly Assembly-CSharp.dll public class GLUtility Inheritance object GLUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GLUtility() public GLUtility() Fields _LINE_CHECKERED_COLOR protected static Material _LINE_CHECKERED_COLOR Field Value Material _LINE_CHECKERED_DEPTH_CUTOFF_COLOR protected static Material _LINE_CHECKERED_DEPTH_CUTOFF_COLOR Field Value Material _LINE_DEPTH_CHECKERED_COLOR protected static Material _LINE_DEPTH_CHECKERED_COLOR Field Value Material _LINE_DEPTH_CUTOFF_COLOR protected static Material _LINE_DEPTH_CUTOFF_COLOR Field Value Material _LINE_FLAT_COLOR protected static Material _LINE_FLAT_COLOR Field Value Material _TRI_CHECKERED_COLOR protected static Material _TRI_CHECKERED_COLOR Field Value Material _TRI_CHECKERED_DEPTH_CUTOFF_COLOR protected static Material _TRI_CHECKERED_DEPTH_CUTOFF_COLOR Field Value Material _TRI_DEPTH_CHECKERED_COLOR protected static Material _TRI_DEPTH_CHECKERED_COLOR Field Value Material _TRI_DEPTH_CUTOFF_COLOR protected static Material _TRI_DEPTH_CUTOFF_COLOR Field Value Material _TRI_FLAT_COLOR protected static Material _TRI_FLAT_COLOR Field Value Material matrix public static Matrix4x4 matrix Field Value Matrix4x4 Properties LINE_CHECKERED_COLOR public static Material LINE_CHECKERED_COLOR { get; } Property Value Material LINE_CHECKERED_DEPTH_CUTOFF_COLOR public static Material LINE_CHECKERED_DEPTH_CUTOFF_COLOR { get; } Property Value Material LINE_DEPTH_CHECKERED_COLOR public static Material LINE_DEPTH_CHECKERED_COLOR { get; } Property Value Material LINE_DEPTH_CUTOFF_COLOR public static Material LINE_DEPTH_CUTOFF_COLOR { get; } Property Value Material LINE_FLAT_COLOR public static Material LINE_FLAT_COLOR { get; } Property Value Material TRI_CHECKERED_COLOR public static Material TRI_CHECKERED_COLOR { get; } Property Value Material TRI_CHECKERED_DEPTH_CUTOFF_COLOR public static Material TRI_CHECKERED_DEPTH_CUTOFF_COLOR { get; } Property Value Material TRI_DEPTH_CHECKERED_COLOR public static Material TRI_DEPTH_CHECKERED_COLOR { get; } Property Value Material TRI_DEPTH_CUTOFF_COLOR public static Material TRI_DEPTH_CUTOFF_COLOR { get; } Property Value Material TRI_FLAT_COLOR public static Material TRI_FLAT_COLOR { get; } Property Value Material Methods boxSolid(Vector3, Vector3) public static void boxSolid(Vector3 center, Vector3 size) Parameters center Vector3 size Vector3 circle(Vector3, float, Vector3, Vector3, GLCircleOffsetHandler) public static void circle(Vector3 center, float radius, Vector3 horizontalAxis, Vector3 verticalAxis, GLCircleOffsetHandler handleGLCircleOffset) Parameters center Vector3 radius float horizontalAxis Vector3 verticalAxis Vector3 handleGLCircleOffset GLCircleOffsetHandler circle(Vector3, float, Vector3, Vector3, float) public static void circle(Vector3 center, float radius, Vector3 horizontalAxis, Vector3 verticalAxis, float steps = 0) Parameters center Vector3 radius float horizontalAxis Vector3 verticalAxis Vector3 steps float line(Vector3, Vector3) public static void line(Vector3 begin, Vector3 end) Parameters begin Vector3 end Vector3"
  },
  "api/SDG.Framework.Rendering.html": {
    "href": "api/SDG.Framework.Rendering.html",
    "title": "Namespace SDG.Framework.Rendering | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Rendering Classes GLRenderer GLUtility Delegates GLCircleOffsetHandler GLRenderHandler"
  },
  "api/SDG.Framework.Utilities.AACylinderVolume.html": {
    "href": "api/SDG.Framework.Utilities.AACylinderVolume.html",
    "title": "Struct AACylinderVolume | Unturned Analyse Doc",
    "keywords": "Struct AACylinderVolume Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public struct AACylinderVolume : IShapeVolume Implements IShapeVolume Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors AACylinderVolume(Vector3, float, float) public AACylinderVolume(Vector3 newCenter, float newRadius, float newHeight) Parameters newCenter Vector3 newRadius float newHeight float Fields center public Vector3 center Field Value Vector3 height public float height Field Value float radius public float radius Field Value float Properties internalVolume Internal cubic meter volume. public float internalVolume { get; } Property Value float surfaceArea Surface square meters area. public float surfaceArea { get; } Property Value float worldBounds Not necessarily cheap to calculate - probably best to cache. public Bounds worldBounds { get; } Property Value Bounds Methods containsPoint(Vector3) public bool containsPoint(Vector3 point) Parameters point Vector3 Returns bool"
  },
  "api/SDG.Framework.Utilities.IPoolable.html": {
    "href": "api/SDG.Framework.Utilities.IPoolable.html",
    "title": "Interface IPoolable | Unturned Analyse Doc",
    "keywords": "Interface IPoolable Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll For use with PoolablePool when no special construction is required. public interface IPoolable Methods poolClaim() Called when this instance is getting claimed. void poolClaim() poolRelease() Called when this instance is returned to the pool. void poolRelease()"
  },
  "api/SDG.Framework.Utilities.IShapeVolume.html": {
    "href": "api/SDG.Framework.Utilities.IShapeVolume.html",
    "title": "Interface IShapeVolume | Unturned Analyse Doc",
    "keywords": "Interface IShapeVolume Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public interface IShapeVolume Properties internalVolume Internal cubic meter volume. float internalVolume { get; } Property Value float surfaceArea Surface square meters area. float surfaceArea { get; } Property Value float worldBounds Not necessarily cheap to calculate - probably best to cache. Bounds worldBounds { get; } Property Value Bounds Methods containsPoint(Vector3) bool containsPoint(Vector3 point) Parameters point Vector3 Returns bool"
  },
  "api/SDG.Framework.Utilities.ListPool-1.html": {
    "href": "api/SDG.Framework.Utilities.ListPool-1.html",
    "title": "Class ListPool<T> | Unturned Analyse Doc",
    "keywords": "Class ListPool<T> Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public static class ListPool<T> Type Parameters T Inheritance object ListPool<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods claim() public static List<T> claim() Returns List<T> empty() public static void empty() release(List<T>) public static void release(List<T> list) Parameters list List<T> warmup(uint) public static void warmup(uint count) Parameters count uint"
  },
  "api/SDG.Framework.Utilities.MathUtility.html": {
    "href": "api/SDG.Framework.Utilities.MathUtility.html",
    "title": "Class MathUtility | Unturned Analyse Doc",
    "keywords": "Class MathUtility Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public class MathUtility Inheritance object MathUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MathUtility() public MathUtility() Fields IDENTITY_MATRIX public static readonly Matrix4x4 IDENTITY_MATRIX Field Value Matrix4x4 IDENTITY_QUATERNION public static readonly Quaternion IDENTITY_QUATERNION Field Value Quaternion Methods getPitchYawFromDirection(Vector3, out float, out float) public static void getPitchYawFromDirection(Vector3 direction, out float pitch, out float yaw) Parameters direction Vector3 pitch float yaw float"
  },
  "api/SDG.Framework.Utilities.PaletteUtility.html": {
    "href": "api/SDG.Framework.Utilities.PaletteUtility.html",
    "title": "Class PaletteUtility | Unturned Analyse Doc",
    "keywords": "Class PaletteUtility Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public static class PaletteUtility Inheritance object PaletteUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods toRGB(Color) public static string toRGB(Color color) Parameters color Color Returns string toRGBA(Color) public static string toRGBA(Color color) Parameters color Color Returns string tryParse(string, out Color) public static bool tryParse(string value, out Color color) Parameters value string color Color Returns bool"
  },
  "api/SDG.Framework.Utilities.PhysicsUtility.html": {
    "href": "api/SDG.Framework.Utilities.PhysicsUtility.html",
    "title": "Class PhysicsUtility | Unturned Analyse Doc",
    "keywords": "Class PhysicsUtility Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public class PhysicsUtility Inheritance object PhysicsUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PhysicsUtility() public PhysicsUtility() Methods raycast(Ray, out RaycastHit, float, int, QueryTriggerInteraction) [Obsolete(\"Hole collision is handled by Unity now\")] public static bool raycast(Ray ray, out RaycastHit hit, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters ray Ray hit RaycastHit maxDistance float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns bool raycastAll(Ray, float, int, QueryTriggerInteraction) [Obsolete(\"Hole collision is handled by Unity now\")] public static RaycastHit[] raycastAll(Ray ray, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters ray Ray maxDistance float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns RaycastHit[] sphereCastNonAlloc(Ray, float, RaycastHit[], float, int, QueryTriggerInteraction) [Obsolete(\"Hole collision is handled by Unity now\")] public static int sphereCastNonAlloc(Ray ray, float radius, RaycastHit[] results, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters ray Ray radius float results RaycastHit[] maxDistance float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns int"
  },
  "api/SDG.Framework.Utilities.Pool-1.PoolClaimHandler.html": {
    "href": "api/SDG.Framework.Utilities.Pool-1.PoolClaimHandler.html",
    "title": "Delegate Pool<T>.PoolClaimHandler | Unturned Analyse Doc",
    "keywords": "Delegate Pool<T>.PoolClaimHandler Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public delegate T Pool<T>.PoolClaimHandler(Pool<T> pool) Parameters pool Pool<T> Returns T Constructors PoolClaimHandler(object, IntPtr) public PoolClaimHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Pool<T>, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Pool<T> pool, AsyncCallback callback, object @object) Parameters pool Pool<T> callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual T EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns T Invoke(Pool<T>) public virtual T Invoke(Pool<T> pool) Parameters pool Pool<T> Returns T"
  },
  "api/SDG.Framework.Utilities.Pool-1.PoolClaimedHandler.html": {
    "href": "api/SDG.Framework.Utilities.Pool-1.PoolClaimedHandler.html",
    "title": "Delegate Pool<T>.PoolClaimedHandler | Unturned Analyse Doc",
    "keywords": "Delegate Pool<T>.PoolClaimedHandler Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public delegate void Pool<T>.PoolClaimedHandler(Pool<T> pool, T item) Parameters pool Pool<T> item T Constructors PoolClaimedHandler(object, IntPtr) public PoolClaimedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Pool<T>, T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Pool<T> pool, T item, AsyncCallback callback, object @object) Parameters pool Pool<T> item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Pool<T>, T) public virtual void Invoke(Pool<T> pool, T item) Parameters pool Pool<T> item T"
  },
  "api/SDG.Framework.Utilities.Pool-1.PoolReleaseHandler.html": {
    "href": "api/SDG.Framework.Utilities.Pool-1.PoolReleaseHandler.html",
    "title": "Delegate Pool<T>.PoolReleaseHandler | Unturned Analyse Doc",
    "keywords": "Delegate Pool<T>.PoolReleaseHandler Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public delegate void Pool<T>.PoolReleaseHandler(Pool<T> pool, T item) Parameters pool Pool<T> item T Constructors PoolReleaseHandler(object, IntPtr) public PoolReleaseHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Pool<T>, T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Pool<T> pool, T item, AsyncCallback callback, object @object) Parameters pool Pool<T> item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Pool<T>, T) public virtual void Invoke(Pool<T> pool, T item) Parameters pool Pool<T> item T"
  },
  "api/SDG.Framework.Utilities.Pool-1.PoolReleasedHandler.html": {
    "href": "api/SDG.Framework.Utilities.Pool-1.PoolReleasedHandler.html",
    "title": "Delegate Pool<T>.PoolReleasedHandler | Unturned Analyse Doc",
    "keywords": "Delegate Pool<T>.PoolReleasedHandler Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public delegate void Pool<T>.PoolReleasedHandler(Pool<T> pool, T item) Parameters pool Pool<T> item T Constructors PoolReleasedHandler(object, IntPtr) public PoolReleasedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Pool<T>, T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Pool<T> pool, T item, AsyncCallback callback, object @object) Parameters pool Pool<T> item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Pool<T>, T) public virtual void Invoke(Pool<T> pool, T item) Parameters pool Pool<T> item T"
  },
  "api/SDG.Framework.Utilities.Pool-1.html": {
    "href": "api/SDG.Framework.Utilities.Pool-1.html",
    "title": "Class Pool<T> | Unturned Analyse Doc",
    "keywords": "Class Pool<T> Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public class Pool<T> Type Parameters T Inheritance object Pool<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Pool() public Pool() Fields pool protected Queue<T> pool Field Value Queue<T> Properties count Number of items in underlying queue. public int count { get; } Property Value int Methods claim() public T claim() Returns T claim(PoolClaimHandler) public T claim(Pool<T>.PoolClaimHandler callback) Parameters callback Pool<T>.PoolClaimHandler Returns T empty() public void empty() handleClaim(Pool<T>) protected T handleClaim(Pool<T> pool) Parameters pool Pool<T> Returns T release(T) public void release(T item) Parameters item T release(T, PoolReleasedHandler) public void release(T item, Pool<T>.PoolReleasedHandler callback) Parameters item T callback Pool<T>.PoolReleasedHandler triggerClaimed(T) protected void triggerClaimed(T item) Parameters item T triggerReleased(T) protected void triggerReleased(T item) Parameters item T warmup(uint) public void warmup(uint count) Parameters count uint warmup(uint, PoolClaimHandler) public void warmup(uint count, Pool<T>.PoolClaimHandler callback) Parameters count uint callback Pool<T>.PoolClaimHandler Events claimed public event Pool<T>.PoolClaimedHandler claimed Event Type Pool<T>.PoolClaimedHandler released public event Pool<T>.PoolReleasedHandler released Event Type Pool<T>.PoolReleasedHandler"
  },
  "api/SDG.Framework.Utilities.PoolablePool-1.html": {
    "href": "api/SDG.Framework.Utilities.PoolablePool-1.html",
    "title": "Class PoolablePool<T> | Unturned Analyse Doc",
    "keywords": "Class PoolablePool<T> Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll Pool of objects that implement the IPoolable interface. Useful for types that do not need special construction, and want notification when claimed and released. public static class PoolablePool<T> where T : IPoolable Type Parameters T Inheritance object PoolablePool<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods claim() public static T claim() Returns T empty() public static void empty() release(T) public static void release(T poolable) Parameters poolable T warmup(uint) public static void warmup(uint count) Parameters count uint"
  },
  "api/SDG.Framework.Utilities.SphereVolume.html": {
    "href": "api/SDG.Framework.Utilities.SphereVolume.html",
    "title": "Struct SphereVolume | Unturned Analyse Doc",
    "keywords": "Struct SphereVolume Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public struct SphereVolume : IShapeVolume Implements IShapeVolume Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SphereVolume(Vector3, float) public SphereVolume(Vector3 newCenter, float newRadius) Parameters newCenter Vector3 newRadius float Fields center public Vector3 center Field Value Vector3 radius public float radius Field Value float Properties internalVolume Internal cubic meter volume. public float internalVolume { get; } Property Value float surfaceArea Surface square meters area. public float surfaceArea { get; } Property Value float worldBounds Not necessarily cheap to calculate - probably best to cache. public Bounds worldBounds { get; } Property Value Bounds Methods containsPoint(Vector3) public bool containsPoint(Vector3 point) Parameters point Vector3 Returns bool"
  },
  "api/SDG.Framework.Utilities.TimeUtility.html": {
    "href": "api/SDG.Framework.Utilities.TimeUtility.html",
    "title": "Class TimeUtility | Unturned Analyse Doc",
    "keywords": "Class TimeUtility Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public class TimeUtility : MonoBehaviour Inheritance object TimeUtility Constructors TimeUtility() public TimeUtility() Methods FixedUpdate() protected virtual void FixedUpdate() InvokeAfterDelay(Action, float) Useful when caller is not a MonoBehaviour, or coroutine should not be owned by a component which might get deactivated. For example attached effects destroy timer should happen regardless of parent deactivation. public static Coroutine InvokeAfterDelay(Action callback, float timeSeconds) Parameters callback Action timeSeconds float Returns Coroutine StaticStopCoroutine(Coroutine) Stop a coroutine started by InvokeAfterDelay. public static void StaticStopCoroutine(Coroutine routine) Parameters routine Coroutine Update() protected virtual void Update() triggerUpdated() protected virtual void triggerUpdated() Events physicsUpdated Equivalent to MonoBehaviour.FixedUpdate public static event UpdateHandler physicsUpdated Event Type UpdateHandler updated Equivalent to MonoBehaviour.Update public static event UpdateHandler updated Event Type UpdateHandler"
  },
  "api/SDG.Framework.Utilities.UpdateHandler.html": {
    "href": "api/SDG.Framework.Utilities.UpdateHandler.html",
    "title": "Delegate UpdateHandler | Unturned Analyse Doc",
    "keywords": "Delegate UpdateHandler Namespace SDG.Framework.Utilities Assembly Assembly-CSharp.dll public delegate void UpdateHandler() Constructors UpdateHandler(object, IntPtr) public UpdateHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Framework.Utilities.html": {
    "href": "api/SDG.Framework.Utilities.html",
    "title": "Namespace SDG.Framework.Utilities | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Utilities Classes ListPool<T> MathUtility PaletteUtility PhysicsUtility Pool<T> PoolablePool<T> Pool of objects that implement the IPoolable interface. Useful for types that do not need special construction, and want notification when claimed and released. TimeUtility Structs AACylinderVolume SphereVolume Interfaces IPoolable For use with PoolablePool when no special construction is required. IShapeVolume Delegates Pool<T>.PoolClaimHandler Pool<T>.PoolClaimedHandler Pool<T>.PoolReleaseHandler Pool<T>.PoolReleasedHandler UpdateHandler"
  },
  "api/SDG.Framework.Water.IWaterVolumeInteractionHandler.html": {
    "href": "api/SDG.Framework.Water.IWaterVolumeInteractionHandler.html",
    "title": "Interface IWaterVolumeInteractionHandler | Unturned Analyse Doc",
    "keywords": "Interface IWaterVolumeInteractionHandler Namespace SDG.Framework.Water Assembly Assembly-CSharp.dll public interface IWaterVolumeInteractionHandler Methods waterBeginCollision(WaterVolume) void waterBeginCollision(WaterVolume volume) Parameters volume WaterVolume waterEndCollision(WaterVolume) void waterEndCollision(WaterVolume volume) Parameters volume WaterVolume"
  },
  "api/SDG.Framework.Water.WaterUtility.html": {
    "href": "api/SDG.Framework.Water.WaterUtility.html",
    "title": "Class WaterUtility | Unturned Analyse Doc",
    "keywords": "Class WaterUtility Namespace SDG.Framework.Water Assembly Assembly-CSharp.dll public class WaterUtility Inheritance object WaterUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WaterUtility() public WaterUtility() Methods getUnderwaterInfo(Vector3, out bool, out float) public static void getUnderwaterInfo(Vector3 point, out bool isUnderwater, out float surfaceElevation) Parameters point Vector3 isUnderwater bool surfaceElevation float getWaterSurfaceElevation(WaterVolume, Vector3) public static float getWaterSurfaceElevation(WaterVolume volume, Vector3 point) Parameters volume WaterVolume point Vector3 Returns float getWaterSurfaceElevation(Vector3) Find the water elevation underneath point, or above point if underwater. public static float getWaterSurfaceElevation(Vector3 point) Parameters point Vector3 Returns float isPointInsideVolume(WaterVolume, Vector3) [Obsolete] public static bool isPointInsideVolume(WaterVolume volume, Vector3 point) Parameters volume WaterVolume point Vector3 Returns bool isPointInsideVolume(Vector3) [Obsolete] public static bool isPointInsideVolume(Vector3 point) Parameters point Vector3 Returns bool isPointInsideVolume(Vector3, out WaterVolume) [Obsolete] public static bool isPointInsideVolume(Vector3 point, out WaterVolume volume) Parameters point Vector3 volume WaterVolume Returns bool isPointUnderwater(Vector3) public static bool isPointUnderwater(Vector3 point) Parameters point Vector3 Returns bool isPointUnderwater(Vector3, out WaterVolume) public static bool isPointUnderwater(Vector3 point, out WaterVolume volume) Parameters point Vector3 volume WaterVolume Null if under old water level, otherwise the volume. Returns bool"
  },
  "api/SDG.Framework.Water.WaterVolume.html": {
    "href": "api/SDG.Framework.Water.WaterVolume.html",
    "title": "Class WaterVolume | Unturned Analyse Doc",
    "keywords": "Class WaterVolume Namespace SDG.Framework.Water Assembly Assembly-CSharp.dll public class WaterVolume : LevelVolume<WaterVolume, WaterVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<WaterVolume, WaterVolumeManager> WaterVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<WaterVolume, WaterVolumeManager>.falloffDistance LevelVolume<WaterVolume, WaterVolumeManager>.editorGameObject LevelVolume<WaterVolume, WaterVolumeManager>.editorMeshFilter LevelVolume<WaterVolume, WaterVolumeManager>.editorMeshRenderer LevelVolume<WaterVolume, WaterVolumeManager>.forceShouldAddCollider LevelVolume<WaterVolume, WaterVolumeManager>.supportsBoxShape LevelVolume<WaterVolume, WaterVolumeManager>.supportsSphereShape LevelVolume<WaterVolume, WaterVolumeManager>.supportsFalloff LevelVolume<WaterVolume, WaterVolumeManager>.CreateMenu() LevelVolume<WaterVolume, WaterVolumeManager>.beginSelection(InteractionData) LevelVolume<WaterVolume, WaterVolumeManager>.endSelection(InteractionData) LevelVolume<WaterVolume, WaterVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<WaterVolume, WaterVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<WaterVolume, WaterVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<WaterVolume, WaterVolumeManager>.GetBoxSize() LevelVolume<WaterVolume, WaterVolumeManager>.GetBoxExtents() LevelVolume<WaterVolume, WaterVolumeManager>.GetInnerBoxSize() LevelVolume<WaterVolume, WaterVolumeManager>.GetInnerBoxExtents() LevelVolume<WaterVolume, WaterVolumeManager>.GetLocalInnerBoxSize() LevelVolume<WaterVolume, WaterVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<WaterVolume, WaterVolumeManager>.GetSphereRadius() LevelVolume<WaterVolume, WaterVolumeManager>.GetLocalSphereRadius() LevelVolume<WaterVolume, WaterVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<WaterVolume, WaterVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<WaterVolume, WaterVolumeManager>.SetSphereRadius(float) LevelVolume<WaterVolume, WaterVolumeManager>.CalculateWorldBounds() LevelVolume<WaterVolume, WaterVolumeManager>.CalculateLocalBounds() LevelVolume<WaterVolume, WaterVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<WaterVolume, WaterVolumeManager>.OnEnable() LevelVolume<WaterVolume, WaterVolumeManager>.OnDisable() LevelVolume<WaterVolume, WaterVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<WaterVolume, WaterVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<WaterVolume, WaterVolumeManager>.Awake() LevelVolume<WaterVolume, WaterVolumeManager>.Start() LevelVolume<WaterVolume, WaterVolumeManager>.OnDestroy() LevelVolume<WaterVolume, WaterVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<WaterVolume, WaterVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject Constructors WaterVolume() public WaterVolume() Fields WATER_SURFACE_TILE_SIZE public static readonly int WATER_SURFACE_TILE_SIZE Field Value int _editorIsSufaceVisible protected bool _editorIsSufaceVisible Field Value bool _isReflectionVisible protected bool _isReflectionVisible Field Value bool _isSeaLevel protected bool _isSeaLevel Field Value bool _isSurfaceVisible protected bool _isSurfaceVisible Field Value bool planarReflection public PlanarReflection planarReflection Field Value PlanarReflection sharedMaterial All water tiles and the planar reflection component reference this material. public Material sharedMaterial Field Value Material waterPlane public GameObject waterPlane Field Value GameObject waterType public ERefillWaterType waterType Field Value ERefillWaterType Properties CanBeSelected If true, editor tools can select and transform. False for items like the object-owned culling volumes. public override bool CanBeSelected { get; } Property Value bool Shape public override ELevelVolumeShape Shape { get; set; } Property Value ELevelVolumeShape ShouldSave If true, write to LevelHierarchy file. False for externally managed objects like legacy lighting WaterVolume. public override bool ShouldSave { get; } Property Value bool isReflectionVisible public bool isReflectionVisible { get; set; } Property Value bool isSeaLevel If true rain will be occluded below the surface on the Y axis. public bool isSeaLevel { get; set; } Property Value bool isSurfaceVisible public bool isSurfaceVisible { get; set; } Property Value bool Methods Awake() protected override void Awake() CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement OnTriggerEnter(Collider) public void OnTriggerEnter(Collider other) Parameters other Collider OnTriggerExit(Collider) public void OnTriggerExit(Collider other) Parameters other Collider Start() protected override void Start() UpdateEditorVisibility(ELevelVolumeVisibility) Called in the level editor during registraion and when visibility is changed. public override void UpdateEditorVisibility(ELevelVolumeVisibility visibility) Parameters visibility ELevelVolumeVisibility beginCollision(Collider) public void beginCollision(Collider collider) Parameters collider Collider createWaterPlanes() protected void createWaterPlanes() endCollision(Collider) public void endCollision(Collider collider) Parameters collider Collider readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Framework.Water.WaterVolumeManager.html": {
    "href": "api/SDG.Framework.Water.WaterVolumeManager.html",
    "title": "Class WaterVolumeManager | Unturned Analyse Doc",
    "keywords": "Class WaterVolumeManager Namespace SDG.Framework.Water Assembly Assembly-CSharp.dll public class WaterVolumeManager : VolumeManager<WaterVolume, WaterVolumeManager> Inheritance object VolumeManagerBase VolumeManager<WaterVolume, WaterVolumeManager> WaterVolumeManager Inherited Members VolumeManager<WaterVolume, WaterVolumeManager>.allowInstantiation VolumeManager<WaterVolume, WaterVolumeManager>.supportsFalloff VolumeManager<WaterVolume, WaterVolumeManager>.allVolumes VolumeManager<WaterVolume, WaterVolumeManager>.Get() VolumeManager<WaterVolume, WaterVolumeManager>.GetAllVolumes() VolumeManager<WaterVolume, WaterVolumeManager>.GetRandomVolumeOrNull() VolumeManager<WaterVolume, WaterVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<WaterVolume, WaterVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<WaterVolume, WaterVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<WaterVolume, WaterVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<WaterVolume, WaterVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<WaterVolume, WaterVolumeManager>.EnumerateAllVolumes() VolumeManager<WaterVolume, WaterVolumeManager>.Raycast(Ray, out RaycastHit, out WaterVolume, float) VolumeManager<WaterVolume, WaterVolumeManager>.AddVolume(WaterVolume) VolumeManager<WaterVolume, WaterVolumeManager>.RemoveVolume(WaterVolume) VolumeManager<WaterVolume, WaterVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<WaterVolume, WaterVolumeManager>.SetDebugColor(Color) VolumeManager<WaterVolume, WaterVolumeManager>.Visibility VolumeManager<WaterVolume, WaterVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WaterVolumeManager() public WaterVolumeManager() Fields seaLevelVolume Water volume marked as being sea level. public static WaterVolume seaLevelVolume Field Value WaterVolume Properties worldSeaLevel public static float worldSeaLevel { get; } Property Value float"
  },
  "api/SDG.Framework.Water.html": {
    "href": "api/SDG.Framework.Water.html",
    "title": "Namespace SDG.Framework.Water | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework.Water Classes WaterUtility WaterVolume WaterVolumeManager Interfaces IWaterVolumeInteractionHandler"
  },
  "api/SDG.Framework.html": {
    "href": "api/SDG.Framework.html",
    "title": "Namespace SDG.Framework | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Framework Classes FrameworkNexus"
  },
  "api/SDG.NetPak.NetEnumAttribute.html": {
    "href": "api/SDG.NetPak.NetEnumAttribute.html",
    "title": "Class NetEnumAttribute | Unturned Analyse Doc",
    "keywords": "Class NetEnumAttribute Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll Indicates net reader/writer implementation should be generated. [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Enum)] public class NetEnumAttribute : Attribute, _Attribute Inheritance object Attribute NetEnumAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NetEnumAttribute() public NetEnumAttribute()"
  },
  "api/SDG.NetPak.NetLength.html": {
    "href": "api/SDG.NetPak.NetLength.html",
    "title": "Struct NetLength | Unturned Analyse Doc",
    "keywords": "Struct NetLength Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public struct NetLength Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NetLength(uint) public NetLength(uint valueInclusive) Parameters valueInclusive uint Fields bitCount public int bitCount Field Value int value public uint value Field Value uint Methods Clamp(int) public uint Clamp(int otherValue) Parameters otherValue int Returns uint Clamp(uint) public uint Clamp(uint otherValue) Parameters otherValue uint Returns uint"
  },
  "api/SDG.NetPak.NetPakConst.html": {
    "href": "api/SDG.NetPak.NetPakConst.html",
    "title": "Class NetPakConst | Unturned Analyse Doc",
    "keywords": "Class NetPakConst Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public static class NetPakConst Inheritance object NetPakConst Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields INV_SQRT_OF_TWO Uses \"smallest three\" optimization described by Glenn Fiedler: https://gafferongames.com/post/snapshot_compression/ Quoting here in case the link moves: \"If v is the absolute value of the largest quaternion component, the next largest possible component value occurs when two components have the same absolute value and the other two components are zero. The length of that quaternion (v,v,0,0) is 1, therefore v^2 + v^2 = 1, 2v^2 = 1, v = 1/sqrt(2). This means you can encode the smallest three components in [-0.707107,+0.707107] instead of [-1,+1] giving you more precision with the same number of bits.\" public const float INV_SQRT_OF_TWO = 0.70710677 Field Value float MAX_STRING_BYTE_COUNT Maximum number of UTF8 bytes for string. Before the \"null or empty\" flag was added the length had to be able to represent 0, but now the receiver can infer that the byte count is at least 1. public const int MAX_STRING_BYTE_COUNT = 2048 Field Value int MAX_STRING_BYTE_COUNT_BITS Maximum number of bits to read/write for string byte count without overflowing the string buffer. public const int MAX_STRING_BYTE_COUNT_BITS = 11 Field Value int SQRT_OF_TWO public const float SQRT_OF_TWO = 1.4142135 Field Value float Methods CountBits(uint) public static int CountBits(uint value) Parameters value uint Returns int"
  },
  "api/SDG.NetPak.NetPakReader.EErrorFlags.html": {
    "href": "api/SDG.NetPak.NetPakReader.EErrorFlags.html",
    "title": "Enum NetPakReader.EErrorFlags | Unturned Analyse Doc",
    "keywords": "Enum NetPakReader.EErrorFlags Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll Lightweight error when exceptions are disabled. Bitwise OR to prevent different errors from clobbering each other. [Flags] public enum NetPakReader.EErrorFlags Fields AlignmentPadding = 4 AlignToByte bits should be zero. DestinationBufferOverflow = 2 Buffer passed into ReadBytes would have overflowed. None = 0 SaveStateBufferOverflow = 8 Buffer passed into SaveState would have overflowed. SourceBufferOverflow = 1 Call to ReadBits or ReadBytes would have overflowed our buffer."
  },
  "api/SDG.NetPak.NetPakReader.html": {
    "href": "api/SDG.NetPak.NetPakReader.html",
    "title": "Class NetPakReader | Unturned Analyse Doc",
    "keywords": "Class NetPakReader Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll Unpacks bits from a byte array into a 32-bit buffer value. GafferOnGames recommends this approach rather than \"farting across a buffer at byte level like it's 1985\". public class NetPakReader Inheritance object NetPakReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods SteamworksNetPakReaderEx.ReadSteamID(NetPakReader, out CSteamID) SteamworksNetPakReaderEx.ReadSteamID(NetPakReader, out PublishedFileId_t) SteamworksNetPakReaderEx.ReadSteamItemDefID(NetPakReader, out SteamItemDef_t) SteamworksNetPakReaderEx.ReadSteamItemInstanceID(NetPakReader, out SteamItemInstanceID_t) SystemNetPakReaderEx.ReadClampedFloat(NetPakReader, int, int, out float) SystemNetPakReaderEx.ReadDateTime(NetPakReader, out DateTime) SystemNetPakReaderEx.ReadDegrees(NetPakReader, out float, int) SystemNetPakReaderEx.ReadFloat(NetPakReader, out float) SystemNetPakReaderEx.ReadGuid(NetPakReader, out Guid) SystemNetPakReaderEx.ReadInt16(NetPakReader, out short) SystemNetPakReaderEx.ReadInt32(NetPakReader, out int) SystemNetPakReaderEx.ReadInt64(NetPakReader, out long) SystemNetPakReaderEx.ReadInt8(NetPakReader, out sbyte) SystemNetPakReaderEx.ReadList<T>(NetPakReader, List<T>, SystemNetPakReaderEx.ReadListItemWithReader<T>, NetLength) SystemNetPakReaderEx.ReadList<T>(NetPakReader, List<T>, SystemNetPakReaderEx.ReadListItem<T>, NetLength) SystemNetPakReaderEx.ReadRadians(NetPakReader, out float, int) SystemNetPakReaderEx.ReadSignedInt(NetPakReader, int, out int) SystemNetPakReaderEx.ReadSignedNormalizedFloat(NetPakReader, int, out float) SystemNetPakReaderEx.ReadStateArray(NetPakReader, out byte[]) SystemNetPakReaderEx.ReadString(NetPakReader, out string, int) SystemNetPakReaderEx.ReadUInt16(NetPakReader, out ushort) SystemNetPakReaderEx.ReadUInt32(NetPakReader, out uint) SystemNetPakReaderEx.ReadUInt64(NetPakReader, out ulong) SystemNetPakReaderEx.ReadUInt8(NetPakReader, out byte) SystemNetPakReaderEx.ReadUnsignedClampedFloat(NetPakReader, int, int, out float) SystemNetPakReaderEx.ReadUnsignedNormalizedFloat(NetPakReader, int, out float) UnityNetPakReaderEx.ReadClampedVector3(NetPakReader, out Vector3, int, int) UnityNetPakReaderEx.ReadColor32RGB(NetPakReader, out Color32) UnityNetPakReaderEx.ReadColor32RGB(NetPakReader, out Color) UnityNetPakReaderEx.ReadColor32RGBA(NetPakReader, out Color32) UnityNetPakReaderEx.ReadColor32RGBA(NetPakReader, out Color) UnityNetPakReaderEx.ReadNormalVector3(NetPakReader, out Vector3, int) UnityNetPakReaderEx.ReadQuaternion(NetPakReader, out Quaternion, int) UnityNetPakReaderEx.ReadSpecialYawOrQuaternion(NetPakReader, out Quaternion, int, int) Constructors NetPakReader() public NetPakReader() Fields errors public NetPakReader.EErrorFlags errors Field Value NetPakReader.EErrorFlags readByteIndex public int readByteIndex Field Value int scratchBitCount public int scratchBitCount Field Value int Properties ReachedEndOfSegment Imprecise because sent byte length is rounded up from bit length, but should help find particularly egregious reading errors. public bool ReachedEndOfSegment { get; } Property Value bool RemainingSegmentLength Number of bytes until end of segment is reached. public int RemainingSegmentLength { get; } Property Value int Methods AlignToByte() public bool AlignToByte() Returns bool GetBufferSegmentLength() public int GetBufferSegmentLength() Returns int LoadState(uint, int, byte[], int) public void LoadState(uint scratch, int scratchBitCount, byte[] buffer, int bufferLength) Parameters scratch uint scratchBitCount int buffer byte[] bufferLength int ReadBit(out bool) public bool ReadBit(out bool value) Parameters value bool Returns bool ReadBits(int, out uint) public bool ReadBits(int valueBitCount, out uint value) Parameters valueBitCount int value uint Returns bool ReadBytes(byte[]) public bool ReadBytes(byte[] destination) Parameters destination byte[] Returns bool ReadBytes(byte[], int) public bool ReadBytes(byte[] destination, int length) Parameters destination byte[] length int Returns bool ReadBytesPtr(int, out byte[], out int) Assumes length is greater than zero! Moves reader forward according to length. public bool ReadBytesPtr(int length, out byte[] source, out int bufferOffset) Parameters length int source byte[] bufferOffset int Returns bool Reset() public void Reset() ResetErrors() Used by invocation messages to show more error context rather than the default. public void ResetErrors() SaveState(out uint, out int, byte[]) Save remaining data to resume reading later. Used by net invokables to defer invocation. public bool SaveState(out uint scratch, out int scratchBitCount, byte[] buffer) Parameters scratch uint scratchBitCount int buffer byte[] Returns bool SetBuffer(byte[]) public void SetBuffer(byte[] buffer) Parameters buffer byte[] SetBufferSegment(byte[], int) public void SetBufferSegment(byte[] buffer, int bufferLength) Parameters buffer byte[] bufferLength int SetBufferSegmentCopy(byte[], byte[], int) Used by NetInvokable loopback to copy buffer from writer to reader. public void SetBufferSegmentCopy(byte[] sourceBuffer, byte[] destinationBuffer, int bufferLength) Parameters sourceBuffer byte[] destinationBuffer byte[] bufferLength int"
  },
  "api/SDG.NetPak.NetPakWriter.EErrorFlags.html": {
    "href": "api/SDG.NetPak.NetPakWriter.EErrorFlags.html",
    "title": "Enum NetPakWriter.EErrorFlags | Unturned Analyse Doc",
    "keywords": "Enum NetPakWriter.EErrorFlags Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll Lightweight error when exceptions are disabled. Bitwise OR to prevent different errors from clobbering each other. [Flags] public enum NetPakWriter.EErrorFlags Fields BufferOverflow = 1 None = 0"
  },
  "api/SDG.NetPak.NetPakWriter.html": {
    "href": "api/SDG.NetPak.NetPakWriter.html",
    "title": "Class NetPakWriter | Unturned Analyse Doc",
    "keywords": "Class NetPakWriter Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll Packs bits into a 32-bit buffer value, and from there into a byte array. GafferOnGames recommends this approach rather than \"farting across a buffer at byte level like it's 1985\". public class NetPakWriter Inheritance object NetPakWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods SteamworksNetPakWriterEx.WriteSteamID(NetPakWriter, CSteamID) SteamworksNetPakWriterEx.WriteSteamID(NetPakWriter, PublishedFileId_t) SteamworksNetPakWriterEx.WriteSteamItemDefID(NetPakWriter, SteamItemDef_t) SteamworksNetPakWriterEx.WriteSteamItemInstanceID(NetPakWriter, SteamItemInstanceID_t) SystemNetPakWriterEx.WriteClampedFloat(NetPakWriter, float, int, int) SystemNetPakWriterEx.WriteDateTime(NetPakWriter, DateTime) SystemNetPakWriterEx.WriteDegrees(NetPakWriter, float, int) SystemNetPakWriterEx.WriteFloat(NetPakWriter, float) SystemNetPakWriterEx.WriteGuid(NetPakWriter, Guid) SystemNetPakWriterEx.WriteInt16(NetPakWriter, short) SystemNetPakWriterEx.WriteInt32(NetPakWriter, int) SystemNetPakWriterEx.WriteInt64(NetPakWriter, long) SystemNetPakWriterEx.WriteInt8(NetPakWriter, sbyte) SystemNetPakWriterEx.WriteList<T>(NetPakWriter, List<T>, SystemNetPakWriterEx.WriteListItemWithWriter<T>, NetLength) SystemNetPakWriterEx.WriteList<T>(NetPakWriter, List<T>, SystemNetPakWriterEx.WriteListItem<T>, NetLength) SystemNetPakWriterEx.WriteRadians(NetPakWriter, float, int) SystemNetPakWriterEx.WriteSignedInt(NetPakWriter, int, int) SystemNetPakWriterEx.WriteSignedNormalizedFloat(NetPakWriter, float, int) SystemNetPakWriterEx.WriteStateArray(NetPakWriter, byte[]) SystemNetPakWriterEx.WriteString(NetPakWriter, string, int) SystemNetPakWriterEx.WriteUInt16(NetPakWriter, ushort) SystemNetPakWriterEx.WriteUInt32(NetPakWriter, uint) SystemNetPakWriterEx.WriteUInt64(NetPakWriter, ulong) SystemNetPakWriterEx.WriteUInt8(NetPakWriter, byte) SystemNetPakWriterEx.WriteUnsignedClampedFloat(NetPakWriter, float, int, int) SystemNetPakWriterEx.WriteUnsignedNormalizedFloat(NetPakWriter, float, int) UnityNetPakWriterEx.WriteClampedVector3(NetPakWriter, Vector3, int, int) UnityNetPakWriterEx.WriteColor32RGB(NetPakWriter, Color32) UnityNetPakWriterEx.WriteColor32RGBA(NetPakWriter, Color32) UnityNetPakWriterEx.WriteNormalVector3(NetPakWriter, Vector3, int) UnityNetPakWriterEx.WriteQuaternion(NetPakWriter, Quaternion, int) UnityNetPakWriterEx.WriteSpecialYawOrQuaternion(NetPakWriter, Quaternion, int, int) Constructors NetPakWriter() public NetPakWriter() Fields buffer public byte[] buffer Field Value byte[] errors public NetPakWriter.EErrorFlags errors Field Value NetPakWriter.EErrorFlags scratchBitCount public int scratchBitCount Field Value int writeByteIndex public int writeByteIndex Field Value int Methods AlignToByte() public bool AlignToByte() Returns bool Flush() public bool Flush() Returns bool Reset() public void Reset() WriteBit(bool) public bool WriteBit(bool value) Parameters value bool Returns bool WriteBits(uint, int) public bool WriteBits(uint value, int valueBitCount) Parameters value uint valueBitCount int Returns bool WriteBytes(byte[]) public bool WriteBytes(byte[] bytes) Parameters bytes byte[] Returns bool WriteBytes(byte[], int) public bool WriteBytes(byte[] bytes, int length) Parameters bytes byte[] length int Returns bool WriteBytes(byte[], int, int) public bool WriteBytes(byte[] bytes, int offset, int length) Parameters bytes byte[] offset int length int Returns bool WriteBytes(IntPtr, int) public bool WriteBytes(IntPtr bytesPtr, int length) Parameters bytesPtr IntPtr length int Returns bool"
  },
  "api/SDG.NetPak.SteamworksNetPakReaderEx.html": {
    "href": "api/SDG.NetPak.SteamworksNetPakReaderEx.html",
    "title": "Class SteamworksNetPakReaderEx | Unturned Analyse Doc",
    "keywords": "Class SteamworksNetPakReaderEx Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public static class SteamworksNetPakReaderEx Inheritance object SteamworksNetPakReaderEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadSteamID(NetPakReader, out CSteamID) public static bool ReadSteamID(this NetPakReader reader, out CSteamID value) Parameters reader NetPakReader value CSteamID Returns bool ReadSteamID(NetPakReader, out PublishedFileId_t) public static bool ReadSteamID(this NetPakReader reader, out PublishedFileId_t value) Parameters reader NetPakReader value PublishedFileId_t Returns bool ReadSteamItemDefID(NetPakReader, out SteamItemDef_t) public static bool ReadSteamItemDefID(this NetPakReader reader, out SteamItemDef_t value) Parameters reader NetPakReader value SteamItemDef_t Returns bool ReadSteamItemInstanceID(NetPakReader, out SteamItemInstanceID_t) public static bool ReadSteamItemInstanceID(this NetPakReader reader, out SteamItemInstanceID_t value) Parameters reader NetPakReader value SteamItemInstanceID_t Returns bool"
  },
  "api/SDG.NetPak.SteamworksNetPakWriterEx.html": {
    "href": "api/SDG.NetPak.SteamworksNetPakWriterEx.html",
    "title": "Class SteamworksNetPakWriterEx | Unturned Analyse Doc",
    "keywords": "Class SteamworksNetPakWriterEx Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public static class SteamworksNetPakWriterEx Inheritance object SteamworksNetPakWriterEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods WriteSteamID(NetPakWriter, CSteamID) public static bool WriteSteamID(this NetPakWriter writer, CSteamID value) Parameters writer NetPakWriter value CSteamID Returns bool WriteSteamID(NetPakWriter, PublishedFileId_t) public static bool WriteSteamID(this NetPakWriter writer, PublishedFileId_t value) Parameters writer NetPakWriter value PublishedFileId_t Returns bool WriteSteamItemDefID(NetPakWriter, SteamItemDef_t) public static bool WriteSteamItemDefID(this NetPakWriter writer, SteamItemDef_t value) Parameters writer NetPakWriter value SteamItemDef_t Returns bool WriteSteamItemInstanceID(NetPakWriter, SteamItemInstanceID_t) public static bool WriteSteamItemInstanceID(this NetPakWriter writer, SteamItemInstanceID_t value) Parameters writer NetPakWriter value SteamItemInstanceID_t Returns bool"
  },
  "api/SDG.NetPak.SystemNetPakReaderEx.ReadListItem-1.html": {
    "href": "api/SDG.NetPak.SystemNetPakReaderEx.ReadListItem-1.html",
    "title": "Delegate SystemNetPakReaderEx.ReadListItem<T> | Unturned Analyse Doc",
    "keywords": "Delegate SystemNetPakReaderEx.ReadListItem<T> Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public delegate bool SystemNetPakReaderEx.ReadListItem<T>(out T item) Parameters item T Returns bool Type Parameters T Constructors ReadListItem(object, IntPtr) public ReadListItem(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(out T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(out T item, AsyncCallback callback, object @object) Parameters item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(out T, IAsyncResult) public virtual bool EndInvoke(out T item, IAsyncResult result) Parameters item T result IAsyncResult Returns bool Invoke(out T) public virtual bool Invoke(out T item) Parameters item T Returns bool"
  },
  "api/SDG.NetPak.SystemNetPakReaderEx.ReadListItemWithReader-1.html": {
    "href": "api/SDG.NetPak.SystemNetPakReaderEx.ReadListItemWithReader-1.html",
    "title": "Delegate SystemNetPakReaderEx.ReadListItemWithReader<T> | Unturned Analyse Doc",
    "keywords": "Delegate SystemNetPakReaderEx.ReadListItemWithReader<T> Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public delegate bool SystemNetPakReaderEx.ReadListItemWithReader<T>(NetPakReader reader, out T item) Parameters reader NetPakReader item T Returns bool Type Parameters T Constructors ReadListItemWithReader(object, IntPtr) public ReadListItemWithReader(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(NetPakReader, out T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(NetPakReader reader, out T item, AsyncCallback callback, object @object) Parameters reader NetPakReader item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(out T, IAsyncResult) public virtual bool EndInvoke(out T item, IAsyncResult result) Parameters item T result IAsyncResult Returns bool Invoke(NetPakReader, out T) public virtual bool Invoke(NetPakReader reader, out T item) Parameters reader NetPakReader item T Returns bool"
  },
  "api/SDG.NetPak.SystemNetPakReaderEx.html": {
    "href": "api/SDG.NetPak.SystemNetPakReaderEx.html",
    "title": "Class SystemNetPakReaderEx | Unturned Analyse Doc",
    "keywords": "Class SystemNetPakReaderEx Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public static class SystemNetPakReaderEx Inheritance object SystemNetPakReaderEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadClampedFloat(NetPakReader, int, int, out float) Values outside the range are clamped into range. For example intBitCount of 7 allows range [-64, +64). public static bool ReadClampedFloat(this NetPakReader reader, int intBitCount, int fracBitCount, out float value) Parameters reader NetPakReader intBitCount int fracBitCount int value float Returns bool ReadDateTime(NetPakReader, out DateTime) public static bool ReadDateTime(this NetPakReader reader, out DateTime value) Parameters reader NetPakReader value DateTime Returns bool ReadDegrees(NetPakReader, out float, int) public static bool ReadDegrees(this NetPakReader reader, out float value, int bitCount = 8) Parameters reader NetPakReader value float bitCount int Returns bool ReadFloat(NetPakReader, out float) public static bool ReadFloat(this NetPakReader reader, out float value) Parameters reader NetPakReader value float Returns bool ReadGuid(NetPakReader, out Guid) public static bool ReadGuid(this NetPakReader reader, out Guid value) Parameters reader NetPakReader value Guid Returns bool ReadInt16(NetPakReader, out short) public static bool ReadInt16(this NetPakReader reader, out short value) Parameters reader NetPakReader value short Returns bool ReadInt32(NetPakReader, out int) public static bool ReadInt32(this NetPakReader reader, out int value) Parameters reader NetPakReader value int Returns bool ReadInt64(NetPakReader, out long) public static bool ReadInt64(this NetPakReader reader, out long value) Parameters reader NetPakReader value long Returns bool ReadInt8(NetPakReader, out sbyte) public static bool ReadInt8(this NetPakReader reader, out sbyte value) Parameters reader NetPakReader value sbyte Returns bool ReadList<T>(NetPakReader, List<T>, ReadListItemWithReader<T>, NetLength) public static bool ReadList<T>(this NetPakReader reader, List<T> list, SystemNetPakReaderEx.ReadListItemWithReader<T> readFunc, NetLength maxLength) Parameters reader NetPakReader list List<T> readFunc SystemNetPakReaderEx.ReadListItemWithReader<T> maxLength NetLength Returns bool Type Parameters T ReadList<T>(NetPakReader, List<T>, ReadListItem<T>, NetLength) public static bool ReadList<T>(this NetPakReader reader, List<T> list, SystemNetPakReaderEx.ReadListItem<T> readFunc, NetLength maxLength) Parameters reader NetPakReader list List<T> readFunc SystemNetPakReaderEx.ReadListItem<T> maxLength NetLength Returns bool Type Parameters T ReadRadians(NetPakReader, out float, int) public static bool ReadRadians(this NetPakReader reader, out float value, int bitCount = 8) Parameters reader NetPakReader value float bitCount int Returns bool ReadSignedInt(NetPakReader, int, out int) For example bitCount of 7 allows range [-64, +64). public static bool ReadSignedInt(this NetPakReader reader, int bitCount, out int value) Parameters reader NetPakReader bitCount int value int Returns bool ReadSignedNormalizedFloat(NetPakReader, int, out float) Decode a float in the range [-1.0, +1.0]. Endpoints and midpoint (0.0) are encoded exactly. public static bool ReadSignedNormalizedFloat(this NetPakReader reader, int bitCount, out float value) Parameters reader NetPakReader bitCount int value float Returns bool ReadStateArray(NetPakReader, out byte[]) Ideally should not be used by new code. public static bool ReadStateArray(this NetPakReader reader, out byte[] value) Parameters reader NetPakReader value byte[] Returns bool ReadString(NetPakReader, out string, int) public static bool ReadString(this NetPakReader reader, out string value, int lengthBitCount = 11) Parameters reader NetPakReader value string lengthBitCount int Returns bool ReadUInt16(NetPakReader, out ushort) public static bool ReadUInt16(this NetPakReader reader, out ushort value) Parameters reader NetPakReader value ushort Returns bool ReadUInt32(NetPakReader, out uint) public static bool ReadUInt32(this NetPakReader reader, out uint value) Parameters reader NetPakReader value uint Returns bool ReadUInt64(NetPakReader, out ulong) public static bool ReadUInt64(this NetPakReader reader, out ulong value) Parameters reader NetPakReader value ulong Returns bool ReadUInt8(NetPakReader, out byte) public static bool ReadUInt8(this NetPakReader reader, out byte value) Parameters reader NetPakReader value byte Returns bool ReadUnsignedClampedFloat(NetPakReader, int, int, out float) Values outside the range are clamped into range. For example intBitCount of 7 allows range [0, 128). public static bool ReadUnsignedClampedFloat(this NetPakReader reader, int intBitCount, int fracBitCount, out float value) Parameters reader NetPakReader intBitCount int fracBitCount int value float Returns bool ReadUnsignedNormalizedFloat(NetPakReader, int, out float) Decode a float in the range [0.0, 1.0]. Endpoints are encoded exactly, but not the midpoint (0.5). public static bool ReadUnsignedNormalizedFloat(this NetPakReader reader, int bitCount, out float value) Parameters reader NetPakReader bitCount int value float Returns bool"
  },
  "api/SDG.NetPak.SystemNetPakWriterEx.WriteListItem-1.html": {
    "href": "api/SDG.NetPak.SystemNetPakWriterEx.WriteListItem-1.html",
    "title": "Delegate SystemNetPakWriterEx.WriteListItem<T> | Unturned Analyse Doc",
    "keywords": "Delegate SystemNetPakWriterEx.WriteListItem<T> Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public delegate bool SystemNetPakWriterEx.WriteListItem<T>(T item) Parameters item T Returns bool Type Parameters T Constructors WriteListItem(object, IntPtr) public WriteListItem(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T item, AsyncCallback callback, object @object) Parameters item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual bool EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns bool Invoke(T) public virtual bool Invoke(T item) Parameters item T Returns bool"
  },
  "api/SDG.NetPak.SystemNetPakWriterEx.WriteListItemWithWriter-1.html": {
    "href": "api/SDG.NetPak.SystemNetPakWriterEx.WriteListItemWithWriter-1.html",
    "title": "Delegate SystemNetPakWriterEx.WriteListItemWithWriter<T> | Unturned Analyse Doc",
    "keywords": "Delegate SystemNetPakWriterEx.WriteListItemWithWriter<T> Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public delegate bool SystemNetPakWriterEx.WriteListItemWithWriter<T>(NetPakWriter writer, T item) Parameters writer NetPakWriter item T Returns bool Type Parameters T Constructors WriteListItemWithWriter(object, IntPtr) public WriteListItemWithWriter(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(NetPakWriter, T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(NetPakWriter writer, T item, AsyncCallback callback, object @object) Parameters writer NetPakWriter item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual bool EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns bool Invoke(NetPakWriter, T) public virtual bool Invoke(NetPakWriter writer, T item) Parameters writer NetPakWriter item T Returns bool"
  },
  "api/SDG.NetPak.SystemNetPakWriterEx.html": {
    "href": "api/SDG.NetPak.SystemNetPakWriterEx.html",
    "title": "Class SystemNetPakWriterEx | Unturned Analyse Doc",
    "keywords": "Class SystemNetPakWriterEx Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public static class SystemNetPakWriterEx Inheritance object SystemNetPakWriterEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods WriteClampedFloat(NetPakWriter, float, int, int) Values outside the range are clamped into range. For example intBitCount of 7 allows range [-64, +64). public static bool WriteClampedFloat(this NetPakWriter writer, float value, int intBitCount, int fracBitCount) Parameters writer NetPakWriter value float intBitCount int fracBitCount int Returns bool WriteDateTime(NetPakWriter, DateTime) public static bool WriteDateTime(this NetPakWriter writer, DateTime value) Parameters writer NetPakWriter value DateTime Returns bool WriteDegrees(NetPakWriter, float, int) Encode degrees wrapped into the range [0, 360). public static bool WriteDegrees(this NetPakWriter writer, float value, int bitCount = 8) Parameters writer NetPakWriter value float bitCount int Returns bool WriteFloat(NetPakWriter, float) public static bool WriteFloat(this NetPakWriter writer, float value) Parameters writer NetPakWriter value float Returns bool WriteGuid(NetPakWriter, Guid) public static bool WriteGuid(this NetPakWriter writer, Guid value) Parameters writer NetPakWriter value Guid Returns bool WriteInt16(NetPakWriter, short) public static bool WriteInt16(this NetPakWriter writer, short value) Parameters writer NetPakWriter value short Returns bool WriteInt32(NetPakWriter, int) public static bool WriteInt32(this NetPakWriter writer, int value) Parameters writer NetPakWriter value int Returns bool WriteInt64(NetPakWriter, long) public static bool WriteInt64(this NetPakWriter writer, long value) Parameters writer NetPakWriter value long Returns bool WriteInt8(NetPakWriter, sbyte) public static bool WriteInt8(this NetPakWriter writer, sbyte value) Parameters writer NetPakWriter value sbyte Returns bool WriteList<T>(NetPakWriter, List<T>, WriteListItemWithWriter<T>, NetLength) public static bool WriteList<T>(this NetPakWriter writer, List<T> list, SystemNetPakWriterEx.WriteListItemWithWriter<T> writeFunc, NetLength maxLength) Parameters writer NetPakWriter list List<T> writeFunc SystemNetPakWriterEx.WriteListItemWithWriter<T> maxLength NetLength Returns bool Type Parameters T WriteList<T>(NetPakWriter, List<T>, WriteListItem<T>, NetLength) public static bool WriteList<T>(this NetPakWriter writer, List<T> list, SystemNetPakWriterEx.WriteListItem<T> writeFunc, NetLength maxLength) Parameters writer NetPakWriter list List<T> writeFunc SystemNetPakWriterEx.WriteListItem<T> maxLength NetLength Returns bool Type Parameters T WriteRadians(NetPakWriter, float, int) Encode radians wrapped into the range [0, TWO_PI). public static bool WriteRadians(this NetPakWriter writer, float value, int bitCount = 8) Parameters writer NetPakWriter value float bitCount int Returns bool WriteSignedInt(NetPakWriter, int, int) For example bitCount of 7 allows range [-64, +64). public static bool WriteSignedInt(this NetPakWriter writer, int value, int bitCount) Parameters writer NetPakWriter value int bitCount int Returns bool WriteSignedNormalizedFloat(NetPakWriter, float, int) Encode a float in the range [-1.0, +1.0]. Endpoints and midpoint (0.0) are encoded exactly. public static bool WriteSignedNormalizedFloat(this NetPakWriter writer, float value, int bitCount) Parameters writer NetPakWriter value float bitCount int Returns bool WriteStateArray(NetPakWriter, byte[]) Ideally should not be used by new code. public static bool WriteStateArray(this NetPakWriter writer, byte[] value) Parameters writer NetPakWriter value byte[] Returns bool WriteString(NetPakWriter, string, int) public static bool WriteString(this NetPakWriter writer, string value, int lengthBitCount = 11) Parameters writer NetPakWriter value string lengthBitCount int Returns bool WriteUInt16(NetPakWriter, ushort) public static bool WriteUInt16(this NetPakWriter writer, ushort value) Parameters writer NetPakWriter value ushort Returns bool WriteUInt32(NetPakWriter, uint) public static bool WriteUInt32(this NetPakWriter writer, uint value) Parameters writer NetPakWriter value uint Returns bool WriteUInt64(NetPakWriter, ulong) public static bool WriteUInt64(this NetPakWriter writer, ulong value) Parameters writer NetPakWriter value ulong Returns bool WriteUInt8(NetPakWriter, byte) public static bool WriteUInt8(this NetPakWriter writer, byte value) Parameters writer NetPakWriter value byte Returns bool WriteUnsignedClampedFloat(NetPakWriter, float, int, int) Values outside the range are clamped into range. For example intBitCount of 7 allows range [0, 128). public static bool WriteUnsignedClampedFloat(this NetPakWriter writer, float value, int intBitCount, int fracBitCount) Parameters writer NetPakWriter value float intBitCount int fracBitCount int Returns bool WriteUnsignedNormalizedFloat(NetPakWriter, float, int) Encode a float in the range [0.0, 1.0]. Endpoints are encoded exactly, but not the midpoint (0.5). public static bool WriteUnsignedNormalizedFloat(this NetPakWriter writer, float value, int bitCount) Parameters writer NetPakWriter value float bitCount int Returns bool"
  },
  "api/SDG.NetPak.UnityNetPakReaderEx.html": {
    "href": "api/SDG.NetPak.UnityNetPakReaderEx.html",
    "title": "Class UnityNetPakReaderEx | Unturned Analyse Doc",
    "keywords": "Class UnityNetPakReaderEx Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public static class UnityNetPakReaderEx Inheritance object UnityNetPakReaderEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadClampedVector3(NetPakReader, out Vector3, int, int) Default intBitCount of 13 allows a range of [-4096, +4096). public static bool ReadClampedVector3(this NetPakReader reader, out Vector3 value, int intBitCount = 13, int fracBitCount = 7) Parameters reader NetPakReader value Vector3 intBitCount int fracBitCount int Returns bool ReadColor32RGB(NetPakReader, out Color32) Read 8-bit per channel color excluding alpha. public static bool ReadColor32RGB(this NetPakReader reader, out Color32 value) Parameters reader NetPakReader value Color32 Returns bool ReadColor32RGB(NetPakReader, out Color) Read 8-bit per channel color excluding alpha. public static bool ReadColor32RGB(this NetPakReader reader, out Color value) Parameters reader NetPakReader value Color Returns bool ReadColor32RGBA(NetPakReader, out Color32) Read 8-bit per channel color including alpha. public static bool ReadColor32RGBA(this NetPakReader reader, out Color32 value) Parameters reader NetPakReader value Color32 Returns bool ReadColor32RGBA(NetPakReader, out Color) Read 8-bit per channel color including alpha. public static bool ReadColor32RGBA(this NetPakReader reader, out Color value) Parameters reader NetPakReader value Color Returns bool ReadNormalVector3(NetPakReader, out Vector3, int) Similar to the quaternion optimization, but needs a sign bit for the largest value. public static bool ReadNormalVector3(this NetPakReader reader, out Vector3 value, int bitsPerComponent = 9) Parameters reader NetPakReader value Vector3 bitsPerComponent int Returns bool ReadQuaternion(NetPakReader, out Quaternion, int) Uses \"smallest three\" optimization described by Glenn Fiedler: https://gafferongames.com/post/snapshot_compression/ Quoting here in case the link moves: \"Since we know the quaternion represents a rotation its length must be 1, so x^2+y^2+z^2+w^2 = 1. We can use this identity to drop one component and reconstruct it on the other side. For example, if you send x,y,z you can reconstruct w = sqrt(1 - x^2 - y^2 - z^2). You might think you need to send a sign bit for w in case it is negative, but you don’t, because you can make w always positive by negating the entire quaternion if w is negative (in quaternion space (x,y,z,w) and (-x,-y,-z,-w) represent the same rotation.) Don’t always drop the same component due to numerical precision issues. Instead, find the component with the largest absolute value and encode its index using two bits [0, 3] (0=x, 1=y, 2=z, 3=w), then send the index of the largest component and the smallest three components over the network (hence the name). On the other side use the index of the largest bit to know which component you have to reconstruct from the other three.\" public static bool ReadQuaternion(this NetPakReader reader, out Quaternion value, int bitsPerComponent = 9) Parameters reader NetPakReader value Quaternion bitsPerComponent int Returns bool ReadSpecialYawOrQuaternion(NetPakReader, out Quaternion, int, int) Note: \"Special\" here refers to the -90 rotation on the X axis. :) Read only yaw if quaternion was flat, full quaternion otherwise. public static bool ReadSpecialYawOrQuaternion(this NetPakReader reader, out Quaternion value, int yawBitCount = 9, int quaternionBitsPerComponent = 9) Parameters reader NetPakReader value Quaternion yawBitCount int quaternionBitsPerComponent int Returns bool"
  },
  "api/SDG.NetPak.UnityNetPakWriterEx.html": {
    "href": "api/SDG.NetPak.UnityNetPakWriterEx.html",
    "title": "Class UnityNetPakWriterEx | Unturned Analyse Doc",
    "keywords": "Class UnityNetPakWriterEx Namespace SDG.NetPak Assembly SDG.NetPak.Runtime.dll public static class UnityNetPakWriterEx Inheritance object UnityNetPakWriterEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods WriteClampedVector3(NetPakWriter, Vector3, int, int) Default intBitCount of 13 allows a range of [-4096, +4096). public static bool WriteClampedVector3(this NetPakWriter writer, Vector3 value, int intBitCount = 13, int fracBitCount = 7) Parameters writer NetPakWriter value Vector3 intBitCount int fracBitCount int Returns bool WriteColor32RGB(NetPakWriter, Color32) Write 8-bit per channel color excluding alpha. public static bool WriteColor32RGB(this NetPakWriter writer, Color32 value) Parameters writer NetPakWriter value Color32 Returns bool WriteColor32RGBA(NetPakWriter, Color32) Write 8-bit per channel color including alpha. public static bool WriteColor32RGBA(this NetPakWriter writer, Color32 value) Parameters writer NetPakWriter value Color32 Returns bool WriteNormalVector3(NetPakWriter, Vector3, int) Similar to the quaternion optimization, but needs a sign bit for the largest value. public static bool WriteNormalVector3(this NetPakWriter writer, Vector3 value, int bitsPerComponent = 9) Parameters writer NetPakWriter value Vector3 bitsPerComponent int Returns bool WriteQuaternion(NetPakWriter, Quaternion, int) Uses \"smallest three\" optimization described by Glenn Fiedler: https://gafferongames.com/post/snapshot_compression/ Quoting here in case the link moves: \"Since we know the quaternion represents a rotation its length must be 1, so x^2+y^2+z^2+w^2 = 1. We can use this identity to drop one component and reconstruct it on the other side. For example, if you send x,y,z you can reconstruct w = sqrt(1 - x^2 - y^2 - z^2). You might think you need to send a sign bit for w in case it is negative, but you don’t, because you can make w always positive by negating the entire quaternion if w is negative (in quaternion space (x,y,z,w) and (-x,-y,-z,-w) represent the same rotation.) Don’t always drop the same component due to numerical precision issues. Instead, find the component with the largest absolute value and encode its index using two bits [0, 3] (0=x, 1=y, 2=z, 3=w), then send the index of the largest component and the smallest three components over the network (hence the name). On the other side use the index of the largest bit to know which component you have to reconstruct from the other three.\" public static bool WriteQuaternion(this NetPakWriter writer, Quaternion value, int bitsPerComponent = 9) Parameters writer NetPakWriter value Quaternion bitsPerComponent int Returns bool WriteSpecialYawOrQuaternion(NetPakWriter, Quaternion, int, int) Note: \"Special\" here refers to the -90 rotation on the X axis. :) If quaternion is only a rotation around the Y axis (yaw) which is common for barricades and structures, write only yaw. Otherwise, write full quaternion. public static bool WriteSpecialYawOrQuaternion(this NetPakWriter writer, Quaternion value, int yawBitCount = 9, int quaternionBitsPerComponent = 9) Parameters writer NetPakWriter value Quaternion yawBitCount int quaternionBitsPerComponent int Returns bool"
  },
  "api/SDG.NetPak.html": {
    "href": "api/SDG.NetPak.html",
    "title": "Namespace SDG.NetPak | Unturned Analyse Doc",
    "keywords": "Namespace SDG.NetPak Classes NetEnumAttribute Indicates net reader/writer implementation should be generated. NetPakConst NetPakReader Unpacks bits from a byte array into a 32-bit buffer value. GafferOnGames recommends this approach rather than \"farting across a buffer at byte level like it's 1985\". NetPakWriter Packs bits into a 32-bit buffer value, and from there into a byte array. GafferOnGames recommends this approach rather than \"farting across a buffer at byte level like it's 1985\". SteamworksNetPakReaderEx SteamworksNetPakWriterEx SystemNetPakReaderEx SystemNetPakWriterEx UnityNetPakReaderEx UnityNetPakWriterEx Structs NetLength Enums NetPakReader.EErrorFlags Lightweight error when exceptions are disabled. Bitwise OR to prevent different errors from clobbering each other. NetPakWriter.EErrorFlags Lightweight error when exceptions are disabled. Bitwise OR to prevent different errors from clobbering each other. Delegates SystemNetPakReaderEx.ReadListItemWithReader<T> SystemNetPakReaderEx.ReadListItem<T> SystemNetPakWriterEx.WriteListItemWithWriter<T> SystemNetPakWriterEx.WriteListItem<T>"
  },
  "api/SDG.NetTransport.Loopback.TransportConnection_Loopback.html": {
    "href": "api/SDG.NetTransport.Loopback.TransportConnection_Loopback.html",
    "title": "Struct TransportConnection_Loopback | Unturned Analyse Doc",
    "keywords": "Struct TransportConnection_Loopback Namespace SDG.NetTransport.Loopback Assembly Assembly-CSharp.dll Dummy connection used in singleplayer. public struct TransportConnection_Loopback : ITransportConnection, IEquatable<ITransportConnection> Implements ITransportConnection IEquatable<ITransportConnection> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields DedicatedServer public static readonly ITransportConnection DedicatedServer Field Value ITransportConnection Methods CloseConnection() public void CloseConnection() Create() public static TransportConnection_Loopback Create() Returns TransportConnection_Loopback Equals(ITransportConnection) public bool Equals(ITransportConnection other) Parameters other ITransportConnection Returns bool Equals(TransportConnection_Loopback) public bool Equals(TransportConnection_Loopback other) Parameters other TransportConnection_Loopback Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetAddress() public IPAddress GetAddress() Returns IPAddress GetAddressString(bool) public string GetAddressString(bool withPort) Parameters withPort bool Returns string GetHashCode() public override int GetHashCode() Returns int Send(byte[], long, ENetReliability) public void Send(byte[] buffer, long size, ENetReliability reliability) Parameters buffer byte[] size long reliability ENetReliability ToString() public override string ToString() Returns string TryGetIPv4Address(out uint) public bool TryGetIPv4Address(out uint address) Parameters address uint Returns bool TryGetPort(out ushort) public bool TryGetPort(out ushort port) Parameters port ushort Returns bool TryGetSteamId(out ulong) public bool TryGetSteamId(out ulong steamId) Parameters steamId ulong Returns bool Operators operator ==(TransportConnection_Loopback, TransportConnection_Loopback) public static bool operator ==(TransportConnection_Loopback lhs, TransportConnection_Loopback rhs) Parameters lhs TransportConnection_Loopback rhs TransportConnection_Loopback Returns bool operator !=(TransportConnection_Loopback, TransportConnection_Loopback) public static bool operator !=(TransportConnection_Loopback lhs, TransportConnection_Loopback rhs) Parameters lhs TransportConnection_Loopback rhs TransportConnection_Loopback Returns bool"
  },
  "api/SDG.NetTransport.Loopback.html": {
    "href": "api/SDG.NetTransport.Loopback.html",
    "title": "Namespace SDG.NetTransport.Loopback | Unturned Analyse Doc",
    "keywords": "Namespace SDG.NetTransport.Loopback Structs TransportConnection_Loopback Dummy connection used in singleplayer."
  },
  "api/SDG.NetTransport.SteamNetworking.ClientTransport_SteamNetworking.html": {
    "href": "api/SDG.NetTransport.SteamNetworking.ClientTransport_SteamNetworking.html",
    "title": "Class ClientTransport_SteamNetworking | Unturned Analyse Doc",
    "keywords": "Class ClientTransport_SteamNetworking Namespace SDG.NetTransport.SteamNetworking Assembly Assembly-CSharp.dll SteamNetworking is deprecated. public class ClientTransport_SteamNetworking : TransportBase_SteamNetworking, IClientTransport Inheritance object TransportBase_SteamNetworking ClientTransport_SteamNetworking Implements IClientTransport Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClientTransport_SteamNetworking() public ClientTransport_SteamNetworking() Methods Initialize(ClientTransportReady, ClientTransportFailure) public void Initialize(ClientTransportReady callback, ClientTransportFailure failureCallback) Parameters callback ClientTransportReady failureCallback ClientTransportFailure Receive(byte[], out long) public bool Receive(byte[] buffer, out long size) Parameters buffer byte[] size long Returns bool Send(byte[], long, ENetReliability) public void Send(byte[] buffer, long size, ENetReliability reliability) Parameters buffer byte[] size long reliability ENetReliability TearDown() public void TearDown() TryGetConnectionPort(out ushort) public bool TryGetConnectionPort(out ushort connectionPort) Parameters connectionPort ushort Returns bool TryGetIPv4Address(out IPv4Address) public bool TryGetIPv4Address(out IPv4Address address) Parameters address IPv4Address Returns bool TryGetQueryPort(out ushort) public bool TryGetQueryPort(out ushort queryPort) Parameters queryPort ushort Returns bool"
  },
  "api/SDG.NetTransport.SteamNetworking.ServerTransport_SteamNetworking.html": {
    "href": "api/SDG.NetTransport.SteamNetworking.ServerTransport_SteamNetworking.html",
    "title": "Class ServerTransport_SteamNetworking | Unturned Analyse Doc",
    "keywords": "Class ServerTransport_SteamNetworking Namespace SDG.NetTransport.SteamNetworking Assembly Assembly-CSharp.dll SteamNetworking is deprecated. public class ServerTransport_SteamNetworking : TransportBase_SteamNetworking, IServerTransport Inheritance object TransportBase_SteamNetworking ServerTransport_SteamNetworking Implements IServerTransport Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerTransport_SteamNetworking() public ServerTransport_SteamNetworking() Methods Initialize(ServerTransportConnectionFailureCallback) public void Initialize(ServerTransportConnectionFailureCallback connectionClosedCallback) Parameters connectionClosedCallback ServerTransportConnectionFailureCallback Receive(byte[], out long, out ITransportConnection) public bool Receive(byte[] buffer, out long size, out ITransportConnection transportConnection) Parameters buffer byte[] size long transportConnection ITransportConnection Returns bool TearDown() public void TearDown()"
  },
  "api/SDG.NetTransport.SteamNetworking.TransportBase_SteamNetworking.html": {
    "href": "api/SDG.NetTransport.SteamNetworking.TransportBase_SteamNetworking.html",
    "title": "Class TransportBase_SteamNetworking | Unturned Analyse Doc",
    "keywords": "Class TransportBase_SteamNetworking Namespace SDG.NetTransport.SteamNetworking Assembly Assembly-CSharp.dll public abstract class TransportBase_SteamNetworking Inheritance object TransportBase_SteamNetworking Derived ClientTransport_SteamNetworking ServerTransport_SteamNetworking Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TransportBase_SteamNetworking() protected TransportBase_SteamNetworking()"
  },
  "api/SDG.NetTransport.SteamNetworking.html": {
    "href": "api/SDG.NetTransport.SteamNetworking.html",
    "title": "Namespace SDG.NetTransport.SteamNetworking | Unturned Analyse Doc",
    "keywords": "Namespace SDG.NetTransport.SteamNetworking Classes ClientTransport_SteamNetworking SteamNetworking is deprecated. ServerTransport_SteamNetworking SteamNetworking is deprecated. TransportBase_SteamNetworking"
  },
  "api/SDG.NetTransport.SteamNetworkingSockets.ClientTransport_SteamNetworkingSockets.html": {
    "href": "api/SDG.NetTransport.SteamNetworkingSockets.ClientTransport_SteamNetworkingSockets.html",
    "title": "Class ClientTransport_SteamNetworkingSockets | Unturned Analyse Doc",
    "keywords": "Class ClientTransport_SteamNetworkingSockets Namespace SDG.NetTransport.SteamNetworkingSockets Assembly Assembly-CSharp.dll public class ClientTransport_SteamNetworkingSockets : TransportBase_SteamNetworkingSockets, IClientTransport Inheritance object TransportBase_SteamNetworkingSockets ClientTransport_SteamNetworkingSockets Implements IClientTransport Inherited Members TransportBase_SteamNetworkingSockets.clAllowWithoutAuth TransportBase_SteamNetworkingSockets.DumpSteamNetworkingMessage(SteamNetworkingMessage_t) TransportBase_SteamNetworkingSockets.LogDebugOutput() TransportBase_SteamNetworkingSockets.SelectDebugOutputDetailLevel() TransportBase_SteamNetworkingSockets.BuildDefaultConfig() TransportBase_SteamNetworkingSockets.GetDebugOutputFunction() Constructors ClientTransport_SteamNetworkingSockets() public ClientTransport_SteamNetworkingSockets() Methods Initialize(ClientTransportReady, ClientTransportFailure) public void Initialize(ClientTransportReady callback, ClientTransportFailure failureCallback) Parameters callback ClientTransportReady failureCallback ClientTransportFailure Receive(byte[], out long) public bool Receive(byte[] buffer, out long size) Parameters buffer byte[] size long Returns bool Send(byte[], long, ENetReliability) public void Send(byte[] buffer, long size, ENetReliability reliability) Parameters buffer byte[] size long reliability ENetReliability TearDown() public void TearDown() TryGetConnectionPort(out ushort) public bool TryGetConnectionPort(out ushort connectionPort) Parameters connectionPort ushort Returns bool TryGetIPv4Address(out IPv4Address) public bool TryGetIPv4Address(out IPv4Address address) Parameters address IPv4Address Returns bool TryGetQueryPort(out ushort) public bool TryGetQueryPort(out ushort queryPort) Parameters queryPort ushort Returns bool"
  },
  "api/SDG.NetTransport.SteamNetworkingSockets.ServerTransport_SteamNetworkingSockets.html": {
    "href": "api/SDG.NetTransport.SteamNetworkingSockets.ServerTransport_SteamNetworkingSockets.html",
    "title": "Class ServerTransport_SteamNetworkingSockets | Unturned Analyse Doc",
    "keywords": "Class ServerTransport_SteamNetworkingSockets Namespace SDG.NetTransport.SteamNetworkingSockets Assembly Assembly-CSharp.dll public class ServerTransport_SteamNetworkingSockets : TransportBase_SteamNetworkingSockets, IServerTransport Inheritance object TransportBase_SteamNetworkingSockets ServerTransport_SteamNetworkingSockets Implements IServerTransport Inherited Members TransportBase_SteamNetworkingSockets.clAllowWithoutAuth TransportBase_SteamNetworkingSockets.DumpSteamNetworkingMessage(SteamNetworkingMessage_t) TransportBase_SteamNetworkingSockets.LogDebugOutput() TransportBase_SteamNetworkingSockets.SelectDebugOutputDetailLevel() TransportBase_SteamNetworkingSockets.BuildDefaultConfig() TransportBase_SteamNetworkingSockets.GetDebugOutputFunction() Constructors ServerTransport_SteamNetworkingSockets() public ServerTransport_SteamNetworkingSockets() Methods Initialize(ServerTransportConnectionFailureCallback) public void Initialize(ServerTransportConnectionFailureCallback connectionFailureCallback) Parameters connectionFailureCallback ServerTransportConnectionFailureCallback Receive(byte[], out long, out ITransportConnection) public bool Receive(byte[] buffer, out long size, out ITransportConnection transportConnection) Parameters buffer byte[] size long transportConnection ITransportConnection Returns bool TearDown() public void TearDown()"
  },
  "api/SDG.NetTransport.SteamNetworkingSockets.TransportBase_SteamNetworkingSockets.html": {
    "href": "api/SDG.NetTransport.SteamNetworkingSockets.TransportBase_SteamNetworkingSockets.html",
    "title": "Class TransportBase_SteamNetworkingSockets | Unturned Analyse Doc",
    "keywords": "Class TransportBase_SteamNetworkingSockets Namespace SDG.NetTransport.SteamNetworkingSockets Assembly Assembly-CSharp.dll public abstract class TransportBase_SteamNetworkingSockets : TransportBase Inheritance object TransportBase_SteamNetworkingSockets Derived ClientTransport_SteamNetworkingSockets ServerTransport_SteamNetworkingSockets Constructors TransportBase_SteamNetworkingSockets() protected TransportBase_SteamNetworkingSockets() Fields clAllowWithoutAuth Should certificate authentication be disabled for UDP connections? protected static CommandLineFlag clAllowWithoutAuth Field Value CommandLineFlag Methods BuildDefaultConfig() protected virtual List<SteamNetworkingConfigValue_t> BuildDefaultConfig() Returns List<SteamNetworkingConfigValue_t> DumpSteamNetworkingMessage(SteamNetworkingMessage_t) protected void DumpSteamNetworkingMessage(SteamNetworkingMessage_t message) Parameters message SteamNetworkingMessage_t GetDebugOutputFunction() protected FSteamNetworkingSocketsDebugOutput GetDebugOutputFunction() Returns FSteamNetworkingSocketsDebugOutput LogDebugOutput() protected void LogDebugOutput() SelectDebugOutputDetailLevel() protected ESteamNetworkingSocketsDebugOutputType SelectDebugOutputDetailLevel() Returns ESteamNetworkingSocketsDebugOutputType"
  },
  "api/SDG.NetTransport.SteamNetworkingSockets.html": {
    "href": "api/SDG.NetTransport.SteamNetworkingSockets.html",
    "title": "Namespace SDG.NetTransport.SteamNetworkingSockets | Unturned Analyse Doc",
    "keywords": "Namespace SDG.NetTransport.SteamNetworkingSockets Classes ClientTransport_SteamNetworkingSockets ServerTransport_SteamNetworkingSockets TransportBase_SteamNetworkingSockets"
  },
  "api/SDG.NetTransport.SystemSockets.ClientTransport_SystemSockets.html": {
    "href": "api/SDG.NetTransport.SystemSockets.ClientTransport_SystemSockets.html",
    "title": "Class ClientTransport_SystemSockets | Unturned Analyse Doc",
    "keywords": "Class ClientTransport_SystemSockets Namespace SDG.NetTransport.SystemSockets Assembly Assembly-CSharp.dll Implementation using .NET Berkeley sockets. public class ClientTransport_SystemSockets : TransportBase_SystemSockets, IClientTransport Inheritance object TransportBase_SystemSockets ClientTransport_SystemSockets Implements IClientTransport Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClientTransport_SystemSockets() public ClientTransport_SystemSockets() Methods Initialize(ClientTransportReady, ClientTransportFailure) public void Initialize(ClientTransportReady callback, ClientTransportFailure failureCallback) Parameters callback ClientTransportReady failureCallback ClientTransportFailure Receive(byte[], out long) public bool Receive(byte[] buffer, out long size) Parameters buffer byte[] size long Returns bool Send(byte[], long, ENetReliability) public void Send(byte[] buffer, long size, ENetReliability reliability) Parameters buffer byte[] size long reliability ENetReliability TearDown() public void TearDown() TryGetConnectionPort(out ushort) public bool TryGetConnectionPort(out ushort connectionPort) Parameters connectionPort ushort Returns bool TryGetIPv4Address(out IPv4Address) public bool TryGetIPv4Address(out IPv4Address address) Parameters address IPv4Address Returns bool TryGetQueryPort(out ushort) public bool TryGetQueryPort(out ushort queryPort) Parameters queryPort ushort Returns bool"
  },
  "api/SDG.NetTransport.SystemSockets.ServerTransport_SystemSockets.html": {
    "href": "api/SDG.NetTransport.SystemSockets.ServerTransport_SystemSockets.html",
    "title": "Class ServerTransport_SystemSockets | Unturned Analyse Doc",
    "keywords": "Class ServerTransport_SystemSockets Namespace SDG.NetTransport.SystemSockets Assembly Assembly-CSharp.dll Implementation using .NET Berkeley sockets. public class ServerTransport_SystemSockets : TransportBase_SystemSockets, IServerTransport Inheritance object TransportBase_SystemSockets ServerTransport_SystemSockets Implements IServerTransport Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerTransport_SystemSockets() public ServerTransport_SystemSockets() Methods Initialize(ServerTransportConnectionFailureCallback) public void Initialize(ServerTransportConnectionFailureCallback connectionClosedCallback) Parameters connectionClosedCallback ServerTransportConnectionFailureCallback Receive(byte[], out long, out ITransportConnection) public bool Receive(byte[] buffer, out long size, out ITransportConnection transportConnection) Parameters buffer byte[] size long transportConnection ITransportConnection Returns bool TearDown() public void TearDown()"
  },
  "api/SDG.NetTransport.SystemSockets.TransportBase_SystemSockets.html": {
    "href": "api/SDG.NetTransport.SystemSockets.TransportBase_SystemSockets.html",
    "title": "Class TransportBase_SystemSockets | Unturned Analyse Doc",
    "keywords": "Class TransportBase_SystemSockets Namespace SDG.NetTransport.SystemSockets Assembly Assembly-CSharp.dll public abstract class TransportBase_SystemSockets Inheritance object TransportBase_SystemSockets Derived ClientTransport_SystemSockets ServerTransport_SystemSockets Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TransportBase_SystemSockets() protected TransportBase_SystemSockets()"
  },
  "api/SDG.NetTransport.SystemSockets.html": {
    "href": "api/SDG.NetTransport.SystemSockets.html",
    "title": "Namespace SDG.NetTransport.SystemSockets | Unturned Analyse Doc",
    "keywords": "Namespace SDG.NetTransport.SystemSockets Classes ClientTransport_SystemSockets Implementation using .NET Berkeley sockets. ServerTransport_SystemSockets Implementation using .NET Berkeley sockets. TransportBase_SystemSockets"
  },
  "api/SDG.Provider.CachedUGCDetails.html": {
    "href": "api/SDG.Provider.CachedUGCDetails.html",
    "title": "Struct CachedUGCDetails | Unturned Analyse Doc",
    "keywords": "Struct CachedUGCDetails Namespace SDG.Provider Assembly Assembly-CSharp.dll Details of a workshop item that the game may want to refer to later. Cached during client startup after getting installed items, and while downloading UGC for the dedicated server. public struct CachedUGCDetails Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields compatibilityVersion public byte compatibilityVersion Field Value byte fileId public PublishedFileId_t fileId Field Value PublishedFileId_t isBannedOrPrivate Banned workshop files are shown in red. public bool isBannedOrPrivate Field Value bool name public string name Field Value string updateTimestamp Used on dedicated server to test whether map has been updated, and whether local copy of file is out-of-date. public uint updateTimestamp Field Value uint Methods GetTitle() Some workshop thieves use an empty title, in which case we show the file ID as title text. public string GetTitle() Returns string"
  },
  "api/SDG.Provider.DynamicEconDetails.html": {
    "href": "api/SDG.Provider.DynamicEconDetails.html",
    "title": "Struct DynamicEconDetails | Unturned Analyse Doc",
    "keywords": "Struct DynamicEconDetails Namespace SDG.Provider Assembly Assembly-CSharp.dll public struct DynamicEconDetails Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors DynamicEconDetails(string, string) public DynamicEconDetails(string tags, string dynamic_props) Parameters tags string dynamic_props string Fields dynamic_props public string dynamic_props Field Value string tags public string tags Field Value string Methods getParticleEffect() Parse dynamic tag mythic effect. public ushort getParticleEffect() Returns ushort ID of mythical asset, or zero if not in tags. getPredictedDynamicPropsJsonForStatTracker(EStatTrackerType, int) public string getPredictedDynamicPropsJsonForStatTracker(EStatTrackerType type, int kills) Parameters type EStatTrackerType kills int Returns string getRagdollEffect(out ERagdollEffect) public bool getRagdollEffect(out ERagdollEffect effect) Parameters effect ERagdollEffect Returns bool getStatTrackerType(out EStatTrackerType) public bool getStatTrackerType(out EStatTrackerType type) Parameters type EStatTrackerType Returns bool getStatTrackerValue(out EStatTrackerType, out int) public bool getStatTrackerValue(out EStatTrackerType type, out int kills) Parameters type EStatTrackerType kills int Returns bool"
  },
  "api/SDG.Provider.EStatTrackerType.html": {
    "href": "api/SDG.Provider.EStatTrackerType.html",
    "title": "Enum EStatTrackerType | Unturned Analyse Doc",
    "keywords": "Enum EStatTrackerType Namespace SDG.Provider Assembly Assembly-CSharp.dll public enum EStatTrackerType Fields NONE = 0 PLAYER = 2 TOTAL = 1"
  },
  "api/SDG.Provider.EconExchangePair.html": {
    "href": "api/SDG.Provider.EconExchangePair.html",
    "title": "Struct EconExchangePair | Unturned Analyse Doc",
    "keywords": "Struct EconExchangePair Namespace SDG.Provider Assembly Assembly-CSharp.dll public struct EconExchangePair Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors EconExchangePair(ulong, ushort) public EconExchangePair(ulong newInstanceId, ushort newQuantity) Parameters newInstanceId ulong newQuantity ushort Fields instanceId public ulong instanceId Field Value ulong quantity public ushort quantity Field Value ushort"
  },
  "api/SDG.Provider.IProvider.html": {
    "href": "api/SDG.Provider.IProvider.html",
    "title": "Interface IProvider | Unturned Analyse Doc",
    "keywords": "Interface IProvider Namespace SDG.Provider Assembly Assembly-CSharp.dll public interface IProvider Properties achievementsService Current achievements implementation. IAchievementsService achievementsService { get; } Property Value IAchievementsService browserService Current browser implementation. IBrowserService browserService { get; } Property Value IBrowserService cloudService Current cloud implementation. ICloudService cloudService { get; } Property Value ICloudService communityService Current community implementation. ICommunityService communityService { get; } Property Value ICommunityService economyService Current economy implementation. TempSteamworksEconomy economyService { get; } Property Value TempSteamworksEconomy matchmakingService Current matchmaking implementation. TempSteamworksMatchmaking matchmakingService { get; } Property Value TempSteamworksMatchmaking multiplayerService Current multiplayer implementation. IMultiplayerService multiplayerService { get; } Property Value IMultiplayerService statisticsService Current statistics implementation. IStatisticsService statisticsService { get; } Property Value IStatisticsService storeService Current store implementation. IStoreService storeService { get; } Property Value IStoreService translationService Current translation implementation. ITranslationService translationService { get; } Property Value ITranslationService workshopService Current workshop implementation. TempSteamworksWorkshop workshopService { get; } Property Value TempSteamworksWorkshop Methods intialize() Initialize this provider's external API. Should be called before using provider features. void intialize() Exceptions Exception Thrown if initializing fails. shutdown() Shutdown this provider's external API. Should be called before closing the program if using provider features. void shutdown() update() Update this provider's external API. Should be called every frame if using provider features. void update()"
  },
  "api/SDG.Provider.Services.Achievements.IAchievementsService.html": {
    "href": "api/SDG.Provider.Services.Achievements.IAchievementsService.html",
    "title": "Interface IAchievementsService | Unturned Analyse Doc",
    "keywords": "Interface IAchievementsService Namespace SDG.Provider.Services.Achievements Assembly Assembly-CSharp.dll public interface IAchievementsService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Methods getAchievement(string, out bool) Checks whether the current user has an achievement with this name. bool getAchievement(string name, out bool has) Parameters name string The name of the achievement. has bool Whether the user has this achievement. Returns bool Whether the check succesfully executed. setAchievement(string) Assigns the current user an achievement with this name. bool setAchievement(string name) Parameters name string The name of the achievement. Returns bool Whether the assignment succesfully executed."
  },
  "api/SDG.Provider.Services.Achievements.html": {
    "href": "api/SDG.Provider.Services.Achievements.html",
    "title": "Namespace SDG.Provider.Services.Achievements | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Achievements Interfaces IAchievementsService"
  },
  "api/SDG.Provider.Services.Browser.IBrowserService.html": {
    "href": "api/SDG.Provider.Services.Browser.IBrowserService.html",
    "title": "Interface IBrowserService | Unturned Analyse Doc",
    "keywords": "Interface IBrowserService Namespace SDG.Provider.Services.Browser Assembly Assembly-CSharp.dll public interface IBrowserService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties canOpenBrowser Whether the user has their overlay enabled. bool canOpenBrowser { get; } Property Value bool Methods open(string) void open(string url) Parameters url string"
  },
  "api/SDG.Provider.Services.Browser.html": {
    "href": "api/SDG.Provider.Services.Browser.html",
    "title": "Namespace SDG.Provider.Services.Browser | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Browser Interfaces IBrowserService"
  },
  "api/SDG.Provider.Services.Cloud.ICloudService.html": {
    "href": "api/SDG.Provider.Services.Cloud.ICloudService.html",
    "title": "Interface ICloudService | Unturned Analyse Doc",
    "keywords": "Interface ICloudService Namespace SDG.Provider.Services.Cloud Assembly Assembly-CSharp.dll public interface ICloudService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Methods delete(string) Deletes the path. bool delete(string path) Parameters path string The file path to delete. Returns bool Whether the deletion succesfully executed. exists(string, out bool) Checks whether the path already exists. bool exists(string path, out bool exists) Parameters path string The file path to check. exists bool Whether the file exists. Returns bool Whether the check succesfully executed. getSize(string, out int) Checks the size of a file. bool getSize(string path, out int size) Parameters path string The file path to check. size int The size of the file. Returns bool Whether the check succesfully executed. read(string, byte[]) Reads data into the data array. bool read(string path, byte[] data) Parameters path string The file path to read from. data byte[] The array to read into. Returns bool Whether the read succesfully executed. write(string, byte[], int) Writes data out of data array. bool write(string path, byte[] data, int size) Parameters path string The file path to write to. data byte[] The array to write from. size int The length of the array with data. Returns bool Whether the write succesfully executed."
  },
  "api/SDG.Provider.Services.Cloud.html": {
    "href": "api/SDG.Provider.Services.Cloud.html",
    "title": "Namespace SDG.Provider.Services.Cloud | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Cloud Interfaces ICloudService"
  },
  "api/SDG.Provider.Services.Community.ICommunityEntity.html": {
    "href": "api/SDG.Provider.Services.Community.ICommunityEntity.html",
    "title": "Interface ICommunityEntity | Unturned Analyse Doc",
    "keywords": "Interface ICommunityEntity Namespace SDG.Provider.Services.Community Assembly Assembly-CSharp.dll public interface ICommunityEntity : INetworkStreamable Inherited Members INetworkStreamable.readFromStream(NetworkStream) INetworkStreamable.writeToStream(NetworkStream) Properties isValid bool isValid { get; } Property Value bool"
  },
  "api/SDG.Provider.Services.Community.ICommunityService.html": {
    "href": "api/SDG.Provider.Services.Community.ICommunityService.html",
    "title": "Interface ICommunityService | Unturned Analyse Doc",
    "keywords": "Interface ICommunityService Namespace SDG.Provider.Services.Community Assembly Assembly-CSharp.dll public interface ICommunityService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Methods checkGroup(CSteamID) bool checkGroup(CSteamID steamID) Parameters steamID CSteamID Returns bool getCachedGroup(CSteamID) SteamGroup getCachedGroup(CSteamID steamID) Parameters steamID CSteamID Returns SteamGroup getGroups() SteamGroup[] getGroups() Returns SteamGroup[] getIcon(CSteamID, bool) Texture2D getIcon(CSteamID steamID, bool shouldCache = false) Parameters steamID CSteamID shouldCache bool Returns Texture2D getIcon(int) Texture2D getIcon(int id) Parameters id int Returns Texture2D setStatus(string) void setStatus(string status) Parameters status string"
  },
  "api/SDG.Provider.Services.Community.html": {
    "href": "api/SDG.Provider.Services.Community.html",
    "title": "Namespace SDG.Provider.Services.Community | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Community Interfaces ICommunityEntity ICommunityService"
  },
  "api/SDG.Provider.Services.Economy.EEconomyRequestState.html": {
    "href": "api/SDG.Provider.Services.Economy.EEconomyRequestState.html",
    "title": "Enum EEconomyRequestState | Unturned Analyse Doc",
    "keywords": "Enum EEconomyRequestState Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public enum EEconomyRequestState Fields FAILURE = 1 SUCCESS = 0"
  },
  "api/SDG.Provider.Services.Economy.EconomyRequestReadyCallback.html": {
    "href": "api/SDG.Provider.Services.Economy.EconomyRequestReadyCallback.html",
    "title": "Delegate EconomyRequestReadyCallback | Unturned Analyse Doc",
    "keywords": "Delegate EconomyRequestReadyCallback Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public delegate void EconomyRequestReadyCallback(IEconomyRequestHandle economyRequestHandle, IEconomyRequestResult economyRequestResult) Parameters economyRequestHandle IEconomyRequestHandle economyRequestResult IEconomyRequestResult Constructors EconomyRequestReadyCallback(object, IntPtr) public EconomyRequestReadyCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IEconomyRequestHandle, IEconomyRequestResult, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IEconomyRequestHandle economyRequestHandle, IEconomyRequestResult economyRequestResult, AsyncCallback callback, object @object) Parameters economyRequestHandle IEconomyRequestHandle economyRequestResult IEconomyRequestResult callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IEconomyRequestHandle, IEconomyRequestResult) public virtual void Invoke(IEconomyRequestHandle economyRequestHandle, IEconomyRequestResult economyRequestResult) Parameters economyRequestHandle IEconomyRequestHandle economyRequestResult IEconomyRequestResult"
  },
  "api/SDG.Provider.Services.Economy.EconomyRequestResult.html": {
    "href": "api/SDG.Provider.Services.Economy.EconomyRequestResult.html",
    "title": "Class EconomyRequestResult | Unturned Analyse Doc",
    "keywords": "Class EconomyRequestResult Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public class EconomyRequestResult : IEconomyRequestResult Inheritance object EconomyRequestResult Implements IEconomyRequestResult Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EconomyRequestResult(EEconomyRequestState, IEconomyItem[]) public EconomyRequestResult(EEconomyRequestState newEconomyRequestState, IEconomyItem[] newItems) Parameters newEconomyRequestState EEconomyRequestState newItems IEconomyItem[] Properties economyRequestState public EEconomyRequestState economyRequestState { get; protected set; } Property Value EEconomyRequestState items public IEconomyItem[] items { get; protected set; } Property Value IEconomyItem[]"
  },
  "api/SDG.Provider.Services.Economy.IEconomyItem.html": {
    "href": "api/SDG.Provider.Services.Economy.IEconomyItem.html",
    "title": "Interface IEconomyItem | Unturned Analyse Doc",
    "keywords": "Interface IEconomyItem Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public interface IEconomyItem : INetworkStreamable Inherited Members INetworkStreamable.readFromStream(NetworkStream) INetworkStreamable.writeToStream(NetworkStream) Properties itemDefinitionID IEconomyItemDefinition itemDefinitionID { get; } Property Value IEconomyItemDefinition itemInstanceID IEconomyItemInstance itemInstanceID { get; } Property Value IEconomyItemInstance"
  },
  "api/SDG.Provider.Services.Economy.IEconomyItemDefinition.html": {
    "href": "api/SDG.Provider.Services.Economy.IEconomyItemDefinition.html",
    "title": "Interface IEconomyItemDefinition | Unturned Analyse Doc",
    "keywords": "Interface IEconomyItemDefinition Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public interface IEconomyItemDefinition : INetworkStreamable Inherited Members INetworkStreamable.readFromStream(NetworkStream) INetworkStreamable.writeToStream(NetworkStream) Methods getPropertyValue(string) string getPropertyValue(string key) Parameters key string Returns string"
  },
  "api/SDG.Provider.Services.Economy.IEconomyItemInstance.html": {
    "href": "api/SDG.Provider.Services.Economy.IEconomyItemInstance.html",
    "title": "Interface IEconomyItemInstance | Unturned Analyse Doc",
    "keywords": "Interface IEconomyItemInstance Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public interface IEconomyItemInstance : INetworkStreamable Inherited Members INetworkStreamable.readFromStream(NetworkStream) INetworkStreamable.writeToStream(NetworkStream)"
  },
  "api/SDG.Provider.Services.Economy.IEconomyRequestHandle.html": {
    "href": "api/SDG.Provider.Services.Economy.IEconomyRequestHandle.html",
    "title": "Interface IEconomyRequestHandle | Unturned Analyse Doc",
    "keywords": "Interface IEconomyRequestHandle Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public interface IEconomyRequestHandle"
  },
  "api/SDG.Provider.Services.Economy.IEconomyRequestResult.html": {
    "href": "api/SDG.Provider.Services.Economy.IEconomyRequestResult.html",
    "title": "Interface IEconomyRequestResult | Unturned Analyse Doc",
    "keywords": "Interface IEconomyRequestResult Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public interface IEconomyRequestResult Properties economyRequestState EEconomyRequestState economyRequestState { get; } Property Value EEconomyRequestState items IEconomyItem[] items { get; } Property Value IEconomyItem[]"
  },
  "api/SDG.Provider.Services.Economy.IEconomyService.html": {
    "href": "api/SDG.Provider.Services.Economy.IEconomyService.html",
    "title": "Interface IEconomyService | Unturned Analyse Doc",
    "keywords": "Interface IEconomyService Namespace SDG.Provider.Services.Economy Assembly Assembly-CSharp.dll public interface IEconomyService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties canOpenInventory Whether the user has their overlay enabled. bool canOpenInventory { get; } Property Value bool Methods exchangeItems(IEconomyItemInstance[], uint[], IEconomyItemDefinition[], uint[], EconomyRequestReadyCallback) Converts the input items into the output items. IEconomyRequestHandle exchangeItems(IEconomyItemInstance[] inputItemInstanceIDs, uint[] inputItemQuantities, IEconomyItemDefinition[] outputItemDefinitionIDs, uint[] outputItemQuantities, EconomyRequestReadyCallback economyRequestReadyCallback) Parameters inputItemInstanceIDs IEconomyItemInstance[] Items to be converted from. inputItemQuantities uint[] Item amounts to be consumed. outputItemDefinitionIDs IEconomyItemDefinition[] Items to be converted to. outputItemQuantities uint[] Item amounts to be generated. economyRequestReadyCallback EconomyRequestReadyCallback Called when the exchange is completed. Returns IEconomyRequestHandle open(ulong) void open(ulong id) Parameters id ulong requestInventory(EconomyRequestReadyCallback) Requests the user's inventory. IEconomyRequestHandle requestInventory(EconomyRequestReadyCallback economyRequestReadyCallback) Parameters economyRequestReadyCallback EconomyRequestReadyCallback Called when the request is completed. Returns IEconomyRequestHandle Handle for checking the owner of the callback. requestPromo(EconomyRequestReadyCallback) Requests a check for promotional items. IEconomyRequestHandle requestPromo(EconomyRequestReadyCallback economyRequestReadyCallback) Parameters economyRequestReadyCallback EconomyRequestReadyCallback Called when the request is completed. Returns IEconomyRequestHandle Handle for checking the owner of the callback."
  },
  "api/SDG.Provider.Services.Economy.html": {
    "href": "api/SDG.Provider.Services.Economy.html",
    "title": "Namespace SDG.Provider.Services.Economy | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Economy Classes EconomyRequestResult Interfaces IEconomyItem IEconomyItemDefinition IEconomyItemInstance IEconomyRequestHandle IEconomyRequestResult IEconomyService Enums EEconomyRequestState Delegates EconomyRequestReadyCallback"
  },
  "api/SDG.Provider.Services.IService.html": {
    "href": "api/SDG.Provider.Services.IService.html",
    "title": "Interface IService | Unturned Analyse Doc",
    "keywords": "Interface IService Namespace SDG.Provider.Services Assembly Assembly-CSharp.dll public interface IService Methods initialize() Initialize this service's external API. Should be called before using. void initialize() shutdown() Shutdown this service's external API. Should be called before closing the program. void shutdown() update() Update this service's external API. Should be called every frame. void update()"
  },
  "api/SDG.Provider.Services.Matchmaking.EServerList.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.EServerList.html",
    "title": "Enum EServerList | Unturned Analyse Doc",
    "keywords": "Enum EServerList Namespace SDG.Provider.Services.Matchmaking Assembly Assembly-CSharp.dll public enum EServerList Fields FAVORITES = 3 FRIENDS = 4 HISTORY = 2 INTERNET = 0 LAN = 1"
  },
  "api/SDG.Provider.Services.Matchmaking.IMatchmakingFilter.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.IMatchmakingFilter.html",
    "title": "Interface IMatchmakingFilter | Unturned Analyse Doc",
    "keywords": "Interface IMatchmakingFilter Namespace SDG.Provider.Services.Matchmaking Assembly Assembly-CSharp.dll public interface IMatchmakingFilter Properties key string key { get; } Property Value string value string value { get; } Property Value string"
  },
  "api/SDG.Provider.Services.Matchmaking.IMatchmakingService.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.IMatchmakingService.html",
    "title": "Interface IMatchmakingService | Unturned Analyse Doc",
    "keywords": "Interface IMatchmakingService Namespace SDG.Provider.Services.Matchmaking Assembly Assembly-CSharp.dll public interface IMatchmakingService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Methods requestServerInfo(uint, ushort, ServerInfoRequestReadyCallback) IServerInfoRequestHandle requestServerInfo(uint ip, ushort port, ServerInfoRequestReadyCallback callback) Parameters ip uint port ushort callback ServerInfoRequestReadyCallback Returns IServerInfoRequestHandle"
  },
  "api/SDG.Provider.Services.Matchmaking.IServerInfoRequestHandle.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.IServerInfoRequestHandle.html",
    "title": "Interface IServerInfoRequestHandle | Unturned Analyse Doc",
    "keywords": "Interface IServerInfoRequestHandle Namespace SDG.Provider.Services.Matchmaking Assembly Assembly-CSharp.dll public interface IServerInfoRequestHandle"
  },
  "api/SDG.Provider.Services.Matchmaking.IServerInfoRequestResult.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.IServerInfoRequestResult.html",
    "title": "Interface IServerInfoRequestResult | Unturned Analyse Doc",
    "keywords": "Interface IServerInfoRequestResult Namespace SDG.Provider.Services.Matchmaking Assembly Assembly-CSharp.dll public interface IServerInfoRequestResult Properties serverInfo IServerInfo serverInfo { get; } Property Value IServerInfo"
  },
  "api/SDG.Provider.Services.Matchmaking.MatchmakingFilter.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.MatchmakingFilter.html",
    "title": "Class MatchmakingFilter | Unturned Analyse Doc",
    "keywords": "Class MatchmakingFilter Namespace SDG.Provider.Services.Matchmaking Assembly Assembly-CSharp.dll public class MatchmakingFilter : IMatchmakingFilter Inheritance object MatchmakingFilter Implements IMatchmakingFilter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MatchmakingFilter(string, string) public MatchmakingFilter(string newKey, string newValue) Parameters newKey string newValue string Properties key public string key { get; protected set; } Property Value string value public string value { get; protected set; } Property Value string"
  },
  "api/SDG.Provider.Services.Matchmaking.ServerInfoRequestReadyCallback.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.ServerInfoRequestReadyCallback.html",
    "title": "Delegate ServerInfoRequestReadyCallback | Unturned Analyse Doc",
    "keywords": "Delegate ServerInfoRequestReadyCallback Namespace SDG.Provider.Services.Matchmaking Assembly Assembly-CSharp.dll public delegate void ServerInfoRequestReadyCallback(IServerInfoRequestHandle handle, IServerInfoRequestResult result) Parameters handle IServerInfoRequestHandle result IServerInfoRequestResult Constructors ServerInfoRequestReadyCallback(object, IntPtr) public ServerInfoRequestReadyCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IServerInfoRequestHandle, IServerInfoRequestResult, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IServerInfoRequestHandle handle, IServerInfoRequestResult result, AsyncCallback callback, object @object) Parameters handle IServerInfoRequestHandle result IServerInfoRequestResult callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IServerInfoRequestHandle, IServerInfoRequestResult) public virtual void Invoke(IServerInfoRequestHandle handle, IServerInfoRequestResult result) Parameters handle IServerInfoRequestHandle result IServerInfoRequestResult"
  },
  "api/SDG.Provider.Services.Matchmaking.html": {
    "href": "api/SDG.Provider.Services.Matchmaking.html",
    "title": "Namespace SDG.Provider.Services.Matchmaking | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Matchmaking Classes MatchmakingFilter Interfaces IMatchmakingFilter IMatchmakingService IServerInfoRequestHandle IServerInfoRequestResult Enums EServerList Delegates ServerInfoRequestReadyCallback"
  },
  "api/SDG.Provider.Services.Multiplayer.Client.IClientMultiplayerService.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.Client.IClientMultiplayerService.html",
    "title": "Interface IClientMultiplayerService | Unturned Analyse Doc",
    "keywords": "Interface IClientMultiplayerService Namespace SDG.Provider.Services.Multiplayer.Client Assembly Assembly-CSharp.dll public interface IClientMultiplayerService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties isAttempting Whether connection attempts are being made. bool isAttempting { get; } Property Value bool isConnected Whether a server is currently connected to. bool isConnected { get; } Property Value bool reader Network buffer memory stream reader. BinaryReader reader { get; } Property Value BinaryReader serverInfo Information about currently connected server. IServerInfo serverInfo { get; } Property Value IServerInfo stream Network buffer memory stream. MemoryStream stream { get; } Property Value MemoryStream writer Network buffer memory stream writer. BinaryWriter writer { get; } Property Value BinaryWriter Methods connect(IServerInfo) Connect to a server. void connect(IServerInfo newServerInfo) Parameters newServerInfo IServerInfo Server to join. disconnect() Disconnect from current server. void disconnect() read(out ICommunityEntity, byte[], out ulong, int) Receive a packet from an entity across the network. bool read(out ICommunityEntity entity, byte[] data, out ulong length, int channel) Parameters entity ICommunityEntity Sender of data. data byte[] length ulong channel int Returns bool Whether any data was read. write(ICommunityEntity, byte[], ulong) Send a packet to an entity across the network. void write(ICommunityEntity entity, byte[] data, ulong length) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. write(ICommunityEntity, byte[], ulong, ESendMethod, int) Send a packet to an entity across the network. [Obsolete(\"Used by old multiplayer code, please use send without method instead.\")] void write(ICommunityEntity entity, byte[] data, ulong length, ESendMethod method, int channel) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. method ESendMethod Type of send to use. channel int"
  },
  "api/SDG.Provider.Services.Multiplayer.Client.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.Client.html",
    "title": "Namespace SDG.Provider.Services.Multiplayer.Client | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Multiplayer.Client Interfaces IClientMultiplayerService"
  },
  "api/SDG.Provider.Services.Multiplayer.ENetworkingPacket.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.ENetworkingPacket.html",
    "title": "Enum ENetworkingPacket | Unturned Analyse Doc",
    "keywords": "Enum ENetworkingPacket Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public enum ENetworkingPacket"
  },
  "api/SDG.Provider.Services.Multiplayer.EPacketMethod.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.EPacketMethod.html",
    "title": "Enum EPacketMethod | Unturned Analyse Doc",
    "keywords": "Enum EPacketMethod Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public enum EPacketMethod Fields RELIABLE = 2 RELIABLE_NODELAY = 3 UNRELIABLE = 0 UNRELIABLE_NODELAY = 1"
  },
  "api/SDG.Provider.Services.Multiplayer.ESecurityMode.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.ESecurityMode.html",
    "title": "Enum ESecurityMode | Unturned Analyse Doc",
    "keywords": "Enum ESecurityMode Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public enum ESecurityMode Fields INSECURE = 2 LAN = 0 SECURE = 1"
  },
  "api/SDG.Provider.Services.Multiplayer.ESendMethod.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.ESendMethod.html",
    "title": "Enum ESendMethod | Unturned Analyse Doc",
    "keywords": "Enum ESendMethod Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public enum ESendMethod Fields RELIABLE = 0 RELIABLE_NODELAY = 1 UNRELIABLE = 2 UNRELIABLE_NODELAY = 3"
  },
  "api/SDG.Provider.Services.Multiplayer.IMultiplayerService.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.IMultiplayerService.html",
    "title": "Interface IMultiplayerService | Unturned Analyse Doc",
    "keywords": "Interface IMultiplayerService Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public interface IMultiplayerService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties clientMultiplayerService Current client multiplayer implementation. IClientMultiplayerService clientMultiplayerService { get; } Property Value IClientMultiplayerService serverMultiplayerService Current server multiplayer implementation. IServerMultiplayerService serverMultiplayerService { get; } Property Value IServerMultiplayerService"
  },
  "api/SDG.Provider.Services.Multiplayer.IServerInfo.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.IServerInfo.html",
    "title": "Interface IServerInfo | Unturned Analyse Doc",
    "keywords": "Interface IServerInfo Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public interface IServerInfo Properties capacity byte capacity { get; } Property Value byte entity ICommunityEntity entity { get; } Property Value ICommunityEntity name string name { get; } Property Value string ping int ping { get; } Property Value int players byte players { get; } Property Value byte"
  },
  "api/SDG.Provider.Services.Multiplayer.NetworkingConnected.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.NetworkingConnected.html",
    "title": "Delegate NetworkingConnected | Unturned Analyse Doc",
    "keywords": "Delegate NetworkingConnected Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public delegate void NetworkingConnected() Constructors NetworkingConnected(object, IntPtr) public NetworkingConnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.Services.Multiplayer.NetworkingDisconnected.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.NetworkingDisconnected.html",
    "title": "Delegate NetworkingDisconnected | Unturned Analyse Doc",
    "keywords": "Delegate NetworkingDisconnected Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public delegate void NetworkingDisconnected() Constructors NetworkingDisconnected(object, IntPtr) public NetworkingDisconnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.Services.Multiplayer.NetworkingReadingCallback.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.NetworkingReadingCallback.html",
    "title": "Delegate NetworkingReadingCallback | Unturned Analyse Doc",
    "keywords": "Delegate NetworkingReadingCallback Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public delegate void NetworkingReadingCallback(MemoryStream bufferStream, BinaryReader bufferReader) Parameters bufferStream MemoryStream bufferReader BinaryReader Constructors NetworkingReadingCallback(object, IntPtr) public NetworkingReadingCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(MemoryStream, BinaryReader, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(MemoryStream bufferStream, BinaryReader bufferReader, AsyncCallback callback, object @object) Parameters bufferStream MemoryStream bufferReader BinaryReader callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(MemoryStream, BinaryReader) public virtual void Invoke(MemoryStream bufferStream, BinaryReader bufferReader) Parameters bufferStream MemoryStream bufferReader BinaryReader"
  },
  "api/SDG.Provider.Services.Multiplayer.NetworkingWritingCallback.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.NetworkingWritingCallback.html",
    "title": "Delegate NetworkingWritingCallback | Unturned Analyse Doc",
    "keywords": "Delegate NetworkingWritingCallback Namespace SDG.Provider.Services.Multiplayer Assembly Assembly-CSharp.dll public delegate void NetworkingWritingCallback(MemoryStream bufferStream, BinaryWriter bufferWriter) Parameters bufferStream MemoryStream bufferWriter BinaryWriter Constructors NetworkingWritingCallback(object, IntPtr) public NetworkingWritingCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(MemoryStream, BinaryWriter, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(MemoryStream bufferStream, BinaryWriter bufferWriter, AsyncCallback callback, object @object) Parameters bufferStream MemoryStream bufferWriter BinaryWriter callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(MemoryStream, BinaryWriter) public virtual void Invoke(MemoryStream bufferStream, BinaryWriter bufferWriter) Parameters bufferStream MemoryStream bufferWriter BinaryWriter"
  },
  "api/SDG.Provider.Services.Multiplayer.Server.IServerMultiplayerService.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.Server.IServerMultiplayerService.html",
    "title": "Interface IServerMultiplayerService | Unturned Analyse Doc",
    "keywords": "Interface IServerMultiplayerService Namespace SDG.Provider.Services.Multiplayer.Server Assembly Assembly-CSharp.dll public interface IServerMultiplayerService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties isHosting Whether a server is open. bool isHosting { get; } Property Value bool reader Network buffer memory stream reader. BinaryReader reader { get; } Property Value BinaryReader serverInfo Information about currently hosted server. IServerInfo serverInfo { get; } Property Value IServerInfo stream Network buffer memory stream. MemoryStream stream { get; } Property Value MemoryStream writer Network buffer memory stream writer. BinaryWriter writer { get; } Property Value BinaryWriter Methods close() Close an existing server. void close() open(uint, ushort, ESecurityMode) Open a new server. void open(uint ip, ushort port, ESecurityMode security) Parameters ip uint port ushort security ESecurityMode read(out ICommunityEntity, byte[], out ulong, int) Receive a packet from an entity across the network. bool read(out ICommunityEntity entity, byte[] data, out ulong length, int channel) Parameters entity ICommunityEntity Sender of data. data byte[] length ulong channel int Returns bool Whether any data was read. write(ICommunityEntity, byte[], ulong) Send a packet to an entity across the network. void write(ICommunityEntity entity, byte[] data, ulong length) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. write(ICommunityEntity, byte[], ulong, ESendMethod, int) Send a packet to an entity across the network. [Obsolete(\"Used by old multiplayer code, please use send without method instead.\")] void write(ICommunityEntity entity, byte[] data, ulong length, ESendMethod method, int channel) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. method ESendMethod Type of send to use. channel int Events ready event ServerMultiplayerServiceReadyHandler ready Event Type ServerMultiplayerServiceReadyHandler"
  },
  "api/SDG.Provider.Services.Multiplayer.Server.ServerMultiplayerServiceReadyHandler.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.Server.ServerMultiplayerServiceReadyHandler.html",
    "title": "Delegate ServerMultiplayerServiceReadyHandler | Unturned Analyse Doc",
    "keywords": "Delegate ServerMultiplayerServiceReadyHandler Namespace SDG.Provider.Services.Multiplayer.Server Assembly Assembly-CSharp.dll public delegate void ServerMultiplayerServiceReadyHandler() Constructors ServerMultiplayerServiceReadyHandler(object, IntPtr) public ServerMultiplayerServiceReadyHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.Services.Multiplayer.Server.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.Server.html",
    "title": "Namespace SDG.Provider.Services.Multiplayer.Server | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Multiplayer.Server Interfaces IServerMultiplayerService Delegates ServerMultiplayerServiceReadyHandler"
  },
  "api/SDG.Provider.Services.Multiplayer.html": {
    "href": "api/SDG.Provider.Services.Multiplayer.html",
    "title": "Namespace SDG.Provider.Services.Multiplayer | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Multiplayer Interfaces IMultiplayerService IServerInfo Enums ENetworkingPacket EPacketMethod ESecurityMode ESendMethod Delegates NetworkingConnected NetworkingDisconnected NetworkingReadingCallback NetworkingWritingCallback"
  },
  "api/SDG.Provider.Services.Service.html": {
    "href": "api/SDG.Provider.Services.Service.html",
    "title": "Class Service | Unturned Analyse Doc",
    "keywords": "Class Service Namespace SDG.Provider.Services Assembly Assembly-CSharp.dll public class Service : IService Inheritance object Service Implements IService Derived SteamworksAchievementsService SteamworksBrowserService SteamworksCloudService SteamworksCommunityService SteamworksEconomyService SteamworksMatchmakingService SteamworksClientMultiplayerService SteamworksServerMultiplayerService SteamworksGlobalStatisticsService SteamworksUserStatisticsService SteamworksStoreService SteamworksTranslationService SteamworksWorkshopService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Service() public Service() Methods initialize() Initialize this service's external API. Should be called before using. public virtual void initialize() shutdown() Shutdown this service's external API. Should be called before closing the program. public virtual void shutdown() update() Update this service's external API. Should be called every frame. public virtual void update()"
  },
  "api/SDG.Provider.Services.Statistics.Global.GlobalStatisticsRequestReady.html": {
    "href": "api/SDG.Provider.Services.Statistics.Global.GlobalStatisticsRequestReady.html",
    "title": "Delegate GlobalStatisticsRequestReady | Unturned Analyse Doc",
    "keywords": "Delegate GlobalStatisticsRequestReady Namespace SDG.Provider.Services.Statistics.Global Assembly Assembly-CSharp.dll public delegate void GlobalStatisticsRequestReady() Constructors GlobalStatisticsRequestReady(object, IntPtr) public GlobalStatisticsRequestReady(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.Services.Statistics.Global.IGlobalStatisticsService.html": {
    "href": "api/SDG.Provider.Services.Statistics.Global.IGlobalStatisticsService.html",
    "title": "Interface IGlobalStatisticsService | Unturned Analyse Doc",
    "keywords": "Interface IGlobalStatisticsService Namespace SDG.Provider.Services.Statistics.Global Assembly Assembly-CSharp.dll public interface IGlobalStatisticsService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Methods getStatistic(string, out double) Checks the global total of the statistic with this name. bool getStatistic(string name, out double data) Parameters name string The name of the statistic. data double The value of the statistic. Returns bool Whether the check succesfully executed. getStatistic(string, out long) Checks the global total of the statistic with this name. bool getStatistic(string name, out long data) Parameters name string The name of the statistic. data long The value of the statistic. Returns bool Whether the check succesfully executed. requestStatistics() Requests the global statistics. bool requestStatistics() Returns bool Whether the refresh succesfully executed. Events onGlobalStatisticsRequestReady Triggered when the global statistics are available. event GlobalStatisticsRequestReady onGlobalStatisticsRequestReady Event Type GlobalStatisticsRequestReady"
  },
  "api/SDG.Provider.Services.Statistics.Global.html": {
    "href": "api/SDG.Provider.Services.Statistics.Global.html",
    "title": "Namespace SDG.Provider.Services.Statistics.Global | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Statistics.Global Interfaces IGlobalStatisticsService Delegates GlobalStatisticsRequestReady"
  },
  "api/SDG.Provider.Services.Statistics.IStatisticsService.html": {
    "href": "api/SDG.Provider.Services.Statistics.IStatisticsService.html",
    "title": "Interface IStatisticsService | Unturned Analyse Doc",
    "keywords": "Interface IStatisticsService Namespace SDG.Provider.Services.Statistics Assembly Assembly-CSharp.dll public interface IStatisticsService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties globalStatisticsService Current global statistics implementation. IGlobalStatisticsService globalStatisticsService { get; } Property Value IGlobalStatisticsService userStatisticsService Current user statistics implementation. IUserStatisticsService userStatisticsService { get; } Property Value IUserStatisticsService"
  },
  "api/SDG.Provider.Services.Statistics.User.IUserStatisticsService.html": {
    "href": "api/SDG.Provider.Services.Statistics.User.IUserStatisticsService.html",
    "title": "Interface IUserStatisticsService | Unturned Analyse Doc",
    "keywords": "Interface IUserStatisticsService Namespace SDG.Provider.Services.Statistics.User Assembly Assembly-CSharp.dll public interface IUserStatisticsService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Methods getStatistic(string, out int) Checks the current user's statistics with this name. bool getStatistic(string name, out int data) Parameters name string The name of the statistic. data int The value of the statistic. Returns bool Whether the check succesfully executed. getStatistic(string, out float) Checks the current user's statistics with this name. bool getStatistic(string name, out float data) Parameters name string The name of the statistic. data float The value of the statistic. Returns bool Whether the check succesfully executed. requestStatistics() Requests the user's statistics. bool requestStatistics() Returns bool Whether the refresh succesfully executed. setStatistic(string, int) Assigns the current user's statistics with this name. bool setStatistic(string name, int data) Parameters name string The name of the statistic. data int The value of the statistic. Returns bool Whether the check succesfully executed. setStatistic(string, float) Assigns the current user's statistics with this name. bool setStatistic(string name, float data) Parameters name string The name of the statistic. data float The value of the statistic. Returns bool Whether the check succesfully executed. Events onUserStatisticsRequestReady Triggered when the user's statistics are available. event UserStatisticsRequestReady onUserStatisticsRequestReady Event Type UserStatisticsRequestReady"
  },
  "api/SDG.Provider.Services.Statistics.User.UserStatisticsRequestReady.html": {
    "href": "api/SDG.Provider.Services.Statistics.User.UserStatisticsRequestReady.html",
    "title": "Delegate UserStatisticsRequestReady | Unturned Analyse Doc",
    "keywords": "Delegate UserStatisticsRequestReady Namespace SDG.Provider.Services.Statistics.User Assembly Assembly-CSharp.dll public delegate void UserStatisticsRequestReady(ICommunityEntity entityID) Parameters entityID ICommunityEntity Constructors UserStatisticsRequestReady(object, IntPtr) public UserStatisticsRequestReady(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ICommunityEntity, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ICommunityEntity entityID, AsyncCallback callback, object @object) Parameters entityID ICommunityEntity callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ICommunityEntity) public virtual void Invoke(ICommunityEntity entityID) Parameters entityID ICommunityEntity"
  },
  "api/SDG.Provider.Services.Statistics.User.html": {
    "href": "api/SDG.Provider.Services.Statistics.User.html",
    "title": "Namespace SDG.Provider.Services.Statistics.User | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Statistics.User Interfaces IUserStatisticsService Delegates UserStatisticsRequestReady"
  },
  "api/SDG.Provider.Services.Statistics.html": {
    "href": "api/SDG.Provider.Services.Statistics.html",
    "title": "Namespace SDG.Provider.Services.Statistics | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Statistics Interfaces IStatisticsService"
  },
  "api/SDG.Provider.Services.Store.IStorePackageID.html": {
    "href": "api/SDG.Provider.Services.Store.IStorePackageID.html",
    "title": "Interface IStorePackageID | Unturned Analyse Doc",
    "keywords": "Interface IStorePackageID Namespace SDG.Provider.Services.Store Assembly Assembly-CSharp.dll public interface IStorePackageID"
  },
  "api/SDG.Provider.Services.Store.IStoreService.html": {
    "href": "api/SDG.Provider.Services.Store.IStoreService.html",
    "title": "Interface IStoreService | Unturned Analyse Doc",
    "keywords": "Interface IStoreService Namespace SDG.Provider.Services.Store Assembly Assembly-CSharp.dll public interface IStoreService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Methods open(IStorePackageID) View a package on the store. void open(IStorePackageID packageID) Parameters packageID IStorePackageID Package to view."
  },
  "api/SDG.Provider.Services.Store.html": {
    "href": "api/SDG.Provider.Services.Store.html",
    "title": "Namespace SDG.Provider.Services.Store | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Store Interfaces IStorePackageID IStoreService"
  },
  "api/SDG.Provider.Services.Translation.ITranslationService.html": {
    "href": "api/SDG.Provider.Services.Translation.ITranslationService.html",
    "title": "Interface ITranslationService | Unturned Analyse Doc",
    "keywords": "Interface ITranslationService Namespace SDG.Provider.Services.Translation Assembly Assembly-CSharp.dll public interface ITranslationService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties language string language { get; } Property Value string"
  },
  "api/SDG.Provider.Services.Translation.html": {
    "href": "api/SDG.Provider.Services.Translation.html",
    "title": "Namespace SDG.Provider.Services.Translation | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Translation Interfaces ITranslationService"
  },
  "api/SDG.Provider.Services.Workshop.IWorkshopFile.html": {
    "href": "api/SDG.Provider.Services.Workshop.IWorkshopFile.html",
    "title": "Interface IWorkshopFile | Unturned Analyse Doc",
    "keywords": "Interface IWorkshopFile Namespace SDG.Provider.Services.Workshop Assembly Assembly-CSharp.dll public interface IWorkshopFile"
  },
  "api/SDG.Provider.Services.Workshop.IWorkshopService.html": {
    "href": "api/SDG.Provider.Services.Workshop.IWorkshopService.html",
    "title": "Interface IWorkshopService | Unturned Analyse Doc",
    "keywords": "Interface IWorkshopService Namespace SDG.Provider.Services.Workshop Assembly Assembly-CSharp.dll public interface IWorkshopService : IService Inherited Members IService.initialize() IService.update() IService.shutdown() Properties canOpenWorkshop Whether the user has their overlay enabled. bool canOpenWorkshop { get; } Property Value bool Methods open(PublishedFileId_t) void open(PublishedFileId_t id) Parameters id PublishedFileId_t"
  },
  "api/SDG.Provider.Services.Workshop.html": {
    "href": "api/SDG.Provider.Services.Workshop.html",
    "title": "Namespace SDG.Provider.Services.Workshop | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services.Workshop Interfaces IWorkshopFile IWorkshopService"
  },
  "api/SDG.Provider.Services.html": {
    "href": "api/SDG.Provider.Services.html",
    "title": "Namespace SDG.Provider.Services | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider.Services Classes Service Interfaces IService"
  },
  "api/SDG.Provider.StatTrackerPlayerKillsJson.html": {
    "href": "api/SDG.Provider.StatTrackerPlayerKillsJson.html",
    "title": "Struct StatTrackerPlayerKillsJson | Unturned Analyse Doc",
    "keywords": "Struct StatTrackerPlayerKillsJson Namespace SDG.Provider Assembly Assembly-CSharp.dll public struct StatTrackerPlayerKillsJson Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields player_kills public int player_kills Field Value int"
  },
  "api/SDG.Provider.StatTrackerTotalKillsJson.html": {
    "href": "api/SDG.Provider.StatTrackerTotalKillsJson.html",
    "title": "Struct StatTrackerTotalKillsJson | Unturned Analyse Doc",
    "keywords": "Struct StatTrackerTotalKillsJson Namespace SDG.Provider Assembly Assembly-CSharp.dll public struct StatTrackerTotalKillsJson Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields total_kills public int total_kills Field Value int"
  },
  "api/SDG.Provider.SteamGetInventoryResponse.InnerResponse.html": {
    "href": "api/SDG.Provider.SteamGetInventoryResponse.InnerResponse.html",
    "title": "Class SteamGetInventoryResponse.InnerResponse | Unturned Analyse Doc",
    "keywords": "Class SteamGetInventoryResponse.InnerResponse Namespace SDG.Provider Assembly Assembly-CSharp.dll public class SteamGetInventoryResponse.InnerResponse Inheritance object SteamGetInventoryResponse.InnerResponse Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InnerResponse() public InnerResponse() Fields item_json Json string representation of the contained items. public string item_json Field Value string"
  },
  "api/SDG.Provider.SteamGetInventoryResponse.Item.html": {
    "href": "api/SDG.Provider.SteamGetInventoryResponse.Item.html",
    "title": "Class SteamGetInventoryResponse.Item | Unturned Analyse Doc",
    "keywords": "Class SteamGetInventoryResponse.Item Namespace SDG.Provider Assembly Assembly-CSharp.dll public class SteamGetInventoryResponse.Item Inheritance object SteamGetInventoryResponse.Item Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Item() public Item() Fields itemdefid public int itemdefid Field Value int itemid public ulong itemid Field Value ulong quantity public ushort quantity Field Value ushort"
  },
  "api/SDG.Provider.SteamGetInventoryResponse.html": {
    "href": "api/SDG.Provider.SteamGetInventoryResponse.html",
    "title": "Class SteamGetInventoryResponse | Unturned Analyse Doc",
    "keywords": "Class SteamGetInventoryResponse Namespace SDG.Provider Assembly Assembly-CSharp.dll Response data from IInventoryService GetInventory web API. One player's inventory became so large that the Steam client's built-in GetInventory fails, so as temporary fix we can send them a json file with their inventory. public class SteamGetInventoryResponse Inheritance object SteamGetInventoryResponse Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamGetInventoryResponse() public SteamGetInventoryResponse() Fields response public SteamGetInventoryResponse.InnerResponse response Field Value SteamGetInventoryResponse.InnerResponse Methods parse(string) Parse response from json file. public static List<SteamGetInventoryResponse.Item> parse(string path) Parameters path string Returns List<SteamGetInventoryResponse.Item>"
  },
  "api/SDG.Provider.TempSteamworksEconomy.InventoryDropped.html": {
    "href": "api/SDG.Provider.TempSteamworksEconomy.InventoryDropped.html",
    "title": "Delegate TempSteamworksEconomy.InventoryDropped | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksEconomy.InventoryDropped Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksEconomy.InventoryDropped(int item, ushort quantity, ulong instance) Parameters item int quantity ushort instance ulong Constructors InventoryDropped(object, IntPtr) public InventoryDropped(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, ushort, ulong, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int item, ushort quantity, ulong instance, AsyncCallback callback, object @object) Parameters item int quantity ushort instance ulong callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int, ushort, ulong) public virtual void Invoke(int item, ushort quantity, ulong instance) Parameters item int quantity ushort instance ulong"
  },
  "api/SDG.Provider.TempSteamworksEconomy.InventoryExchangeFailed.html": {
    "href": "api/SDG.Provider.TempSteamworksEconomy.InventoryExchangeFailed.html",
    "title": "Delegate TempSteamworksEconomy.InventoryExchangeFailed | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksEconomy.InventoryExchangeFailed Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksEconomy.InventoryExchangeFailed() Constructors InventoryExchangeFailed(object, IntPtr) public InventoryExchangeFailed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.TempSteamworksEconomy.InventoryExchanged.html": {
    "href": "api/SDG.Provider.TempSteamworksEconomy.InventoryExchanged.html",
    "title": "Delegate TempSteamworksEconomy.InventoryExchanged | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksEconomy.InventoryExchanged Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksEconomy.InventoryExchanged(List<SteamItemDetails_t> grantedItems) Parameters grantedItems List<SteamItemDetails_t> Constructors InventoryExchanged(object, IntPtr) public InventoryExchanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(List<SteamItemDetails_t>, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(List<SteamItemDetails_t> grantedItems, AsyncCallback callback, object @object) Parameters grantedItems List<SteamItemDetails_t> callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(List<SteamItemDetails_t>) public virtual void Invoke(List<SteamItemDetails_t> grantedItems) Parameters grantedItems List<SteamItemDetails_t>"
  },
  "api/SDG.Provider.TempSteamworksEconomy.InventoryRefreshed.html": {
    "href": "api/SDG.Provider.TempSteamworksEconomy.InventoryRefreshed.html",
    "title": "Delegate TempSteamworksEconomy.InventoryRefreshed | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksEconomy.InventoryRefreshed Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksEconomy.InventoryRefreshed() Constructors InventoryRefreshed(object, IntPtr) public InventoryRefreshed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.TempSteamworksEconomy.html": {
    "href": "api/SDG.Provider.TempSteamworksEconomy.html",
    "title": "Class TempSteamworksEconomy | Unturned Analyse Doc",
    "keywords": "Class TempSteamworksEconomy Namespace SDG.Provider Assembly Assembly-CSharp.dll public class TempSteamworksEconomy Inheritance object TempSteamworksEconomy Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TempSteamworksEconomy(SteamworksAppInfo) public TempSteamworksEconomy(SteamworksAppInfo newAppInfo) Parameters newAppInfo SteamworksAppInfo Fields commitResult public SteamInventoryResult_t commitResult Field Value SteamInventoryResult_t dropResult public SteamInventoryResult_t dropResult Field Value SteamInventoryResult_t dynamicInventoryDetails public Dictionary<ulong, DynamicEconDetails> dynamicInventoryDetails Field Value Dictionary<ulong, DynamicEconDetails> exchangeResult public SteamInventoryResult_t exchangeResult Field Value SteamInventoryResult_t inventoryDetails public List<SteamItemDetails_t> inventoryDetails Field Value List<SteamItemDetails_t> inventoryResult public SteamInventoryResult_t inventoryResult Field Value SteamInventoryResult_t isExpectingPurchaseResult Purchase result does not have a handle, so we guess based on when it arrives. public bool isExpectingPurchaseResult Field Value bool isInventoryAvailable public bool isInventoryAvailable Field Value bool onInventoryDropped public TempSteamworksEconomy.InventoryDropped onInventoryDropped Field Value TempSteamworksEconomy.InventoryDropped onInventoryExchangeFailed public TempSteamworksEconomy.InventoryExchangeFailed onInventoryExchangeFailed Field Value TempSteamworksEconomy.InventoryExchangeFailed onInventoryExchanged Invoked after a successful exchange with the newly granted items. public TempSteamworksEconomy.InventoryExchanged onInventoryExchanged Field Value TempSteamworksEconomy.InventoryExchanged onInventoryPurchased Invoke after a succesful purchase from the item store. public TempSteamworksEconomy.InventoryExchanged onInventoryPurchased Field Value TempSteamworksEconomy.InventoryExchanged onInventoryRefreshed public TempSteamworksEconomy.InventoryRefreshed onInventoryRefreshed Field Value TempSteamworksEconomy.InventoryRefreshed wearingResult public SteamInventoryResult_t wearingResult Field Value SteamInventoryResult_t Properties canOpenInventory public bool canOpenInventory { get; } Property Value bool doesCountryAllowRandomItems Does the player's region allow crates and keys to be used? Similar to TF2 and other Valve games we disable unboxing in certain regions. public bool doesCountryAllowRandomItems { get; protected set; } Property Value bool econInfoHash public static byte[] econInfoHash { get; } Property Value byte[] hasCountryDetails Do we know the player's region? If not, default to not allowing random items. public bool hasCountryDetails { get; protected set; } Property Value bool inventory public List<SteamItemDetails_t> inventory { get; } Property Value List<SteamItemDetails_t> Methods GrantPromoItems() public void GrantPromoItems() IsItemBundle(int) public bool IsItemBundle(int itemdefid) Parameters itemdefid int Returns bool IsItemKnown(int) Does itemdefid exist in the EconInfo.json file? public bool IsItemKnown(int item) Parameters item int Returns bool LoadItemIcon(int) public Texture2D LoadItemIcon(int itemdefid) Parameters itemdefid int Returns Texture2D consumeItem(ulong, uint) public void consumeItem(ulong instance, uint quantity) Parameters instance ulong quantity uint countInventoryPackages(int) Count quantity of a given itemDefId. public int countInventoryPackages(int item) Parameters item int Returns int dropInventory() public void dropInventory() exchangeInventory(int, List<EconExchangePair>) public void exchangeInventory(int generate, List<EconExchangePair> destroy) Parameters generate int destroy List<EconExchangePair> getCountryWarningId() If player's region does not allow crates and keys to be used, return the country code. public string getCountryWarningId() Returns string getGameRarity(int) public EItemRarity getGameRarity(int item) Parameters item int Returns EItemRarity getInventoryColor(int) public Color getInventoryColor(int item) Parameters item int Returns Color getInventoryDescription(int) public string getInventoryDescription(int item) Parameters item int Returns string getInventoryDynamicProps(ulong) public string getInventoryDynamicProps(ulong instance) Parameters instance ulong Returns string getInventoryItem(ulong) public int getInventoryItem(ulong package) Parameters package ulong Returns int getInventoryItemGuid(int) public Guid getInventoryItemGuid(int item) Parameters item int Returns Guid getInventoryMarketable(int) public bool getInventoryMarketable(int item) Parameters item int Returns bool getInventoryMythicID(int) public ushort getInventoryMythicID(int item) Parameters item int Returns ushort getInventoryName(int) public string getInventoryName(int item) Parameters item int Returns string getInventoryPackage(int) Find the first instanceId of a given itemDefId. public ulong getInventoryPackage(int item) Parameters item int Returns ulong getInventoryPackages(int, ushort, out List<EconExchangePair>) Find certain quantity of given itemDefId. public bool getInventoryPackages(int item, ushort requiredQuantity, out List<EconExchangePair> pairs) Parameters item int requiredQuantity ushort pairs List<EconExchangePair> Returns bool getInventoryParticleEffect(ulong) public ushort getInventoryParticleEffect(ulong instance) Parameters instance ulong Returns ushort getInventoryQuality(int) public UnturnedEconInfo.EQuality getInventoryQuality(int item) Parameters item int Returns UnturnedEconInfo.EQuality getInventoryRagdollEffect(ulong, out ERagdollEffect) public bool getInventoryRagdollEffect(ulong instance, out ERagdollEffect effect) Parameters instance ulong effect ERagdollEffect Returns bool getInventoryRarity(int) public UnturnedEconInfo.ERarity getInventoryRarity(int item) Parameters item int Returns UnturnedEconInfo.ERarity getInventoryScraps(int) public int getInventoryScraps(int item) Parameters item int Returns int getInventorySkinID(int) public ushort getInventorySkinID(int item) Parameters item int Returns ushort getInventoryStatTrackerValue(ulong, out EStatTrackerType, out int) public bool getInventoryStatTrackerValue(ulong instance, out EStatTrackerType type, out int kills) Parameters instance ulong type EStatTrackerType kills int Returns bool getInventoryTags(ulong) public string getInventoryTags(ulong instance) Parameters instance ulong Returns string getInventoryTargetID(int, out Guid, out Guid) public void getInventoryTargetID(int item, out Guid item_guid, out Guid vehicle_guid) Parameters item int item_guid Guid vehicle_guid Guid getInventoryType(int) public string getInventoryType(int item) Parameters item int Returns string getScrapExchangeItem(int) Get item with an exchange recipe for the appropriate number of scraps. public int getScrapExchangeItem(int item) Parameters item int Returns int getStatTrackerColor(EStatTrackerType) public Color getStatTrackerColor(EStatTrackerType type) Parameters type EStatTrackerType Returns Color getStatTrackerPropertyName(EStatTrackerType) public string getStatTrackerPropertyName(EStatTrackerType type) Parameters type EStatTrackerType Returns string initializeClient() Not called on dedicated server. public void initializeClient() isItemHiddenByCountryRestrictions(int) Similar to TF2 and other Valve games we disable unboxing in certain regions, so hide those items. public bool isItemHiddenByCountryRestrictions(int itemdefid) Parameters itemdefid int Returns bool loadTranslationEconInfo() public void loadTranslationEconInfo() open(ulong) public void open(ulong id) Parameters id ulong refreshInventory() public void refreshInventory() updateInventory() public void updateInventory()"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.AttemptUpdated.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.AttemptUpdated.html",
    "title": "Delegate TempSteamworksMatchmaking.AttemptUpdated | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.AttemptUpdated Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.AttemptUpdated(int attempt) Parameters attempt int Constructors AttemptUpdated(object, IntPtr) public AttemptUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int attempt, AsyncCallback callback, object @object) Parameters attempt int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int) public virtual void Invoke(int attempt) Parameters attempt int"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerAdded.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerAdded.html",
    "title": "Delegate TempSteamworksMatchmaking.MasterServerAdded | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.MasterServerAdded Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.MasterServerAdded(int insert, SteamServerAdvertisement server) Parameters insert int server SteamServerAdvertisement Constructors MasterServerAdded(object, IntPtr) public MasterServerAdded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, SteamServerAdvertisement, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int insert, SteamServerAdvertisement server, AsyncCallback callback, object @object) Parameters insert int server SteamServerAdvertisement callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int, SteamServerAdvertisement) public virtual void Invoke(int insert, SteamServerAdvertisement server) Parameters insert int server SteamServerAdvertisement"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerQueryRefreshed.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerQueryRefreshed.html",
    "title": "Delegate TempSteamworksMatchmaking.MasterServerQueryRefreshed | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.MasterServerQueryRefreshed Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.MasterServerQueryRefreshed(SteamServerAdvertisement server) Parameters server SteamServerAdvertisement Constructors MasterServerQueryRefreshed(object, IntPtr) public MasterServerQueryRefreshed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamServerAdvertisement, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamServerAdvertisement server, AsyncCallback callback, object @object) Parameters server SteamServerAdvertisement callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SteamServerAdvertisement) public virtual void Invoke(SteamServerAdvertisement server) Parameters server SteamServerAdvertisement"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerRefreshed.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerRefreshed.html",
    "title": "Delegate TempSteamworksMatchmaking.MasterServerRefreshed | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.MasterServerRefreshed Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.MasterServerRefreshed(EMatchMakingServerResponse response) Parameters response EMatchMakingServerResponse Constructors MasterServerRefreshed(object, IntPtr) public MasterServerRefreshed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EMatchMakingServerResponse, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EMatchMakingServerResponse response, AsyncCallback callback, object @object) Parameters response EMatchMakingServerResponse callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EMatchMakingServerResponse) public virtual void Invoke(EMatchMakingServerResponse response) Parameters response EMatchMakingServerResponse"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerRemoved.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerRemoved.html",
    "title": "Delegate TempSteamworksMatchmaking.MasterServerRemoved | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.MasterServerRemoved Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.MasterServerRemoved() Constructors MasterServerRemoved(object, IntPtr) public MasterServerRemoved(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerResorted.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.MasterServerResorted.html",
    "title": "Delegate TempSteamworksMatchmaking.MasterServerResorted | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.MasterServerResorted Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.MasterServerResorted() Constructors MasterServerResorted(object, IntPtr) public MasterServerResorted(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.PlayersQueryRefreshed.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.PlayersQueryRefreshed.html",
    "title": "Delegate TempSteamworksMatchmaking.PlayersQueryRefreshed | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.PlayersQueryRefreshed Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.PlayersQueryRefreshed(string name, int score, float time) Parameters name string score int time float Constructors PlayersQueryRefreshed(object, IntPtr) public PlayersQueryRefreshed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(string, int, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(string name, int score, float time, AsyncCallback callback, object @object) Parameters name string score int time float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(string, int, float) public virtual void Invoke(string name, int score, float time) Parameters name string score int time float"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.RulesQueryRefreshed.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.RulesQueryRefreshed.html",
    "title": "Delegate TempSteamworksMatchmaking.RulesQueryRefreshed | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.RulesQueryRefreshed Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.RulesQueryRefreshed(Dictionary<string, string> rulesMap) Parameters rulesMap Dictionary<string, string> Constructors RulesQueryRefreshed(object, IntPtr) public RulesQueryRefreshed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Dictionary<string, string>, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Dictionary<string, string> rulesMap, AsyncCallback callback, object @object) Parameters rulesMap Dictionary<string, string> callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Dictionary<string, string>) public virtual void Invoke(Dictionary<string, string> rulesMap) Parameters rulesMap Dictionary<string, string>"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.TimedOut.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.TimedOut.html",
    "title": "Delegate TempSteamworksMatchmaking.TimedOut | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksMatchmaking.TimedOut Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksMatchmaking.TimedOut() Constructors TimedOut(object, IntPtr) public TimedOut(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.TempSteamworksMatchmaking.html": {
    "href": "api/SDG.Provider.TempSteamworksMatchmaking.html",
    "title": "Class TempSteamworksMatchmaking | Unturned Analyse Doc",
    "keywords": "Class TempSteamworksMatchmaking Namespace SDG.Provider Assembly Assembly-CSharp.dll public class TempSteamworksMatchmaking Inheritance object TempSteamworksMatchmaking Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TempSteamworksMatchmaking() public TempSteamworksMatchmaking() Fields autoJoinServerQuery Reset after starting connection attempt, so set to true afterwards to auto join the server. public bool autoJoinServerQuery Field Value bool onMasterServerAdded public TempSteamworksMatchmaking.MasterServerAdded onMasterServerAdded Field Value TempSteamworksMatchmaking.MasterServerAdded onMasterServerQueryRefreshed public TempSteamworksMatchmaking.MasterServerQueryRefreshed onMasterServerQueryRefreshed Field Value TempSteamworksMatchmaking.MasterServerQueryRefreshed onMasterServerRefreshed public TempSteamworksMatchmaking.MasterServerRefreshed onMasterServerRefreshed Field Value TempSteamworksMatchmaking.MasterServerRefreshed onMasterServerRemoved public TempSteamworksMatchmaking.MasterServerRemoved onMasterServerRemoved Field Value TempSteamworksMatchmaking.MasterServerRemoved onMasterServerResorted public TempSteamworksMatchmaking.MasterServerResorted onMasterServerResorted Field Value TempSteamworksMatchmaking.MasterServerResorted onPlayersQueryRefreshed public TempSteamworksMatchmaking.PlayersQueryRefreshed onPlayersQueryRefreshed Field Value TempSteamworksMatchmaking.PlayersQueryRefreshed onRulesQueryRefreshed public TempSteamworksMatchmaking.RulesQueryRefreshed onRulesQueryRefreshed Field Value TempSteamworksMatchmaking.RulesQueryRefreshed serverQueryContext public MenuPlayServerInfoUI.EServerInfoOpenContext serverQueryContext Field Value MenuPlayServerInfoUI.EServerInfoOpenContext Properties CuratorBlockedServerCount Used to show a warning when a lot of servers are blocked by curation list. public int CuratorBlockedServerCount { get; } Property Value int currentList public ESteamServerList currentList { get; } Property Value ESteamServerList isAttemptingServerQuery public bool isAttemptingServerQuery { get; } Property Value bool serverInfoComparer public IComparer<SteamServerAdvertisement> serverInfoComparer { get; } Property Value IComparer<SteamServerAdvertisement> serverList public List<SteamServerAdvertisement> serverList { get; } Property Value List<SteamServerAdvertisement> Methods cancel() public void cancel() cancelRequest() public void cancelRequest() connect(SteamConnectionInfo) public void connect(SteamConnectionInfo info) Parameters info SteamConnectionInfo refreshMasterServer(ServerListFilters) public void refreshMasterServer(ServerListFilters inputFilters) Parameters inputFilters ServerListFilters refreshPlayers(uint, ushort) public void refreshPlayers(uint ip, ushort port) Parameters ip uint port ushort refreshRules(uint, ushort) public void refreshRules(uint ip, ushort port) Parameters ip uint port ushort sortMasterServer(IComparer<SteamServerAdvertisement>) public void sortMasterServer(IComparer<SteamServerAdvertisement> newServerInfoComparer) Parameters newServerInfoComparer IComparer<SteamServerAdvertisement> Events onAttemptUpdated public event TempSteamworksMatchmaking.AttemptUpdated onAttemptUpdated Event Type TempSteamworksMatchmaking.AttemptUpdated onTimedOut public event TempSteamworksMatchmaking.TimedOut onTimedOut Event Type TempSteamworksMatchmaking.TimedOut"
  },
  "api/SDG.Provider.TempSteamworksWorkshop.PublishedAdded.html": {
    "href": "api/SDG.Provider.TempSteamworksWorkshop.PublishedAdded.html",
    "title": "Delegate TempSteamworksWorkshop.PublishedAdded | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksWorkshop.PublishedAdded Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksWorkshop.PublishedAdded() Constructors PublishedAdded(object, IntPtr) public PublishedAdded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.TempSteamworksWorkshop.PublishedRemoved.html": {
    "href": "api/SDG.Provider.TempSteamworksWorkshop.PublishedRemoved.html",
    "title": "Delegate TempSteamworksWorkshop.PublishedRemoved | Unturned Analyse Doc",
    "keywords": "Delegate TempSteamworksWorkshop.PublishedRemoved Namespace SDG.Provider Assembly Assembly-CSharp.dll public delegate void TempSteamworksWorkshop.PublishedRemoved() Constructors PublishedRemoved(object, IntPtr) public PublishedRemoved(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Provider.TempSteamworksWorkshop.html": {
    "href": "api/SDG.Provider.TempSteamworksWorkshop.html",
    "title": "Class TempSteamworksWorkshop | Unturned Analyse Doc",
    "keywords": "Class TempSteamworksWorkshop Namespace SDG.Provider Assembly Assembly-CSharp.dll public class TempSteamworksWorkshop Inheritance object TempSteamworksWorkshop Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TempSteamworksWorkshop(SteamworksAppInfo) public TempSteamworksWorkshop(SteamworksAppInfo newAppInfo) Parameters newAppInfo SteamworksAppInfo Fields COMPATIBILITY_VERSION Used when transitioning Unity versions breaks asset bundles. Replaced by AssetBundleVersion const values. [Obsolete] public static readonly byte COMPATIBILITY_VERSION Field Value byte COMPATIBILITY_VERSION_KVTAG Workshop item key-value tag storing the version number. public static readonly string COMPATIBILITY_VERSION_KVTAG Field Value string downloaded public List<PublishedFileId_t> downloaded Field Value List<PublishedFileId_t> installing public List<PublishedFileId_t> installing Field Value List<PublishedFileId_t> onPublishedAdded public TempSteamworksWorkshop.PublishedAdded onPublishedAdded Field Value TempSteamworksWorkshop.PublishedAdded onPublishedRemoved public TempSteamworksWorkshop.PublishedRemoved onPublishedRemoved Field Value TempSteamworksWorkshop.PublishedRemoved serverDownloadIP IP of the currently connected server, or zero if unable to retrieve from network system. Used for testing download restrictions. protected uint serverDownloadIP Field Value uint totalNumberOfFilesToDownload public int totalNumberOfFilesToDownload Field Value int Properties canOpenWorkshop public bool canOpenWorkshop { get; } Property Value bool published public List<SteamPublished> published { get; } Property Value List<SteamPublished> serverInvalidItemsCount Number of items currently connected server was not authorized to download. public int serverInvalidItemsCount { get; protected set; } Property Value int ugc public List<SteamContent> ugc { get; } Property Value List<SteamContent> Methods FindOrAddOrigin(ulong) public static AssetOrigin FindOrAddOrigin(ulong fileId) Parameters fileId ulong Returns AssetOrigin cacheDetails(UGCQueryHandle_t, uint, out CachedUGCDetails) Save the details from a workshop query for lookup later. Allows game to inspect the installed files before deciding if they are compatible, since maps and localization are not affected by unity upgrades. Previously the compatibility test occurred before downloading the content. public static bool cacheDetails(UGCQueryHandle_t queryHandle, uint index, out CachedUGCDetails cachedDetails) Parameters queryHandle UGCQueryHandle_t index uint cachedDetails CachedUGCDetails Returns bool createUGC(bool) public void createUGC(bool ugcFor) Parameters ugcFor bool downloadNextItem() public void downloadNextItem() getCachedDetails(PublishedFileId_t, out CachedUGCDetails) Get cached workshop item details. public static bool getCachedDetails(PublishedFileId_t fileId, out CachedUGCDetails cachedDetails) Parameters fileId PublishedFileId_t cachedDetails CachedUGCDetails Returns bool getCompatibilityVersion(UGCQueryHandle_t, uint) Get compatibility version from workshop query, or zero if unset. public static byte getCompatibilityVersion(UGCQueryHandle_t queryHandle, uint index) Parameters queryHandle UGCQueryHandle_t index uint Returns byte getSubscribed(ulong) public bool getSubscribed(ulong fileId) Parameters fileId ulong Returns bool isCompatible(PublishedFileId_t, ESteamUGCType, string, out string) public static bool isCompatible(PublishedFileId_t fileId, ESteamUGCType type, string dir, out string explanation) Parameters fileId PublishedFileId_t type ESteamUGCType dir string explanation string Returns bool open(PublishedFileId_t) public void open(PublishedFileId_t id) Parameters id PublishedFileId_t prepareUGC(PublishedFileId_t) public void prepareUGC(PublishedFileId_t id) Parameters id PublishedFileId_t prepareUGC(string, string, string, string, string, ESteamUGCType, List<string>, string, ESteamUGCVisibility) public void prepareUGC(string name, string description, string path, string preview, string change, ESteamUGCType type, List<string> tags, string allowedIPs, ESteamUGCVisibility visibility) Parameters name string description string path string preview string change string type ESteamUGCType tags List<string> allowedIPs string visibility ESteamUGCVisibility prepareUGC(string, string, string, string, string, ESteamUGCType, List<string>, string, ESteamUGCVisibility, bool) public void prepareUGC(string name, string description, string path, string preview, string change, ESteamUGCType type, List<string> tags, string allowedIPs, ESteamUGCVisibility visibility, bool verified) Parameters name string description string path string preview string change string type ESteamUGCType tags List<string> allowedIPs string visibility ESteamUGCVisibility verified bool queryServerWorkshopItems(List<PublishedFileId_t>, uint) Client now knows the published file IDs the server is using, but queries the workshop for additional information before installing. public void queryServerWorkshopItems(List<PublishedFileId_t> fileIDs, uint serverIP) Parameters fileIDs List<PublishedFileId_t> serverIP uint refreshPublished() public void refreshPublished() refreshUGC() public void refreshUGC() resetServerInvalidItems() Called prior to downloading, and after a connection failure. public void resetServerInvalidItems() setSubscribed(ulong, bool) public void setSubscribed(ulong fileId, bool subscribe) Parameters fileId ulong subscribe bool shouldIgnoreFile(PublishedFileId_t, out string) Should caller skip loading a given workshop file? Used to skip workshop version of map if the map is locally installed, e.g. Canyon Arena moved to workshop and auto-subscribed. public static bool shouldIgnoreFile(PublishedFileId_t fileId, out string explanation) Parameters fileId PublishedFileId_t explanation string Returns bool update() public void update() updateUGC() public void updateUGC()"
  },
  "api/SDG.Provider.UnturnedEconInfo.EQuality.html": {
    "href": "api/SDG.Provider.UnturnedEconInfo.EQuality.html",
    "title": "Enum UnturnedEconInfo.EQuality | Unturned Analyse Doc",
    "keywords": "Enum UnturnedEconInfo.EQuality Namespace SDG.Provider Assembly Assembly-CSharp.dll public enum UnturnedEconInfo.EQuality Fields Achievement = 9 Common = 1 Epic = 5 Gold = 3 Legendary = 6 Mythical = 7 None = 0 Premium = 8 Rare = 4 Uncommon = 2"
  },
  "api/SDG.Provider.UnturnedEconInfo.ERarity.html": {
    "href": "api/SDG.Provider.UnturnedEconInfo.ERarity.html",
    "title": "Enum UnturnedEconInfo.ERarity | Unturned Analyse Doc",
    "keywords": "Enum UnturnedEconInfo.ERarity Namespace SDG.Provider Assembly Assembly-CSharp.dll This enum exists for sorting items based on rarity, and is derived from quality. Quality order cannot be changed due to loading from older files, but this one is ordered from lowest rarity to highest rarity and should match entries in quality. public enum UnturnedEconInfo.ERarity Fields Achievement = 2 Common = 0 Epic = 7 Gold = 4 Legendary = 8 Mythical = 9 Premium = 5 Rare = 6 Uncommon = 1 Unknown = 3"
  },
  "api/SDG.Provider.UnturnedEconInfo.html": {
    "href": "api/SDG.Provider.UnturnedEconInfo.html",
    "title": "Class UnturnedEconInfo | Unturned Analyse Doc",
    "keywords": "Class UnturnedEconInfo Namespace SDG.Provider Assembly Assembly-CSharp.dll public class UnturnedEconInfo Inheritance object UnturnedEconInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UnturnedEconInfo() public UnturnedEconInfo() Fields creationTimeUtc Nelson 2024-12-06: This was added 2023-06-19, so unfortunately it will be inaccurate for older items. public DateTime creationTimeUtc Field Value DateTime description public string description Field Value string display_type public string display_type Field Value string econ_type EItemType public int econ_type Field Value int item_effect public int item_effect Field Value int item_skin public int item_skin Field Value int itemdefid public int itemdefid Field Value int marketable public bool marketable Field Value bool name public string name Field Value string name_color public string name_color Field Value string quality public UnturnedEconInfo.EQuality quality Field Value UnturnedEconInfo.EQuality scraps public int scraps Field Value int target_game_asset_guid public Guid target_game_asset_guid Field Value Guid"
  },
  "api/SDG.Provider.html": {
    "href": "api/SDG.Provider.html",
    "title": "Namespace SDG.Provider | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Provider Classes SteamGetInventoryResponse Response data from IInventoryService GetInventory web API. One player's inventory became so large that the Steam client's built-in GetInventory fails, so as temporary fix we can send them a json file with their inventory. SteamGetInventoryResponse.InnerResponse SteamGetInventoryResponse.Item TempSteamworksEconomy TempSteamworksMatchmaking TempSteamworksWorkshop UnturnedEconInfo Structs CachedUGCDetails Details of a workshop item that the game may want to refer to later. Cached during client startup after getting installed items, and while downloading UGC for the dedicated server. DynamicEconDetails EconExchangePair StatTrackerPlayerKillsJson StatTrackerTotalKillsJson Interfaces IProvider Enums EStatTrackerType UnturnedEconInfo.EQuality UnturnedEconInfo.ERarity This enum exists for sorting items based on rarity, and is derived from quality. Quality order cannot be changed due to loading from older files, but this one is ordered from lowest rarity to highest rarity and should match entries in quality. Delegates TempSteamworksEconomy.InventoryDropped TempSteamworksEconomy.InventoryExchangeFailed TempSteamworksEconomy.InventoryExchanged TempSteamworksEconomy.InventoryRefreshed TempSteamworksMatchmaking.AttemptUpdated TempSteamworksMatchmaking.MasterServerAdded TempSteamworksMatchmaking.MasterServerQueryRefreshed TempSteamworksMatchmaking.MasterServerRefreshed TempSteamworksMatchmaking.MasterServerRemoved TempSteamworksMatchmaking.MasterServerResorted TempSteamworksMatchmaking.PlayersQueryRefreshed TempSteamworksMatchmaking.RulesQueryRefreshed TempSteamworksMatchmaking.TimedOut TempSteamworksWorkshop.PublishedAdded TempSteamworksWorkshop.PublishedRemoved"
  },
  "api/SDG.SteamworksProvider.Services.Achievements.SteamworksAchievementsService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Achievements.SteamworksAchievementsService.html",
    "title": "Class SteamworksAchievementsService | Unturned Analyse Doc",
    "keywords": "Class SteamworksAchievementsService Namespace SDG.SteamworksProvider.Services.Achievements Assembly Assembly-CSharp.dll public class SteamworksAchievementsService : Service, IAchievementsService, IService Inheritance object Service SteamworksAchievementsService Implements IAchievementsService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksAchievementsService() public SteamworksAchievementsService() Methods getAchievement(string, out bool) Checks whether the current user has an achievement with this name. public bool getAchievement(string name, out bool has) Parameters name string The name of the achievement. has bool Whether the user has this achievement. Returns bool Whether the check succesfully executed. setAchievement(string) Assigns the current user an achievement with this name. public bool setAchievement(string name) Parameters name string The name of the achievement. Returns bool Whether the assignment succesfully executed."
  },
  "api/SDG.SteamworksProvider.Services.Achievements.html": {
    "href": "api/SDG.SteamworksProvider.Services.Achievements.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Achievements | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Achievements Classes SteamworksAchievementsService"
  },
  "api/SDG.SteamworksProvider.Services.Browser.SteamworksBrowserService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Browser.SteamworksBrowserService.html",
    "title": "Class SteamworksBrowserService | Unturned Analyse Doc",
    "keywords": "Class SteamworksBrowserService Namespace SDG.SteamworksProvider.Services.Browser Assembly Assembly-CSharp.dll public class SteamworksBrowserService : Service, IBrowserService, IService Inheritance object Service SteamworksBrowserService Implements IBrowserService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksBrowserService() public SteamworksBrowserService() Properties canOpenBrowser Whether the user has their overlay enabled. public bool canOpenBrowser { get; } Property Value bool Methods open(string) public void open(string url) Parameters url string"
  },
  "api/SDG.SteamworksProvider.Services.Browser.html": {
    "href": "api/SDG.SteamworksProvider.Services.Browser.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Browser | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Browser Classes SteamworksBrowserService"
  },
  "api/SDG.SteamworksProvider.Services.Cloud.SteamworksCloudService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Cloud.SteamworksCloudService.html",
    "title": "Class SteamworksCloudService | Unturned Analyse Doc",
    "keywords": "Class SteamworksCloudService Namespace SDG.SteamworksProvider.Services.Cloud Assembly Assembly-CSharp.dll public class SteamworksCloudService : Service, ICloudService, IService Inheritance object Service SteamworksCloudService Implements ICloudService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksCloudService() public SteamworksCloudService() Methods delete(string) Deletes the path. public bool delete(string path) Parameters path string The file path to delete. Returns bool Whether the deletion succesfully executed. exists(string, out bool) Checks whether the path already exists. public bool exists(string path, out bool exists) Parameters path string The file path to check. exists bool Whether the file exists. Returns bool Whether the check succesfully executed. getSize(string, out int) Checks the size of a file. public bool getSize(string path, out int size) Parameters path string The file path to check. size int The size of the file. Returns bool Whether the check succesfully executed. read(string, byte[]) Reads data into the data array. public bool read(string path, byte[] data) Parameters path string The file path to read from. data byte[] The array to read into. Returns bool Whether the read succesfully executed. write(string, byte[], int) Writes data out of data array. public bool write(string path, byte[] data, int size) Parameters path string The file path to write to. data byte[] The array to write from. size int The length of the array with data. Returns bool Whether the write succesfully executed."
  },
  "api/SDG.SteamworksProvider.Services.Cloud.html": {
    "href": "api/SDG.SteamworksProvider.Services.Cloud.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Cloud | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Cloud Classes SteamworksCloudService"
  },
  "api/SDG.SteamworksProvider.Services.Community.SteamworksCommunityEntity.html": {
    "href": "api/SDG.SteamworksProvider.Services.Community.SteamworksCommunityEntity.html",
    "title": "Struct SteamworksCommunityEntity | Unturned Analyse Doc",
    "keywords": "Struct SteamworksCommunityEntity Namespace SDG.SteamworksProvider.Services.Community Assembly Assembly-CSharp.dll public struct SteamworksCommunityEntity : ICommunityEntity, INetworkStreamable Implements ICommunityEntity INetworkStreamable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SteamworksCommunityEntity(CSteamID) public SteamworksCommunityEntity(CSteamID newSteamID) Parameters newSteamID CSteamID Fields INVALID public static readonly SteamworksCommunityEntity INVALID Field Value SteamworksCommunityEntity steamID public CSteamID steamID Field Value CSteamID Properties isValid public bool isValid { get; } Property Value bool Methods readFromStream(NetworkStream) public void readFromStream(NetworkStream networkStream) Parameters networkStream NetworkStream writeToStream(NetworkStream) public void writeToStream(NetworkStream networkStream) Parameters networkStream NetworkStream"
  },
  "api/SDG.SteamworksProvider.Services.Community.SteamworksCommunityService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Community.SteamworksCommunityService.html",
    "title": "Class SteamworksCommunityService | Unturned Analyse Doc",
    "keywords": "Class SteamworksCommunityService Namespace SDG.SteamworksProvider.Services.Community Assembly Assembly-CSharp.dll public class SteamworksCommunityService : Service, ICommunityService, IService Inheritance object Service SteamworksCommunityService Implements ICommunityService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksCommunityService() public SteamworksCommunityService() Methods checkGroup(CSteamID) public bool checkGroup(CSteamID steamID) Parameters steamID CSteamID Returns bool getCachedGroup(CSteamID) public SteamGroup getCachedGroup(CSteamID steamID) Parameters steamID CSteamID Returns SteamGroup getGroups() public SteamGroup[] getGroups() Returns SteamGroup[] getIcon(CSteamID, bool) public Texture2D getIcon(CSteamID steamID, bool shouldCache = false) Parameters steamID CSteamID shouldCache bool Returns Texture2D getIcon(int) public Texture2D getIcon(int id) Parameters id int Returns Texture2D setStatus(string) public void setStatus(string status) Parameters status string"
  },
  "api/SDG.SteamworksProvider.Services.Community.html": {
    "href": "api/SDG.SteamworksProvider.Services.Community.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Community | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Community Classes SteamworksCommunityService Structs SteamworksCommunityEntity"
  },
  "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyItem.html": {
    "href": "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyItem.html",
    "title": "Class SteamworksEconomyItem | Unturned Analyse Doc",
    "keywords": "Class SteamworksEconomyItem Namespace SDG.SteamworksProvider.Services.Economy Assembly Assembly-CSharp.dll public class SteamworksEconomyItem : IEconomyItem, INetworkStreamable Inheritance object SteamworksEconomyItem Implements IEconomyItem INetworkStreamable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksEconomyItem(SteamItemDetails_t) public SteamworksEconomyItem(SteamItemDetails_t newSteamItemDetail) Parameters newSteamItemDetail SteamItemDetails_t Properties itemDefinitionID public IEconomyItemDefinition itemDefinitionID { get; protected set; } Property Value IEconomyItemDefinition itemInstanceID public IEconomyItemInstance itemInstanceID { get; protected set; } Property Value IEconomyItemInstance steamItemDetail public SteamItemDetails_t steamItemDetail { get; protected set; } Property Value SteamItemDetails_t Methods readFromStream(NetworkStream) public void readFromStream(NetworkStream networkStream) Parameters networkStream NetworkStream writeToStream(NetworkStream) public void writeToStream(NetworkStream networkStream) Parameters networkStream NetworkStream"
  },
  "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyItemDefinition.html": {
    "href": "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyItemDefinition.html",
    "title": "Class SteamworksEconomyItemDefinition | Unturned Analyse Doc",
    "keywords": "Class SteamworksEconomyItemDefinition Namespace SDG.SteamworksProvider.Services.Economy Assembly Assembly-CSharp.dll public class SteamworksEconomyItemDefinition : IEconomyItemDefinition, INetworkStreamable Inheritance object SteamworksEconomyItemDefinition Implements IEconomyItemDefinition INetworkStreamable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksEconomyItemDefinition(SteamItemDef_t) public SteamworksEconomyItemDefinition(SteamItemDef_t newSteamItemDef) Parameters newSteamItemDef SteamItemDef_t Properties steamItemDef public SteamItemDef_t steamItemDef { get; protected set; } Property Value SteamItemDef_t Methods getPropertyValue(string) public string getPropertyValue(string key) Parameters key string Returns string readFromStream(NetworkStream) public void readFromStream(NetworkStream networkStream) Parameters networkStream NetworkStream writeToStream(NetworkStream) public void writeToStream(NetworkStream networkStream) Parameters networkStream NetworkStream"
  },
  "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyItemInstance.html": {
    "href": "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyItemInstance.html",
    "title": "Class SteamworksEconomyItemInstance | Unturned Analyse Doc",
    "keywords": "Class SteamworksEconomyItemInstance Namespace SDG.SteamworksProvider.Services.Economy Assembly Assembly-CSharp.dll public class SteamworksEconomyItemInstance : IEconomyItemInstance, INetworkStreamable Inheritance object SteamworksEconomyItemInstance Implements IEconomyItemInstance INetworkStreamable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksEconomyItemInstance(SteamItemInstanceID_t) public SteamworksEconomyItemInstance(SteamItemInstanceID_t newSteamItemInstanceID) Parameters newSteamItemInstanceID SteamItemInstanceID_t Properties steamItemInstanceID public SteamItemInstanceID_t steamItemInstanceID { get; protected set; } Property Value SteamItemInstanceID_t Methods readFromStream(NetworkStream) public void readFromStream(NetworkStream networkStream) Parameters networkStream NetworkStream writeToStream(NetworkStream) public void writeToStream(NetworkStream networkStream) Parameters networkStream NetworkStream"
  },
  "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyRequestHandle.html": {
    "href": "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyRequestHandle.html",
    "title": "Class SteamworksEconomyRequestHandle | Unturned Analyse Doc",
    "keywords": "Class SteamworksEconomyRequestHandle Namespace SDG.SteamworksProvider.Services.Economy Assembly Assembly-CSharp.dll public class SteamworksEconomyRequestHandle : IEconomyRequestHandle Inheritance object SteamworksEconomyRequestHandle Implements IEconomyRequestHandle Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksEconomyRequestHandle(SteamInventoryResult_t, EconomyRequestReadyCallback) public SteamworksEconomyRequestHandle(SteamInventoryResult_t newSteamInventoryResult, EconomyRequestReadyCallback newEconomyRequestReadyCallback) Parameters newSteamInventoryResult SteamInventoryResult_t newEconomyRequestReadyCallback EconomyRequestReadyCallback Properties steamInventoryResult public SteamInventoryResult_t steamInventoryResult { get; protected set; } Property Value SteamInventoryResult_t Methods triggerInventoryRequestReadyCallback(IEconomyRequestResult) public void triggerInventoryRequestReadyCallback(IEconomyRequestResult inventoryRequestResult) Parameters inventoryRequestResult IEconomyRequestResult"
  },
  "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Economy.SteamworksEconomyService.html",
    "title": "Class SteamworksEconomyService | Unturned Analyse Doc",
    "keywords": "Class SteamworksEconomyService Namespace SDG.SteamworksProvider.Services.Economy Assembly Assembly-CSharp.dll public class SteamworksEconomyService : Service, IEconomyService, IService Inheritance object Service SteamworksEconomyService Implements IEconomyService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksEconomyService() public SteamworksEconomyService() Properties canOpenInventory Whether the user has their overlay enabled. public bool canOpenInventory { get; } Property Value bool Methods exchangeItems(IEconomyItemInstance[], uint[], IEconomyItemDefinition[], uint[], EconomyRequestReadyCallback) Converts the input items into the output items. public IEconomyRequestHandle exchangeItems(IEconomyItemInstance[] inputItemInstanceIDs, uint[] inputItemQuantities, IEconomyItemDefinition[] outputItemDefinitionIDs, uint[] outputItemQuantities, EconomyRequestReadyCallback inventoryRequestReadyCallback) Parameters inputItemInstanceIDs IEconomyItemInstance[] Items to be converted from. inputItemQuantities uint[] Item amounts to be consumed. outputItemDefinitionIDs IEconomyItemDefinition[] Items to be converted to. outputItemQuantities uint[] Item amounts to be generated. inventoryRequestReadyCallback EconomyRequestReadyCallback Returns IEconomyRequestHandle open(ulong) public void open(ulong id) Parameters id ulong requestInventory(EconomyRequestReadyCallback) Requests the user's inventory. public IEconomyRequestHandle requestInventory(EconomyRequestReadyCallback inventoryRequestReadyCallback) Parameters inventoryRequestReadyCallback EconomyRequestReadyCallback Returns IEconomyRequestHandle Handle for checking the owner of the callback. requestPromo(EconomyRequestReadyCallback) Requests a check for promotional items. public IEconomyRequestHandle requestPromo(EconomyRequestReadyCallback inventoryRequestReadyCallback) Parameters inventoryRequestReadyCallback EconomyRequestReadyCallback Returns IEconomyRequestHandle Handle for checking the owner of the callback."
  },
  "api/SDG.SteamworksProvider.Services.Economy.html": {
    "href": "api/SDG.SteamworksProvider.Services.Economy.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Economy | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Economy Classes SteamworksEconomyItem SteamworksEconomyItemDefinition SteamworksEconomyItemInstance SteamworksEconomyRequestHandle SteamworksEconomyService"
  },
  "api/SDG.SteamworksProvider.Services.Matchmaking.SteamworksMatchmakingService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Matchmaking.SteamworksMatchmakingService.html",
    "title": "Class SteamworksMatchmakingService | Unturned Analyse Doc",
    "keywords": "Class SteamworksMatchmakingService Namespace SDG.SteamworksProvider.Services.Matchmaking Assembly Assembly-CSharp.dll public class SteamworksMatchmakingService : Service, IMatchmakingService, IService Inheritance object Service SteamworksMatchmakingService Implements IMatchmakingService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksMatchmakingService() public SteamworksMatchmakingService() Fields serverInfoRequestHandles public static List<SteamworksServerInfoRequestHandle> serverInfoRequestHandles Field Value List<SteamworksServerInfoRequestHandle> Methods requestServerInfo(uint, ushort, ServerInfoRequestReadyCallback) public IServerInfoRequestHandle requestServerInfo(uint ip, ushort port, ServerInfoRequestReadyCallback callback) Parameters ip uint port ushort callback ServerInfoRequestReadyCallback Returns IServerInfoRequestHandle"
  },
  "api/SDG.SteamworksProvider.Services.Matchmaking.SteamworksServerInfoRequestHandle.html": {
    "href": "api/SDG.SteamworksProvider.Services.Matchmaking.SteamworksServerInfoRequestHandle.html",
    "title": "Class SteamworksServerInfoRequestHandle | Unturned Analyse Doc",
    "keywords": "Class SteamworksServerInfoRequestHandle Namespace SDG.SteamworksProvider.Services.Matchmaking Assembly Assembly-CSharp.dll public class SteamworksServerInfoRequestHandle : IServerInfoRequestHandle Inheritance object SteamworksServerInfoRequestHandle Implements IServerInfoRequestHandle Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksServerInfoRequestHandle(ServerInfoRequestReadyCallback) public SteamworksServerInfoRequestHandle(ServerInfoRequestReadyCallback newCallback) Parameters newCallback ServerInfoRequestReadyCallback Fields pingResponse public ISteamMatchmakingPingResponse pingResponse Field Value ISteamMatchmakingPingResponse query public HServerQuery query Field Value HServerQuery Methods onServerFailedToRespond() public void onServerFailedToRespond() onServerResponded(gameserveritem_t) public void onServerResponded(gameserveritem_t server) Parameters server gameserveritem_t triggerCallback(IServerInfoRequestResult) public void triggerCallback(IServerInfoRequestResult result) Parameters result IServerInfoRequestResult"
  },
  "api/SDG.SteamworksProvider.Services.Matchmaking.SteamworksServerInfoRequestResult.html": {
    "href": "api/SDG.SteamworksProvider.Services.Matchmaking.SteamworksServerInfoRequestResult.html",
    "title": "Class SteamworksServerInfoRequestResult | Unturned Analyse Doc",
    "keywords": "Class SteamworksServerInfoRequestResult Namespace SDG.SteamworksProvider.Services.Matchmaking Assembly Assembly-CSharp.dll public class SteamworksServerInfoRequestResult : IServerInfoRequestResult Inheritance object SteamworksServerInfoRequestResult Implements IServerInfoRequestResult Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksServerInfoRequestResult(SteamworksServerInfo) public SteamworksServerInfoRequestResult(SteamworksServerInfo newServerInfo) Parameters newServerInfo SteamworksServerInfo Properties serverInfo public IServerInfo serverInfo { get; protected set; } Property Value IServerInfo"
  },
  "api/SDG.SteamworksProvider.Services.Matchmaking.html": {
    "href": "api/SDG.SteamworksProvider.Services.Matchmaking.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Matchmaking | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Matchmaking Classes SteamworksMatchmakingService SteamworksServerInfoRequestHandle SteamworksServerInfoRequestResult"
  },
  "api/SDG.SteamworksProvider.Services.Multiplayer.Client.SteamworksClientMultiplayerService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Multiplayer.Client.SteamworksClientMultiplayerService.html",
    "title": "Class SteamworksClientMultiplayerService | Unturned Analyse Doc",
    "keywords": "Class SteamworksClientMultiplayerService Namespace SDG.SteamworksProvider.Services.Multiplayer.Client Assembly Assembly-CSharp.dll public class SteamworksClientMultiplayerService : Service, IClientMultiplayerService, IService Inheritance object Service SteamworksClientMultiplayerService Implements IClientMultiplayerService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksClientMultiplayerService() public SteamworksClientMultiplayerService() Properties isAttempting Whether connection attempts are being made. public bool isAttempting { get; protected set; } Property Value bool isConnected Whether a server is currently connected to. public bool isConnected { get; protected set; } Property Value bool reader Network buffer memory stream reader. public BinaryReader reader { get; protected set; } Property Value BinaryReader serverInfo Information about currently connected server. public IServerInfo serverInfo { get; protected set; } Property Value IServerInfo stream Network buffer memory stream. public MemoryStream stream { get; protected set; } Property Value MemoryStream writer Network buffer memory stream writer. public BinaryWriter writer { get; protected set; } Property Value BinaryWriter Methods connect(IServerInfo) Connect to a server. public void connect(IServerInfo newServerInfo) Parameters newServerInfo IServerInfo Server to join. disconnect() Disconnect from current server. public void disconnect() read(out ICommunityEntity, byte[], out ulong, int) Receive a packet from an entity across the network. public bool read(out ICommunityEntity entity, byte[] data, out ulong length, int channel) Parameters entity ICommunityEntity Sender of data. data byte[] length ulong channel int Returns bool Whether any data was read. write(ICommunityEntity, byte[], ulong) Send a packet to an entity across the network. public void write(ICommunityEntity entity, byte[] data, ulong length) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. write(ICommunityEntity, byte[], ulong, ESendMethod, int) Send a packet to an entity across the network. public void write(ICommunityEntity entity, byte[] data, ulong length, ESendMethod method, int channel) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. method ESendMethod Type of send to use. channel int"
  },
  "api/SDG.SteamworksProvider.Services.Multiplayer.Client.html": {
    "href": "api/SDG.SteamworksProvider.Services.Multiplayer.Client.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Multiplayer.Client | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Multiplayer.Client Classes SteamworksClientMultiplayerService"
  },
  "api/SDG.SteamworksProvider.Services.Multiplayer.Server.SteamworksServerMultiplayerService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Multiplayer.Server.SteamworksServerMultiplayerService.html",
    "title": "Class SteamworksServerMultiplayerService | Unturned Analyse Doc",
    "keywords": "Class SteamworksServerMultiplayerService Namespace SDG.SteamworksProvider.Services.Multiplayer.Server Assembly Assembly-CSharp.dll public class SteamworksServerMultiplayerService : Service, IServerMultiplayerService, IService Inheritance object Service SteamworksServerMultiplayerService Implements IServerMultiplayerService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksServerMultiplayerService(SteamworksAppInfo) public SteamworksServerMultiplayerService(SteamworksAppInfo newAppInfo) Parameters newAppInfo SteamworksAppInfo Properties isHosting Whether a server is open. public bool isHosting { get; protected set; } Property Value bool reader Network buffer memory stream reader. public BinaryReader reader { get; protected set; } Property Value BinaryReader serverInfo Information about currently hosted server. public IServerInfo serverInfo { get; protected set; } Property Value IServerInfo stream Network buffer memory stream. public MemoryStream stream { get; protected set; } Property Value MemoryStream writer Network buffer memory stream writer. public BinaryWriter writer { get; protected set; } Property Value BinaryWriter Methods close() Close an existing server. public void close() open(uint, ushort, ESecurityMode) Open a new server. public void open(uint ip, ushort port, ESecurityMode security) Parameters ip uint port ushort security ESecurityMode read(out ICommunityEntity, byte[], out ulong, int) Receive a packet from an entity across the network. public bool read(out ICommunityEntity entity, byte[] data, out ulong length, int channel) Parameters entity ICommunityEntity Sender of data. data byte[] length ulong channel int Returns bool Whether any data was read. write(ICommunityEntity, byte[], ulong) Send a packet to an entity across the network. public void write(ICommunityEntity entity, byte[] data, ulong length) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. write(ICommunityEntity, byte[], ulong, ESendMethod, int) Send a packet to an entity across the network. public void write(ICommunityEntity entity, byte[] data, ulong length, ESendMethod method, int channel) Parameters entity ICommunityEntity Recipient of data. data byte[] Packet to send. length ulong Size of data in array. method ESendMethod Type of send to use. channel int Events ready public event ServerMultiplayerServiceReadyHandler ready Event Type ServerMultiplayerServiceReadyHandler"
  },
  "api/SDG.SteamworksProvider.Services.Multiplayer.Server.html": {
    "href": "api/SDG.SteamworksProvider.Services.Multiplayer.Server.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Multiplayer.Server | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Multiplayer.Server Classes SteamworksServerMultiplayerService"
  },
  "api/SDG.SteamworksProvider.Services.Multiplayer.SteamworksMultiplayerService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Multiplayer.SteamworksMultiplayerService.html",
    "title": "Class SteamworksMultiplayerService | Unturned Analyse Doc",
    "keywords": "Class SteamworksMultiplayerService Namespace SDG.SteamworksProvider.Services.Multiplayer Assembly Assembly-CSharp.dll public class SteamworksMultiplayerService : IMultiplayerService, IService Inheritance object SteamworksMultiplayerService Implements IMultiplayerService IService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksMultiplayerService(SteamworksAppInfo) public SteamworksMultiplayerService(SteamworksAppInfo newAppInfo) Parameters newAppInfo SteamworksAppInfo Properties clientMultiplayerService Current client multiplayer implementation. public IClientMultiplayerService clientMultiplayerService { get; protected set; } Property Value IClientMultiplayerService serverMultiplayerService Current server multiplayer implementation. public IServerMultiplayerService serverMultiplayerService { get; protected set; } Property Value IServerMultiplayerService Methods initialize() Initialize this service's external API. Should be called before using. public void initialize() shutdown() Shutdown this service's external API. Should be called before closing the program. public void shutdown() update() Update this service's external API. Should be called every frame. public void update()"
  },
  "api/SDG.SteamworksProvider.Services.Multiplayer.SteamworksServerInfo.html": {
    "href": "api/SDG.SteamworksProvider.Services.Multiplayer.SteamworksServerInfo.html",
    "title": "Class SteamworksServerInfo | Unturned Analyse Doc",
    "keywords": "Class SteamworksServerInfo Namespace SDG.SteamworksProvider.Services.Multiplayer Assembly Assembly-CSharp.dll public class SteamworksServerInfo : IServerInfo Inheritance object SteamworksServerInfo Implements IServerInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksServerInfo(gameserveritem_t) public SteamworksServerInfo(gameserveritem_t server) Parameters server gameserveritem_t Properties capacity public byte capacity { get; protected set; } Property Value byte entity public ICommunityEntity entity { get; protected set; } Property Value ICommunityEntity name public string name { get; protected set; } Property Value string ping public int ping { get; protected set; } Property Value int players public byte players { get; protected set; } Property Value byte"
  },
  "api/SDG.SteamworksProvider.Services.Multiplayer.html": {
    "href": "api/SDG.SteamworksProvider.Services.Multiplayer.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Multiplayer | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Multiplayer Classes SteamworksMultiplayerService SteamworksServerInfo"
  },
  "api/SDG.SteamworksProvider.Services.Statistics.Global.SteamworksGlobalStatisticsService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Statistics.Global.SteamworksGlobalStatisticsService.html",
    "title": "Class SteamworksGlobalStatisticsService | Unturned Analyse Doc",
    "keywords": "Class SteamworksGlobalStatisticsService Namespace SDG.SteamworksProvider.Services.Statistics.Global Assembly Assembly-CSharp.dll public class SteamworksGlobalStatisticsService : Service, IGlobalStatisticsService, IService Inheritance object Service SteamworksGlobalStatisticsService Implements IGlobalStatisticsService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksGlobalStatisticsService() public SteamworksGlobalStatisticsService() Methods getStatistic(string, out double) Checks the global total of the statistic with this name. public bool getStatistic(string name, out double data) Parameters name string The name of the statistic. data double The value of the statistic. Returns bool Whether the check succesfully executed. getStatistic(string, out long) Checks the global total of the statistic with this name. public bool getStatistic(string name, out long data) Parameters name string The name of the statistic. data long The value of the statistic. Returns bool Whether the check succesfully executed. requestStatistics() Requests the global statistics. public bool requestStatistics() Returns bool Whether the refresh succesfully executed. Events onGlobalStatisticsRequestReady Triggered when the global statistics are available. public event GlobalStatisticsRequestReady onGlobalStatisticsRequestReady Event Type GlobalStatisticsRequestReady"
  },
  "api/SDG.SteamworksProvider.Services.Statistics.Global.html": {
    "href": "api/SDG.SteamworksProvider.Services.Statistics.Global.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Statistics.Global | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Statistics.Global Classes SteamworksGlobalStatisticsService"
  },
  "api/SDG.SteamworksProvider.Services.Statistics.SteamworksStatisticsService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Statistics.SteamworksStatisticsService.html",
    "title": "Class SteamworksStatisticsService | Unturned Analyse Doc",
    "keywords": "Class SteamworksStatisticsService Namespace SDG.SteamworksProvider.Services.Statistics Assembly Assembly-CSharp.dll public class SteamworksStatisticsService : IStatisticsService, IService Inheritance object SteamworksStatisticsService Implements IStatisticsService IService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksStatisticsService() public SteamworksStatisticsService() Properties globalStatisticsService Current global statistics implementation. public IGlobalStatisticsService globalStatisticsService { get; protected set; } Property Value IGlobalStatisticsService userStatisticsService Current user statistics implementation. public IUserStatisticsService userStatisticsService { get; protected set; } Property Value IUserStatisticsService Methods initialize() Initialize this service's external API. Should be called before using. public void initialize() shutdown() Shutdown this service's external API. Should be called before closing the program. public void shutdown() update() Update this service's external API. Should be called every frame. public void update()"
  },
  "api/SDG.SteamworksProvider.Services.Statistics.User.SteamworksUserStatisticsService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Statistics.User.SteamworksUserStatisticsService.html",
    "title": "Class SteamworksUserStatisticsService | Unturned Analyse Doc",
    "keywords": "Class SteamworksUserStatisticsService Namespace SDG.SteamworksProvider.Services.Statistics.User Assembly Assembly-CSharp.dll public class SteamworksUserStatisticsService : Service, IUserStatisticsService, IService Inheritance object Service SteamworksUserStatisticsService Implements IUserStatisticsService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksUserStatisticsService() public SteamworksUserStatisticsService() Methods getStatistic(string, out int) Checks the current user's statistics with this name. public bool getStatistic(string name, out int data) Parameters name string The name of the statistic. data int The value of the statistic. Returns bool Whether the check succesfully executed. getStatistic(string, out float) Checks the current user's statistics with this name. public bool getStatistic(string name, out float data) Parameters name string The name of the statistic. data float The value of the statistic. Returns bool Whether the check succesfully executed. requestStatistics() Requests the user's statistics. public bool requestStatistics() Returns bool Whether the refresh succesfully executed. setStatistic(string, int) Assigns the current user's statistics with this name. public bool setStatistic(string name, int data) Parameters name string The name of the statistic. data int The value of the statistic. Returns bool Whether the check succesfully executed. setStatistic(string, float) Assigns the current user's statistics with this name. public bool setStatistic(string name, float data) Parameters name string The name of the statistic. data float The value of the statistic. Returns bool Whether the check succesfully executed. Events onUserStatisticsRequestReady Triggered when the user's statistics are available. public event UserStatisticsRequestReady onUserStatisticsRequestReady Event Type UserStatisticsRequestReady"
  },
  "api/SDG.SteamworksProvider.Services.Statistics.User.html": {
    "href": "api/SDG.SteamworksProvider.Services.Statistics.User.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Statistics.User | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Statistics.User Classes SteamworksUserStatisticsService"
  },
  "api/SDG.SteamworksProvider.Services.Statistics.html": {
    "href": "api/SDG.SteamworksProvider.Services.Statistics.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Statistics | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Statistics Classes SteamworksStatisticsService"
  },
  "api/SDG.SteamworksProvider.Services.Store.SteamworksStorePackageID.html": {
    "href": "api/SDG.SteamworksProvider.Services.Store.SteamworksStorePackageID.html",
    "title": "Class SteamworksStorePackageID | Unturned Analyse Doc",
    "keywords": "Class SteamworksStorePackageID Namespace SDG.SteamworksProvider.Services.Store Assembly Assembly-CSharp.dll public class SteamworksStorePackageID : IStorePackageID Inheritance object SteamworksStorePackageID Implements IStorePackageID Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksStorePackageID(uint) public SteamworksStorePackageID(uint appID) Parameters appID uint Properties appID public AppId_t appID { get; protected set; } Property Value AppId_t"
  },
  "api/SDG.SteamworksProvider.Services.Store.SteamworksStoreService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Store.SteamworksStoreService.html",
    "title": "Class SteamworksStoreService | Unturned Analyse Doc",
    "keywords": "Class SteamworksStoreService Namespace SDG.SteamworksProvider.Services.Store Assembly Assembly-CSharp.dll public class SteamworksStoreService : Service, IStoreService, IService Inheritance object Service SteamworksStoreService Implements IStoreService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksStoreService(SteamworksAppInfo) public SteamworksStoreService(SteamworksAppInfo newAppInfo) Parameters newAppInfo SteamworksAppInfo Methods open(IStorePackageID) View a package on the store. public void open(IStorePackageID packageID) Parameters packageID IStorePackageID Package to view."
  },
  "api/SDG.SteamworksProvider.Services.Store.html": {
    "href": "api/SDG.SteamworksProvider.Services.Store.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Store | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Store Classes SteamworksStorePackageID SteamworksStoreService"
  },
  "api/SDG.SteamworksProvider.Services.Translation.SteamworksTranslationService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Translation.SteamworksTranslationService.html",
    "title": "Class SteamworksTranslationService | Unturned Analyse Doc",
    "keywords": "Class SteamworksTranslationService Namespace SDG.SteamworksProvider.Services.Translation Assembly Assembly-CSharp.dll public class SteamworksTranslationService : Service, ITranslationService, IService Inheritance object Service SteamworksTranslationService Implements ITranslationService IService Inherited Members Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksTranslationService() public SteamworksTranslationService() Properties language public string language { get; protected set; } Property Value string Methods initialize() Initialize this service's external API. Should be called before using. public override void initialize()"
  },
  "api/SDG.SteamworksProvider.Services.Translation.html": {
    "href": "api/SDG.SteamworksProvider.Services.Translation.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Translation | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Translation Classes SteamworksTranslationService"
  },
  "api/SDG.SteamworksProvider.Services.Workshop.SteamworksWorkshopService.html": {
    "href": "api/SDG.SteamworksProvider.Services.Workshop.SteamworksWorkshopService.html",
    "title": "Class SteamworksWorkshopService | Unturned Analyse Doc",
    "keywords": "Class SteamworksWorkshopService Namespace SDG.SteamworksProvider.Services.Workshop Assembly Assembly-CSharp.dll public class SteamworksWorkshopService : Service, IWorkshopService, IService Inheritance object Service SteamworksWorkshopService Implements IWorkshopService IService Inherited Members Service.initialize() Service.update() Service.shutdown() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksWorkshopService() public SteamworksWorkshopService() Properties canOpenWorkshop Whether the user has their overlay enabled. public bool canOpenWorkshop { get; } Property Value bool Methods open(PublishedFileId_t) public void open(PublishedFileId_t id) Parameters id PublishedFileId_t"
  },
  "api/SDG.SteamworksProvider.Services.Workshop.html": {
    "href": "api/SDG.SteamworksProvider.Services.Workshop.html",
    "title": "Namespace SDG.SteamworksProvider.Services.Workshop | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider.Services.Workshop Classes SteamworksWorkshopService"
  },
  "api/SDG.SteamworksProvider.SteamworksAppInfo.html": {
    "href": "api/SDG.SteamworksProvider.SteamworksAppInfo.html",
    "title": "Class SteamworksAppInfo | Unturned Analyse Doc",
    "keywords": "Class SteamworksAppInfo Namespace SDG.SteamworksProvider Assembly Assembly-CSharp.dll public class SteamworksAppInfo Inheritance object SteamworksAppInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksAppInfo(uint, string, string, bool) public SteamworksAppInfo(uint newID, string newName, string newVersion, bool newIsDedicated) Parameters newID uint newName string newVersion string newIsDedicated bool Properties id public uint id { get; protected set; } Property Value uint isDedicated public bool isDedicated { get; protected set; } Property Value bool name public string name { get; protected set; } Property Value string version public string version { get; protected set; } Property Value string"
  },
  "api/SDG.SteamworksProvider.SteamworksProvider.html": {
    "href": "api/SDG.SteamworksProvider.SteamworksProvider.html",
    "title": "Class SteamworksProvider | Unturned Analyse Doc",
    "keywords": "Class SteamworksProvider Namespace SDG.SteamworksProvider Assembly Assembly-CSharp.dll public class SteamworksProvider : IProvider Inheritance object SteamworksProvider Implements IProvider Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamworksProvider(SteamworksAppInfo) public SteamworksProvider(SteamworksAppInfo newAppInfo) Parameters newAppInfo SteamworksAppInfo Properties achievementsService Current achievements implementation. public IAchievementsService achievementsService { get; protected set; } Property Value IAchievementsService browserService Current browser implementation. public IBrowserService browserService { get; protected set; } Property Value IBrowserService cloudService Current cloud implementation. public ICloudService cloudService { get; protected set; } Property Value ICloudService communityService Current community implementation. public ICommunityService communityService { get; protected set; } Property Value ICommunityService economyService Current economy implementation. public TempSteamworksEconomy economyService { get; protected set; } Property Value TempSteamworksEconomy matchmakingService Current matchmaking implementation. public TempSteamworksMatchmaking matchmakingService { get; protected set; } Property Value TempSteamworksMatchmaking multiplayerService Current multiplayer implementation. public IMultiplayerService multiplayerService { get; protected set; } Property Value IMultiplayerService statisticsService Current statistics implementation. public IStatisticsService statisticsService { get; protected set; } Property Value IStatisticsService storeService Current store implementation. public IStoreService storeService { get; protected set; } Property Value IStoreService translationService Current translation implementation. public ITranslationService translationService { get; protected set; } Property Value ITranslationService workshopService Current workshop implementation. public TempSteamworksWorkshop workshopService { get; protected set; } Property Value TempSteamworksWorkshop Methods intialize() Initialize this provider's external API. Should be called before using provider features. public void intialize() Exceptions Exception Thrown if initializing fails. shutdown() Shutdown this provider's external API. Should be called before closing the program if using provider features. public void shutdown() update() Update this provider's external API. Should be called every frame if using provider features. public void update()"
  },
  "api/SDG.SteamworksProvider.html": {
    "href": "api/SDG.SteamworksProvider.html",
    "title": "Namespace SDG.SteamworksProvider | Unturned Analyse Doc",
    "keywords": "Namespace SDG.SteamworksProvider Classes SteamworksAppInfo SteamworksProvider"
  },
  "api/SDG.Unturned.Achievement.html": {
    "href": "api/SDG.Unturned.Achievement.html",
    "title": "Class Achievement | Unturned Analyse Doc",
    "keywords": "Class Achievement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Achievement : MonoBehaviour Inheritance object Achievement Constructors Achievement() public Achievement()"
  },
  "api/SDG.Unturned.AchievementStatusData.html": {
    "href": "api/SDG.Unturned.AchievementStatusData.html",
    "title": "Class AchievementStatusData | Unturned Analyse Doc",
    "keywords": "Class AchievementStatusData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AchievementStatusData Inheritance object AchievementStatusData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AchievementStatusData() public AchievementStatusData() Fields NPC_Achievement_IDs Names of achievements that can be granted by NPC rewards. public string[] NPC_Achievement_IDs Field Value string[] Methods canBeGrantedByNPC(string) public bool canBeGrantedByNPC(string id) Parameters id string Returns bool"
  },
  "api/SDG.Unturned.Acid.html": {
    "href": "api/SDG.Unturned.Acid.html",
    "title": "Class Acid | Unturned Analyse Doc",
    "keywords": "Class Acid Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Acid : MonoBehaviour Inheritance object Acid Constructors Acid() public Acid() Fields effectGuid public Guid effectGuid Field Value Guid effectID Kept because lots of modders have been using this script in Unity, so removing legacy effect id would break their content. public ushort effectID Field Value ushort"
  },
  "api/SDG.Unturned.Action.html": {
    "href": "api/SDG.Unturned.Action.html",
    "title": "Class Action | Unturned Analyse Doc",
    "keywords": "Class Action Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Action Inheritance object Action Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Action(ushort, EActionType, ActionBlueprint[], string, string, string) public Action(ushort newSource, EActionType newType, ActionBlueprint[] newBlueprints, string newText, string newTooltip, string newKey) Parameters newSource ushort newType EActionType newBlueprints ActionBlueprint[] newText string newTooltip string newKey string Properties blueprints public ActionBlueprint[] blueprints { get; } Property Value ActionBlueprint[] key public string key { get; } Property Value string source public ushort source { get; } Property Value ushort text public string text { get; } Property Value string tooltip public string tooltip { get; } Property Value string type public EActionType type { get; } Property Value EActionType"
  },
  "api/SDG.Unturned.ActionBlueprint.html": {
    "href": "api/SDG.Unturned.ActionBlueprint.html",
    "title": "Class ActionBlueprint | Unturned Analyse Doc",
    "keywords": "Class ActionBlueprint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ActionBlueprint Inheritance object ActionBlueprint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ActionBlueprint(byte, bool) public ActionBlueprint(byte newID, bool newLink) Parameters newID byte newLink bool Properties id public byte id { get; } Property Value byte isLink public bool isLink { get; } Property Value bool"
  },
  "api/SDG.Unturned.ActivationEventHook.html": {
    "href": "api/SDG.Unturned.ActivationEventHook.html",
    "title": "Class ActivationEventHook | Unturned Analyse Doc",
    "keywords": "Class ActivationEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ActivationEventHook : MonoBehaviour Inheritance object ActivationEventHook Constructors ActivationEventHook() public ActivationEventHook() Fields OnDisabled Invoked when component is disabled and when the game object is deactivated. Note that if the component or game object spawn deactivated this will not be immediately invoked. public UnityEvent OnDisabled Field Value UnityEvent OnEnabled Invoked when component is enabled and when the game object is activated. public UnityEvent OnEnabled Field Value UnityEvent"
  },
  "api/SDG.Unturned.AdminUsageFlagsChanged.html": {
    "href": "api/SDG.Unturned.AdminUsageFlagsChanged.html",
    "title": "Delegate AdminUsageFlagsChanged | Unturned Analyse Doc",
    "keywords": "Delegate AdminUsageFlagsChanged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void AdminUsageFlagsChanged(Player player, EPlayerAdminUsageFlags oldFlags, EPlayerAdminUsageFlags newFlags) Parameters player Player oldFlags EPlayerAdminUsageFlags newFlags EPlayerAdminUsageFlags Constructors AdminUsageFlagsChanged(object, IntPtr) public AdminUsageFlagsChanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, EPlayerAdminUsageFlags, EPlayerAdminUsageFlags, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, EPlayerAdminUsageFlags oldFlags, EPlayerAdminUsageFlags newFlags, AsyncCallback callback, object @object) Parameters player Player oldFlags EPlayerAdminUsageFlags newFlags EPlayerAdminUsageFlags callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, EPlayerAdminUsageFlags, EPlayerAdminUsageFlags) public virtual void Invoke(Player player, EPlayerAdminUsageFlags oldFlags, EPlayerAdminUsageFlags newFlags) Parameters player Player oldFlags EPlayerAdminUsageFlags newFlags EPlayerAdminUsageFlags"
  },
  "api/SDG.Unturned.AirdropAsset.html": {
    "href": "api/SDG.Unturned.AirdropAsset.html",
    "title": "Class AirdropAsset | Unturned Analyse Doc",
    "keywords": "Class AirdropAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AirdropAsset : Asset, IAssetErrorContext Inheritance object Asset AirdropAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AirdropAsset() public AirdropAsset() Fields barricadeRef Interactable storage barricade to spawn at the drop position. public AssetReference<ItemBarricadeAsset> barricadeRef Field Value AssetReference<ItemBarricadeAsset> defaultAirdrop public static AssetReference<AirdropAsset> defaultAirdrop Field Value AssetReference<AirdropAsset> model Prefab to spawn falling from the aircraft. public MasterBundleReference<GameObject> model Field Value MasterBundleReference<GameObject> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.AirdropDevkitNode.html": {
    "href": "api/SDG.Unturned.AirdropDevkitNode.html",
    "title": "Class AirdropDevkitNode | Unturned Analyse Doc",
    "keywords": "Class AirdropDevkitNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AirdropDevkitNode : TempNodeBase, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem TempNodeBase AirdropDevkitNode Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler Inherited Members TempNodeBase.isSelected TempNodeBase.beginSelection(InteractionData) TempNodeBase.endSelection(InteractionData) DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors AirdropDevkitNode() public AirdropDevkitNode() Fields id public ushort id Field Value ushort Methods readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.AirdropDevkitNodeSystem.html": {
    "href": "api/SDG.Unturned.AirdropDevkitNodeSystem.html",
    "title": "Class AirdropDevkitNodeSystem | Unturned Analyse Doc",
    "keywords": "Class AirdropDevkitNodeSystem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AirdropDevkitNodeSystem : TempNodeSystemBase Inheritance object TempNodeSystemBase AirdropDevkitNodeSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Get() public static AirdropDevkitNodeSystem Get() Returns AirdropDevkitNodeSystem GetAllNodes() public IReadOnlyList<AirdropDevkitNode> GetAllNodes() Returns IReadOnlyList<AirdropDevkitNode>"
  },
  "api/SDG.Unturned.AirdropInfo.html": {
    "href": "api/SDG.Unturned.AirdropInfo.html",
    "title": "Class AirdropInfo | Unturned Analyse Doc",
    "keywords": "Class AirdropInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AirdropInfo Inheritance object AirdropInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AirdropInfo() public AirdropInfo() Fields delay public float delay Field Value float direction public Vector3 direction Field Value Vector3 dropPosition Calculated position (not directly replaced) to spawn falling box. public Vector3 dropPosition Field Value Vector3 dropped public bool dropped Field Value bool force public float force Field Value float id public ushort id Field Value ushort model public Transform model Field Value Transform speed public float speed Field Value float state public Vector3 state Field Value Vector3"
  },
  "api/SDG.Unturned.AirdropNode.html": {
    "href": "api/SDG.Unturned.AirdropNode.html",
    "title": "Class AirdropNode | Unturned Analyse Doc",
    "keywords": "Class AirdropNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AirdropNode : Node Inheritance object Node AirdropNode Inherited Members Node._point Node._type Node._model Node.move(Vector3) Node.setEnabled(bool) Node.remove() Node.point Node.type Node.model object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AirdropNode(Vector3) public AirdropNode(Vector3 newPoint) Parameters newPoint Vector3 AirdropNode(Vector3, ushort) public AirdropNode(Vector3 newPoint, ushort newID) Parameters newPoint Vector3 newID ushort Fields id public ushort id Field Value ushort"
  },
  "api/SDG.Unturned.AlertTool.html": {
    "href": "api/SDG.Unturned.AlertTool.html",
    "title": "Class AlertTool | Unturned Analyse Doc",
    "keywords": "Class AlertTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AlertTool Inheritance object AlertTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AlertTool() public AlertTool() Methods alert(Player, Vector3, float, bool, Vector3, bool) Alerts any agents in the area to the player if needed. public static void alert(Player player, Vector3 position, float radius, bool sneak, Vector3 spotDir, bool isSpotOn) Parameters player Player The player causing this alert. position Vector3 The position of the alert. radius float The detection radius. sneak bool Whether or not to hide. spotDir Vector3 isSpotOn bool alert(Vector3, float) Alerts any agents in the area. public static void alert(Vector3 position, float radius) Parameters position Vector3 The position of the alert. radius float The detection radius."
  },
  "api/SDG.Unturned.Animal.html": {
    "href": "api/SDG.Unturned.Animal.html",
    "title": "Class Animal | Unturned Analyse Doc",
    "keywords": "Class Animal Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Animal : MonoBehaviour, IExplosionDamageable, IEquatable<IExplosionDamageable> Inheritance object Animal Implements IExplosionDamageable IEquatable<IExplosionDamageable> Constructors Animal() public Animal() Fields id public ushort id Field Value ushort index public ushort index Field Value ushort isDead public bool isDead Field Value bool isUpdated Whether this animal was updated in this network tick and needs to be resent. public bool isUpdated Field Value bool pack public PackInfo pack Field Value PackInfo Properties IsAlive public bool IsAlive { get; } Property Value bool IsEligibleForExplosionDamage Used to exclude dead entities from further evaluation. public bool IsEligibleForExplosionDamage { get; } Property Value bool asset public AnimalAsset asset { get; } Property Value AnimalAsset isFleeing public bool isFleeing { get; } Property Value bool isHunting public bool isHunting { get; } Property Value bool lastDead public float lastDead { get; } Property Value float target public Vector3 target { get; } Property Value Vector3 Methods ApplyExplosionDamage(in ExplosionParameters, ref ExplosionDamageParameters) public void ApplyExplosionDamage(in ExplosionParameters explosionParameters, ref ExplosionDamageParameters damageParameters) Parameters explosionParameters ExplosionParameters damageParameters ExplosionDamageParameters Equals(IExplosionDamageable) public bool Equals(IExplosionDamageable obj) Parameters obj IExplosionDamageable Returns bool GetClosestPointToExplosion(Vector3) Used to sort damage from nearest to furthest. public Vector3 GetClosestPointToExplosion(Vector3 explosionCenter) Parameters explosionCenter Vector3 Returns Vector3 GetHealth() public float GetHealth() Returns float GetTargetPlayer() public Player GetTargetPlayer() Returns Player PlayStartleAnimation() public void PlayStartleAnimation() alertDamagedFromPoint(Vector3) Alert this animal that it was damaged from a given position. Offensive animals investigate the position, whereas other animals run away. public void alertDamagedFromPoint(Vector3 point) Parameters point Vector3 alertDirection(Vector3, bool) public void alertDirection(Vector3 newDirection, bool sendToPack) Parameters newDirection Vector3 sendToPack bool alertGoToPoint(Vector3, bool) public void alertGoToPoint(Vector3 point, bool sendToPack) Parameters point Vector3 sendToPack bool alertPlayer(Player, bool) public void alertPlayer(Player potentialTargetPlayer, bool sendToPack) Parameters potentialTargetPlayer Player sendToPack bool alertPoint(Vector3, bool) Keep for plugin backwards compatibility. [Obsolete(\"Clarified with alertRunAwayFromPoint, alertGoToPoint and alertDamagedFromPoint.\")] public void alertPoint(Vector3 newPosition, bool sendToPack) Parameters newPosition Vector3 sendToPack bool alertRunAwayFromPoint(Vector3, bool) Alerts this animal that it needs to run away. public void alertRunAwayFromPoint(Vector3 newPosition, bool sendToPack) Parameters newPosition Vector3 The position to run away from. sendToPack bool askAttack() public void askAttack() askDamage(ushort, Vector3, out EPlayerKill, out uint, bool, bool, ERagdollEffect) public void askDamage(ushort amount, Vector3 newRagdoll, out EPlayerKill kill, out uint xp, bool trackKill = true, bool dropLoot = true, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters amount ushort newRagdoll Vector3 kill EPlayerKill xp uint trackKill bool dropLoot bool ragdollEffect ERagdollEffect askEat() public void askEat() askGlance() public void askGlance() askPanic() public void askPanic() askStartle() [Obsolete(\"Renamed to PlayStartleAnimation\")] public void askStartle() checkAlert(Player) public bool checkAlert(Player potentialTargetPlayer) Parameters potentialTargetPlayer Player Returns bool init() public void init() sendRevive(Vector3, float) public void sendRevive(Vector3 position, float angle) Parameters position Vector3 angle float tellAlive(Vector3, byte) public void tellAlive(Vector3 newPosition, byte newAngle) Parameters newPosition Vector3 newAngle byte tellDead(Vector3, ERagdollEffect) public void tellDead(Vector3 newRagdoll, ERagdollEffect ragdollEffect) Parameters newRagdoll Vector3 ragdollEffect ERagdollEffect tellState(Vector3, byte) [Obsolete] public void tellState(Vector3 newPosition, byte newAngle) Parameters newPosition Vector3 newAngle byte tellState(Vector3, float) public void tellState(Vector3 newPosition, float newAngle) Parameters newPosition Vector3 newAngle float tick() public void tick() updateStates() public void updateStates()"
  },
  "api/SDG.Unturned.AnimalAsset.html": {
    "href": "api/SDG.Unturned.AnimalAsset.html",
    "title": "Class AnimalAsset | Unturned Analyse Doc",
    "keywords": "Class AnimalAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalAsset : Asset, IAssetErrorContext Inheritance object Asset AnimalAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimalAsset() public AnimalAsset() Fields _animalName protected string _animalName Field Value string _client protected GameObject _client Field Value GameObject _damage protected byte _damage Field Value byte _dedicated protected GameObject _dedicated Field Value GameObject _health protected ushort _health Field Value ushort _meat protected ushort _meat Field Value ushort _panics protected AudioClip[] _panics Field Value AudioClip[] _pelt protected ushort _pelt Field Value ushort _ragdoll protected GameObject _ragdoll Field Value GameObject _regen protected float _regen Field Value float _rewardXP protected uint _rewardXP Field Value uint _roars protected AudioClip[] _roars Field Value AudioClip[] _server protected GameObject _server Field Value GameObject _speedRun protected float _speedRun Field Value float _speedWalk protected float _speedWalk Field Value float attackInterval Minimum seconds between attacks. public float attackInterval Field Value float Properties FriendlyName public override string FriendlyName { get; } Property Value string animalName public string animalName { get; } Property Value string assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType attackAnimVariantsCount Number of Attack_# animations. public int attackAnimVariantsCount { get; protected set; } Property Value int behaviour public EAnimalBehaviour behaviour { get; } Property Value EAnimalBehaviour client public GameObject client { get; } Property Value GameObject damage public byte damage { get; } Property Value byte dedicated public GameObject dedicated { get; } Property Value GameObject eatAnimVariantsCount Number of Eat_# animations. public int eatAnimVariantsCount { get; protected set; } Property Value int glanceAnimVariantsCount Number of Glance_# animations. public int glanceAnimVariantsCount { get; protected set; } Property Value int health public ushort health { get; } Property Value ushort horizontalAttackRangeSquared Maximum distance on the XZ plane. public float horizontalAttackRangeSquared { get; protected set; } Property Value float horizontalVehicleAttackRangeSquared Maximum distance on the XZ plane when attacking vehicles. public float horizontalVehicleAttackRangeSquared { get; protected set; } Property Value float meat public ushort meat { get; } Property Value ushort panics public AudioClip[] panics { get; } Property Value AudioClip[] pelt public ushort pelt { get; } Property Value ushort ragdoll public GameObject ragdoll { get; } Property Value GameObject regen public float regen { get; } Property Value float rewardID public ushort rewardID { get; } Property Value ushort rewardMax public byte rewardMax { get; } Property Value byte rewardMin public byte rewardMin { get; } Property Value byte rewardXP public uint rewardXP { get; } Property Value uint roars public AudioClip[] roars { get; } Property Value AudioClip[] server public GameObject server { get; } Property Value GameObject shouldPlayAnimsOnDedicatedServer Temporary until something better makes sense? For Spyjack. public bool shouldPlayAnimsOnDedicatedServer { get; } Property Value bool speedRun public float speedRun { get; } Property Value float speedWalk public float speedWalk { get; } Property Value float startleAnimVariantsCount Number of Startle_# animations. public int startleAnimVariantsCount { get; protected set; } Property Value int verticalAttackRange Maximum distance on the Y axis. public float verticalAttackRange { get; protected set; } Property Value float Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local validateAnimations(GameObject) protected void validateAnimations(GameObject root) Parameters root GameObject"
  },
  "api/SDG.Unturned.AnimalDamageMultiplier.html": {
    "href": "api/SDG.Unturned.AnimalDamageMultiplier.html",
    "title": "Class AnimalDamageMultiplier | Unturned Analyse Doc",
    "keywords": "Class AnimalDamageMultiplier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalDamageMultiplier : IDamageMultiplier Inheritance object AnimalDamageMultiplier Implements IDamageMultiplier Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimalDamageMultiplier(float, float, float, float) public AnimalDamageMultiplier(float newDamage, float newLeg, float newSpine, float newSkull) Parameters newDamage float newLeg float newSpine float newSkull float Fields MULTIPLIER_EASY public static readonly float MULTIPLIER_EASY Field Value float MULTIPLIER_HARD public static readonly float MULTIPLIER_HARD Field Value float damage public float damage Field Value float leg public float leg Field Value float skull public float skull Field Value float spine public float spine Field Value float Methods multiply(ELimb) public float multiply(ELimb limb) Parameters limb ELimb Returns float"
  },
  "api/SDG.Unturned.AnimalManager.html": {
    "href": "api/SDG.Unturned.AnimalManager.html",
    "title": "Class AnimalManager | Unturned Analyse Doc",
    "keywords": "Class AnimalManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalManager : SteamCaller Inheritance object SteamCaller AnimalManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors AnimalManager() public AnimalManager() Fields updates public static ushort updates Field Value ushort Properties animals public static List<Animal> animals { get; } Property Value List<Animal> maxInstances public static uint maxInstances { get; } Property Value uint packs public static List<PackInfo> packs { get; } Property Value List<PackInfo> tickingAnimals public static List<Animal> tickingAnimals { get; } Property Value List<Animal> Methods ReceiveAnimalAlive(ushort, Vector3, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellAnimalAlive\")] public static void ReceiveAnimalAlive(ushort index, Vector3 newPosition, byte newAngle) Parameters index ushort newPosition Vector3 newAngle byte ReceiveAnimalAttack(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askAnimalAttack\")] public static void ReceiveAnimalAttack(ushort index) Parameters index ushort ReceiveAnimalDead(ushort, Vector3, ERagdollEffect) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellAnimalDead\")] public static void ReceiveAnimalDead(ushort index, Vector3 newRagdoll, ERagdollEffect newRagdollEffect) Parameters index ushort newRagdoll Vector3 newRagdollEffect ERagdollEffect ReceiveAnimalPanic(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askAnimalPanic\")] public static void ReceiveAnimalPanic(ushort index) Parameters index ushort ReceiveAnimalStartle(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askAnimalStartle\")] public static void ReceiveAnimalStartle(ushort index) Parameters index ushort ReceiveAnimalStates(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveAnimalStates(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveMultipleAnimals(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveMultipleAnimals(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSingleAnimal(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveSingleAnimal(in ClientInvocationContext context) Parameters context ClientInvocationContext TeleportAnimalBackIntoMap(Animal) Find replacement spawnpoint for an animal and teleport it there. public static void TeleportAnimalBackIntoMap(Animal animal) Parameters animal Animal askAnimalAttack(CSteamID, ushort) [Obsolete] public void askAnimalAttack(CSteamID steamID, ushort index) Parameters steamID CSteamID index ushort askAnimalPanic(CSteamID, ushort) [Obsolete] public void askAnimalPanic(CSteamID steamID, ushort index) Parameters steamID CSteamID index ushort askAnimalStartle(CSteamID, ushort) [Obsolete] public void askAnimalStartle(CSteamID steamID, ushort index) Parameters steamID CSteamID index ushort askAnimals(CSteamID) [Obsolete] public void askAnimals(CSteamID steamID) Parameters steamID CSteamID askClearAllAnimals() Used in arena mode to reset all animals to dead. public static void askClearAllAnimals() dropLoot(Animal) public static void dropLoot(Animal animal) Parameters animal Animal getAnimal(ushort) Gets the animal at a specific index. public static Animal getAnimal(ushort index) Parameters index ushort The index of the animal. Returns Animal getAnimalsInRadius(Vector3, float, List<Animal>) public static void getAnimalsInRadius(Vector3 center, float sqrRadius, List<Animal> result) Parameters center Vector3 sqrRadius float result List<Animal> giveAnimal(Player, ushort) public static bool giveAnimal(Player player, ushort id) Parameters player Player id ushort Returns bool sendAnimal(Animal, NetPakWriter) [Obsolete] public void sendAnimal(Animal animal, NetPakWriter writer) Parameters animal Animal writer NetPakWriter sendAnimalAlive(Animal, Vector3, byte) public static void sendAnimalAlive(Animal animal, Vector3 newPosition, byte newAngle) Parameters animal Animal newPosition Vector3 newAngle byte sendAnimalAttack(Animal) public static void sendAnimalAttack(Animal animal) Parameters animal Animal sendAnimalDead(Animal, Vector3, ERagdollEffect) public static void sendAnimalDead(Animal animal, Vector3 newRagdoll, ERagdollEffect newRagdollEffect = ERagdollEffect.NONE) Parameters animal Animal newRagdoll Vector3 newRagdollEffect ERagdollEffect sendAnimalPanic(Animal) public static void sendAnimalPanic(Animal animal) Parameters animal Animal sendAnimalStartle(Animal) public static void sendAnimalStartle(Animal animal) Parameters animal Animal spawnAnimal(ushort, Vector3, Quaternion) public static void spawnAnimal(ushort id, Vector3 point, Quaternion angle) Parameters id ushort point Vector3 angle Quaternion tellAnimal(CSteamID) [Obsolete] public void tellAnimal(CSteamID steamID) Parameters steamID CSteamID tellAnimalAlive(CSteamID, ushort, Vector3, byte) [Obsolete] public void tellAnimalAlive(CSteamID steamID, ushort index, Vector3 newPosition, byte newAngle) Parameters steamID CSteamID index ushort newPosition Vector3 newAngle byte tellAnimalDead(CSteamID, ushort, Vector3, byte) [Obsolete] public void tellAnimalDead(CSteamID steamID, ushort index, Vector3 newRagdoll, byte newRagdollEffect) Parameters steamID CSteamID index ushort newRagdoll Vector3 newRagdollEffect byte tellAnimalStates(CSteamID) [Obsolete] public void tellAnimalStates(CSteamID steamID) Parameters steamID CSteamID tellAnimals(CSteamID) [Obsolete] public void tellAnimals(CSteamID steamID) Parameters steamID CSteamID"
  },
  "api/SDG.Unturned.AnimalManager_NetMethods.html": {
    "href": "api/SDG.Unturned.AnimalManager_NetMethods.html",
    "title": "Class AnimalManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class AnimalManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(AnimalManager))] public static class AnimalManager_NetMethods Inheritance object AnimalManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAnimalAlive_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAnimalAlive\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAnimalAlive_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAnimalAlive_Write(NetPakWriter, ushort, Vector3, byte) [NetInvokableGeneratedMethod(\"ReceiveAnimalAlive\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAnimalAlive_Write(NetPakWriter writer, ushort index, Vector3 newPosition, byte newAngle) Parameters writer NetPakWriter index ushort newPosition Vector3 newAngle byte ReceiveAnimalAttack_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAnimalAttack\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAnimalAttack_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAnimalAttack_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveAnimalAttack\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAnimalAttack_Write(NetPakWriter writer, ushort index) Parameters writer NetPakWriter index ushort ReceiveAnimalDead_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAnimalDead\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAnimalDead_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAnimalDead_Write(NetPakWriter, ushort, Vector3, ERagdollEffect) [NetInvokableGeneratedMethod(\"ReceiveAnimalDead\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAnimalDead_Write(NetPakWriter writer, ushort index, Vector3 newRagdoll, ERagdollEffect newRagdollEffect) Parameters writer NetPakWriter index ushort newRagdoll Vector3 newRagdollEffect ERagdollEffect ReceiveAnimalPanic_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAnimalPanic\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAnimalPanic_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAnimalPanic_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveAnimalPanic\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAnimalPanic_Write(NetPakWriter writer, ushort index) Parameters writer NetPakWriter index ushort ReceiveAnimalStartle_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAnimalStartle\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAnimalStartle_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAnimalStartle_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveAnimalStartle\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAnimalStartle_Write(NetPakWriter writer, ushort index) Parameters writer NetPakWriter index ushort"
  },
  "api/SDG.Unturned.AnimalSpawn.html": {
    "href": "api/SDG.Unturned.AnimalSpawn.html",
    "title": "Class AnimalSpawn | Unturned Analyse Doc",
    "keywords": "Class AnimalSpawn Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalSpawn Inheritance object AnimalSpawn Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimalSpawn(ushort) public AnimalSpawn(ushort newAnimal) Parameters newAnimal ushort Properties animal public ushort animal { get; } Property Value ushort"
  },
  "api/SDG.Unturned.AnimalSpawnpoint.html": {
    "href": "api/SDG.Unturned.AnimalSpawnpoint.html",
    "title": "Class AnimalSpawnpoint | Unturned Analyse Doc",
    "keywords": "Class AnimalSpawnpoint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalSpawnpoint Inheritance object AnimalSpawnpoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimalSpawnpoint(byte, Vector3) public AnimalSpawnpoint(byte newType, Vector3 newPoint) Parameters newType byte newPoint Vector3 Fields type public byte type Field Value byte Properties node public Transform node { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 Methods setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.AnimalTable.html": {
    "href": "api/SDG.Unturned.AnimalTable.html",
    "title": "Class AnimalTable | Unturned Analyse Doc",
    "keywords": "Class AnimalTable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalTable Inheritance object AnimalTable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimalTable(List<AnimalTier>, Color, string, ushort) public AnimalTable(List<AnimalTier> newTiers, Color newColor, string newName, ushort newTableID) Parameters newTiers List<AnimalTier> newColor Color newName string newTableID ushort AnimalTable(string) public AnimalTable(string newName) Parameters newName string Fields name public string name Field Value string tableID public ushort tableID Field Value ushort Properties color public Color color { get; set; } Property Value Color tiers public List<AnimalTier> tiers { get; } Property Value List<AnimalTier> Methods addAnimal(byte, ushort) public void addAnimal(byte tierIndex, ushort id) Parameters tierIndex byte id ushort addTier(string) public void addTier(string name) Parameters name string buildTable() public void buildTable() getAnimal() public ushort getAnimal() Returns ushort removeAnimal(byte, byte) public void removeAnimal(byte tierIndex, byte animalIndex) Parameters tierIndex byte animalIndex byte removeTier(int) public void removeTier(int tierIndex) Parameters tierIndex int updateChance(int, float) public void updateChance(int tierIndex, float chance) Parameters tierIndex int chance float"
  },
  "api/SDG.Unturned.AnimalTier.html": {
    "href": "api/SDG.Unturned.AnimalTier.html",
    "title": "Class AnimalTier | Unturned Analyse Doc",
    "keywords": "Class AnimalTier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalTier Inheritance object AnimalTier Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimalTier(List<AnimalSpawn>, string, float) public AnimalTier(List<AnimalSpawn> newTable, string newName, float newChance) Parameters newTable List<AnimalSpawn> newName string newChance float Fields chance public float chance Field Value float name public string name Field Value string Properties table public List<AnimalSpawn> table { get; } Property Value List<AnimalSpawn> Methods addAnimal(ushort) public void addAnimal(ushort id) Parameters id ushort removeAnimal(byte) public void removeAnimal(byte index) Parameters index byte"
  },
  "api/SDG.Unturned.AnimalsConfigData.html": {
    "href": "api/SDG.Unturned.AnimalsConfigData.html",
    "title": "Class AnimalsConfigData | Unturned Analyse Doc",
    "keywords": "Class AnimalsConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AnimalsConfigData Inheritance object AnimalsConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimalsConfigData(EGameMode) public AnimalsConfigData(EGameMode mode) Parameters mode EGameMode Fields Armor_Multiplier public float Armor_Multiplier Field Value float Damage_Multiplier public float Damage_Multiplier Field Value float Max_Instances_Insane public uint Max_Instances_Insane Field Value uint Max_Instances_Large public uint Max_Instances_Large Field Value uint Max_Instances_Medium public uint Max_Instances_Medium Field Value uint Max_Instances_Small public uint Max_Instances_Small Field Value uint Max_Instances_Tiny public uint Max_Instances_Tiny Field Value uint Respawn_Time public float Respawn_Time Field Value float Weapons_Use_Player_Damage public bool Weapons_Use_Player_Damage Field Value bool"
  },
  "api/SDG.Unturned.AppNews.html": {
    "href": "api/SDG.Unturned.AppNews.html",
    "title": "Class AppNews | Unturned Analyse Doc",
    "keywords": "Class AppNews Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AppNews Inheritance object AppNews Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AppNews() public AppNews() Properties AppID public uint AppID { get; set; } Property Value uint NewsItems public NewsItem[] NewsItems { get; set; } Property Value NewsItem[]"
  },
  "api/SDG.Unturned.ApplyingDefaultSkillsHandler.html": {
    "href": "api/SDG.Unturned.ApplyingDefaultSkillsHandler.html",
    "title": "Delegate ApplyingDefaultSkillsHandler | Unturned Analyse Doc",
    "keywords": "Delegate ApplyingDefaultSkillsHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ApplyingDefaultSkillsHandler(Player forPlayer, Skill[][] newSkills) Parameters forPlayer Player newSkills Skill[][] Constructors ApplyingDefaultSkillsHandler(object, IntPtr) public ApplyingDefaultSkillsHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, Skill[][], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player forPlayer, Skill[][] newSkills, AsyncCallback callback, object @object) Parameters forPlayer Player newSkills Skill[][] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, Skill[][]) public virtual void Invoke(Player forPlayer, Skill[][] newSkills) Parameters forPlayer Player newSkills Skill[][]"
  },
  "api/SDG.Unturned.ArenaCompactorVolume.html": {
    "href": "api/SDG.Unturned.ArenaCompactorVolume.html",
    "title": "Class ArenaCompactorVolume | Unturned Analyse Doc",
    "keywords": "Class ArenaCompactorVolume Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ArenaCompactorVolume : LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager> ArenaCompactorVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.falloffDistance LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.editorGameObject LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.editorMeshFilter LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.editorMeshRenderer LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.forceShouldAddCollider LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.supportsBoxShape LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.supportsSphereShape LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.supportsFalloff LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.CreateMenu() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.beginSelection(InteractionData) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.endSelection(InteractionData) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetBoxSize() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetBoxExtents() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetInnerBoxSize() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetInnerBoxExtents() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetLocalInnerBoxSize() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetSphereRadius() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetLocalSphereRadius() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.SetSphereRadius(float) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.CalculateWorldBounds() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.CalculateLocalBounds() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.OnEnable() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.OnDisable() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.Awake() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.Start() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.OnDestroy() LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<ArenaCompactorVolume, ArenaCompactorVolumeManager>.Shape VolumeBase.CreateMenu() DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.readHierarchyItem(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors ArenaCompactorVolume() public ArenaCompactorVolume() Methods Awake() protected override void Awake()"
  },
  "api/SDG.Unturned.ArenaCompactorVolumeManager.html": {
    "href": "api/SDG.Unturned.ArenaCompactorVolumeManager.html",
    "title": "Class ArenaCompactorVolumeManager | Unturned Analyse Doc",
    "keywords": "Class ArenaCompactorVolumeManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ArenaCompactorVolumeManager : VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager> Inheritance object VolumeManagerBase VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager> ArenaCompactorVolumeManager Inherited Members VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.allowInstantiation VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.supportsFalloff VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.allVolumes VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.Get() VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetAllVolumes() VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetRandomVolumeOrNull() VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.EnumerateAllVolumes() VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.Raycast(Ray, out RaycastHit, out ArenaCompactorVolume, float) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.AddVolume(ArenaCompactorVolume) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.RemoveVolume(ArenaCompactorVolume) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.SetDebugColor(Color) VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.Visibility VolumeManager<ArenaCompactorVolume, ArenaCompactorVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ArenaCompactorVolumeManager() public ArenaCompactorVolumeManager()"
  },
  "api/SDG.Unturned.ArenaGameMode.html": {
    "href": "api/SDG.Unturned.ArenaGameMode.html",
    "title": "Class ArenaGameMode | Unturned Analyse Doc",
    "keywords": "Class ArenaGameMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ArenaGameMode : GameMode Inheritance object GameMode ArenaGameMode Inherited Members GameMode.getPlayerGameObject(SteamPlayerID) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ArenaGameMode() public ArenaGameMode() Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.ArenaLoadout.html": {
    "href": "api/SDG.Unturned.ArenaLoadout.html",
    "title": "Class ArenaLoadout | Unturned Analyse Doc",
    "keywords": "Class ArenaLoadout Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ArenaLoadout Inheritance object ArenaLoadout Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ArenaLoadout() public ArenaLoadout() Fields Amount public ushort Amount Field Value ushort Table_ID public ushort Table_ID Field Value ushort"
  },
  "api/SDG.Unturned.ArenaMessageUpdated.html": {
    "href": "api/SDG.Unturned.ArenaMessageUpdated.html",
    "title": "Delegate ArenaMessageUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ArenaMessageUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ArenaMessageUpdated(EArenaMessage newArenaMessage) Parameters newArenaMessage EArenaMessage Constructors ArenaMessageUpdated(object, IntPtr) public ArenaMessageUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EArenaMessage, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EArenaMessage newArenaMessage, AsyncCallback callback, object @object) Parameters newArenaMessage EArenaMessage callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EArenaMessage) public virtual void Invoke(EArenaMessage newArenaMessage) Parameters newArenaMessage EArenaMessage"
  },
  "api/SDG.Unturned.ArenaNode.html": {
    "href": "api/SDG.Unturned.ArenaNode.html",
    "title": "Class ArenaNode | Unturned Analyse Doc",
    "keywords": "Class ArenaNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ArenaNode : Node Inheritance object Node ArenaNode Inherited Members Node._point Node._type Node._model Node.move(Vector3) Node.setEnabled(bool) Node.remove() Node.point Node.type Node.model object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ArenaNode(Vector3) public ArenaNode(Vector3 newPoint) Parameters newPoint Vector3 ArenaNode(Vector3, float) public ArenaNode(Vector3 newPoint, float newRadius) Parameters newPoint Vector3 newRadius float Fields MAX_SIZE public static readonly float MAX_SIZE Field Value float MIN_SIZE public static readonly float MIN_SIZE Field Value float Properties radius This value is confusing because in the level editor it is the normalized radius, but in-game it is the radius. public float radius { get; set; } Property Value float Methods CalculateNormalizedRadiusFromRadius(float) public static float CalculateNormalizedRadiusFromRadius(float radius) Parameters radius float Returns float CalculateRadiusFromNormalizedRadius(float) public static float CalculateRadiusFromNormalizedRadius(float normalizedRadius) Parameters normalizedRadius float Returns float"
  },
  "api/SDG.Unturned.ArenaPlayer.html": {
    "href": "api/SDG.Unturned.ArenaPlayer.html",
    "title": "Class ArenaPlayer | Unturned Analyse Doc",
    "keywords": "Class ArenaPlayer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ArenaPlayer Inheritance object ArenaPlayer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ArenaPlayer(SteamPlayer) public ArenaPlayer(SteamPlayer newSteamPlayer) Parameters newSteamPlayer SteamPlayer Fields lastAreaDamage Time.time damage was last dealt so that damage is applied once per second. public float lastAreaDamage Field Value float timeOutsideArea Timer increased while taking damage, and reset to zero while inside zone. public float timeOutsideArea Field Value float Properties hasDied public bool hasDied { get; } Property Value bool steamPlayer public SteamPlayer steamPlayer { get; } Property Value SteamPlayer"
  },
  "api/SDG.Unturned.ArenaPlayerUpdated.html": {
    "href": "api/SDG.Unturned.ArenaPlayerUpdated.html",
    "title": "Delegate ArenaPlayerUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ArenaPlayerUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ArenaPlayerUpdated(ulong[] playerIDs, EArenaMessage newArenaMessage) Parameters playerIDs ulong[] newArenaMessage EArenaMessage Constructors ArenaPlayerUpdated(object, IntPtr) public ArenaPlayerUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ulong[], EArenaMessage, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ulong[] playerIDs, EArenaMessage newArenaMessage, AsyncCallback callback, object @object) Parameters playerIDs ulong[] newArenaMessage EArenaMessage callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ulong[], EArenaMessage) public virtual void Invoke(ulong[] playerIDs, EArenaMessage newArenaMessage) Parameters playerIDs ulong[] newArenaMessage EArenaMessage"
  },
  "api/SDG.Unturned.ArrayEx.html": {
    "href": "api/SDG.Unturned.ArrayEx.html",
    "title": "Class ArrayEx | Unturned Analyse Doc",
    "keywords": "Class ArrayEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ArrayEx Inheritance object ArrayEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetRandomIndex<T>(T[]) public static int GetRandomIndex<T>(this T[] array) Parameters array T[] Returns int Type Parameters T RandomOrDefault<T>(T[]) public static T RandomOrDefault<T>(this T[] array) Parameters array T[] Returns T Type Parameters T"
  },
  "api/SDG.Unturned.Asset.html": {
    "href": "api/SDG.Unturned.Asset.html",
    "title": "Class Asset | Unturned Analyse Doc",
    "keywords": "Class Asset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class Asset : IAssetErrorContext Inheritance object Asset Implements IAssetErrorContext Derived FoliageInfoAsset FoliageInfoCollectionAsset AirdropAsset AnimalAsset CraftingBlacklistAsset DialogueAsset EffectAsset ItemAsset ItemCurrencyAsset LandscapeMaterialAsset LevelAsset MaterialPaletteAsset MythicAsset NPCRewardsAsset ObjectAsset OutfitAsset PhysicsMaterialAssetBase QuestAsset RedirectorAsset ResourceAsset ServerListCurationAsset SkinAsset SpawnAsset StereoSongAsset VehicleAsset VehiclePhysicsProfileAsset VehicleRedirectorAsset VendorAsset WeatherAssetBase ZombieDifficultyAsset Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Asset() public Asset() Fields GUID public Guid GUID Field Value Guid absoluteOriginFilePath Null or empty if created at runtime, otherwise set by Assets when loading. public string absoluteOriginFilePath Field Value string id public ushort id Field Value ushort ignoreNPOT Should texture non-power-of-two warnings be ignored? Unfortunately some third party assets have odd setups. public bool ignoreNPOT Field Value bool name public string name Field Value string requiredShaderUpgrade Were this asset's shaders set to Standard and/or consolidated? Needed for vehicle rotors special case. public bool requiredShaderUpgrade Field Value bool Properties AssetErrorPrefix Format text to prefix any errors reported in this context. (e.g., this asset's name and ID) public string AssetErrorPrefix { get; } Property Value string FriendlyName public virtual string FriendlyName { get; } Property Value string OriginAllowsVanillaLegacyId protected bool OriginAllowsVanillaLegacyId { get; } Property Value bool assetCategory public virtual EAssetType assetCategory { get; } Property Value EAssetType assetOrigin [Obsolete(\"Replaced by AssetOrigin class\")] public EAssetOrigin assetOrigin { get; set; } Property Value EAssetOrigin hash Hash of the original input file. public byte[] hash { get; } Property Value byte[] ignoreTextureReadable Should read/write texture warnings be ignored? public bool ignoreTextureReadable { get; protected set; } Property Value bool originMasterBundle Master bundle this asset loaded from. public MasterBundleConfig originMasterBundle { get; protected set; } Property Value MasterBundleConfig Methods GetOriginName() public string GetOriginName() Returns string GetTypeFriendlyName() Remove \"Asset\" suffix and convert to title case. public virtual string GetTypeFriendlyName() Returns string GetTypeNameWithoutSuffix() Most asset classes end in \"Asset\", so in debug strings if asset is clear from context we can remove the unnecessary suffix. public string GetTypeNameWithoutSuffix() Returns string LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Planning ahead to potentially convert the game to use Unity's newer Addressables feature. protected T LoadRedirectableAsset<T>(Bundle fromBundle, string defaultName, DatDictionary data, string key) where T : Object Parameters fromBundle Bundle defaultName string data DatDictionary key string Returns T Type Parameters T PopulateAsset(Bundle, DatDictionary, Local) public virtual void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local ToString() public override string ToString() Returns string appendHash(byte[]) public void appendHash(byte[] otherHash) Parameters otherHash byte[] clearHash() Maybe temporary? Used when something in-game changes the asset so that it shouldn't be useable on the server anymore. public virtual void clearHash() getFilePath() public virtual string getFilePath() Returns string getReferenceTo<T>() public AssetReference<T> getReferenceTo<T>() where T : Asset Returns AssetReference<T> Type Parameters T getTypeNameAndIdDisplayString() public string getTypeNameAndIdDisplayString() Returns string loadRequiredAsset<T>(Bundle, string) protected T loadRequiredAsset<T>(Bundle fromBundle, string name) where T : Object Parameters fromBundle Bundle name string Returns T Type Parameters T validateAnimation(Animation, string) protected void validateAnimation(Animation animComponent, string name) Parameters animComponent Animation name string"
  },
  "api/SDG.Unturned.AssetBundleCustomData.html": {
    "href": "api/SDG.Unturned.AssetBundleCustomData.html",
    "title": "Class AssetBundleCustomData | Unturned Analyse Doc",
    "keywords": "Class AssetBundleCustomData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AssetBundleCustomData : ScriptableObject Inheritance object AssetBundleCustomData Constructors AssetBundleCustomData() public AssetBundleCustomData() Fields ownerWorkshopFileId If Unturned is loading this asset bundle from a Steam workshop file but the file ID does not match then loading will be canceled. Prevents the asset bundle from being easily copied/stolen. public ulong ownerWorkshopFileId Field Value ulong ownerWorkshopFileIds Same as ownerWorkshopFileId for cases where the asset bundle is allowed in multiple uploads. Uploading the same asset bundle multiple times is not ideal because the game doesn't handle multiple of them with the same name well, and Unity logs an error if an asset bundle with the same files is already loaded. That being said, the game doesn't handle dependencies between workshop files well either (as of 2023-01-12), so this is perhaps the lesser of two evils. My understanding is that some mod creators license their work to multiple servers that upload the files and this property will make it easier so it doesn't need to be re-exported multiple times. public List<ulong> ownerWorkshopFileIds Field Value List<ulong>"
  },
  "api/SDG.Unturned.AssetBundleVersion.html": {
    "href": "api/SDG.Unturned.AssetBundleVersion.html",
    "title": "Class AssetBundleVersion | Unturned Analyse Doc",
    "keywords": "Class AssetBundleVersion Namespace SDG.Unturned Assembly Assembly-CSharp.dll Used to aid backwards compatibility as much as possible when transitioning Unity versions breaks asset bundles. public static class AssetBundleVersion Inheritance object AssetBundleVersion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields NEWEST 2021 LTS+ public const int NEWEST = 5 Field Value int UNITY_2017_LTS When \"master bundles\" were first introduced in order to convert older Unity 5.5 asset bundles in bulk. public const int UNITY_2017_LTS = 2 Field Value int UNITY_2018_AND_2019_LTS Unity 2018 needed a new version number in order to convert materials from 2017 LTS asset bundles. 2019 did not need a new version number, but in retrospect it seems unfortunate that we cannot distinguish them, so 2020 does have its own. public const int UNITY_2018_AND_2019_LTS = 3 Field Value int UNITY_2020_LTS public const int UNITY_2020_LTS = 4 Field Value int UNITY_5 Unity 5.5 and earlier per-asset .unity3d file. public const int UNITY_5 = 1 Field Value int"
  },
  "api/SDG.Unturned.AssetIdListExporter.html": {
    "href": "api/SDG.Unturned.AssetIdListExporter.html",
    "title": "Class AssetIdListExporter | Unturned Analyse Doc",
    "keywords": "Class AssetIdListExporter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class AssetIdListExporter Inheritance object AssetIdListExporter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Export() public static void Export()"
  },
  "api/SDG.Unturned.AssetNameAscendingComparator.html": {
    "href": "api/SDG.Unturned.AssetNameAscendingComparator.html",
    "title": "Class AssetNameAscendingComparator | Unturned Analyse Doc",
    "keywords": "Class AssetNameAscendingComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AssetNameAscendingComparator : IComparer<Asset> Inheritance object AssetNameAscendingComparator Implements IComparer<Asset> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AssetNameAscendingComparator() public AssetNameAscendingComparator() Methods Compare(Asset, Asset) public int Compare(Asset a, Asset b) Parameters a Asset b Asset Returns int"
  },
  "api/SDG.Unturned.AssetOrigin.html": {
    "href": "api/SDG.Unturned.AssetOrigin.html",
    "title": "Class AssetOrigin | Unturned Analyse Doc",
    "keywords": "Class AssetOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll Replacement for enum origin. public class AssetOrigin Inheritance object AssetOrigin Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AssetOrigin() public AssetOrigin() Fields name Hardcoded built-in name, or name of workshop file if known. public string name Field Value string workshopFileId Steam file ID if loaded from the workshop, zero otherwise. public ulong workshopFileId Field Value ulong Methods GetAssets() public IReadOnlyList<Asset> GetAssets() Returns IReadOnlyList<Asset>"
  },
  "api/SDG.Unturned.AssetReference-1.html": {
    "href": "api/SDG.Unturned.AssetReference-1.html",
    "title": "Struct AssetReference<T> | Unturned Analyse Doc",
    "keywords": "Struct AssetReference<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct AssetReference<T> : IAssetReference, IFormattedFileReadable, IFormattedFileWritable, IDatParseable, IEquatable<AssetReference<T>> where T : Asset Type Parameters T Implements IAssetReference IFormattedFileReadable IFormattedFileWritable IDatParseable IEquatable<AssetReference<T>> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors AssetReference(IAssetReference) public AssetReference(IAssetReference assetReference) Parameters assetReference IAssetReference AssetReference(Guid) public AssetReference(Guid GUID) Parameters GUID Guid AssetReference(string) public AssetReference(string GUID) Parameters GUID string Fields invalid public static AssetReference<T> invalid Field Value AssetReference<T> Properties GUID GUID of the asset this is referring to. public Guid GUID { get; set; } Property Value Guid isNull Is this asset not assigned? public bool isNull { get; } Property Value bool isValid Whether the asset has been assigned. Note that this doesn't mean an asset with GUID exists. public bool isValid { get; } Property Value bool Methods Equals(AssetReference<T>) public bool Equals(AssetReference<T> other) Parameters other AssetReference<T> Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Find() Resolve reference with asset manager. public T Find() Returns T GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool TryParse(string, out AssetReference<T>) public static bool TryParse(string input, out AssetReference<T> result) Parameters input string result AssetReference<T> Returns bool get() [Obsolete(\"Renamed to Find because Get might imply that asset is cached\")] public T get() Returns T isReferenceTo(Asset) True if resolving this asset reference would get that asset. public bool isReferenceTo(Asset asset) Parameters asset Asset Returns bool read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Operators operator ==(AssetReference<T>, AssetReference<T>) public static bool operator ==(AssetReference<T> a, AssetReference<T> b) Parameters a AssetReference<T> b AssetReference<T> Returns bool operator !=(AssetReference<T>, AssetReference<T>) public static bool operator !=(AssetReference<T> a, AssetReference<T> b) Parameters a AssetReference<T> b AssetReference<T> Returns bool"
  },
  "api/SDG.Unturned.AssetValidation.html": {
    "href": "api/SDG.Unturned.AssetValidation.html",
    "title": "Class AssetValidation | Unturned Analyse Doc",
    "keywords": "Class AssetValidation Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class AssetValidation Inheritance object AssetValidation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ValidateClothComponents(Asset, GameObject) public static void ValidateClothComponents(Asset owningAsset, GameObject gameObject) Parameters owningAsset Asset gameObject GameObject ValidateLayersEqual(Asset, GameObject, int) public static void ValidateLayersEqual(Asset owningAsset, GameObject gameObject, int expectedLayer) Parameters owningAsset Asset gameObject GameObject expectedLayer int ValidateLayersEqualRecursive(Asset, GameObject, int) public static void ValidateLayersEqualRecursive(Asset owningAsset, GameObject gameObject, int expectedLayer) Parameters owningAsset Asset gameObject GameObject expectedLayer int searchGameObjectForErrors(Asset, GameObject) Relatively efficiently find mesh components, and log an error if their mesh is missing, among other checks. public static void searchGameObjectForErrors(Asset owningAsset, GameObject gameObject) Parameters owningAsset Asset gameObject GameObject"
  },
  "api/SDG.Unturned.Assets.html": {
    "href": "api/SDG.Unturned.Assets.html",
    "title": "Class Assets | Unturned Analyse Doc",
    "keywords": "Class Assets Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Assets : MonoBehaviour Inheritance object Assets Constructors Assets() public Assets() Fields onAssetsRefreshed public static AssetsRefreshed onAssetsRefreshed Field Value AssetsRefreshed shouldLoadAnyAssets Should folders be scanned for and load .dat and asset bundle files? Plugin developers find it useful to quickly launch the server. public static CommandLineFlag shouldLoadAnyAssets Field Value CommandLineFlag shouldLogWorkshopAssets Should workshop asset names and IDs be logged while loading? Useful when debugging unknown workshop content. public static CommandLineFlag shouldLogWorkshopAssets Field Value CommandLineFlag shouldValidateAssets Should extra validation be performed on assets as they load? Useful for developing, but it does slow down loading. public static CommandLineFlag shouldValidateAssets Field Value CommandLineFlag wantsDeferLoadingAssets Do we want to enable shouldDeferLoadingAssets? public static CommandLineFlag wantsDeferLoadingAssets Field Value CommandLineFlag Properties assetTypes public static TypeRegistryDictionary assetTypes { get; } Property Value TypeRegistryDictionary currentMasterBundle While an asset is being loaded, this is the master bundle for that asset. Used by master bundle pointer as a default. public static MasterBundleConfig currentMasterBundle { get; } Property Value MasterBundleConfig hasLoadedMaps Has initial map loading step run yet? Used to defer map loading for workshop installs that occured during startup. public static bool hasLoadedMaps { get; protected set; } Property Value bool hasLoadedUgc Has initial client UGC loading step run yet? Used to defer asset loading for workshop installs that occured during startup. public static bool hasLoadedUgc { get; protected set; } Property Value bool isLoading public static bool isLoading { get; } Property Value bool shouldDeferLoadingAssets Should some specific asset types which opt-in be allowed to defer loading from asset bundles until used? Disabled by asset validation because all assets need to be loaded. public static bool shouldDeferLoadingAssets { get; } Property Value bool useableTypes public static TypeRegistryDictionary useableTypes { get; } Property Value TypeRegistryDictionary Methods ConvertLegacyOrigin(EAssetOrigin) [Obsolete] public static AssetOrigin ConvertLegacyOrigin(EAssetOrigin legacyOrigin) Parameters legacyOrigin EAssetOrigin Returns AssetOrigin FindBaseVehicleAssetByGuidOrLegacyId(Guid, ushort) This method supports RedirectorAsset. Note: this method doesn't handle redirects by VehicleRedirectorAsset. public static Asset FindBaseVehicleAssetByGuidOrLegacyId(Guid guid, ushort legacyId) Parameters guid Guid legacyId ushort Returns Asset FindEffectAssetByGuidOrLegacyId(Guid, ushort) This method supports RedirectorAsset. public static EffectAsset FindEffectAssetByGuidOrLegacyId(Guid guid, ushort legacyId) Parameters guid Guid legacyId ushort Returns EffectAsset FindNpcAssetByGuidOrLegacyId<T>(Guid, ushort) This method supports RedirectorAsset. public static T FindNpcAssetByGuidOrLegacyId<T>(Guid guid, ushort legacyId) where T : Asset Parameters guid Guid legacyId ushort Returns T Type Parameters T FindVehicleAssetByGuidOrLegacyId(Guid, ushort) This method supports RedirectorAsset. Note: this method doesn't handle redirects by VehicleRedirectorAsset. public static VehicleAsset FindVehicleAssetByGuidOrLegacyId(Guid guid, ushort legacyId) Parameters guid Guid legacyId ushort Returns VehicleAsset Find_UseDefaultAssetMapping<T>(AssetReference<T>) Find an asset by GUID reference. This method supports RedirectorAsset. Maybe considered a hack? Ignores the current per-server asset mapping. public static T Find_UseDefaultAssetMapping<T>(AssetReference<T> reference) where T : Asset Parameters reference AssetReference<T> Returns T Asset with matching GUID if it exists, null otherwise. Type Parameters T ReceiveKickForHashMismatch(Guid, string, string, byte[], string, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveKickForHashMismatch(Guid guid, string serverName, string serverFriendlyName, byte[] serverHash, string serverAssetBundleNameWithoutExtension, string serverAssetOrigin) Parameters guid Guid serverName string serverFriendlyName string serverHash byte[] serverAssetBundleNameWithoutExtension string serverAssetOrigin string ReceiveKickForInvalidGuid(Guid) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveKickForInvalidGuid(Guid guid) Parameters guid Guid ReloadAsset(Asset) public static void ReloadAsset(Asset asset) Parameters asset Asset ReportError(IAssetErrorContext, string) public static void ReportError(IAssetErrorContext context, string error) Parameters context IAssetErrorContext error string ReportError(IAssetErrorContext, string, object) public static void ReportError(IAssetErrorContext context, string format, object arg0) Parameters context IAssetErrorContext format string arg0 object ReportError(IAssetErrorContext, string, object, object) public static void ReportError(IAssetErrorContext context, string format, object arg0, object arg1) Parameters context IAssetErrorContext format string arg0 object arg1 object ReportError(IAssetErrorContext, string, object, object, object) public static void ReportError(IAssetErrorContext context, string format, object arg0, object arg1, object arg2) Parameters context IAssetErrorContext format string arg0 object arg1 object arg2 object ReportError(IAssetErrorContext, string, params object[]) public static void ReportError(IAssetErrorContext context, string format, params object[] args) Parameters context IAssetErrorContext format string args object[] RequestAddSearchLocation(string, AssetOrigin) Called when a new workshop item is installed either on client or server. public static void RequestAddSearchLocation(string absoluteDirectoryPath, AssetOrigin origin) Parameters absoluteDirectoryPath string origin AssetOrigin RequestReloadAllAssets() public static void RequestReloadAllAssets() add(Asset, bool) [Obsolete] public static void add(Asset asset, bool overrideExistingID) Parameters asset Asset overrideExistingID bool find(EAssetType) [Obsolete(\"Please use the method which takes a List instead.\")] public static Asset[] find(EAssetType type) Parameters type EAssetType Returns Asset[] find(EAssetType, string) [Obsolete] public static Asset find(EAssetType type, string name) Parameters type EAssetType name string Returns Asset find(EAssetType, ushort) This method supports RedirectorAsset. public static Asset find(EAssetType type, ushort id) Parameters type EAssetType id ushort Returns Asset find(Guid) Find an asset by GUID reference. This method supports RedirectorAsset. public static Asset find(Guid GUID) Parameters GUID Guid Returns Asset Asset with matching GUID if it exists, null otherwise. findByAbsolutePath(string) public static Asset findByAbsolutePath(string path) Parameters path string Returns Asset findMasterBundleByName(string, bool) Find loaded master bundle by name. public static MasterBundleConfig findMasterBundleByName(string name, bool matchExtension = true) Parameters name string matchExtension bool Returns MasterBundleConfig findMasterBundleByPath(string) Search all loaded master bundles for one in path's hierarchy. public static MasterBundleConfig findMasterBundleByPath(string path) Parameters path string Returns MasterBundleConfig findMasterBundleInListByName(List<MasterBundleConfig>, string, bool) public static MasterBundleConfig findMasterBundleInListByName(List<MasterBundleConfig> list, string name, bool matchExtension = true) Parameters list List<MasterBundleConfig> name string matchExtension bool Returns MasterBundleConfig find<T>(AssetReference<T>) Find an asset by GUID reference. This method supports RedirectorAsset. public static T find<T>(AssetReference<T> reference) where T : Asset Parameters reference AssetReference<T> Returns T Asset with matching GUID if it exists, null otherwise. Type Parameters T find<T>(List<T>) Append assets that extend from result type. public static void find<T>(List<T> results) where T : Asset Parameters results List<T> Type Parameters T find<T>(Guid) Find an asset by GUID reference. This method supports RedirectorAsset. public static T find<T>(Guid guid) where T : Asset Parameters guid Guid Returns T Asset with matching GUID if it exists, null otherwise. Type Parameters T getReportedErrorsList() public static List<string> getReportedErrorsList() Returns List<string> initializeMasterBundleValidation() public static void initializeMasterBundleValidation() linkSpawns() Can now be safely called multiple times on client in order to handle spawns for downloaded maps. Spawn tables have \"roots\" which allow mods to insert custom spawns into the vanilla spawn tables. This method is used after workshop assets are loaded on client, or after the dedicated server is done downloading workshop content. public static void linkSpawns() linkSpawnsIfDirty() public static void linkSpawnsIfDirty() load(string, AssetOrigin, bool) [Obsolete(\"Renamed to RequestAddSearchLocation\")] public static void load(string absoluteDirectoryPath, AssetOrigin origin, bool overrideExistingIDs) Parameters absoluteDirectoryPath string origin AssetOrigin overrideExistingIDs bool load(string, bool, EAssetOrigin, bool, ulong) [Obsolete(\"Replaced origin enum with class\")] public static void load(string path, bool usePath, EAssetOrigin legacyOrigin, bool overrideExistingIDs, ulong workshopFileId) Parameters path string usePath bool legacyOrigin EAssetOrigin overrideExistingIDs bool workshopFileId ulong load(string, bool, bool, bool, EAssetOrigin, bool) [Obsolete] public static void load(string path, bool usePath, bool loadFromResources, bool canUse, EAssetOrigin origin, bool overrideExistingIDs) Parameters path string usePath bool loadFromResources bool canUse bool origin EAssetOrigin overrideExistingIDs bool load(string, bool, bool, bool, EAssetOrigin, bool, ulong) [Obsolete(\"Remove unused loadFromResources which was used by vanilla assets before masterbundles, and canUse which was for timed curated maps.\")] public static void load(string path, bool usePath, bool loadFromResources, bool canUse, EAssetOrigin origin, bool overrideExistingIDs, ulong workshopFileId) Parameters path string usePath bool loadFromResources bool canUse bool origin EAssetOrigin overrideExistingIDs bool workshopFileId ulong load<T>(ContentReference<T>) Load content from an assetbundle. public static T load<T>(ContentReference<T> reference) where T : Object Parameters reference ContentReference<T> Returns T Type Parameters T refresh() [Obsolete(\"Renamed to RequestReloadAllAssets\")] public static void refresh() reload(string) Reload assets in given folder. public static void reload(string absolutePath) Parameters absolutePath string rename(Asset, string) [Obsolete] public static void rename(Asset asset, string newName) Parameters asset Asset newName string reportError(Asset, string) [Obsolete(\"Renamed to ReportError with an IAssetErrorContext parameter\")] public static void reportError(Asset offendingAsset, string error) Parameters offendingAsset Asset error string reportError(Asset, string, object) [Obsolete(\"Renamed to ReportError with an IAssetErrorContext parameter\")] public static void reportError(Asset offendingAsset, string format, object arg0) Parameters offendingAsset Asset format string arg0 object reportError(Asset, string, object, object) [Obsolete(\"Renamed to ReportError with an IAssetErrorContext parameter\")] public static void reportError(Asset offendingAsset, string format, object arg0, object arg1) Parameters offendingAsset Asset format string arg0 object arg1 object reportError(Asset, string, object, object, object) [Obsolete(\"Renamed to ReportError with an IAssetErrorContext parameter\")] public static void reportError(Asset offendingAsset, string format, object arg0, object arg1, object arg2) Parameters offendingAsset Asset format string arg0 object arg1 object arg2 object reportError(Asset, string, params object[]) [Obsolete(\"Renamed to ReportError with an IAssetErrorContext parameter\")] public static void reportError(Asset offendingAsset, string format, params object[] args) Parameters offendingAsset Asset format string args object[] reportError(string) public static void reportError(string error) Parameters error string"
  },
  "api/SDG.Unturned.AssetsRefreshed.html": {
    "href": "api/SDG.Unturned.AssetsRefreshed.html",
    "title": "Delegate AssetsRefreshed | Unturned Analyse Doc",
    "keywords": "Delegate AssetsRefreshed Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void AssetsRefreshed() Constructors AssetsRefreshed(object, IntPtr) public AssetsRefreshed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Assets_NetMethods.html": {
    "href": "api/SDG.Unturned.Assets_NetMethods.html",
    "title": "Class Assets_NetMethods | Unturned Analyse Doc",
    "keywords": "Class Assets_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(Assets))] public static class Assets_NetMethods Inheritance object Assets_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveKickForHashMismatch_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveKickForHashMismatch\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveKickForHashMismatch_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveKickForHashMismatch_Write(NetPakWriter, Guid, string, string, byte[], string, string) [NetInvokableGeneratedMethod(\"ReceiveKickForHashMismatch\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveKickForHashMismatch_Write(NetPakWriter writer, Guid guid, string serverName, string serverFriendlyName, byte[] serverHash, string serverAssetBundleNameWithoutExtension, string serverAssetOrigin) Parameters writer NetPakWriter guid Guid serverName string serverFriendlyName string serverHash byte[] serverAssetBundleNameWithoutExtension string serverAssetOrigin string ReceiveKickForInvalidGuid_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveKickForInvalidGuid\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveKickForInvalidGuid_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveKickForInvalidGuid_Write(NetPakWriter, Guid) [NetInvokableGeneratedMethod(\"ReceiveKickForInvalidGuid\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveKickForInvalidGuid_Write(NetPakWriter writer, Guid guid) Parameters writer NetPakWriter guid Guid"
  },
  "api/SDG.Unturned.Attachments.html": {
    "href": "api/SDG.Unturned.Attachments.html",
    "title": "Class Attachments | Unturned Analyse Doc",
    "keywords": "Class Attachments Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Attachments : MonoBehaviour Inheritance object Attachments Constructors Attachments() public Attachments() Fields isSkinned public bool isSkinned Field Value bool shouldDestroyColliders public bool shouldDestroyColliders Field Value bool Properties aimHook public Transform aimHook { get; } Property Value Transform barrelAsset public ItemBarrelAsset barrelAsset { get; } Property Value ItemBarrelAsset barrelHook public Transform barrelHook { get; } Property Value Transform barrelID public ushort barrelID { get; } Property Value ushort barrelModel public Transform barrelModel { get; } Property Value Transform ejectHook public Transform ejectHook { get; } Property Value Transform gripAsset public ItemGripAsset gripAsset { get; } Property Value ItemGripAsset gripHook public Transform gripHook { get; } Property Value Transform gripID public ushort gripID { get; } Property Value ushort gripModel public Transform gripModel { get; } Property Value Transform gunAsset public ItemGunAsset gunAsset { get; } Property Value ItemGunAsset leftHook public Transform leftHook { get; } Property Value Transform light2Hook public Transform light2Hook { get; } Property Value Transform lightHook public Transform lightHook { get; } Property Value Transform magazineAsset public ItemMagazineAsset magazineAsset { get; } Property Value ItemMagazineAsset magazineHook public Transform magazineHook { get; } Property Value Transform magazineID public ushort magazineID { get; } Property Value ushort magazineModel public Transform magazineModel { get; } Property Value Transform nockHook public Transform nockHook { get; } Property Value Transform restHook public Transform restHook { get; } Property Value Transform reticuleHook public Transform reticuleHook { get; } Property Value Transform rightHook public Transform rightHook { get; } Property Value Transform rope public LineRenderer rope { get; } Property Value LineRenderer scopeHook public Transform scopeHook { get; } Property Value Transform sightAsset public ItemSightAsset sightAsset { get; } Property Value ItemSightAsset sightHook public Transform sightHook { get; } Property Value Transform sightID public ushort sightID { get; } Property Value ushort sightModel public Transform sightModel { get; } Property Value Transform skinAsset public SkinAsset skinAsset { get; } Property Value SkinAsset tacticalAsset public ItemTacticalAsset tacticalAsset { get; } Property Value ItemTacticalAsset tacticalHook public Transform tacticalHook { get; } Property Value Transform tacticalID public ushort tacticalID { get; } Property Value ushort tacticalModel public Transform tacticalModel { get; } Property Value Transform viewHook public Transform viewHook { get; } Property Value Transform Methods applyVisual() public void applyVisual() parseFromItemState(byte[], out ushort, out ushort, out ushort, out ushort, out ushort) public static void parseFromItemState(byte[] state, out ushort sight, out ushort tactical, out ushort grip, out ushort barrel, out ushort magazine) Parameters state byte[] sight ushort tactical ushort grip ushort barrel ushort magazine ushort updateAttachments(byte[], bool) public void updateAttachments(byte[] state, bool viewmodel) Parameters state byte[] viewmodel bool updateGun(ItemGunAsset, SkinAsset) public void updateGun(ItemGunAsset newGunAsset, SkinAsset newSkinAsset) Parameters newGunAsset ItemGunAsset newSkinAsset SkinAsset"
  },
  "api/SDG.Unturned.AudioPreferenceData.html": {
    "href": "api/SDG.Unturned.AudioPreferenceData.html",
    "title": "Class AudioPreferenceData | Unturned Analyse Doc",
    "keywords": "Class AudioPreferenceData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AudioPreferenceData Inheritance object AudioPreferenceData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AudioPreferenceData() public AudioPreferenceData() Fields Vehicle_Engine_Volume_Multiplier public float Vehicle_Engine_Volume_Multiplier Field Value float"
  },
  "api/SDG.Unturned.AudioReference.html": {
    "href": "api/SDG.Unturned.AudioReference.html",
    "title": "Struct AudioReference | Unturned Analyse Doc",
    "keywords": "Struct AudioReference Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct AudioReference Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors AudioReference(string, string) public AudioReference(string assetBundleName, string path) Parameters assetBundleName string path string Properties IsNullOrEmpty public bool IsNullOrEmpty { get; } Property Value bool Methods LoadAudioClip(out float, out float) public AudioClip LoadAudioClip(out float volumeMultiplier, out float pitchMultiplier) Parameters volumeMultiplier float pitchMultiplier float Returns AudioClip"
  },
  "api/SDG.Unturned.AutoSubscribeMap.html": {
    "href": "api/SDG.Unturned.AutoSubscribeMap.html",
    "title": "Class AutoSubscribeMap | Unturned Analyse Doc",
    "keywords": "Class AutoSubscribeMap Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class AutoSubscribeMap Inheritance object AutoSubscribeMap Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AutoSubscribeMap() public AutoSubscribeMap() Fields End If logging in before this point, subscribe. public DateTime End Field Value DateTime Start If logging in after this point, subscribe. public DateTime Start Field Value DateTime Workshop_File_Id Published steam id to subscribe to. public ulong Workshop_File_Id Field Value ulong"
  },
  "api/SDG.Unturned.BackpackUpdated.html": {
    "href": "api/SDG.Unturned.BackpackUpdated.html",
    "title": "Delegate BackpackUpdated | Unturned Analyse Doc",
    "keywords": "Delegate BackpackUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BackpackUpdated(ushort newBackpack, byte newBackpackQuality, byte[] newBackpackState) Parameters newBackpack ushort newBackpackQuality byte newBackpackState byte[] Constructors BackpackUpdated(object, IntPtr) public BackpackUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, byte, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort newBackpack, byte newBackpackQuality, byte[] newBackpackState, AsyncCallback callback, object @object) Parameters newBackpack ushort newBackpackQuality byte newBackpackState byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort, byte, byte[]) public virtual void Invoke(ushort newBackpack, byte newBackpackQuality, byte[] newBackpackState) Parameters newBackpack ushort newBackpackQuality byte newBackpackState byte[]"
  },
  "api/SDG.Unturned.Barricade.html": {
    "href": "api/SDG.Unturned.Barricade.html",
    "title": "Class Barricade | Unturned Analyse Doc",
    "keywords": "Class Barricade Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Barricade Inheritance object Barricade Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Barricade(ItemBarricadeAsset) public Barricade(ItemBarricadeAsset newAsset) Parameters newAsset ItemBarricadeAsset Barricade(ItemBarricadeAsset, ushort, byte[]) public Barricade(ItemBarricadeAsset newAsset, ushort newHealth, byte[] newState) Parameters newAsset ItemBarricadeAsset newHealth ushort newState byte[] Barricade(ushort) [Obsolete] public Barricade(ushort newID) Parameters newID ushort Barricade(ushort, ushort, byte[], ItemBarricadeAsset) [Obsolete] public Barricade(ushort newID, ushort newHealth, byte[] newState, ItemBarricadeAsset newAsset) Parameters newID ushort newHealth ushort newState byte[] newAsset ItemBarricadeAsset Fields health public ushort health Field Value ushort state public byte[] state Field Value byte[] Properties asset public ItemBarricadeAsset asset { get; } Property Value ItemBarricadeAsset id [Obsolete] public ushort id { get; } Property Value ushort isDead public bool isDead { get; } Property Value bool isRepaired public bool isRepaired { get; } Property Value bool Methods ToString() public override string ToString() Returns string askDamage(ushort) public void askDamage(ushort amount) Parameters amount ushort askRepair(ushort) public void askRepair(ushort amount) Parameters amount ushort"
  },
  "api/SDG.Unturned.BarricadeData.html": {
    "href": "api/SDG.Unturned.BarricadeData.html",
    "title": "Class BarricadeData | Unturned Analyse Doc",
    "keywords": "Class BarricadeData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BarricadeData Inheritance object BarricadeData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BarricadeData(Barricade, Vector3, byte, byte, byte, ulong, ulong, uint, uint) [Obsolete] public BarricadeData(Barricade newBarricade, Vector3 newPoint, byte newAngle_X, byte newAngle_Y, byte newAngle_Z, ulong newOwner, ulong newGroup, uint newObjActiveDate, uint newInstanceID) Parameters newBarricade Barricade newPoint Vector3 newAngle_X byte newAngle_Y byte newAngle_Z byte newOwner ulong newGroup ulong newObjActiveDate uint newInstanceID uint BarricadeData(Barricade, Vector3, Quaternion, ulong, ulong, uint, uint) public BarricadeData(Barricade newBarricade, Vector3 newPoint, Quaternion newRotation, ulong newOwner, ulong newGroup, uint newObjActiveDate, uint newInstanceID) Parameters newBarricade Barricade newPoint Vector3 newRotation Quaternion newOwner ulong newGroup ulong newObjActiveDate uint newInstanceID uint Fields angle_x [Obsolete(\"Replaced by rotation quaternion, but you should probably not be accessing either of these directly.\")] public byte angle_x Field Value byte angle_y [Obsolete(\"Replaced by rotation quaternion, but you should probably not be accessing either of these directly.\")] public byte angle_y Field Value byte angle_z [Obsolete(\"Replaced by rotation quaternion, but you should probably not be accessing either of these directly.\")] public byte angle_z Field Value byte group public ulong group Field Value ulong objActiveDate public uint objActiveDate Field Value uint owner public ulong owner Field Value ulong point public Vector3 point Field Value Vector3 rotation Note: If barricade is attached to a vehicle this is the local rotation. public Quaternion rotation Field Value Quaternion Properties barricade public Barricade barricade { get; } Property Value Barricade instanceID public uint instanceID { get; } Property Value uint"
  },
  "api/SDG.Unturned.BarricadeDrop.SalvageRequestHandler.html": {
    "href": "api/SDG.Unturned.BarricadeDrop.SalvageRequestHandler.html",
    "title": "Delegate BarricadeDrop.SalvageRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate BarricadeDrop.SalvageRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BarricadeDrop.SalvageRequestHandler(BarricadeDrop barricade, SteamPlayer instigatorClient, ref bool shouldAllow) Parameters barricade BarricadeDrop instigatorClient SteamPlayer shouldAllow bool Constructors SalvageRequestHandler(object, IntPtr) public SalvageRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(BarricadeDrop, SteamPlayer, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(BarricadeDrop barricade, SteamPlayer instigatorClient, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters barricade BarricadeDrop instigatorClient SteamPlayer shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(BarricadeDrop, SteamPlayer, ref bool) public virtual void Invoke(BarricadeDrop barricade, SteamPlayer instigatorClient, ref bool shouldAllow) Parameters barricade BarricadeDrop instigatorClient SteamPlayer shouldAllow bool"
  },
  "api/SDG.Unturned.BarricadeDrop.html": {
    "href": "api/SDG.Unturned.BarricadeDrop.html",
    "title": "Class BarricadeDrop | Unturned Analyse Doc",
    "keywords": "Class BarricadeDrop Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BarricadeDrop Inheritance object BarricadeDrop Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BarricadeDrop(Transform, Interactable, uint, ItemBarricadeAsset) [Obsolete] public BarricadeDrop(Transform newModel, Interactable newInteractable, uint newInstanceID, ItemBarricadeAsset newAsset) Parameters newModel Transform newInteractable Interactable newInstanceID uint newAsset ItemBarricadeAsset Properties asset public ItemBarricadeAsset asset { get; protected set; } Property Value ItemBarricadeAsset instanceID public uint instanceID { get; } Property Value uint interactable public Interactable interactable { get; } Property Value Interactable model public Transform model { get; } Property Value Transform Methods GetNetId() public NetId GetNetId() Returns NetId GetServersideData() public BarricadeData GetServersideData() Returns BarricadeData ReceiveHealth(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveHealth(byte hp) Parameters hp byte ReceiveOwnerAndGroup(ulong, ulong) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveOwnerAndGroup(ulong newOwner, ulong newGroup) Parameters newOwner ulong newGroup ulong ReceiveSalvageRequest(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10)] public void ReceiveSalvageRequest(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTransform(in ClientInvocationContext, byte, byte, ushort, Vector3, Quaternion) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveTransform(in ClientInvocationContext context, byte old_x, byte old_y, ushort oldPlant, Vector3 point, Quaternion rotation) Parameters context ClientInvocationContext old_x byte old_y byte oldPlant ushort point Vector3 rotation Quaternion ReceiveTransformRequest(in ServerInvocationContext, Vector3, Quaternion) Not using rate limit attribute because this is potentially called for hundreds of barricades at once, and only admins will actually be allowed to apply the transform. [SteamCall(ESteamCallValidation.SERVERSIDE)] public void ReceiveTransformRequest(in ServerInvocationContext context, Vector3 point, Quaternion rotation) Parameters context ServerInvocationContext point Vector3 rotation Quaternion ReceiveUpdateState(byte[]) Only used by plugins. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveUpdateState(byte[] newState) Parameters newState byte[] Events OnSalvageRequested_Global public static event BarricadeDrop.SalvageRequestHandler OnSalvageRequested_Global Event Type BarricadeDrop.SalvageRequestHandler"
  },
  "api/SDG.Unturned.BarricadeDrop_NetMethods.html": {
    "href": "api/SDG.Unturned.BarricadeDrop_NetMethods.html",
    "title": "Class BarricadeDrop_NetMethods | Unturned Analyse Doc",
    "keywords": "Class BarricadeDrop_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(BarricadeDrop))] public static class BarricadeDrop_NetMethods Inheritance object BarricadeDrop_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveHealth_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveHealth\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveHealth_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveHealth_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveHealth\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveHealth_Write(NetPakWriter writer, byte hp) Parameters writer NetPakWriter hp byte ReceiveOwnerAndGroup_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveOwnerAndGroup\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveOwnerAndGroup_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveOwnerAndGroup_Write(NetPakWriter, ulong, ulong) [NetInvokableGeneratedMethod(\"ReceiveOwnerAndGroup\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveOwnerAndGroup_Write(NetPakWriter writer, ulong newOwner, ulong newGroup) Parameters writer NetPakWriter newOwner ulong newGroup ulong ReceiveSalvageRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSalvageRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSalvageRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTransformRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTransformRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTransformRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTransformRequest_Write(NetPakWriter, Vector3, Quaternion) [NetInvokableGeneratedMethod(\"ReceiveTransformRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTransformRequest_Write(NetPakWriter writer, Vector3 point, Quaternion rotation) Parameters writer NetPakWriter point Vector3 rotation Quaternion ReceiveTransform_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTransform\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTransform_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTransform_Write(NetPakWriter, byte, byte, ushort, Vector3, Quaternion) [NetInvokableGeneratedMethod(\"ReceiveTransform\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTransform_Write(NetPakWriter writer, byte old_x, byte old_y, ushort oldPlant, Vector3 point, Quaternion rotation) Parameters writer NetPakWriter old_x byte old_y byte oldPlant ushort point Vector3 rotation Quaternion ReceiveUpdateState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdateState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdateState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUpdateState_Write(NetPakWriter, byte[]) [NetInvokableGeneratedMethod(\"ReceiveUpdateState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdateState_Write(NetPakWriter writer, byte[] newState) Parameters writer NetPakWriter newState byte[]"
  },
  "api/SDG.Unturned.BarricadeManager.html": {
    "href": "api/SDG.Unturned.BarricadeManager.html",
    "title": "Class BarricadeManager | Unturned Analyse Doc",
    "keywords": "Class BarricadeManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BarricadeManager : SteamCaller Inheritance object SteamCaller BarricadeManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors BarricadeManager() public BarricadeManager() Fields BARRICADE_REGIONS public static readonly byte BARRICADE_REGIONS Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_INCLUDE_BUILD_ENUM Barricade asset's EBuild included in saves to fix state length problems. (public issue #3725) public const byte SAVEDATA_VERSION_INCLUDE_BUILD_ENUM = 18 Field Value byte SAVEDATA_VERSION_REPLACE_EULER_ANGLES_WITH_QUATERNION public const byte SAVEDATA_VERSION_REPLACE_EULER_ANGLES_WITH_QUATERNION = 19 Field Value byte onBarricadeSpawned public static BarricadeSpawnedHandler onBarricadeSpawned Field Value BarricadeSpawnedHandler onDamageBarricadeRequested public static DamageBarricadeRequestHandler onDamageBarricadeRequested Field Value DamageBarricadeRequestHandler onDeployBarricadeRequested public static DeployBarricadeRequestHandler onDeployBarricadeRequested Field Value DeployBarricadeRequestHandler onHarvestPlantRequested [Obsolete(\"Please use InteractableFarm.OnHarvestRequested_Global instead\")] public static SalvageBarricadeRequestHandler onHarvestPlantRequested Field Value SalvageBarricadeRequestHandler onModifySignRequested public static ModifySignRequestHandler onModifySignRequested Field Value ModifySignRequestHandler onOpenStorageRequested public static OpenStorageRequestHandler onOpenStorageRequested Field Value OpenStorageRequestHandler onSalvageBarricadeRequested [Obsolete(\"Please use BarricadeDrop.OnSalvageRequested_Global instead\")] public static SalvageBarricadeRequestHandler onSalvageBarricadeRequested Field Value SalvageBarricadeRequestHandler onTransformRequested public static TransformBarricadeRequestHandler onTransformRequested Field Value TransformBarricadeRequestHandler version public static byte version Field Value byte Properties BarricadeRegions Exposed for Rocket transition to modules backwards compatibility. public static BarricadeRegion[,] BarricadeRegions { get; set; } Property Value BarricadeRegion[,] instance Exposed for Rocket transition to modules backwards compatibility. public static BarricadeManager instance { get; } Property Value BarricadeManager plants [Obsolete(\"Please update to vehicleRegions instead (this property copies the list)\")] public static List<BarricadeRegion> plants { get; } Property Value List<BarricadeRegion> regions public static BarricadeRegion[,] regions { get; } Property Value BarricadeRegion[,] vehicleRegions public static IReadOnlyList<VehicleBarricadeRegion> vehicleRegions { get; } Property Value IReadOnlyList<VehicleBarricadeRegion> Methods EnumerateClients(byte, byte, ushort) [Obsolete(\"Replaced by GatherClients\")] public static IEnumerable<ITransportConnection> EnumerateClients(byte x, byte y, ushort plant) Parameters x byte y byte plant ushort Returns IEnumerable<ITransportConnection> EnumerateClients_Remote(byte, byte, ushort) [Obsolete(\"Replaced by GatherRemoteClients\")] public static IEnumerable<ITransportConnection> EnumerateClients_Remote(byte x, byte y, ushort plant) Parameters x byte y byte plant ushort Returns IEnumerable<ITransportConnection> FindBarricadeByRootTransform(Transform) public static BarricadeDrop FindBarricadeByRootTransform(Transform transform) Parameters transform Transform Returns BarricadeDrop FindVehicleRegionByTransform(Transform) public static VehicleBarricadeRegion FindVehicleRegionByTransform(Transform parent) Parameters parent Transform Returns VehicleBarricadeRegion GatherClientConnections(byte, byte, ushort) public static PooledTransportConnectionList GatherClientConnections(byte x, byte y, ushort plant) Parameters x byte y byte plant ushort Returns PooledTransportConnectionList GatherRemoteClientConnections(byte, byte, ushort) public static PooledTransportConnectionList GatherRemoteClientConnections(byte x, byte y, ushort plant) Parameters x byte y byte plant ushort Returns PooledTransportConnectionList ReceiveClearRegionBarricades(byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellClearRegionBarricades\")] public static void ReceiveClearRegionBarricades(byte x, byte y) Parameters x byte y byte ReceiveDestroyBarricade(in ClientInvocationContext, NetId) Not an instance method because structure might not exist yet, in which case we cancel instantiation. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveDestroyBarricade(in ClientInvocationContext context, NetId netId) Parameters context ClientInvocationContext netId NetId ReceiveMultipleBarricades(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveMultipleBarricades(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSingleBarricade(in ClientInvocationContext, NetId, Guid, byte[], Vector3, Quaternion, ulong, ulong, NetId) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveSingleBarricade(in ClientInvocationContext context, NetId parentNetId, Guid assetId, byte[] state, Vector3 point, Quaternion rotation, ulong owner, ulong group, NetId netId) Parameters context ClientInvocationContext parentNetId NetId assetId Guid state byte[] point Vector3 rotation Quaternion owner ulong group ulong netId NetId ServerClaimBedForPlayer(InteractableBed, Player) public static bool ServerClaimBedForPlayer(InteractableBed bed, Player player) Parameters bed InteractableBed player Player Returns bool ServerSetBarricadeTransform(Transform, Vector3, Quaternion) public static bool ServerSetBarricadeTransform(Transform transform, Vector3 position, Quaternion rotation) Parameters transform Transform position Vector3 rotation Quaternion Returns bool ServerSetDoorOpen(InteractableDoor, bool) public static bool ServerSetDoorOpen(InteractableDoor door, bool isOpen) Parameters door InteractableDoor isOpen bool Returns bool ServerSetFireLit(InteractableFire, bool) public static bool ServerSetFireLit(InteractableFire fire, bool isLit) Parameters fire InteractableFire isLit bool Returns bool ServerSetGeneratorPowered(InteractableGenerator, bool) public static bool ServerSetGeneratorPowered(InteractableGenerator generator, bool isPowered) Parameters generator InteractableGenerator isPowered bool Returns bool ServerSetMannequinPose(InteractableMannequin, byte) public static bool ServerSetMannequinPose(InteractableMannequin mannequin, byte poseComp) Parameters mannequin InteractableMannequin poseComp byte Returns bool ServerSetOvenLit(InteractableOven, bool) public static bool ServerSetOvenLit(InteractableOven oven, bool isLit) Parameters oven InteractableOven isLit bool Returns bool ServerSetOxygenatorPowered(InteractableOxygenator, bool) public static bool ServerSetOxygenatorPowered(InteractableOxygenator oxygenator, bool isPowered) Parameters oxygenator InteractableOxygenator isPowered bool Returns bool ServerSetSafezonePowered(InteractableSafezone, bool) public static bool ServerSetSafezonePowered(InteractableSafezone safezone, bool isPowered) Parameters safezone InteractableSafezone isPowered bool Returns bool ServerSetSignText(InteractableSign, string) public static bool ServerSetSignText(InteractableSign sign, string newText) Parameters sign InteractableSign newText string Returns bool ServerSetSpotPowered(InteractableSpot, bool) public static bool ServerSetSpotPowered(InteractableSpot spot, bool isPowered) Parameters spot InteractableSpot isPowered bool Returns bool ServerSetStereoTrack(InteractableStereo, Guid) public static bool ServerSetStereoTrack(InteractableStereo stereo, Guid track) Parameters stereo InteractableStereo track Guid Returns bool ServerUnclaimBed(InteractableBed) public static bool ServerUnclaimBed(InteractableBed bed) Parameters bed InteractableBed Returns bool askBarricades(CSteamID, byte, byte, ushort) [Obsolete] public void askBarricades(CSteamID steamID, byte x, byte y, ushort plant) Parameters steamID CSteamID x byte y byte plant ushort askClaimBed(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askClaimBed(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askClearAllBarricades() public static void askClearAllBarricades() askClearRegionBarricades(byte, byte) public static void askClearRegionBarricades(byte x, byte y) Parameters x byte y byte askFarm(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askFarm(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askPlants(CSteamID) [Obsolete] public static void askPlants(CSteamID steamID) Parameters steamID CSteamID askPoseMannequin(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void askPoseMannequin(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte poseComp) Parameters steamID CSteamID x byte y byte plant ushort index ushort poseComp byte askRotDisplay(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void askRotDisplay(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte rotComp) Parameters steamID CSteamID x byte y byte plant ushort index ushort rotComp byte askSalvageBarricade(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askSalvageBarricade(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askStoreStorage(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void askStoreStorage(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool quickGrab) Parameters steamID CSteamID x byte y byte plant ushort index ushort quickGrab bool askToggleDoor(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askToggleDoor(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askToggleFire(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askToggleFire(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askToggleGenerator(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askToggleGenerator(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askToggleOven(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askToggleOven(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askToggleOxygenator(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askToggleOxygenator(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askToggleSafezone(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askToggleSafezone(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askToggleSpot(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void askToggleSpot(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort askTransferLibrary(CSteamID, byte, byte, ushort, ushort, byte, uint) [Obsolete] public void askTransferLibrary(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte transaction, uint delta) Parameters steamID CSteamID x byte y byte plant ushort index ushort transaction byte delta uint askTransformBarricade(CSteamID, byte, byte, ushort, uint, Vector3, byte, byte, byte) [Obsolete] public void askTransformBarricade(CSteamID steamID, byte x, byte y, ushort plant, uint instanceID, Vector3 point, byte angle_x, byte angle_y, byte angle_z) Parameters steamID CSteamID x byte y byte plant ushort instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte askUpdateMannequin(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void askUpdateMannequin(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte mode) Parameters steamID CSteamID x byte y byte plant ushort index ushort mode byte askUpdateSign(CSteamID, byte, byte, ushort, ushort, string) [Obsolete] public void askUpdateSign(CSteamID steamID, byte x, byte y, ushort plant, ushort index, string newText) Parameters steamID CSteamID x byte y byte plant ushort index ushort newText string askUpdateStereoTrack(CSteamID, byte, byte, ushort, ushort, Guid) [Obsolete] public void askUpdateStereoTrack(CSteamID steamID, byte x, byte y, ushort plant, ushort index, Guid newTrack) Parameters steamID CSteamID x byte y byte plant ushort index ushort newTrack Guid askUpdateStereoVolume(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void askUpdateStereoVolume(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte newVolume) Parameters steamID CSteamID x byte y byte plant ushort index ushort newVolume byte changeOwnerAndGroup(Transform, ulong, ulong) public static void changeOwnerAndGroup(Transform transform, ulong newOwner, ulong newGroup) Parameters transform Transform newOwner ulong newGroup ulong claimBed(Transform) [Obsolete] public static void claimBed(Transform transform) Parameters transform Transform clearPlants() Clean up before loading vehicles. public static void clearPlants() damage(Transform, float, float, bool, CSteamID, EDamageOrigin) public static void damage(Transform transform, float damage, float times, bool armor, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters transform Transform damage float times float armor bool instigatorSteamID CSteamID damageOrigin EDamageOrigin destroyBarricade(BarricadeDrop, byte, byte, ushort) Remove barricade instance on server and client. public static void destroyBarricade(BarricadeDrop barricade, byte x, byte y, ushort plant) Parameters barricade BarricadeDrop x byte y byte plant ushort destroyBarricade(BarricadeRegion, byte, byte, ushort, ushort) [Obsolete(\"Please replace the methods which take an index\")] public static void destroyBarricade(BarricadeRegion region, byte x, byte y, ushort plant, ushort index) Parameters region BarricadeRegion x byte y byte plant ushort index ushort dropBarricade(Barricade, Transform, Vector3, float, float, float, ulong, ulong) Legacy function for UseableBarricade. public static Transform dropBarricade(Barricade barricade, Transform hit, Vector3 point, float angle_x, float angle_y, float angle_z, ulong owner, ulong group) Parameters barricade Barricade hit Transform point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong Returns Transform dropNonPlantedBarricade(Barricade, Vector3, Quaternion, ulong, ulong) Spawn a new barricade and replicate it. public static Transform dropNonPlantedBarricade(Barricade barricade, Vector3 point, Quaternion rotation, ulong owner, ulong group) Parameters barricade Barricade point Vector3 rotation Quaternion owner ulong group ulong Returns Transform dropPlantedBarricade(Transform, Barricade, Vector3, Quaternion, ulong, ulong) Spawn a new barricade attached to a vehicle and replicate it. public static Transform dropPlantedBarricade(Transform parent, Barricade barricade, Vector3 point, Quaternion rotation, ulong owner, ulong group) Parameters parent Transform barricade Barricade point Vector3 rotation Quaternion owner ulong group ulong Returns Transform farm(Transform) [Obsolete] public static void farm(Transform transform) Parameters transform Transform findRegionFromVehicle(InteractableVehicle, int) public static VehicleBarricadeRegion findRegionFromVehicle(InteractableVehicle vehicle, int subvehicleIndex = 0) Parameters vehicle InteractableVehicle subvehicleIndex int Returns VehicleBarricadeRegion findVehicleRegionByNetInstanceID(uint, int) public static VehicleBarricadeRegion findVehicleRegionByNetInstanceID(uint instanceID, int subvehicleIndex = 0) Parameters instanceID uint subvehicleIndex int Returns VehicleBarricadeRegion getBarricadesInRadius(Vector3, float, List<RegionCoordinate>, List<Transform>) public static void getBarricadesInRadius(Vector3 center, float sqrRadius, List<RegionCoordinate> search, List<Transform> result) Parameters center Vector3 sqrRadius float search List<RegionCoordinate> result List<Transform> getBarricadesInRadius(Vector3, float, List<Transform>) public static void getBarricadesInRadius(Vector3 center, float sqrRadius, List<Transform> result) Parameters center Vector3 sqrRadius float result List<Transform> getBarricadesInRadius(Vector3, float, ushort, List<Transform>) public static void getBarricadesInRadius(Vector3 center, float sqrRadius, ushort plant, List<Transform> result) Parameters center Vector3 sqrRadius float plant ushort result List<Transform> getRegionFromVehicle(InteractableVehicle) public static BarricadeRegion getRegionFromVehicle(InteractableVehicle vehicle) Parameters vehicle InteractableVehicle Returns BarricadeRegion getRotation(ItemBarricadeAsset, float, float, float) public static Quaternion getRotation(ItemBarricadeAsset asset, float angle_x, float angle_y, float angle_z) Parameters asset ItemBarricadeAsset angle_x float angle_y float angle_z float Returns Quaternion getVehicleFromPlant(ushort) public static InteractableVehicle getVehicleFromPlant(ushort plant) Parameters plant ushort Returns InteractableVehicle load() public static void load() poseMannequin(Transform, byte) [Obsolete] public static void poseMannequin(Transform transform, byte poseComp) Parameters transform Transform poseComp byte repair(Transform, float, float) public static void repair(Transform transform, float damage, float times) Parameters transform Transform damage float times float repair(Transform, float, float, CSteamID) public static void repair(Transform transform, float damage, float times, CSteamID instigatorSteamID = null) Parameters transform Transform damage float times float instigatorSteamID CSteamID rotDisplay(Transform, byte) [Obsolete] public static void rotDisplay(Transform transform, byte rotComp) Parameters transform Transform rotComp byte salvageBarricade(Transform) public static void salvageBarricade(Transform transform) Parameters transform Transform save() public static void save() sendAlertSentry(Transform, float, float) public static void sendAlertSentry(Transform transform, float yaw, float pitch) Parameters transform Transform yaw float pitch float sendFuel(Transform, ushort) public static void sendFuel(Transform transform, ushort fuel) Parameters transform Transform fuel ushort sendOil(Transform, ushort) public static void sendOil(Transform transform, ushort fuel) Parameters transform Transform fuel ushort sendShootSentry(Transform) public static void sendShootSentry(Transform transform) Parameters transform Transform sendStorageDisplay(Transform, Item, ushort, ushort, string, string) public static void sendStorageDisplay(Transform transform, Item item, ushort skin, ushort mythic, string tags, string dynamicProps) Parameters transform Transform item Item skin ushort mythic ushort tags string dynamicProps string storeStorage(Transform, bool) [Obsolete] public static void storeStorage(Transform transform, bool quickGrab) Parameters transform Transform quickGrab bool tellAlertSentry(CSteamID, byte, byte, ushort, ushort, byte, byte) [Obsolete] public void tellAlertSentry(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte yaw, byte pitch) Parameters steamID CSteamID x byte y byte plant ushort index ushort yaw byte pitch byte tellBarricade(CSteamID, byte, byte, ushort, ushort, byte[], Vector3, byte, byte, byte, ulong, ulong, uint) [Obsolete] public void tellBarricade(CSteamID steamID, byte x, byte y, ushort plant, ushort id, byte[] state, Vector3 point, byte angle_x, byte angle_y, byte angle_z, ulong owner, ulong group, uint instanceID) Parameters steamID CSteamID x byte y byte plant ushort id ushort state byte[] point Vector3 angle_x byte angle_y byte angle_z byte owner ulong group ulong instanceID uint tellBarricadeHealth(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void tellBarricadeHealth(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte hp) Parameters steamID CSteamID x byte y byte plant ushort index ushort hp byte tellBarricadeOwnerAndGroup(CSteamID, byte, byte, ushort, ushort, ulong, ulong) [Obsolete] public void tellBarricadeOwnerAndGroup(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ulong newOwner, ulong newGroup) Parameters steamID CSteamID x byte y byte plant ushort index ushort newOwner ulong newGroup ulong tellBarricadeUpdateState(CSteamID, byte, byte, ushort, ushort, byte[]) [Obsolete] public void tellBarricadeUpdateState(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte[] newState) Parameters steamID CSteamID x byte y byte plant ushort index ushort newState byte[] tellBarricades(CSteamID) [Obsolete] public void tellBarricades(CSteamID steamID) Parameters steamID CSteamID tellClaimBed(CSteamID, byte, byte, ushort, ushort, CSteamID) [Obsolete] public void tellClaimBed(CSteamID steamID, byte x, byte y, ushort plant, ushort index, CSteamID owner) Parameters steamID CSteamID x byte y byte plant ushort index ushort owner CSteamID tellClearRegionBarricades(CSteamID, byte, byte) [Obsolete] public void tellClearRegionBarricades(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte tellFarm(CSteamID, byte, byte, ushort, ushort, uint) [Obsolete] public void tellFarm(CSteamID steamID, byte x, byte y, ushort plant, ushort index, uint planted) Parameters steamID CSteamID x byte y byte plant ushort index ushort planted uint tellFuel(CSteamID, byte, byte, ushort, ushort, ushort) [Obsolete] public void tellFuel(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ushort fuel) Parameters steamID CSteamID x byte y byte plant ushort index ushort fuel ushort tellOil(CSteamID, byte, byte, ushort, ushort, ushort) [Obsolete] public void tellOil(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ushort fuel) Parameters steamID CSteamID x byte y byte plant ushort index ushort fuel ushort tellPoseMannequin(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void tellPoseMannequin(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte poseComp) Parameters steamID CSteamID x byte y byte plant ushort index ushort poseComp byte tellRainBarrel(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellRainBarrel(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isFull) Parameters steamID CSteamID x byte y byte plant ushort index ushort isFull bool tellRotDisplay(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void tellRotDisplay(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte rotComp) Parameters steamID CSteamID x byte y byte plant ushort index ushort rotComp byte tellShootSentry(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void tellShootSentry(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort tellStorageDisplay(CSteamID, byte, byte, ushort, ushort, ushort, byte, byte[], ushort, ushort, string, string) [Obsolete] public void tellStorageDisplay(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ushort id, byte quality, byte[] state, ushort skin, ushort mythic, string tags, string dynamicProps) Parameters steamID CSteamID x byte y byte plant ushort index ushort id ushort quality byte state byte[] skin ushort mythic ushort tags string dynamicProps string tellTakeBarricade(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void tellTakeBarricade(CSteamID steamID, byte x, byte y, ushort plant, ushort index) Parameters steamID CSteamID x byte y byte plant ushort index ushort tellTank(CSteamID, byte, byte, ushort, ushort, ushort) [Obsolete] public void tellTank(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ushort amount) Parameters steamID CSteamID x byte y byte plant ushort index ushort amount ushort tellToggleDoor(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellToggleDoor(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isOpen) Parameters steamID CSteamID x byte y byte plant ushort index ushort isOpen bool tellToggleFire(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellToggleFire(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isLit) Parameters steamID CSteamID x byte y byte plant ushort index ushort isLit bool tellToggleGenerator(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellToggleGenerator(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isPowered) Parameters steamID CSteamID x byte y byte plant ushort index ushort isPowered bool tellToggleOven(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellToggleOven(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isLit) Parameters steamID CSteamID x byte y byte plant ushort index ushort isLit bool tellToggleOxygenator(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellToggleOxygenator(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isPowered) Parameters steamID CSteamID x byte y byte plant ushort index ushort isPowered bool tellToggleSafezone(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellToggleSafezone(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isPowered) Parameters steamID CSteamID x byte y byte plant ushort index ushort isPowered bool tellToggleSpot(CSteamID, byte, byte, ushort, ushort, bool) [Obsolete] public void tellToggleSpot(CSteamID steamID, byte x, byte y, ushort plant, ushort index, bool isPowered) Parameters steamID CSteamID x byte y byte plant ushort index ushort isPowered bool tellTransferLibrary(CSteamID, byte, byte, ushort, ushort, uint) [Obsolete] public void tellTransferLibrary(CSteamID steamID, byte x, byte y, ushort plant, ushort index, uint newAmount) Parameters steamID CSteamID x byte y byte plant ushort index ushort newAmount uint tellTransformBarricade(CSteamID, byte, byte, ushort, uint, Vector3, byte, byte, byte) [Obsolete] public void tellTransformBarricade(CSteamID steamID, byte x, byte y, ushort plant, uint instanceID, Vector3 point, byte angle_x, byte angle_y, byte angle_z) Parameters steamID CSteamID x byte y byte plant ushort instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte tellUpdateMannequin(CSteamID, byte, byte, ushort, ushort, byte[]) [Obsolete] public void tellUpdateMannequin(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte[] state) Parameters steamID CSteamID x byte y byte plant ushort index ushort state byte[] tellUpdateSign(CSteamID, byte, byte, ushort, ushort, string) [Obsolete] public void tellUpdateSign(CSteamID steamID, byte x, byte y, ushort plant, ushort index, string newText) Parameters steamID CSteamID x byte y byte plant ushort index ushort newText string tellUpdateStereoTrack(CSteamID, byte, byte, ushort, ushort, Guid) [Obsolete] public void tellUpdateStereoTrack(CSteamID steamID, byte x, byte y, ushort plant, ushort index, Guid newTrack) Parameters steamID CSteamID x byte y byte plant ushort index ushort newTrack Guid tellUpdateStereoVolume(CSteamID, byte, byte, ushort, ushort, byte) [Obsolete] public void tellUpdateStereoVolume(CSteamID steamID, byte x, byte y, ushort plant, ushort index, byte newVolume) Parameters steamID CSteamID x byte y byte plant ushort index ushort newVolume byte toggleDoor(Transform) [Obsolete] public static void toggleDoor(Transform transform) Parameters transform Transform toggleFire(Transform) [Obsolete] public static void toggleFire(Transform transform) Parameters transform Transform toggleGenerator(Transform) [Obsolete] public static void toggleGenerator(Transform transform) Parameters transform Transform toggleOven(Transform) [Obsolete] public static void toggleOven(Transform transform) Parameters transform Transform toggleOxygenator(Transform) [Obsolete] public static void toggleOxygenator(Transform transform) Parameters transform Transform toggleSafezone(Transform) [Obsolete] public static void toggleSafezone(Transform transform) Parameters transform Transform toggleSpot(Transform) [Obsolete] public static void toggleSpot(Transform transform) Parameters transform Transform transferLibrary(Transform, byte, uint) [Obsolete] public static void transferLibrary(Transform transform, byte transaction, uint delta) Parameters transform Transform transaction byte delta uint transformBarricade(Transform, Vector3, Quaternion) public static void transformBarricade(Transform transform, Vector3 point, Quaternion rotation) Parameters transform Transform point Vector3 rotation Quaternion trimPlant(Transform) public static void trimPlant(Transform parent) Parameters parent Transform tryGetBed(CSteamID, out Vector3, out byte) public static bool tryGetBed(CSteamID owner, out Vector3 point, out byte angle) Parameters owner CSteamID point Vector3 angle byte Returns bool tryGetInfo(Transform, out byte, out byte, out ushort, out ushort, out BarricadeRegion) [Obsolete(\"Please use FindBarricadeByRootTransform instead\")] public static bool tryGetInfo(Transform barricade, out byte x, out byte y, out ushort plant, out ushort index, out BarricadeRegion region) Parameters barricade Transform x byte y byte plant ushort index ushort region BarricadeRegion Returns bool tryGetInfo(Transform, out byte, out byte, out ushort, out ushort, out BarricadeRegion, out BarricadeDrop) [Obsolete(\"Please use FindBarricadeByRootTransform instead\")] public static bool tryGetInfo(Transform barricade, out byte x, out byte y, out ushort plant, out ushort index, out BarricadeRegion region, out BarricadeDrop drop) Parameters barricade Transform x byte y byte plant ushort index ushort region BarricadeRegion drop BarricadeDrop Returns bool tryGetPlant(Transform, out byte, out byte, out ushort, out BarricadeRegion) public static bool tryGetPlant(Transform parent, out byte x, out byte y, out ushort plant, out BarricadeRegion region) Parameters parent Transform x byte y byte plant ushort region BarricadeRegion Returns bool tryGetRegion(byte, byte, ushort, out BarricadeRegion) public static bool tryGetRegion(byte x, byte y, ushort plant, out BarricadeRegion region) Parameters x byte y byte plant ushort region BarricadeRegion Returns bool tryGetRegion(Transform, out byte, out byte, out ushort, out BarricadeRegion) public static bool tryGetRegion(Transform barricade, out byte x, out byte y, out ushort plant, out BarricadeRegion region) Parameters barricade Transform x byte y byte plant ushort region BarricadeRegion Returns bool unclaimBeds(CSteamID) public static void unclaimBeds(CSteamID owner) Parameters owner CSteamID updateFarm(Transform, uint, bool) public static void updateFarm(Transform transform, uint planted, bool shouldSend) Parameters transform Transform planted uint shouldSend bool updateMannequin(Transform, EMannequinUpdateMode) [Obsolete] public static void updateMannequin(Transform transform, EMannequinUpdateMode updateMode) Parameters transform Transform updateMode EMannequinUpdateMode updateRainBarrel(Transform, bool, bool) public static void updateRainBarrel(Transform transform, bool isFull, bool shouldSend) Parameters transform Transform isFull bool shouldSend bool updateReplicatedState(Transform, byte[], int) Only used by plugins. Replicates state change to clients. public static void updateReplicatedState(Transform transform, byte[] state, int size) Parameters transform Transform state byte[] size int updateSign(Transform, string) [Obsolete] public static void updateSign(Transform transform, string newText) Parameters transform Transform newText string updateState(Transform, byte[], int) Original server-only version that does not replicate changes to clients. public static void updateState(Transform transform, byte[] state, int size) Parameters transform Transform state byte[] size int updateStereoTrack(Transform, Guid) [Obsolete] public static void updateStereoTrack(Transform transform, Guid newTrack) Parameters transform Transform newTrack Guid updateStereoVolume(Transform, byte) [Obsolete] public static void updateStereoVolume(Transform transform, byte newVolume) Parameters transform Transform newVolume byte updateTank(Transform, ushort) [Obsolete(\"Moved into InteractableTank.ServerSetAmount\")] public static void updateTank(Transform transform, ushort amount) Parameters transform Transform amount ushort uprootPlant(Transform) Called before destroying a vehicle GameObject because storage needed to be ManualDestroyed. public static void uprootPlant(Transform parent) Parameters parent Transform waterPlant(Transform) Register a new vehicle as a valid parent for barricades. Each train car is registered after the root of the train. Note: Nobody knows why these are called plants. [Obsolete(\"Plugins should not be calling this\")] public static void waterPlant(Transform parent) Parameters parent Transform Events OnRepairRequested public static event RepairBarricadeRequestHandler OnRepairRequested Event Type RepairBarricadeRequestHandler OnRepaired public static event RepairedBarricadeHandler OnRepaired Event Type RepairedBarricadeHandler"
  },
  "api/SDG.Unturned.BarricadeManager_NetMethods.html": {
    "href": "api/SDG.Unturned.BarricadeManager_NetMethods.html",
    "title": "Class BarricadeManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class BarricadeManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(BarricadeManager))] public static class BarricadeManager_NetMethods Inheritance object BarricadeManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveClearRegionBarricades_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClearRegionBarricades\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClearRegionBarricades_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveClearRegionBarricades_Write(NetPakWriter, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveClearRegionBarricades\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveClearRegionBarricades_Write(NetPakWriter writer, byte x, byte y) Parameters writer NetPakWriter x byte y byte ReceiveDestroyBarricade_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDestroyBarricade\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDestroyBarricade_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDestroyBarricade_Write(NetPakWriter, NetId) [NetInvokableGeneratedMethod(\"ReceiveDestroyBarricade\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDestroyBarricade_Write(NetPakWriter writer, NetId netId) Parameters writer NetPakWriter netId NetId ReceiveSingleBarricade_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSingleBarricade\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSingleBarricade_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSingleBarricade_Write(NetPakWriter, NetId, Guid, byte[], Vector3, Quaternion, ulong, ulong, NetId) [NetInvokableGeneratedMethod(\"ReceiveSingleBarricade\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSingleBarricade_Write(NetPakWriter writer, NetId parentNetId, Guid assetId, byte[] state, Vector3 point, Quaternion rotation, ulong owner, ulong group, NetId netId) Parameters writer NetPakWriter parentNetId NetId assetId Guid state byte[] point Vector3 rotation Quaternion owner ulong group ulong netId NetId"
  },
  "api/SDG.Unturned.BarricadeRegion.html": {
    "href": "api/SDG.Unturned.BarricadeRegion.html",
    "title": "Class BarricadeRegion | Unturned Analyse Doc",
    "keywords": "Class BarricadeRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BarricadeRegion Inheritance object BarricadeRegion Derived VehicleBarricadeRegion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BarricadeRegion(Transform) public BarricadeRegion(Transform newParent) Parameters newParent Transform Fields isNetworked public bool isNetworked Field Value bool Properties barricades [Obsolete(\"Maintaining two separate lists was error prone, but still kept for backwards compat\")] public List<BarricadeData> barricades { get; } Property Value List<BarricadeData> drops public List<BarricadeDrop> drops { get; } Property Value List<BarricadeDrop> parent public Transform parent { get; } Property Value Transform Methods FindBarricadeByRootTransform(Transform) public BarricadeDrop FindBarricadeByRootTransform(Transform transform) Parameters transform Transform Returns BarricadeDrop IndexOfBarricadeByRootTransform(Transform) New code should not use this. Only intended for backwards compatibility. public int IndexOfBarricadeByRootTransform(Transform rootTransform) Parameters rootTransform Transform Returns int destroy() [Obsolete(\"Renamed to DestroyAll\")] public void destroy() findBarricadeByInstanceID(uint) [Obsolete(\"Dead code, please contact if you need this and we will make a plan\")] public BarricadeData findBarricadeByInstanceID(uint instanceID) Parameters instanceID uint Returns BarricadeData"
  },
  "api/SDG.Unturned.BarricadeSpawnedHandler.html": {
    "href": "api/SDG.Unturned.BarricadeSpawnedHandler.html",
    "title": "Delegate BarricadeSpawnedHandler | Unturned Analyse Doc",
    "keywords": "Delegate BarricadeSpawnedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BarricadeSpawnedHandler(BarricadeRegion region, BarricadeDrop drop) Parameters region BarricadeRegion drop BarricadeDrop Constructors BarricadeSpawnedHandler(object, IntPtr) public BarricadeSpawnedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(BarricadeRegion, BarricadeDrop, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(BarricadeRegion region, BarricadeDrop drop, AsyncCallback callback, object @object) Parameters region BarricadeRegion drop BarricadeDrop callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(BarricadeRegion, BarricadeDrop) public virtual void Invoke(BarricadeRegion region, BarricadeDrop drop) Parameters region BarricadeRegion drop BarricadeDrop"
  },
  "api/SDG.Unturned.BarricadeTool.html": {
    "href": "api/SDG.Unturned.BarricadeTool.html",
    "title": "Class BarricadeTool | Unturned Analyse Doc",
    "keywords": "Class BarricadeTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BarricadeTool : MonoBehaviour Inheritance object BarricadeTool Constructors BarricadeTool() public BarricadeTool() Methods getBarricade(Transform, byte, ulong, ulong, Vector3, Quaternion, ushort, byte[], ItemBarricadeAsset) public static Transform getBarricade(Transform parent, byte hp, ulong owner, ulong group, Vector3 pos, Quaternion rot, ushort id, byte[] state, ItemBarricadeAsset asset) Parameters parent Transform hp byte owner ulong group ulong pos Vector3 rot Quaternion id ushort state byte[] asset ItemBarricadeAsset Returns Transform getBarricade(Transform, byte, Vector3, Quaternion, ushort, byte[]) public static Transform getBarricade(Transform parent, byte hp, Vector3 pos, Quaternion rot, ushort id, byte[] state) Parameters parent Transform hp byte pos Vector3 rot Quaternion id ushort state byte[] Returns Transform"
  },
  "api/SDG.Unturned.BarricadesConfigData.html": {
    "href": "api/SDG.Unturned.BarricadesConfigData.html",
    "title": "Class BarricadesConfigData | Unturned Analyse Doc",
    "keywords": "Class BarricadesConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BarricadesConfigData Inheritance object BarricadesConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BarricadesConfigData(EGameMode) public BarricadesConfigData(EGameMode mode) Parameters mode EGameMode Fields Allow_Item_Placement_On_Vehicle Should players be allowed to build on their vehicles? public bool Allow_Item_Placement_On_Vehicle Field Value bool Allow_Trap_Placement_On_Vehicle Should players be allowed to build traps (e.g. barbed wire) on their vehicles? public bool Allow_Trap_Placement_On_Vehicle Field Value bool Armor_Hightier_Multiplier public float Armor_Hightier_Multiplier Field Value float Armor_Lowtier_Multiplier public float Armor_Lowtier_Multiplier Field Value float Decay_Time public uint Decay_Time Field Value uint Gun_Highcal_Damage_Multiplier public float Gun_Highcal_Damage_Multiplier Field Value float Gun_Lowcal_Damage_Multiplier public float Gun_Lowcal_Damage_Multiplier Field Value float Max_Item_Distance_From_Hull Furthest away from colliders a player can build an item onto their vehicle. public float Max_Item_Distance_From_Hull Field Value float Max_Trap_Distance_From_Hull Furthest away from colliders a player can build a trap (e.g. barbed wire) onto their vehicle. public float Max_Trap_Distance_From_Hull Field Value float Melee_Damage_Multiplier public float Melee_Damage_Multiplier Field Value float Melee_Repair_Multiplier public float Melee_Repair_Multiplier Field Value float Methods getArmorMultiplier(EArmorTier) public float getArmorMultiplier(EArmorTier armorTier) Parameters armorTier EArmorTier Returns float"
  },
  "api/SDG.Unturned.Barrier.html": {
    "href": "api/SDG.Unturned.Barrier.html",
    "title": "Class Barrier | Unturned Analyse Doc",
    "keywords": "Class Barrier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Barrier : MonoBehaviour Inheritance object Barrier Constructors Barrier() public Barrier()"
  },
  "api/SDG.Unturned.BbCodeToken.html": {
    "href": "api/SDG.Unturned.BbCodeToken.html",
    "title": "Struct BbCodeToken | Unturned Analyse Doc",
    "keywords": "Struct BbCodeToken Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct BbCodeToken Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors BbCodeToken(EBbCodeTokenType) public BbCodeToken(EBbCodeTokenType tokenType) Parameters tokenType EBbCodeTokenType BbCodeToken(EBbCodeTokenType, string) public BbCodeToken(EBbCodeTokenType tokenType, string tokenValue) Parameters tokenType EBbCodeTokenType tokenValue string Fields tokenType public EBbCodeTokenType tokenType Field Value EBbCodeTokenType tokenValue public string tokenValue Field Value string"
  },
  "api/SDG.Unturned.BbCodeTokenizer.html": {
    "href": "api/SDG.Unturned.BbCodeTokenizer.html",
    "title": "Class BbCodeTokenizer | Unturned Analyse Doc",
    "keywords": "Class BbCodeTokenizer Namespace SDG.Unturned Assembly Assembly-CSharp.dll Breaks down Steam's version of BBcode into tokens like, \"[b]\", \"[i]\", \"actual text\", etc. public class BbCodeTokenizer Inheritance object BbCodeTokenizer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BbCodeTokenizer() public BbCodeTokenizer() Properties ErrorMessage public string ErrorMessage { get; } Property Value string HasError public bool HasError { get; } Property Value bool Methods DebugDumpTokensToString(List<BbCodeToken>) public string DebugDumpTokensToString(List<BbCodeToken> tokens) Parameters tokens List<BbCodeToken> Returns string Tokenize(TextReader) public List<BbCodeToken> Tokenize(TextReader inputReader) Parameters inputReader TextReader Returns List<BbCodeToken> Tokenize(string) public List<BbCodeToken> Tokenize(string input) Parameters input string Returns List<BbCodeToken>"
  },
  "api/SDG.Unturned.BbCodeWidget.html": {
    "href": "api/SDG.Unturned.BbCodeWidget.html",
    "title": "Struct BbCodeWidget | Unturned Analyse Doc",
    "keywords": "Struct BbCodeWidget Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct BbCodeWidget Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors BbCodeWidget(EBbCodeWidgetType, string) public BbCodeWidget(EBbCodeWidgetType widgetType, string widgetData) Parameters widgetType EBbCodeWidgetType widgetData string Fields widgetData public string widgetData Field Value string widgetType public EBbCodeWidgetType widgetType Field Value EBbCodeWidgetType"
  },
  "api/SDG.Unturned.BbCodeWidgetConverter.html": {
    "href": "api/SDG.Unturned.BbCodeWidgetConverter.html",
    "title": "Class BbCodeWidgetConverter | Unturned Analyse Doc",
    "keywords": "Class BbCodeWidgetConverter Namespace SDG.Unturned Assembly Assembly-CSharp.dll Converts Steam BBcode tokens into widgets displayable using Glazier UI. public class BbCodeWidgetConverter Inheritance object BbCodeWidgetConverter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BbCodeWidgetConverter() public BbCodeWidgetConverter() Properties ErrorMessage public string ErrorMessage { get; } Property Value string HasError public bool HasError { get; } Property Value bool Methods Convert(List<BbCodeToken>) public List<BbCodeWidget> Convert(List<BbCodeToken> tokens) Parameters tokens List<BbCodeToken> Returns List<BbCodeWidget>"
  },
  "api/SDG.Unturned.BeaconManager.html": {
    "href": "api/SDG.Unturned.BeaconManager.html",
    "title": "Class BeaconManager | Unturned Analyse Doc",
    "keywords": "Class BeaconManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BeaconManager : MonoBehaviour Inheritance object BeaconManager Constructors BeaconManager() public BeaconManager() Fields onBeaconUpdated public static BeaconUpdated onBeaconUpdated Field Value BeaconUpdated Methods checkBeacon(byte) public static InteractableBeacon checkBeacon(byte nav) Parameters nav byte Returns InteractableBeacon deregisterBeacon(byte, InteractableBeacon) public static void deregisterBeacon(byte nav, InteractableBeacon beacon) Parameters nav byte beacon InteractableBeacon getParticipants(byte) public static int getParticipants(byte nav) Parameters nav byte Returns int registerBeacon(byte, InteractableBeacon) public static void registerBeacon(byte nav, InteractableBeacon beacon) Parameters nav byte beacon InteractableBeacon"
  },
  "api/SDG.Unturned.BeaconUpdated.html": {
    "href": "api/SDG.Unturned.BeaconUpdated.html",
    "title": "Delegate BeaconUpdated | Unturned Analyse Doc",
    "keywords": "Delegate BeaconUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BeaconUpdated(byte nav, bool hasBeacon) Parameters nav byte hasBeacon bool Constructors BeaconUpdated(object, IntPtr) public BeaconUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte nav, bool hasBeacon, AsyncCallback callback, object @object) Parameters nav byte hasBeacon bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, bool) public virtual void Invoke(byte nav, bool hasBeacon) Parameters nav byte hasBeacon bool"
  },
  "api/SDG.Unturned.BezierTool.html": {
    "href": "api/SDG.Unturned.BezierTool.html",
    "title": "Class BezierTool | Unturned Analyse Doc",
    "keywords": "Class BezierTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BezierTool Inheritance object BezierTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BezierTool() public BezierTool() Methods getLengthBruteForce(Vector3, Vector3, Vector3, Vector3, float, float, int) public static float getLengthBruteForce(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float uniformInterval, float intervalTolerance, int attempts) Parameters a Vector3 Start Vertex b Vector3 Start Vertex + Start Tangent c Vector3 End Vertex + End Tangent d Vector3 End Vertex uniformInterval float Spacing between points. intervalTolerance float Max estimate distance from uniform interval before we have to retry. attempts int How many times to retry if the estimate is too far off. Returns float getLengthEstimate(Vector3, Vector3, Vector3, Vector3) public static float getLengthEstimate(Vector3 a, Vector3 b, Vector3 c, Vector3 d) Parameters a Vector3 Start Vertex b Vector3 Start Vertex + Start Tangent c Vector3 End Vertex + End Tangent d Vector3 End Vertex Returns float getPosition(Vector3, Vector3, Vector3, Vector3, float) public static Vector3 getPosition(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float t) Parameters a Vector3 Start Vertex b Vector3 Start Vertex + Start Tangent c Vector3 End Vertex + End Tangent d Vector3 End Vertex t float Returns Vector3 getTFromDistance(Vector3, Vector3, Vector3, Vector3, float, float, float, int, float) public static float getTFromDistance(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float distance, float uniformInterval, float intervalTolerance, int attempts, float cachedLength = -1) Parameters a Vector3 Start Vertex b Vector3 Start Vertex + Start Tangent c Vector3 End Vertex + End Tangent d Vector3 End Vertex distance float World units length along curve. uniformInterval float Spacing between points. intervalTolerance float Max estimate distance from uniform interval before we have to retry. attempts int How many times to retry if the estimate is too far off. cachedLength float If length is already known pass it in, otherwise it's recalculated. Returns float Time along curve. [0-1] getVelocity(Vector3, Vector3, Vector3, Vector3, float) public static Vector3 getVelocity(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float t) Parameters a Vector3 Start Vertex b Vector3 Start Vertex + Start Tangent c Vector3 End Vertex + End Tangent d Vector3 End Vertex t float Returns Vector3"
  },
  "api/SDG.Unturned.BinaryRandomComponent.html": {
    "href": "api/SDG.Unturned.BinaryRandomComponent.html",
    "title": "Class BinaryRandomComponent | Unturned Analyse Doc",
    "keywords": "Class BinaryRandomComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll Single percentage randomness with two outcomes. public class BinaryRandomComponent : MonoBehaviour Inheritance object BinaryRandomComponent Constructors BinaryRandomComponent() public BinaryRandomComponent() Fields AuthorityOnly If true the event will only be invoked in offline mode and on the server. public bool AuthorityOnly Field Value bool DefaultProbability Percentage chance of event occurring. public float DefaultProbability Field Value float OnFalse Invoked when random event does NOT occur. public UnityEvent OnFalse Field Value UnityEvent OnTrue Invoked when random event occurs. public UnityEvent OnTrue Field Value UnityEvent Methods TriggerDefault() public void TriggerDefault() TriggerWithProbability(float) public void TriggerWithProbability(float Probability) Parameters Probability float"
  },
  "api/SDG.Unturned.BleedingUpdated.html": {
    "href": "api/SDG.Unturned.BleedingUpdated.html",
    "title": "Delegate BleedingUpdated | Unturned Analyse Doc",
    "keywords": "Delegate BleedingUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BleedingUpdated(bool newBleeding) Parameters newBleeding bool Constructors BleedingUpdated(object, IntPtr) public BleedingUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool newBleeding, AsyncCallback callback, object @object) Parameters newBleeding bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool newBleeding) Parameters newBleeding bool"
  },
  "api/SDG.Unturned.BlinkingLight.html": {
    "href": "api/SDG.Unturned.BlinkingLight.html",
    "title": "Class BlinkingLight | Unturned Analyse Doc",
    "keywords": "Class BlinkingLight Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BlinkingLight : MonoBehaviour Inheritance object BlinkingLight Constructors BlinkingLight() public BlinkingLight() Fields target public GameObject target Field Value GameObject"
  },
  "api/SDG.Unturned.Block.html": {
    "href": "api/SDG.Unturned.Block.html",
    "title": "Class Block | Unturned Analyse Doc",
    "keywords": "Class Block Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Block Inheritance object Block Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Block() public Block() Block(byte[]) public Block(byte[] contents) Parameters contents byte[] Block(int) public Block(int prefix) Parameters prefix int Block(int, byte[]) public Block(int prefix, byte[] contents) Parameters prefix int contents byte[] Fields BUFFER_SIZE public static readonly int BUFFER_SIZE Field Value int block public byte[] block Field Value byte[] buffer public static byte[] buffer Field Value byte[] longBinaryData public bool longBinaryData Field Value bool step public int step Field Value int Methods getBytes(out int) public byte[] getBytes(out int size) Parameters size int Returns byte[] getHash() public byte[] getHash() Returns byte[] read(int, Type) public object[] read(int offset, Type type_0) Parameters offset int type_0 Type Returns object[] read(int, Type, Type) public object[] read(int offset, Type type_0, Type type_1) Parameters offset int type_0 Type type_1 Type Returns object[] read(int, Type, Type, Type) public object[] read(int offset, Type type_0, Type type_1, Type type_2) Parameters offset int type_0 Type type_1 Type type_2 Type Returns object[] read(int, Type, Type, Type, Type) public object[] read(int offset, Type type_0, Type type_1, Type type_2, Type type_3) Parameters offset int type_0 Type type_1 Type type_2 Type type_3 Type Returns object[] read(int, Type, Type, Type, Type, Type) public object[] read(int offset, Type type_0, Type type_1, Type type_2, Type type_3, Type type_4) Parameters offset int type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type Returns object[] read(int, Type, Type, Type, Type, Type, Type) public object[] read(int offset, Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5) Parameters offset int type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type Returns object[] read(int, Type, Type, Type, Type, Type, Type, Type) public object[] read(int offset, Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5, Type type_6) Parameters offset int type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type type_6 Type Returns object[] read(int, params Type[]) public object[] read(int offset, params Type[] types) Parameters offset int types Type[] Returns object[] read(Type) public object read(Type type) Parameters type Type Returns object read(Type, Type) public object[] read(Type type_0, Type type_1) Parameters type_0 Type type_1 Type Returns object[] read(Type, Type, Type) public object[] read(Type type_0, Type type_1, Type type_2) Parameters type_0 Type type_1 Type type_2 Type Returns object[] read(Type, Type, Type, Type) public object[] read(Type type_0, Type type_1, Type type_2, Type type_3) Parameters type_0 Type type_1 Type type_2 Type type_3 Type Returns object[] read(Type, Type, Type, Type, Type) public object[] read(Type type_0, Type type_1, Type type_2, Type type_3, Type type_4) Parameters type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type Returns object[] read(Type, Type, Type, Type, Type, Type) public object[] read(Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5) Parameters type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type Returns object[] read(Type, Type, Type, Type, Type, Type, Type) public object[] read(Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5, Type type_6) Parameters type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type type_6 Type Returns object[] read(params Type[]) public object[] read(params Type[] types) Parameters types Type[] Returns object[] readBitConverterBytes(int) protected void readBitConverterBytes(int length) Parameters length int readBoolean() public bool readBoolean() Returns bool readBooleanArray() public bool[] readBooleanArray() Returns bool[] readByte() public byte readByte() Returns byte readByteArray() public byte[] readByteArray() Returns byte[] readColor() public Color readColor() Returns Color readGUID() public Guid readGUID() Returns Guid readInt16() public short readInt16() Returns short readInt32() public int readInt32() Returns int readInt32Array() public int[] readInt32Array() Returns int[] readInt64() public long readInt64() Returns long readSingle() public float readSingle() Returns float readSingleQuaternion() public Quaternion readSingleQuaternion() Returns Quaternion readSingleVector3() public Vector3 readSingleVector3() Returns Vector3 readSteamID() public CSteamID readSteamID() Returns CSteamID readString() public string readString() Returns string readStringArray() public string[] readStringArray() Returns string[] readUInt16() public ushort readUInt16() Returns ushort readUInt16RVector3() public Vector3 readUInt16RVector3() Returns Vector3 readUInt32() public uint readUInt32() Returns uint readUInt64() public ulong readUInt64() Returns ulong readUInt64Array() public ulong[] readUInt64Array() Returns ulong[] reset() public void reset() reset(byte[]) public void reset(byte[] contents) Parameters contents byte[] reset(int) public void reset(int prefix) Parameters prefix int reset(int, byte[]) public void reset(int prefix, byte[] contents) Parameters prefix int contents byte[] write(object) public void write(object objects) Parameters objects object write(object, object) public void write(object object_0, object object_1) Parameters object_0 object object_1 object write(object, object, object) public void write(object object_0, object object_1, object object_2) Parameters object_0 object object_1 object object_2 object write(object, object, object, object) public void write(object object_0, object object_1, object object_2, object object_3) Parameters object_0 object object_1 object object_2 object object_3 object write(object, object, object, object, object) public void write(object object_0, object object_1, object object_2, object object_3, object object_4) Parameters object_0 object object_1 object object_2 object object_3 object object_4 object write(object, object, object, object, object, object) public void write(object object_0, object object_1, object object_2, object object_3, object object_4, object object_5) Parameters object_0 object object_1 object object_2 object object_3 object object_4 object object_5 object write(object, object, object, object, object, object, object) public void write(object object_0, object object_1, object object_2, object object_3, object object_4, object object_5, object object_6) Parameters object_0 object object_1 object object_2 object object_3 object object_4 object object_5 object object_6 object write(params object[]) public void write(params object[] objects) Parameters objects object[] writeBitConverterBytes(byte[]) protected void writeBitConverterBytes(byte[] bytes) Parameters bytes byte[] writeBoolean(bool) public void writeBoolean(bool value) Parameters value bool writeBooleanArray(bool[]) public void writeBooleanArray(bool[] values) Parameters values bool[] writeByte(byte) public void writeByte(byte value) Parameters value byte writeByteArray(byte[]) public void writeByteArray(byte[] values) Parameters values byte[] writeColor(Color) public void writeColor(Color value) Parameters value Color writeGUID(Guid) public void writeGUID(Guid GUID) Parameters GUID Guid writeInt16(short) public void writeInt16(short value) Parameters value short writeInt32(int) public void writeInt32(int value) Parameters value int writeInt32Array(int[]) public void writeInt32Array(int[] values) Parameters values int[] writeInt64(long) public void writeInt64(long value) Parameters value long writeSingle(float) public void writeSingle(float value) Parameters value float writeSingleQuaternion(Quaternion) public void writeSingleQuaternion(Quaternion value) Parameters value Quaternion writeSingleVector3(Vector3) public void writeSingleVector3(Vector3 value) Parameters value Vector3 writeSteamID(CSteamID) public void writeSteamID(CSteamID steamID) Parameters steamID CSteamID writeString(string) public void writeString(string value) Parameters value string writeStringArray(string[]) public void writeStringArray(string[] values) Parameters values string[] writeUInt16(ushort) public void writeUInt16(ushort value) Parameters value ushort writeUInt16RVector3(Vector3) public void writeUInt16RVector3(Vector3 value) Parameters value Vector3 writeUInt32(uint) public void writeUInt32(uint value) Parameters value uint writeUInt64(ulong) public void writeUInt64(ulong value) Parameters value ulong writeUInt64Array(ulong[]) public void writeUInt64Array(ulong[] values) Parameters values ulong[]"
  },
  "api/SDG.Unturned.Blueprint.html": {
    "href": "api/SDG.Unturned.Blueprint.html",
    "title": "Class Blueprint | Unturned Analyse Doc",
    "keywords": "Class Blueprint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Blueprint Inheritance object Blueprint Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Blueprint(ItemAsset, byte, EBlueprintType, BlueprintSupply[], BlueprintOutput[], ushort, bool, ushort, byte, EBlueprintSkill, bool, string, INPCCondition[], NPCRewardsList) public Blueprint(ItemAsset newSourceItem, byte newID, EBlueprintType newType, BlueprintSupply[] newSupplies, BlueprintOutput[] newOutputs, ushort newTool, bool newToolCritical, ushort newBuild, byte newLevel, EBlueprintSkill newSkill, bool newTransferState, string newMap, INPCCondition[] newQuestConditions, NPCRewardsList newQuestRewardsList) Parameters newSourceItem ItemAsset newID byte newType EBlueprintType newSupplies BlueprintSupply[] newOutputs BlueprintOutput[] newTool ushort newToolCritical bool newBuild ushort newLevel byte newSkill EBlueprintSkill newTransferState bool newMap string newQuestConditions INPCCondition[] newQuestRewardsList NPCRewardsList Blueprint(ItemAsset, byte, EBlueprintType, BlueprintSupply[], BlueprintOutput[], ushort, bool, ushort, Guid, byte, EBlueprintSkill, bool, bool, string, INPCCondition[], NPCRewardsList) public Blueprint(ItemAsset newSourceItem, byte newID, EBlueprintType newType, BlueprintSupply[] newSupplies, BlueprintOutput[] newOutputs, ushort newTool, bool newToolCritical, ushort newBuild, Guid newBuildEffectGuid, byte newLevel, EBlueprintSkill newSkill, bool newTransferState, bool newWithoutAttachments, string newMap, INPCCondition[] newQuestConditions, NPCRewardsList newQuestRewardsList) Parameters newSourceItem ItemAsset newID byte newType EBlueprintType newSupplies BlueprintSupply[] newOutputs BlueprintOutput[] newTool ushort newToolCritical bool newBuild ushort newBuildEffectGuid Guid newLevel byte newSkill EBlueprintSkill newTransferState bool newWithoutAttachments bool newMap string newQuestConditions INPCCondition[] newQuestRewardsList NPCRewardsList Fields canBeVisibleWhenSearchedWithoutRequiredItems 2023-05-27: requested by Renaxon because some Arid blueprints are debug-only and should not be visible when players search by name. (the 3.23.7.0 update made non-craftable blueprints searchable for Buak) public bool canBeVisibleWhenSearchedWithoutRequiredItems Field Value bool hasItem public bool hasItem Field Value bool hasSkills public bool hasSkills Field Value bool hasSupplies public bool hasSupplies Field Value bool hasTool public bool hasTool Field Value bool items public ushort items Field Value ushort products public ushort products Field Value ushort questRewardsList protected NPCRewardsList questRewardsList Field Value NPCRewardsList tools public ushort tools Field Value ushort withoutAttachments If true, and transferState is enabled, delete attached items. public bool withoutAttachments Field Value bool Properties BuildEffectGuid public Guid BuildEffectGuid { get; } Property Value Guid build public ushort build { get; } Property Value ushort id public byte id { get; } Property Value byte level public byte level { get; } Property Value byte map public string map { get; } Property Value string outputs public BlueprintOutput[] outputs { get; } Property Value BlueprintOutput[] questConditions Must match conditions to craft. public INPCCondition[] questConditions { get; protected set; } Property Value INPCCondition[] questRewards Extra rewards given after crafting. Not displayed. public INPCReward[] questRewards { get; } Property Value INPCReward[] skill public EBlueprintSkill skill { get; } Property Value EBlueprintSkill sourceItem public ItemAsset sourceItem { get; protected set; } Property Value ItemAsset supplies public BlueprintSupply[] supplies { get; } Property Value BlueprintSupply[] tool public ushort tool { get; } Property Value ushort toolCritical public bool toolCritical { get; } Property Value bool transferState public bool transferState { get; } Property Value bool type public EBlueprintType type { get; } Property Value EBlueprintType Methods ApplyConditions(Player) public void ApplyConditions(Player player) Parameters player Player FindBuildEffectAsset() public EffectAsset FindBuildEffectAsset() Returns EffectAsset GrantRewards(Player) public void GrantRewards(Player player) Parameters player Player ToString() public override string ToString() Returns string applyConditions(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void applyConditions(Player player, bool shouldSend) Parameters player Player shouldSend bool areConditionsMet(Player) public bool areConditionsMet(Player player) Parameters player Player Returns bool grantRewards(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void grantRewards(Player player, bool shouldSend) Parameters player Player shouldSend bool"
  },
  "api/SDG.Unturned.BlueprintItemIconsInfo.html": {
    "href": "api/SDG.Unturned.BlueprintItemIconsInfo.html",
    "title": "Class BlueprintItemIconsInfo | Unturned Analyse Doc",
    "keywords": "Class BlueprintItemIconsInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BlueprintItemIconsInfo Inheritance object BlueprintItemIconsInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BlueprintItemIconsInfo() public BlueprintItemIconsInfo() Fields callback public BlueprintItemIconsReady callback Field Value BlueprintItemIconsReady textures public Texture2D[] textures Field Value Texture2D[] Methods onItemIconReady(Texture2D) public void onItemIconReady(Texture2D texture) Parameters texture Texture2D"
  },
  "api/SDG.Unturned.BlueprintItemIconsReady.html": {
    "href": "api/SDG.Unturned.BlueprintItemIconsReady.html",
    "title": "Delegate BlueprintItemIconsReady | Unturned Analyse Doc",
    "keywords": "Delegate BlueprintItemIconsReady Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BlueprintItemIconsReady() Constructors BlueprintItemIconsReady(object, IntPtr) public BlueprintItemIconsReady(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.BlueprintOutput.html": {
    "href": "api/SDG.Unturned.BlueprintOutput.html",
    "title": "Class BlueprintOutput | Unturned Analyse Doc",
    "keywords": "Class BlueprintOutput Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BlueprintOutput Inheritance object BlueprintOutput Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BlueprintOutput(ushort, byte, EItemOrigin) public BlueprintOutput(ushort newID, byte newAmount, EItemOrigin newOrigin) Parameters newID ushort newAmount byte newOrigin EItemOrigin Fields amount public ushort amount Field Value ushort origin public EItemOrigin origin Field Value EItemOrigin Properties id public ushort id { get; } Property Value ushort"
  },
  "api/SDG.Unturned.BlueprintSupply.html": {
    "href": "api/SDG.Unturned.BlueprintSupply.html",
    "title": "Class BlueprintSupply | Unturned Analyse Doc",
    "keywords": "Class BlueprintSupply Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BlueprintSupply Inheritance object BlueprintSupply Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BlueprintSupply(ushort, bool, byte) public BlueprintSupply(ushort newID, bool newCritical, byte newAmount) Parameters newID ushort newCritical bool newAmount byte Fields amount public ushort amount Field Value ushort hasAmount public ushort hasAmount Field Value ushort Properties id public ushort id { get; } Property Value ushort isCritical public bool isCritical { get; } Property Value bool"
  },
  "api/SDG.Unturned.BoostUpdated.html": {
    "href": "api/SDG.Unturned.BoostUpdated.html",
    "title": "Delegate BoostUpdated | Unturned Analyse Doc",
    "keywords": "Delegate BoostUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BoostUpdated(EPlayerBoost newBoost) Parameters newBoost EPlayerBoost Constructors BoostUpdated(object, IntPtr) public BoostUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EPlayerBoost, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EPlayerBoost newBoost, AsyncCallback callback, object @object) Parameters newBoost EPlayerBoost callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EPlayerBoost) public virtual void Invoke(EPlayerBoost newBoost) Parameters newBoost EPlayerBoost"
  },
  "api/SDG.Unturned.Boulder.html": {
    "href": "api/SDG.Unturned.Boulder.html",
    "title": "Class Boulder | Unturned Analyse Doc",
    "keywords": "Class Boulder Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Boulder : MonoBehaviour Inheritance object Boulder Constructors Boulder() public Boulder()"
  },
  "api/SDG.Unturned.BrokenUpdated.html": {
    "href": "api/SDG.Unturned.BrokenUpdated.html",
    "title": "Delegate BrokenUpdated | Unturned Analyse Doc",
    "keywords": "Delegate BrokenUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void BrokenUpdated(bool newBroken) Parameters newBroken bool Constructors BrokenUpdated(object, IntPtr) public BrokenUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool newBroken, AsyncCallback callback, object @object) Parameters newBroken bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool newBroken) Parameters newBroken bool"
  },
  "api/SDG.Unturned.BrowserConfigData.Link.html": {
    "href": "api/SDG.Unturned.BrowserConfigData.Link.html",
    "title": "Struct BrowserConfigData.Link | Unturned Analyse Doc",
    "keywords": "Struct BrowserConfigData.Link Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct BrowserConfigData.Link Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Message public string Message Field Value string Url public string Url Field Value string"
  },
  "api/SDG.Unturned.BrowserConfigData.html": {
    "href": "api/SDG.Unturned.BrowserConfigData.html",
    "title": "Class BrowserConfigData | Unturned Analyse Doc",
    "keywords": "Class BrowserConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BrowserConfigData Inheritance object BrowserConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BrowserConfigData() public BrowserConfigData() Fields BookmarkHost IP address, DNS name, or a web address (to perform GET request) to advertise. Servers not using Fake IP can specify just a DNS entry. This way if server's IP changes clients can rejoin. For example, if you own the \"example.com\" domain you could add an A record \"myunturnedserver\" pointing at your game server IP and set that record here \"myunturnedserver.example.com\". Servers using Fake IP are assigned random ports at startup, but can implement a web API endpoint to return the IP and port. Clients perform a GET request if this string starts with http:// or https://. The returned text can be an IP address or DNS name with optional query port override. (e.g., \"127.0.0.1:27015\") public string BookmarkHost Field Value string Desc_Full public string Desc_Full Field Value string Desc_Hint public string Desc_Hint Field Value string Desc_Server_List public string Desc_Server_List Field Value string Icon public string Icon Field Value string Links public BrowserConfigData.Link[] Links Field Value Link[] Login_Token https://steamcommunity.com/dev/managegameservers public string Login_Token Field Value string Monetization public EServerMonetizationTag Monetization Field Value EServerMonetizationTag Thumbnail public string Thumbnail Field Value string"
  },
  "api/SDG.Unturned.BuildRequestManager.html": {
    "href": "api/SDG.Unturned.BuildRequestManager.html",
    "title": "Class BuildRequestManager | Unturned Analyse Doc",
    "keywords": "Class BuildRequestManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll When placing structures that snap to grid multiple requests can come in to the server at the same time, and checking overlaps against structures can be problematic, so as a backup we track pending build requests and cancel ones which conflict. public class BuildRequestManager Inheritance object BuildRequestManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BuildRequestManager() public BuildRequestManager() Methods canBuildAt(Vector3, int) Is a location available to build at (i.e. no pending builds)? public static bool canBuildAt(Vector3 location, int ignoreHandle) Parameters location Vector3 ignoreHandle int Returns bool False if there are any outstanding build requests for given location. finishPendingBuild(ref int) Notify that a previously registered build has been completed. public static void finishPendingBuild(ref int handle) Parameters handle int Unique handle. isValidHandle(int) public static bool isValidHandle(int handle) Parameters handle int Returns bool registerPendingBuild(Vector3) Register a location as having something built there soon. public static int registerPendingBuild(Vector3 location) Parameters location Vector3 Returns int Unique handle to later finish the request."
  },
  "api/SDG.Unturned.BulletInfo.html": {
    "href": "api/SDG.Unturned.BulletInfo.html",
    "title": "Class BulletInfo | Unturned Analyse Doc",
    "keywords": "Class BulletInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class BulletInfo Inheritance object BulletInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BulletInfo() public BulletInfo() Fields barrelAsset public ItemBarrelAsset barrelAsset Field Value ItemBarrelAsset dropAmount public byte dropAmount Field Value byte dropID public ushort dropID Field Value ushort dropQuality public byte dropQuality Field Value byte magazineAsset public ItemMagazineAsset magazineAsset Field Value ItemMagazineAsset origin Starting position when the bullet was fired. public Vector3 origin Field Value Vector3 pellet public byte pellet Field Value byte quality public float quality Field Value float steps public byte steps Field Value byte Properties ApproximatePlayerAimDirection Only available on the server. For use by plugins developers who want to analyze deviation between approximate start direction and final hit position using onBulletSpawned and onBulletHit per public issue #4450. Note that origin and direction on server are not necessarily exactly the same as on the client for a variety of reasons, including that bullets on the client can be spawned between simulation frames when the aim direction was different. (Aim direction is updated every drawn frame on the client as opposed to every simulation frame on the server.) Rather than kicking for one particularly large deviation we would recommend tracking stats for each shot's actual deviation vs max theoretical deviation. Remember to account for bullet drop and that aim spread is relative to this direction. (For example, a shotgun may fire ~8 pellets in a cone around this direction.) Note also that in third-person the bullet can turn up to 90 degrees from the aim direction if the camera is up against a wall. public Vector3 ApproximatePlayerAimDirection { get; } Property Value Vector3 position public Vector3 position { get; } Property Value Vector3 velocity public Vector3 velocity { get; } Property Value Vector3 Methods GetDirection() public Vector3 GetDirection() Returns Vector3"
  },
  "api/SDG.Unturned.Bumper.html": {
    "href": "api/SDG.Unturned.Bumper.html",
    "title": "Class Bumper | Unturned Analyse Doc",
    "keywords": "Class Bumper Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Bumper : MonoBehaviour Inheritance object Bumper Constructors Bumper() public Bumper() Fields instakill public bool instakill Field Value bool reverse public bool reverse Field Value bool Methods getInstigatorSteamID() Get SteamID of vehicle's driver, or nil if not driven. protected CSteamID getInstigatorSteamID() Returns CSteamID init(InteractableVehicle) public void init(InteractableVehicle newVehicle) Parameters newVehicle InteractableVehicle takeCrashDamage(float, bool) Crashed into something, if applicable take self damage from collision. protected void takeCrashDamage(float damage, bool canRepair = true) Parameters damage float canRepair bool"
  },
  "api/SDG.Unturned.Bundle.html": {
    "href": "api/SDG.Unturned.Bundle.html",
    "title": "Class Bundle | Unturned Analyse Doc",
    "keywords": "Class Bundle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Bundle Inheritance object Bundle Derived MasterBundle Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Bundle() [Obsolete] public Bundle() Bundle(string) protected Bundle(string name) Parameters name string Bundle(string, bool, string) public Bundle(string path, bool usePath, string nameOverride = null) Parameters path string usePath bool nameOverride string Fields consolidateShaders public bool consolidateShaders Field Value bool convertShadersToStandard public bool convertShadersToStandard Field Value bool Properties asset public AssetBundle asset { get; protected set; } Property Value AssetBundle hasResource [Obsolete] public bool hasResource { get; } Property Value bool name public string name { get; protected set; } Property Value string resource public string resource { get; protected set; } Property Value string willBeUnloadedDuringUse protected virtual bool willBeUnloadedDuringUse { get; } Property Value bool Methods WhereLoadLookedToString(string) public virtual string WhereLoadLookedToString(string name) Parameters name string Returns string fixupMaterialForRenderer(Transform, Renderer, Material) protected void fixupMaterialForRenderer(Transform rootTransform, Renderer renderer, Material sharedMaterial) Parameters rootTransform Transform renderer Renderer sharedMaterial Material load() [Obsolete] public Object[] load() Returns Object[] load(Type) [Obsolete] public Object[] load(Type type) Parameters type Type Returns Object[] loadAll<T>() public T[] loadAll<T>() where T : Object Returns T[] Type Parameters T loadDeferred<T>(string, out IDeferredAsset<T>, LoadedAssetDeferredCallback<T>) Save a reference to an object in the asset bundle, but defer loading it until requested by game code. public virtual void loadDeferred<T>(string name, out IDeferredAsset<T> asset, LoadedAssetDeferredCallback<T> callback = null) where T : Object Parameters name string asset IDeferredAsset<T> callback LoadedAssetDeferredCallback<T> Type Parameters T load<T>(string) public virtual T load<T>(string name) where T : Object Parameters name string Returns T Type Parameters T processLoadedGameObject(GameObject) protected virtual void processLoadedGameObject(GameObject gameObject) Parameters gameObject GameObject processLoadedMaterial(Material) protected virtual void processLoadedMaterial(Material material) Parameters material Material processLoadedObject<T>(T) protected virtual void processLoadedObject<T>(T loadedObject) where T : Object Parameters loadedObject T Type Parameters T unload() public void unload()"
  },
  "api/SDG.Unturned.Bundles.html": {
    "href": "api/SDG.Unturned.Bundles.html",
    "title": "Class Bundles | Unturned Analyse Doc",
    "keywords": "Class Bundles Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Bundles : MonoBehaviour Inheritance object Bundles Constructors Bundles() public Bundles() Properties isInitialized public static bool isInitialized { get; } Property Value bool Methods getBundle(string) public static Bundle getBundle(string path) Parameters path string Returns Bundle getBundle(string, bool) public static Bundle getBundle(string path, bool prependRoot) Parameters path string prependRoot bool Returns Bundle getBundle(string, bool, bool) [Obsolete] public static Bundle getBundle(string path, bool prependRoot, bool loadFromResources) Parameters path string prependRoot bool loadFromResources bool Returns Bundle"
  },
  "api/SDG.Unturned.Buoyancy.html": {
    "href": "api/SDG.Unturned.Buoyancy.html",
    "title": "Class Buoyancy | Unturned Analyse Doc",
    "keywords": "Class Buoyancy Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Buoyancy : MonoBehaviour Inheritance object Buoyancy Constructors Buoyancy() public Buoyancy() Fields density public float density Field Value float overrideSurfaceElevation public float overrideSurfaceElevation Field Value float slicesPerAxis public int slicesPerAxis Field Value int"
  },
  "api/SDG.Unturned.Carepackage.html": {
    "href": "api/SDG.Unturned.Carepackage.html",
    "title": "Class Carepackage | Unturned Analyse Doc",
    "keywords": "Class Carepackage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Carepackage : MonoBehaviour Inheritance object Carepackage Constructors Carepackage() public Carepackage() Fields barricadeAsset Barricade to spawn after landing. public ItemBarricadeAsset barricadeAsset Field Value ItemBarricadeAsset barricadeID Item ID of barricade to spawn after landing. [Obsolete] public ushort barricadeID Field Value ushort id public ushort id Field Value ushort landedEffectGuid public string landedEffectGuid Field Value string"
  },
  "api/SDG.Unturned.CarepackageDestroy.html": {
    "href": "api/SDG.Unturned.CarepackageDestroy.html",
    "title": "Class CarepackageDestroy | Unturned Analyse Doc",
    "keywords": "Class CarepackageDestroy Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CarepackageDestroy : MonoBehaviour Inheritance object CarepackageDestroy Constructors CarepackageDestroy() public CarepackageDestroy()"
  },
  "api/SDG.Unturned.CargoExporter.html": {
    "href": "api/SDG.Unturned.CargoExporter.html",
    "title": "Class CargoExporter | Unturned Analyse Doc",
    "keywords": "Class CargoExporter Namespace SDG.Unturned Assembly Assembly-CSharp.dll Helper for wiki writers to dump game data into a useful format. public static class CargoExporter Inheritance object CargoExporter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Export() public static void Export()"
  },
  "api/SDG.Unturned.CartographyVolume.html": {
    "href": "api/SDG.Unturned.CartographyVolume.html",
    "title": "Class CartographyVolume | Unturned Analyse Doc",
    "keywords": "Class CartographyVolume Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CartographyVolume : LevelVolume<CartographyVolume, CartographyVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<CartographyVolume, CartographyVolumeManager> CartographyVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<CartographyVolume, CartographyVolumeManager>.falloffDistance LevelVolume<CartographyVolume, CartographyVolumeManager>.editorGameObject LevelVolume<CartographyVolume, CartographyVolumeManager>.editorMeshFilter LevelVolume<CartographyVolume, CartographyVolumeManager>.editorMeshRenderer LevelVolume<CartographyVolume, CartographyVolumeManager>.forceShouldAddCollider LevelVolume<CartographyVolume, CartographyVolumeManager>.supportsBoxShape LevelVolume<CartographyVolume, CartographyVolumeManager>.supportsSphereShape LevelVolume<CartographyVolume, CartographyVolumeManager>.supportsFalloff LevelVolume<CartographyVolume, CartographyVolumeManager>.CreateMenu() LevelVolume<CartographyVolume, CartographyVolumeManager>.beginSelection(InteractionData) LevelVolume<CartographyVolume, CartographyVolumeManager>.endSelection(InteractionData) LevelVolume<CartographyVolume, CartographyVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<CartographyVolume, CartographyVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<CartographyVolume, CartographyVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<CartographyVolume, CartographyVolumeManager>.GetBoxSize() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetBoxExtents() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetInnerBoxSize() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetInnerBoxExtents() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetLocalInnerBoxSize() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetSphereRadius() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetLocalSphereRadius() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<CartographyVolume, CartographyVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<CartographyVolume, CartographyVolumeManager>.SetSphereRadius(float) LevelVolume<CartographyVolume, CartographyVolumeManager>.CalculateWorldBounds() LevelVolume<CartographyVolume, CartographyVolumeManager>.CalculateLocalBounds() LevelVolume<CartographyVolume, CartographyVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<CartographyVolume, CartographyVolumeManager>.OnEnable() LevelVolume<CartographyVolume, CartographyVolumeManager>.OnDisable() LevelVolume<CartographyVolume, CartographyVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<CartographyVolume, CartographyVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<CartographyVolume, CartographyVolumeManager>.Awake() LevelVolume<CartographyVolume, CartographyVolumeManager>.Start() LevelVolume<CartographyVolume, CartographyVolumeManager>.OnDestroy() LevelVolume<CartographyVolume, CartographyVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<CartographyVolume, CartographyVolumeManager>.Shape VolumeBase.CreateMenu() DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.readHierarchyItem(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors CartographyVolume() public CartographyVolume() Methods Awake() protected override void Awake() GetSatelliteCaptureTransform(out Vector3, out Quaternion) public void GetSatelliteCaptureTransform(out Vector3 position, out Quaternion rotation) Parameters position Vector3 rotation Quaternion"
  },
  "api/SDG.Unturned.CartographyVolumeManager.html": {
    "href": "api/SDG.Unturned.CartographyVolumeManager.html",
    "title": "Class CartographyVolumeManager | Unturned Analyse Doc",
    "keywords": "Class CartographyVolumeManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CartographyVolumeManager : VolumeManager<CartographyVolume, CartographyVolumeManager> Inheritance object VolumeManagerBase VolumeManager<CartographyVolume, CartographyVolumeManager> CartographyVolumeManager Inherited Members VolumeManager<CartographyVolume, CartographyVolumeManager>.allowInstantiation VolumeManager<CartographyVolume, CartographyVolumeManager>.supportsFalloff VolumeManager<CartographyVolume, CartographyVolumeManager>.allVolumes VolumeManager<CartographyVolume, CartographyVolumeManager>.Get() VolumeManager<CartographyVolume, CartographyVolumeManager>.GetAllVolumes() VolumeManager<CartographyVolume, CartographyVolumeManager>.GetRandomVolumeOrNull() VolumeManager<CartographyVolume, CartographyVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<CartographyVolume, CartographyVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<CartographyVolume, CartographyVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<CartographyVolume, CartographyVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<CartographyVolume, CartographyVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<CartographyVolume, CartographyVolumeManager>.EnumerateAllVolumes() VolumeManager<CartographyVolume, CartographyVolumeManager>.Raycast(Ray, out RaycastHit, out CartographyVolume, float) VolumeManager<CartographyVolume, CartographyVolumeManager>.AddVolume(CartographyVolume) VolumeManager<CartographyVolume, CartographyVolumeManager>.RemoveVolume(CartographyVolume) VolumeManager<CartographyVolume, CartographyVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<CartographyVolume, CartographyVolumeManager>.SetDebugColor(Color) VolumeManager<CartographyVolume, CartographyVolumeManager>.Visibility VolumeManager<CartographyVolume, CartographyVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CartographyVolumeManager() public CartographyVolumeManager() Methods GetMainVolume() public CartographyVolume GetMainVolume() Returns CartographyVolume OnUpdateGizmos(RuntimeGizmos) protected override void OnUpdateGizmos(RuntimeGizmos runtimeGizmos) Parameters runtimeGizmos RuntimeGizmos"
  },
  "api/SDG.Unturned.Character.html": {
    "href": "api/SDG.Unturned.Character.html",
    "title": "Class Character | Unturned Analyse Doc",
    "keywords": "Class Character Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Character Inheritance object Character Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Character() public Character() Character(ushort, ushort, ushort, ushort, ushort, ushort, ushort, ulong, ulong, ulong, ulong, ulong, ulong, ulong, ushort, byte[], ushort, byte[], byte, byte, byte, Color, Color, Color, bool, string, string, CSteamID, EPlayerSkillset) public Character(ushort newShirt, ushort newPants, ushort newHat, ushort newBackpack, ushort newVest, ushort newMask, ushort newGlasses, ulong newPackageShirt, ulong newPackagePants, ulong newPackageHat, ulong newPackageBackpack, ulong newPackageVest, ulong newPackageMask, ulong newPackageGlasses, ushort newPrimaryItem, byte[] newPrimaryState, ushort newSecondaryItem, byte[] newSecondaryState, byte newFace, byte newHair, byte newBeard, Color newSkin, Color newColor, Color newMarkerColor, bool newHand, string newName, string newNick, CSteamID newGroup, EPlayerSkillset newSkillset) Parameters newShirt ushort newPants ushort newHat ushort newBackpack ushort newVest ushort newMask ushort newGlasses ushort newPackageShirt ulong newPackagePants ulong newPackageHat ulong newPackageBackpack ulong newPackageVest ulong newPackageMask ulong newPackageGlasses ulong newPrimaryItem ushort newPrimaryState byte[] newSecondaryItem ushort newSecondaryState byte[] newFace byte newHair byte newBeard byte newSkin Color newColor Color newMarkerColor Color newHand bool newName string newNick string newGroup CSteamID newSkillset EPlayerSkillset Fields backpack public ushort backpack Field Value ushort beard public byte beard Field Value byte color public Color color Field Value Color face public byte face Field Value byte glasses public ushort glasses Field Value ushort group public CSteamID group Field Value CSteamID hair public byte hair Field Value byte hand public bool hand Field Value bool hat public ushort hat Field Value ushort markerColor public Color markerColor Field Value Color mask public ushort mask Field Value ushort name public string name Field Value string nick public string nick Field Value string packageBackpack public ulong packageBackpack Field Value ulong packageGlasses public ulong packageGlasses Field Value ulong packageHat public ulong packageHat Field Value ulong packageMask public ulong packageMask Field Value ulong packagePants public ulong packagePants Field Value ulong packageShirt public ulong packageShirt Field Value ulong packageVest public ulong packageVest Field Value ulong pants public ushort pants Field Value ushort primaryItem public ushort primaryItem Field Value ushort primaryState public byte[] primaryState Field Value byte[] secondaryItem public ushort secondaryItem Field Value ushort secondaryState public byte[] secondaryState Field Value byte[] shirt public ushort shirt Field Value ushort skillset public EPlayerSkillset skillset Field Value EPlayerSkillset skin public Color skin Field Value Color vest public ushort vest Field Value ushort Methods applyHero() public void applyHero()"
  },
  "api/SDG.Unturned.CharacterAnimator.html": {
    "href": "api/SDG.Unturned.CharacterAnimator.html",
    "title": "Class CharacterAnimator | Unturned Analyse Doc",
    "keywords": "Class CharacterAnimator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CharacterAnimator : MonoBehaviour Inheritance object CharacterAnimator Derived HumanAnimator Constructors CharacterAnimator() public CharacterAnimator() Fields BLEND public static readonly float BLEND Field Value float anim protected Animation anim Field Value Animation clip protected string clip Field Value string leftShoulder protected Transform leftShoulder Field Value Transform rightShoulder protected Transform rightShoulder Field Value Transform skull protected Transform skull Field Value Transform spine protected Transform spine Field Value Transform spineHook protected Transform spineHook Field Value Transform Methods AddEquippedItemAnimation(AnimationClip, Transform) public void AddEquippedItemAnimation(AnimationClip clip, Transform itemModelTransform) Parameters clip AnimationClip itemModelTransform Transform GetAnimationLength(string, bool) public float GetAnimationLength(string name, bool scaled = true) Parameters name string scaled bool If true, include current animation speed modifier. Returns float checkExists(string) public bool checkExists(string name) Parameters name string Returns bool getAnimationLength(string) public float getAnimationLength(string name) Parameters name string Returns float getAnimationPlaying() public bool getAnimationPlaying() Returns bool init() protected void init() mixAnimation(string) public void mixAnimation(string name) Parameters name string mixAnimation(string, bool, bool) public void mixAnimation(string name, bool mixLeftShoulder, bool mixRightShoulder) Parameters name string mixLeftShoulder bool mixRightShoulder bool mixAnimation(string, bool, bool, bool) public void mixAnimation(string name, bool mixLeftShoulder, bool mixRightShoulder, bool mixSkull) Parameters name string mixLeftShoulder bool mixRightShoulder bool mixSkull bool play(string, bool) public bool play(string name, bool smooth) Parameters name string smooth bool Returns bool True if an animation was found and started playing. removeAnimation(AnimationClip) public void removeAnimation(AnimationClip clip) Parameters clip AnimationClip sample() public void sample() setAnimationSpeed(string, float) public void setAnimationSpeed(string name, float speed) Parameters name string speed float state(string) public void state(string name) Parameters name string stop(string) public void stop(string name) Parameters name string"
  },
  "api/SDG.Unturned.CharacterUpdated.html": {
    "href": "api/SDG.Unturned.CharacterUpdated.html",
    "title": "Delegate CharacterUpdated | Unturned Analyse Doc",
    "keywords": "Delegate CharacterUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void CharacterUpdated(byte index, Character character) Parameters index byte character Character Constructors CharacterUpdated(object, IntPtr) public CharacterUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, Character, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte index, Character character, AsyncCallback callback, object @object) Parameters index byte character Character callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, Character) public virtual void Invoke(byte index, Character character) Parameters index byte character Character"
  },
  "api/SDG.Unturned.Characters.html": {
    "href": "api/SDG.Unturned.Characters.html",
    "title": "Class Characters | Unturned Analyse Doc",
    "keywords": "Class Characters Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Characters : MonoBehaviour Inheritance object Characters Constructors Characters() public Characters() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte characterYaw public static float characterYaw Field Value float clothes public static HumanClothes clothes Field Value HumanClothes hasPlayed public static bool hasPlayed Field Value bool onCharacterUpdated public static CharacterUpdated onCharacterUpdated Field Value CharacterUpdated Properties active public static Character active { get; } Property Value Character list public static Character[] list { get; } Property Value Character[] packageSkins public static List<ulong> packageSkins { get; } Property Value List<ulong> selected public static byte selected { get; set; } Property Value byte Methods RefreshPreviewCharacterModel() public static void RefreshPreviewCharacterModel() ToggleEquipItemByInstanceId(ulong) public static void ToggleEquipItemByInstanceId(ulong itemInstanceId) Parameters itemInstanceId ulong getPackageForItemID(ushort, out ulong) public static bool getPackageForItemID(ushort itemID, out ulong itemInstanceId) Parameters itemID ushort itemInstanceId ulong Returns bool group(CSteamID) public static void group(CSteamID group) Parameters group CSteamID growBeard(byte) public static void growBeard(byte beard) Parameters beard byte growFace(byte) public static void growFace(byte face) Parameters face byte growHair(byte) public static void growHair(byte hair) Parameters hair byte hand(bool) public static void hand(bool state) Parameters state bool isCosmeticEquipped(ulong) public static bool isCosmeticEquipped(ulong instance) Parameters instance ulong Returns bool isEquipped(ulong) Is cosmetic or skin equipped? public static bool isEquipped(ulong instanceID) Parameters instanceID ulong Returns bool isSkinEquipped(ulong) public static bool isSkinEquipped(ulong instance) Parameters instance ulong Returns bool load() public static void load() paintColor(Color) public static void paintColor(Color color) Parameters color Color paintMarkerColor(Color) public static void paintMarkerColor(Color color) Parameters color Color paintSkin(Color) public static void paintSkin(Color color) Parameters color Color rename(string) public static void rename(string name) Parameters name string renick(string) public static void renick(string nick) Parameters nick string save() public static void save() skillify(EPlayerSkillset) public static void skillify(EPlayerSkillset skillset) Parameters skillset EPlayerSkillset ungroup() public static void ungroup()"
  },
  "api/SDG.Unturned.ChatManager.ClientUnityEventPermissionsHandler.html": {
    "href": "api/SDG.Unturned.ChatManager.ClientUnityEventPermissionsHandler.html",
    "title": "Delegate ChatManager.ClientUnityEventPermissionsHandler | Unturned Analyse Doc",
    "keywords": "Delegate ChatManager.ClientUnityEventPermissionsHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ChatManager.ClientUnityEventPermissionsHandler(SteamPlayer player, string command, ref bool shouldExecuteCommand, ref bool shouldList) Parameters player SteamPlayer command string shouldExecuteCommand bool shouldList bool Constructors ClientUnityEventPermissionsHandler(object, IntPtr) public ClientUnityEventPermissionsHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, string, ref bool, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer player, string command, ref bool shouldExecuteCommand, ref bool shouldList, AsyncCallback callback, object @object) Parameters player SteamPlayer command string shouldExecuteCommand bool shouldList bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldExecuteCommand, ref bool shouldList, IAsyncResult result) Parameters shouldExecuteCommand bool shouldList bool result IAsyncResult Invoke(SteamPlayer, string, ref bool, ref bool) public virtual void Invoke(SteamPlayer player, string command, ref bool shouldExecuteCommand, ref bool shouldList) Parameters player SteamPlayer command string shouldExecuteCommand bool shouldList bool"
  },
  "api/SDG.Unturned.ChatManager.html": {
    "href": "api/SDG.Unturned.ChatManager.html",
    "title": "Class ChatManager | Unturned Analyse Doc",
    "keywords": "Class ChatManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ChatManager : SteamCaller Inheritance object SteamCaller ChatManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors ChatManager() public ChatManager() Fields MAX_MESSAGE_LENGTH public static readonly int MAX_MESSAGE_LENGTH Field Value int chatrate public static float chatrate Field Value float onChatMessageReceived Called on the client after a new message is inserted to the front of the list. public static ChatMessageReceivedHandler onChatMessageReceived Field Value ChatMessageReceivedHandler onChatted public static Chatted onChatted Field Value Chatted onCheckPermissions public static CheckPermissions onCheckPermissions Field Value CheckPermissions onServerFormattingMessage Called on the server when formatting a player's message before sending to anyone. Allows structuring the message and where the player's name is, for example: '[CustomPluginRoleThing] %SPEAKER% - OriginalMessageText' public static ServerFormattingChatMessageHandler onServerFormattingMessage Field Value ServerFormattingChatMessageHandler onServerSendingMessage Called on the server when preparing a message to be sent to a player. Allows controlling how %SPEAKER% is formatted for the receiving player. public static ServerSendingChatMessageHandler onServerSendingMessage Field Value ServerSendingChatMessageHandler onVotingMessage public static VotingMessage onVotingMessage Field Value VotingMessage onVotingStart public static VotingStart onVotingStart Field Value VotingStart onVotingStop public static VotingStop onVotingStop Field Value VotingStop onVotingUpdate public static VotingUpdate onVotingUpdate Field Value VotingUpdate voteAllowed public static bool voteAllowed Field Value bool voteDuration public static float voteDuration Field Value float voteFailCooldown public static float voteFailCooldown Field Value float votePassCooldown public static float votePassCooldown Field Value float votePercentage public static float votePercentage Field Value float votePlayers public static byte votePlayers Field Value byte welcomeColor public static Color welcomeColor Field Value Color welcomeText public static string welcomeText Field Value string Properties instance Exposed for Rocket transition to modules backwards compatibility. public static ChatManager instance { get; } Property Value ChatManager receivedChatHistory public static List<ReceivedChatMessage> receivedChatHistory { get; } Property Value List<ReceivedChatMessage> Methods ReceiveCallVoteRequest(in ServerInvocationContext, CSteamID) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askCallVote\")] public static void ReceiveCallVoteRequest(in ServerInvocationContext context, CSteamID target) Parameters context ServerInvocationContext target CSteamID ReceiveChatEntry(CSteamID, string, EChatMode, Color, bool, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellChat\")] public static void ReceiveChatEntry(CSteamID owner, string iconURL, EChatMode mode, Color color, bool rich, string text) Parameters owner CSteamID iconURL string mode EChatMode color Color rich bool text string ReceiveChatRequest(in ServerInvocationContext, byte, string) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 15, legacyName = \"askChat\")] public static void ReceiveChatRequest(in ServerInvocationContext context, byte flags, string text) Parameters context ServerInvocationContext flags byte text string ReceiveSubmitVoteRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askVote\")] public static void ReceiveSubmitVoteRequest(in ServerInvocationContext context, bool vote) Parameters context ServerInvocationContext vote bool ReceiveVoteMessage(EVotingMessage) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVoteMessage\")] public static void ReceiveVoteMessage(EVotingMessage message) Parameters message EVotingMessage ReceiveVoteStart(CSteamID, CSteamID, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVoteStart\")] public static void ReceiveVoteStart(CSteamID origin, CSteamID target, byte votesNeeded) Parameters origin CSteamID target CSteamID votesNeeded byte ReceiveVoteStop(EVotingMessage) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVoteStop\")] public static void ReceiveVoteStop(EVotingMessage message) Parameters message EVotingMessage ReceiveVoteUpdate(byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVoteMessage\")] public static void ReceiveVoteUpdate(byte voteYes, byte voteNo) Parameters voteYes byte voteNo byte askCallVote(CSteamID, CSteamID) [Obsolete] public void askCallVote(CSteamID steamID, CSteamID target) Parameters steamID CSteamID target CSteamID askChat(CSteamID, byte, string) [Obsolete] public void askChat(CSteamID steamID, byte flags, string text) Parameters steamID CSteamID flags byte text string askVote(CSteamID, bool) [Obsolete] public void askVote(CSteamID steamID, bool vote) Parameters steamID CSteamID vote bool clientSendMessage_UnityEvent(EChatMode, string, ClientTextChatMessenger) Allows Unity events to send text chat messages from the client, for example to execute commands. Messenger context is logged to help track down abusive assets. public static void clientSendMessage_UnityEvent(EChatMode mode, string text, ClientTextChatMessenger messenger) Parameters mode EChatMode text string messenger ClientTextChatMessenger getRecentlySentMessage(int) public static string getRecentlySentMessage(int index) Parameters index int Returns string process(SteamPlayer, string) public static bool process(SteamPlayer player, string cmd) Parameters player SteamPlayer cmd string Returns bool process(SteamPlayer, string, bool) public static bool process(SteamPlayer player, string cmd, bool fromUnityEvent) Parameters player SteamPlayer cmd string fromUnityEvent bool Returns bool receiveChatMessage(CSteamID, string, EChatMode, Color, bool, string) Add a newly received chat message to the front of the list, and remove an old message if necessary. public static void receiveChatMessage(CSteamID speakerSteamID, string iconURL, EChatMode mode, Color color, bool isRich, string text) Parameters speakerSteamID CSteamID iconURL string mode EChatMode color Color isRich bool text string say(CSteamID, string, Color, EChatMode, bool) Server send message to specific player. Used in vanilla by help command to tell player about command options. Should not be removed because plugins may depend on it. public static void say(CSteamID target, string text, Color color, EChatMode mode, bool isRich = false) Parameters target CSteamID text string color Color mode EChatMode isRich bool say(CSteamID, string, Color, bool) Server send message to specific player. Used in vanilla for the welcome message. Should not be removed because plugins may depend on it. public static void say(CSteamID target, string text, Color color, bool isRich = false) Parameters target CSteamID text string color Color isRich bool say(string, Color, bool) Server send message to all players. Used in vanilla by some alerts and broadcast command. Should not be removed because plugins may depend on it. public static void say(string text, Color color, bool isRich = false) Parameters text string color Color isRich bool sendCallVote(CSteamID) public static void sendCallVote(CSteamID target) Parameters target CSteamID sendChat(EChatMode, string) Send a request to chat from the client to the server. public static void sendChat(EChatMode mode, string text) Parameters mode EChatMode text string sendVote(bool) public static void sendVote(bool vote) Parameters vote bool serverSendMessage(string, Color, SteamPlayer, SteamPlayer, EChatMode, string, bool) Serverside send a chat message to all players, or a specific player. public static void serverSendMessage(string text, Color color, SteamPlayer fromPlayer = null, SteamPlayer toPlayer = null, EChatMode mode = EChatMode.SAY, string iconURL = null, bool useRichTextFormatting = false) Parameters text string Contents to display. color Color Default text color unless rich formatting overrides it. fromPlayer SteamPlayer Player who sent the message (used for avatar), or null if send by a plugin. toPlayer SteamPlayer Send message to only this player, or all players if null. mode EChatMode Mostly deprecated, but global/local/group may be displayed. iconURL string URL to a 32x32 .png to show rather than a player avatar, or null/empty. useRichTextFormatting bool Enable rich tags e.g., bold, italics in the message contents. serverSendMessage_UnityEvent(string, Color, string, bool, ServerTextChatMessenger) Allows Unity events to broadcast text chat messages from the server. Messenger context is logged to help track down abusive assets. public static void serverSendMessage_UnityEvent(string text, Color color, string iconURL, bool useRichTextFormatting, ServerTextChatMessenger messenger) Parameters text string color Color iconURL string useRichTextFormatting bool messenger ServerTextChatMessenger tellChat(CSteamID, CSteamID, string, byte, Color, bool, string) [Obsolete] public void tellChat(CSteamID steamID, CSteamID owner, string iconURL, byte mode, Color color, bool rich, string text) Parameters steamID CSteamID owner CSteamID iconURL string mode byte color Color rich bool text string tellVoteMessage(CSteamID, byte) [Obsolete] public void tellVoteMessage(CSteamID steamID, byte message) Parameters steamID CSteamID message byte tellVoteStart(CSteamID, CSteamID, CSteamID, byte) [Obsolete] public void tellVoteStart(CSteamID steamID, CSteamID origin, CSteamID target, byte votesNeeded) Parameters steamID CSteamID origin CSteamID target CSteamID votesNeeded byte tellVoteStop(CSteamID, byte) [Obsolete] public void tellVoteStop(CSteamID steamID, byte message) Parameters steamID CSteamID message byte tellVoteUpdate(CSteamID, byte, byte) [Obsolete] public void tellVoteUpdate(CSteamID steamID, byte voteYes, byte voteNo) Parameters steamID CSteamID voteYes byte voteNo byte Events onCheckUnityEventPermissions public static event ChatManager.ClientUnityEventPermissionsHandler onCheckUnityEventPermissions Event Type ChatManager.ClientUnityEventPermissionsHandler"
  },
  "api/SDG.Unturned.ChatManager_NetMethods.html": {
    "href": "api/SDG.Unturned.ChatManager_NetMethods.html",
    "title": "Class ChatManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class ChatManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(ChatManager))] public static class ChatManager_NetMethods Inheritance object ChatManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveCallVoteRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveCallVoteRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveCallVoteRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveCallVoteRequest_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveCallVoteRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveCallVoteRequest_Write(NetPakWriter writer, CSteamID target) Parameters writer NetPakWriter target CSteamID ReceiveChatEntry_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChatEntry\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChatEntry_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveChatEntry_Write(NetPakWriter, CSteamID, string, EChatMode, Color, bool, string) [NetInvokableGeneratedMethod(\"ReceiveChatEntry\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChatEntry_Write(NetPakWriter writer, CSteamID owner, string iconURL, EChatMode mode, Color color, bool rich, string text) Parameters writer NetPakWriter owner CSteamID iconURL string mode EChatMode color Color rich bool text string ReceiveChatRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChatRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChatRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveChatRequest_Write(NetPakWriter, byte, string) [NetInvokableGeneratedMethod(\"ReceiveChatRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChatRequest_Write(NetPakWriter writer, byte flags, string text) Parameters writer NetPakWriter flags byte text string ReceiveSubmitVoteRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSubmitVoteRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSubmitVoteRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSubmitVoteRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveSubmitVoteRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSubmitVoteRequest_Write(NetPakWriter writer, bool vote) Parameters writer NetPakWriter vote bool ReceiveVoteMessage_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVoteMessage\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVoteMessage_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVoteMessage_Write(NetPakWriter, EVotingMessage) [NetInvokableGeneratedMethod(\"ReceiveVoteMessage\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVoteMessage_Write(NetPakWriter writer, EVotingMessage message) Parameters writer NetPakWriter message EVotingMessage ReceiveVoteStart_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVoteStart\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVoteStart_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVoteStart_Write(NetPakWriter, CSteamID, CSteamID, byte) [NetInvokableGeneratedMethod(\"ReceiveVoteStart\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVoteStart_Write(NetPakWriter writer, CSteamID origin, CSteamID target, byte votesNeeded) Parameters writer NetPakWriter origin CSteamID target CSteamID votesNeeded byte ReceiveVoteStop_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVoteStop\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVoteStop_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVoteStop_Write(NetPakWriter, EVotingMessage) [NetInvokableGeneratedMethod(\"ReceiveVoteStop\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVoteStop_Write(NetPakWriter writer, EVotingMessage message) Parameters writer NetPakWriter message EVotingMessage ReceiveVoteUpdate_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVoteUpdate\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVoteUpdate_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVoteUpdate_Write(NetPakWriter, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveVoteUpdate\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVoteUpdate_Write(NetPakWriter writer, byte voteYes, byte voteNo) Parameters writer NetPakWriter voteYes byte voteNo byte"
  },
  "api/SDG.Unturned.ChatMessageReceivedHandler.html": {
    "href": "api/SDG.Unturned.ChatMessageReceivedHandler.html",
    "title": "Delegate ChatMessageReceivedHandler | Unturned Analyse Doc",
    "keywords": "Delegate ChatMessageReceivedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ChatMessageReceivedHandler() Constructors ChatMessageReceivedHandler(object, IntPtr) public ChatMessageReceivedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.ChatPreferenceData.html": {
    "href": "api/SDG.Unturned.ChatPreferenceData.html",
    "title": "Class ChatPreferenceData | Unturned Analyse Doc",
    "keywords": "Class ChatPreferenceData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ChatPreferenceData Inheritance object ChatPreferenceData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ChatPreferenceData() public ChatPreferenceData() Fields Fade_Delay public float Fade_Delay Field Value float History_Length public int History_Length Field Value int Preview_Length public int Preview_Length Field Value int"
  },
  "api/SDG.Unturned.Chatted.html": {
    "href": "api/SDG.Unturned.Chatted.html",
    "title": "Delegate Chatted | Unturned Analyse Doc",
    "keywords": "Delegate Chatted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Chatted(SteamPlayer player, EChatMode mode, ref Color chatted, ref bool isRich, string text, ref bool isVisible) Parameters player SteamPlayer mode EChatMode chatted Color isRich bool text string isVisible bool Constructors Chatted(object, IntPtr) public Chatted(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, EChatMode, ref Color, ref bool, string, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer player, EChatMode mode, ref Color chatted, ref bool isRich, string text, ref bool isVisible, AsyncCallback callback, object @object) Parameters player SteamPlayer mode EChatMode chatted Color isRich bool text string isVisible bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Color, ref bool, ref bool, IAsyncResult) public virtual void EndInvoke(ref Color chatted, ref bool isRich, ref bool isVisible, IAsyncResult result) Parameters chatted Color isRich bool isVisible bool result IAsyncResult Invoke(SteamPlayer, EChatMode, ref Color, ref bool, string, ref bool) public virtual void Invoke(SteamPlayer player, EChatMode mode, ref Color chatted, ref bool isRich, string text, ref bool isVisible) Parameters player SteamPlayer mode EChatMode chatted Color isRich bool text string isVisible bool"
  },
  "api/SDG.Unturned.CheckPermissions.html": {
    "href": "api/SDG.Unturned.CheckPermissions.html",
    "title": "Delegate CheckPermissions | Unturned Analyse Doc",
    "keywords": "Delegate CheckPermissions Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void CheckPermissions(SteamPlayer player, string text, ref bool shouldExecuteCommand, ref bool shouldList) Parameters player SteamPlayer text string shouldExecuteCommand bool shouldList bool Constructors CheckPermissions(object, IntPtr) public CheckPermissions(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, string, ref bool, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer player, string text, ref bool shouldExecuteCommand, ref bool shouldList, AsyncCallback callback, object @object) Parameters player SteamPlayer text string shouldExecuteCommand bool shouldList bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldExecuteCommand, ref bool shouldList, IAsyncResult result) Parameters shouldExecuteCommand bool shouldList bool result IAsyncResult Invoke(SteamPlayer, string, ref bool, ref bool) public virtual void Invoke(SteamPlayer player, string text, ref bool shouldExecuteCommand, ref bool shouldList) Parameters player SteamPlayer text string shouldExecuteCommand bool shouldList bool"
  },
  "api/SDG.Unturned.ClaimBase.html": {
    "href": "api/SDG.Unturned.ClaimBase.html",
    "title": "Class ClaimBase | Unturned Analyse Doc",
    "keywords": "Class ClaimBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ClaimBase Inheritance object ClaimBase Derived ClaimBubble ClaimPlant Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClaimBase(ulong, ulong) public ClaimBase(ulong newOwner, ulong newGroup) Parameters newOwner ulong newGroup ulong Fields group public ulong group Field Value ulong owner public ulong owner Field Value ulong Properties hasOwnership public bool hasOwnership { get; } Property Value bool"
  },
  "api/SDG.Unturned.ClaimBubble.html": {
    "href": "api/SDG.Unturned.ClaimBubble.html",
    "title": "Class ClaimBubble | Unturned Analyse Doc",
    "keywords": "Class ClaimBubble Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ClaimBubble : ClaimBase Inheritance object ClaimBase ClaimBubble Inherited Members ClaimBase.owner ClaimBase.group ClaimBase.hasOwnership object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClaimBubble(Vector3, float, ulong, ulong) public ClaimBubble(Vector3 newOrigin, float newSqrRadius, ulong newOwner, ulong newGroup) Parameters newOrigin Vector3 newSqrRadius float newOwner ulong newGroup ulong Fields origin public Vector3 origin Field Value Vector3 sqrRadius public float sqrRadius Field Value float"
  },
  "api/SDG.Unturned.ClaimManager.html": {
    "href": "api/SDG.Unturned.ClaimManager.html",
    "title": "Class ClaimManager | Unturned Analyse Doc",
    "keywords": "Class ClaimManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ClaimManager : MonoBehaviour Inheritance object ClaimManager Constructors ClaimManager() public ClaimManager() Methods canBuildOnVehicle(Transform, CSteamID, CSteamID) public static bool canBuildOnVehicle(Transform vehicle, CSteamID owner, CSteamID group) Parameters vehicle Transform owner CSteamID group CSteamID Returns bool checkCanBuild(Vector3, CSteamID, CSteamID, bool) public static bool checkCanBuild(Vector3 point, CSteamID owner, CSteamID group, bool isClaim) Parameters point Vector3 owner CSteamID group CSteamID isClaim bool Returns bool deregisterBubble(ClaimBubble) public static void deregisterBubble(ClaimBubble bubble) Parameters bubble ClaimBubble deregisterPlant(ClaimPlant) public static void deregisterPlant(ClaimPlant plant) Parameters plant ClaimPlant registerBubble(Vector3, float, ulong, ulong) public static ClaimBubble registerBubble(Vector3 origin, float radius, ulong owner, ulong group) Parameters origin Vector3 radius float owner ulong group ulong Returns ClaimBubble registerPlant(Transform, ulong, ulong) public static ClaimPlant registerPlant(Transform parent, ulong owner, ulong group) Parameters parent Transform owner ulong group ulong Returns ClaimPlant"
  },
  "api/SDG.Unturned.ClaimPlant.html": {
    "href": "api/SDG.Unturned.ClaimPlant.html",
    "title": "Class ClaimPlant | Unturned Analyse Doc",
    "keywords": "Class ClaimPlant Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ClaimPlant : ClaimBase Inheritance object ClaimBase ClaimPlant Inherited Members ClaimBase.owner ClaimBase.group ClaimBase.hasOwnership object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClaimPlant(Transform, ulong, ulong) public ClaimPlant(Transform newParent, ulong newOwner, ulong newGroup) Parameters newParent Transform newOwner ulong newGroup ulong Fields parent public Transform parent Field Value Transform"
  },
  "api/SDG.Unturned.ClickedCharacter.html": {
    "href": "api/SDG.Unturned.ClickedCharacter.html",
    "title": "Delegate ClickedCharacter | Unturned Analyse Doc",
    "keywords": "Delegate ClickedCharacter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClickedCharacter(SleekCharacter character, byte index) Parameters character SleekCharacter index byte Constructors ClickedCharacter(object, IntPtr) public ClickedCharacter(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekCharacter, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekCharacter character, byte index, AsyncCallback callback, object @object) Parameters character SleekCharacter index byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekCharacter, byte) public virtual void Invoke(SleekCharacter character, byte index) Parameters character SleekCharacter index byte"
  },
  "api/SDG.Unturned.ClickedInventory.html": {
    "href": "api/SDG.Unturned.ClickedInventory.html",
    "title": "Delegate ClickedInventory | Unturned Analyse Doc",
    "keywords": "Delegate ClickedInventory Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClickedInventory(SleekInventory inventory) Parameters inventory SleekInventory Constructors ClickedInventory(object, IntPtr) public ClickedInventory(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekInventory, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekInventory inventory, AsyncCallback callback, object @object) Parameters inventory SleekInventory callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekInventory) public virtual void Invoke(SleekInventory inventory) Parameters inventory SleekInventory"
  },
  "api/SDG.Unturned.ClickedItem.html": {
    "href": "api/SDG.Unturned.ClickedItem.html",
    "title": "Delegate ClickedItem | Unturned Analyse Doc",
    "keywords": "Delegate ClickedItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClickedItem(SleekItem item) Parameters item SleekItem Constructors ClickedItem(object, IntPtr) public ClickedItem(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekItem, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekItem item, AsyncCallback callback, object @object) Parameters item SleekItem callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekItem) public virtual void Invoke(SleekItem item) Parameters item SleekItem"
  },
  "api/SDG.Unturned.ClickedJar.html": {
    "href": "api/SDG.Unturned.ClickedJar.html",
    "title": "Delegate ClickedJar | Unturned Analyse Doc",
    "keywords": "Delegate ClickedJar Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClickedJar(SleekJars jars, int index) Parameters jars SleekJars index int Constructors ClickedJar(object, IntPtr) public ClickedJar(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekJars, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekJars jars, int index, AsyncCallback callback, object @object) Parameters jars SleekJars index int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekJars, int) public virtual void Invoke(SleekJars jars, int index) Parameters jars SleekJars index int"
  },
  "api/SDG.Unturned.ClickedLevel.html": {
    "href": "api/SDG.Unturned.ClickedLevel.html",
    "title": "Delegate ClickedLevel | Unturned Analyse Doc",
    "keywords": "Delegate ClickedLevel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClickedLevel(SleekLevel level, byte index) Parameters level SleekLevel index byte Constructors ClickedLevel(object, IntPtr) public ClickedLevel(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekLevel, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekLevel level, byte index, AsyncCallback callback, object @object) Parameters level SleekLevel index byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekLevel, byte) public virtual void Invoke(SleekLevel level, byte index) Parameters level SleekLevel index byte"
  },
  "api/SDG.Unturned.ClickedServer.html": {
    "href": "api/SDG.Unturned.ClickedServer.html",
    "title": "Delegate ClickedServer | Unturned Analyse Doc",
    "keywords": "Delegate ClickedServer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClickedServer(SleekServer server, SteamServerAdvertisement info) Parameters server SleekServer info SteamServerAdvertisement Constructors ClickedServer(object, IntPtr) public ClickedServer(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekServer, SteamServerAdvertisement, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekServer server, SteamServerAdvertisement info, AsyncCallback callback, object @object) Parameters server SleekServer info SteamServerAdvertisement callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekServer, SteamServerAdvertisement) public virtual void Invoke(SleekServer server, SteamServerAdvertisement info) Parameters server SleekServer info SteamServerAdvertisement"
  },
  "api/SDG.Unturned.ClientInstanceMethod-1.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-1.html",
    "title": "Class ClientInstanceMethod<T> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T> : ClientInstanceMethodBase Type Parameters T Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T> Invoke(NetId, ENetReliability, ITransportConnection, T) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T arg) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg T Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T arg) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg T Invoke(NetId, ENetReliability, List<ITransportConnection>, T) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T arg) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg T InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T arg) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg T InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T arg) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg T"
  },
  "api/SDG.Unturned.ClientInstanceMethod-10.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-10.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10"
  },
  "api/SDG.Unturned.ClientInstanceMethod-11.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-11.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11"
  },
  "api/SDG.Unturned.ClientInstanceMethod-12.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-12.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12"
  },
  "api/SDG.Unturned.ClientInstanceMethod-2.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-2.html",
    "title": "Class ClientInstanceMethod<T1, T2> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2> : ClientInstanceMethodBase Type Parameters T1 T2 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ClientInstanceMethod-3.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-3.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3> : ClientInstanceMethodBase Type Parameters T1 T2 T3 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ClientInstanceMethod-4.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-4.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ClientInstanceMethod-5.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-5.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ClientInstanceMethod-6.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-6.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5, T6> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5, T6> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5, T6> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5, T6> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ClientInstanceMethod-7.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-7.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ClientInstanceMethod-8.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-8.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ClientInstanceMethod-9.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod-9.html",
    "title": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> : ClientInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Invoke(NetId, ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Invoke(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9"
  },
  "api/SDG.Unturned.ClientInstanceMethod.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethod.html",
    "title": "Class ClientInstanceMethod | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethod Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientInstanceMethod : ClientInstanceMethodBase Inheritance object ClientMethodHandle ClientInstanceMethodBase ClientInstanceMethod Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ClientInstanceMethod Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientInstanceMethod Invoke(NetId, ENetReliability, ITransportConnection) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection Invoke(NetId, ENetReliability, ITransportConnection, Action<NetPakWriter>) public void Invoke(NetId netId, ENetReliability reliability, ITransportConnection transportConnection, Action<NetPakWriter> callback) Parameters netId NetId reliability ENetReliability transportConnection ITransportConnection callback Action<NetPakWriter> Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> Invoke(NetId, ENetReliability, IEnumerable<ITransportConnection>, Action<NetPakWriter>) [Obsolete(\"Replaced by List overload\")] public void Invoke(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> callback Action<NetPakWriter> Invoke(NetId, ENetReliability, List<ITransportConnection>) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> Invoke(NetId, ENetReliability, List<ITransportConnection>, Action<NetPakWriter>) public void Invoke(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> callback Action<NetPakWriter> InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> InvokeAndLoopback(NetId, ENetReliability, IEnumerable<ITransportConnection>, Action<NetPakWriter>) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(NetId netId, ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters netId NetId reliability ENetReliability transportConnections IEnumerable<ITransportConnection> callback Action<NetPakWriter> InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> InvokeAndLoopback(NetId, ENetReliability, List<ITransportConnection>, Action<NetPakWriter>) public void InvokeAndLoopback(NetId netId, ENetReliability reliability, List<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters netId NetId reliability ENetReliability transportConnections List<ITransportConnection> callback Action<NetPakWriter>"
  },
  "api/SDG.Unturned.ClientInstanceMethodBase.html": {
    "href": "api/SDG.Unturned.ClientInstanceMethodBase.html",
    "title": "Class ClientInstanceMethodBase | Unturned Analyse Doc",
    "keywords": "Class ClientInstanceMethodBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class ClientInstanceMethodBase : ClientMethodHandle Inheritance object ClientMethodHandle ClientInstanceMethodBase Derived ClientInstanceMethod ClientInstanceMethod<T> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ClientInstanceMethod<T1, T2> ClientInstanceMethod<T1, T2, T3> ClientInstanceMethod<T1, T2, T3, T4> ClientInstanceMethod<T1, T2, T3, T4, T5> ClientInstanceMethod<T1, T2, T3, T4, T5, T6> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members ClientMethodHandle.clientMethodInfo ClientMethodHandle.ToString() ClientMethodHandle.GetInternal<THandle, TWriteDelegate>(Type, string, Func<ClientMethodInfo, TWriteDelegate, THandle>) ClientMethodHandle.GetWriterWithStaticHeader() ClientMethodHandle.SendAndLoopbackIfLocal(ENetReliability, ITransportConnection, NetPakWriter) ClientMethodHandle.SendAndLoopbackIfAnyAreLocal(ENetReliability, List<ITransportConnection>, NetPakWriter) ClientMethodHandle.SendAndLoopback(ENetReliability, List<ITransportConnection>, NetPakWriter) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClientInstanceMethodBase(ClientMethodInfo) protected ClientInstanceMethodBase(ClientMethodInfo clientMethodInfo) Parameters clientMethodInfo ClientMethodInfo Methods GetWriterWithInstanceHeader(NetId) protected NetPakWriter GetWriterWithInstanceHeader(NetId netId) Parameters netId NetId Returns NetPakWriter"
  },
  "api/SDG.Unturned.ClientInvocationContext.EOrigin.html": {
    "href": "api/SDG.Unturned.ClientInvocationContext.EOrigin.html",
    "title": "Enum ClientInvocationContext.EOrigin | Unturned Analyse Doc",
    "keywords": "Enum ClientInvocationContext.EOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ClientInvocationContext.EOrigin Fields Deferred = 2 Loopback = 1 Remote = 0"
  },
  "api/SDG.Unturned.ClientInvocationContext.html": {
    "href": "api/SDG.Unturned.ClientInvocationContext.html",
    "title": "Struct ClientInvocationContext | Unturned Analyse Doc",
    "keywords": "Struct ClientInvocationContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll Optional parameter for error logging. public readonly struct ClientInvocationContext Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields origin public readonly ClientInvocationContext.EOrigin origin Field Value ClientInvocationContext.EOrigin reader public readonly NetPakReader reader Field Value NetPakReader Methods IndexOutOfRange(string, int, int) [Conditional(\"UNITY_EDITOR\")] [Conditional(\"DEVELOPMENT_BUILD\")] [Conditional(\"DEBUG_NETINVOKABLES\")] public void IndexOutOfRange(string parameterName, int index, int max) Parameters parameterName string index int max int LogWarning(string) [Conditional(\"UNITY_EDITOR\")] [Conditional(\"DEVELOPMENT_BUILD\")] [Conditional(\"DEBUG_NETINVOKABLES\")] public void LogWarning(string message) Parameters message string ReadParameterFailed(string) [Conditional(\"UNITY_EDITOR\")] [Conditional(\"DEVELOPMENT_BUILD\")] [Conditional(\"DEBUG_NETINVOKABLES\")] public void ReadParameterFailed(string parameterName) Parameters parameterName string"
  },
  "api/SDG.Unturned.ClientMethodHandle.html": {
    "href": "api/SDG.Unturned.ClientMethodHandle.html",
    "title": "Class ClientMethodHandle | Unturned Analyse Doc",
    "keywords": "Class ClientMethodHandle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class ClientMethodHandle Inheritance object ClientMethodHandle Derived ClientInstanceMethodBase ClientStaticMethod ClientStaticMethod<T> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ClientStaticMethod<T1, T2> ClientStaticMethod<T1, T2, T3> ClientStaticMethod<T1, T2, T3, T4> ClientStaticMethod<T1, T2, T3, T4, T5> ClientStaticMethod<T1, T2, T3, T4, T5, T6> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClientMethodHandle(ClientMethodInfo) protected ClientMethodHandle(ClientMethodInfo clientMethodInfo) Parameters clientMethodInfo ClientMethodInfo Fields clientMethodInfo protected ClientMethodInfo clientMethodInfo Field Value ClientMethodInfo Methods GetInternal<THandle, TWriteDelegate>(Type, string, Func<ClientMethodInfo, TWriteDelegate, THandle>) protected static THandle GetInternal<THandle, TWriteDelegate>(Type declaringType, string methodName, Func<ClientMethodInfo, TWriteDelegate, THandle> makeHandle) where THandle : ClientMethodHandle where TWriteDelegate : Delegate Parameters declaringType Type methodName string makeHandle Func<ClientMethodInfo, TWriteDelegate, THandle> Returns THandle Type Parameters THandle TWriteDelegate GetWriterWithStaticHeader() Write header common to both static and instance methods, and return writer. protected NetPakWriter GetWriterWithStaticHeader() Returns NetPakWriter SendAndLoopback(ENetReliability, List<ITransportConnection>, NetPakWriter) protected void SendAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, NetPakWriter writer) Parameters reliability ENetReliability transportConnections List<ITransportConnection> writer NetPakWriter SendAndLoopbackIfAnyAreLocal(ENetReliability, List<ITransportConnection>, NetPakWriter) protected void SendAndLoopbackIfAnyAreLocal(ENetReliability reliability, List<ITransportConnection> transportConnections, NetPakWriter writer) Parameters reliability ENetReliability transportConnections List<ITransportConnection> writer NetPakWriter SendAndLoopbackIfLocal(ENetReliability, ITransportConnection, NetPakWriter) protected void SendAndLoopbackIfLocal(ENetReliability reliability, ITransportConnection transportConnection, NetPakWriter writer) Parameters reliability ENetReliability transportConnection ITransportConnection writer NetPakWriter ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.ClientMethodInfo.html": {
    "href": "api/SDG.Unturned.ClientMethodInfo.html",
    "title": "Class ClientMethodInfo | Unturned Analyse Doc",
    "keywords": "Class ClientMethodInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ClientMethodInfo Inheritance object ClientMethodInfo Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClientMethodInfo() public ClientMethodInfo() Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.ClientMethodReceive.html": {
    "href": "api/SDG.Unturned.ClientMethodReceive.html",
    "title": "Delegate ClientMethodReceive | Unturned Analyse Doc",
    "keywords": "Delegate ClientMethodReceive Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientMethodReceive(in ClientInvocationContext context) Parameters context ClientInvocationContext Constructors ClientMethodReceive(object, IntPtr) public ClientMethodReceive(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, AsyncCallback callback, object @object) Parameters context ClientInvocationContext callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext) public virtual void Invoke(in ClientInvocationContext context) Parameters context ClientInvocationContext"
  },
  "api/SDG.Unturned.ClientStaticMethod-1.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-1.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T>.ReceiveDelegate(T arg) Parameters arg T Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T arg, AsyncCallback callback, object @object) Parameters arg T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T) public virtual void Invoke(T arg) Parameters arg T"
  },
  "api/SDG.Unturned.ClientStaticMethod-1.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-1.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T>.ReceiveDelegateWithContext(in ClientInvocationContext context, T arg) Parameters context ClientInvocationContext arg T Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T arg, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg T callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T) public virtual void Invoke(in ClientInvocationContext context, T arg) Parameters context ClientInvocationContext arg T"
  },
  "api/SDG.Unturned.ClientStaticMethod-1.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-1.html",
    "title": "Class ClientStaticMethod<T> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T> : ClientMethodHandle Type Parameters T Inheritance object ClientMethodHandle ClientStaticMethod<T> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T> Get(ClientStaticMethod<T>.ReceiveDelegate action) Parameters action ClientStaticMethod<T>.ReceiveDelegate Returns ClientStaticMethod<T> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T> Get(ClientStaticMethod<T>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T>.ReceiveDelegateWithContext Returns ClientStaticMethod<T> Get(Type, string) public static ClientStaticMethod<T> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T> Invoke(ENetReliability, ITransportConnection, T) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T arg) Parameters reliability ENetReliability transportConnection ITransportConnection arg T Invoke(ENetReliability, IEnumerable<ITransportConnection>, T) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T arg) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg T Invoke(ENetReliability, List<ITransportConnection>, T) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T arg) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg T InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T arg) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg T InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T arg) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg T"
  },
  "api/SDG.Unturned.ClientStaticMethod-10.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-10.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10"
  },
  "api/SDG.Unturned.ClientStaticMethod-10.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-10.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10"
  },
  "api/SDG.Unturned.ClientStaticMethod-10.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-10.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10"
  },
  "api/SDG.Unturned.ClientStaticMethod-11.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-11.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11"
  },
  "api/SDG.Unturned.ClientStaticMethod-11.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-11.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11"
  },
  "api/SDG.Unturned.ClientStaticMethod-11.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-11.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11"
  },
  "api/SDG.Unturned.ClientStaticMethod-12.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-12.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12"
  },
  "api/SDG.Unturned.ClientStaticMethod-12.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-12.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12"
  },
  "api/SDG.Unturned.ClientStaticMethod-12.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-12.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12"
  },
  "api/SDG.Unturned.ClientStaticMethod-2.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-2.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2>.ReceiveDelegate(T1 arg1, T2 arg2) Parameters arg1 T1 arg2 T2 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2) public virtual void Invoke(T1 arg1, T2 arg2) Parameters arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ClientStaticMethod-2.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-2.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2) Parameters context ClientInvocationContext arg1 T1 arg2 T2 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2) Parameters context ClientInvocationContext arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ClientStaticMethod-2.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-2.html",
    "title": "Class ClientStaticMethod<T1, T2> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2> : ClientMethodHandle Type Parameters T1 T2 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2> Get(ClientStaticMethod<T1, T2>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2>.ReceiveDelegate Returns ClientStaticMethod<T1, T2> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2> Get(ClientStaticMethod<T1, T2>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2> Get(Type, string) public static ClientStaticMethod<T1, T2> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2> Invoke(ENetReliability, ITransportConnection, T1, T2) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 Invoke(ENetReliability, List<ITransportConnection>, T1, T2) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ClientStaticMethod-3.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-3.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3) Parameters arg1 T1 arg2 T2 arg3 T3 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3) Parameters arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ClientStaticMethod-3.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-3.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ClientStaticMethod-3.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-3.html",
    "title": "Class ClientStaticMethod<T1, T2, T3> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3> : ClientMethodHandle Type Parameters T1 T2 T3 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3> Get(ClientStaticMethod<T1, T2, T3>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3> Get(ClientStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3> Get(Type, string) public static ClientStaticMethod<T1, T2, T3> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3> Invoke(ENetReliability, ITransportConnection, T1, T2, T3) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ClientStaticMethod-4.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-4.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ClientStaticMethod-4.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-4.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ClientStaticMethod-4.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-4.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4> : ClientMethodHandle Type Parameters T1 T2 T3 T4 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4> Get(ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4> Get(ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ClientStaticMethod-5.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-5.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ClientStaticMethod-5.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-5.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ClientStaticMethod-5.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-5.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5> Get(ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5> Get(ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ClientStaticMethod-6.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-6.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ClientStaticMethod-6.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-6.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ClientStaticMethod-6.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-6.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5, T6> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5, T6> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ClientStaticMethod-7.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-7.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ClientStaticMethod-7.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-7.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ClientStaticMethod-7.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-7.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ClientStaticMethod-8.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-8.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7, T8) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ClientStaticMethod-8.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-8.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ClientStaticMethod-8.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-8.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ClientStaticMethod-9.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-9.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9"
  },
  "api/SDG.Unturned.ClientStaticMethod-9.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-9.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegateWithContext(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, AsyncCallback callback, object @object) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, T9) public virtual void Invoke(in ClientInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters context ClientInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9"
  },
  "api/SDG.Unturned.ClientStaticMethod-9.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod-9.html",
    "title": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> : ClientMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 Inheritance object ClientMethodHandle ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegate action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegate Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Get(ReceiveDelegateWithContext) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Get(ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegateWithContext Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Get(Type, string) public static ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> Invoke(ENetReliability, ITransportConnection, T1, T2, T3, T4, T5, T6, T7, T8, T9) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters reliability ENetReliability transportConnection ITransportConnection arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Invoke(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Invoke(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 InvokeAndLoopback(ENetReliability, List<ITransportConnection>, T1, T2, T3, T4, T5, T6, T7, T8, T9) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters reliability ENetReliability transportConnections List<ITransportConnection> arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9"
  },
  "api/SDG.Unturned.ClientStaticMethod.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod.ReceiveDelegate.html",
    "title": "Delegate ClientStaticMethod.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod.ReceiveDelegate() Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.ClientStaticMethod.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod.ReceiveDelegateWithContext.html",
    "title": "Delegate ClientStaticMethod.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ClientStaticMethod.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ClientStaticMethod.ReceiveDelegateWithContext(in ClientInvocationContext context) Parameters context ClientInvocationContext Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ClientInvocationContext, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ClientInvocationContext context, AsyncCallback callback, object @object) Parameters context ClientInvocationContext callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(in ClientInvocationContext) public virtual void Invoke(in ClientInvocationContext context) Parameters context ClientInvocationContext"
  },
  "api/SDG.Unturned.ClientStaticMethod.html": {
    "href": "api/SDG.Unturned.ClientStaticMethod.html",
    "title": "Class ClientStaticMethod | Unturned Analyse Doc",
    "keywords": "Class ClientStaticMethod Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ClientStaticMethod : ClientMethodHandle Inheritance object ClientMethodHandle ClientStaticMethod Inherited Members ClientMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ClientStaticMethod Get(ClientStaticMethod.ReceiveDelegate action) Parameters action ClientStaticMethod.ReceiveDelegate Returns ClientStaticMethod Get(ReceiveDelegateWithContext) public static ClientStaticMethod Get(ClientStaticMethod.ReceiveDelegateWithContext action) Parameters action ClientStaticMethod.ReceiveDelegateWithContext Returns ClientStaticMethod Get(Type, string) public static ClientStaticMethod Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ClientStaticMethod Invoke(ENetReliability, ITransportConnection) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection) Parameters reliability ENetReliability transportConnection ITransportConnection Invoke(ENetReliability, ITransportConnection, Action<NetPakWriter>) public void Invoke(ENetReliability reliability, ITransportConnection transportConnection, Action<NetPakWriter> callback) Parameters reliability ENetReliability transportConnection ITransportConnection callback Action<NetPakWriter> Invoke(ENetReliability, IEnumerable<ITransportConnection>) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> Invoke(ENetReliability, IEnumerable<ITransportConnection>, Action<NetPakWriter>) [Obsolete(\"Replaced by List overload\")] public void Invoke(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> callback Action<NetPakWriter> Invoke(ENetReliability, List<ITransportConnection>) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections) Parameters reliability ENetReliability transportConnections List<ITransportConnection> Invoke(ENetReliability, List<ITransportConnection>, Action<NetPakWriter>) public void Invoke(ENetReliability reliability, List<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters reliability ENetReliability transportConnections List<ITransportConnection> callback Action<NetPakWriter> InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> InvokeAndLoopback(ENetReliability, IEnumerable<ITransportConnection>, Action<NetPakWriter>) [Obsolete(\"Replaced by List overload\")] public void InvokeAndLoopback(ENetReliability reliability, IEnumerable<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters reliability ENetReliability transportConnections IEnumerable<ITransportConnection> callback Action<NetPakWriter> InvokeAndLoopback(ENetReliability, List<ITransportConnection>) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections) Parameters reliability ENetReliability transportConnections List<ITransportConnection> InvokeAndLoopback(ENetReliability, List<ITransportConnection>, Action<NetPakWriter>) public void InvokeAndLoopback(ENetReliability reliability, List<ITransportConnection> transportConnections, Action<NetPakWriter> callback) Parameters reliability ENetReliability transportConnections List<ITransportConnection> callback Action<NetPakWriter>"
  },
  "api/SDG.Unturned.ClientTextChatMessenger.EChannel.html": {
    "href": "api/SDG.Unturned.ClientTextChatMessenger.EChannel.html",
    "title": "Enum ClientTextChatMessenger.EChannel | Unturned Analyse Doc",
    "keywords": "Enum ClientTextChatMessenger.EChannel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ClientTextChatMessenger.EChannel Fields Global = 0 All players on the server will see the message. Local = 1 Only nearby players will see the message."
  },
  "api/SDG.Unturned.ClientTextChatMessenger.html": {
    "href": "api/SDG.Unturned.ClientTextChatMessenger.html",
    "title": "Class ClientTextChatMessenger | Unturned Analyse Doc",
    "keywords": "Class ClientTextChatMessenger Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows Unity events to send text chat messages from the client, for example to execute commands. public class ClientTextChatMessenger : MonoBehaviour Inheritance object ClientTextChatMessenger Constructors ClientTextChatMessenger() public ClientTextChatMessenger() Fields Channel Chat mode to send request in. public ClientTextChatMessenger.EChannel Channel Field Value ClientTextChatMessenger.EChannel DefaultText Text to use when SendDefaultTextChatMessage is invoked. public string DefaultText Field Value string Methods SendDefaultTextChatMessage() public void SendDefaultTextChatMessage() SendTextChatMessage(string) public void SendTextChatMessage(string text) Parameters text string"
  },
  "api/SDG.Unturned.ColliderGizmosEx.html": {
    "href": "api/SDG.Unturned.ColliderGizmosEx.html",
    "title": "Class ColliderGizmosEx | Unturned Analyse Doc",
    "keywords": "Class ColliderGizmosEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ColliderGizmosEx Inheritance object ColliderGizmosEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DrawCapsuleGizmo(CapsuleCollider, Color, float) public static void DrawCapsuleGizmo(this CapsuleCollider collider, Color color, float lifespan = 0) Parameters collider CapsuleCollider color Color lifespan float DrawSphereGizmo(SphereCollider, Color, float) public static void DrawSphereGizmo(this SphereCollider collider, Color color, float lifespan = 0) Parameters collider SphereCollider color Color lifespan float"
  },
  "api/SDG.Unturned.CollisionEventHook.html": {
    "href": "api/SDG.Unturned.CollisionEventHook.html",
    "title": "Class CollisionEventHook | Unturned Analyse Doc",
    "keywords": "Class CollisionEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to any GameObject with a Trigger to receive events. Ensure that Layer will detect player overlaps. Trap is a good candidate. public class CollisionEventHook : MonoBehaviour Inheritance object CollisionEventHook Constructors CollisionEventHook() public CollisionEventHook() Fields OnAllPlayersExit Invoked when last player exits the trigger. Called after OnPlayerExit. public UnityEvent OnAllPlayersExit Field Value UnityEvent OnFirstPlayerEnter Invoked when first player enters the trigger, and not again until all players have left. Called after OnPlayerEnter. public UnityEvent OnFirstPlayerEnter Field Value UnityEvent OnPlayerEnter Invoked when a player enters the trigger. Called before OnFirstPlayerEnter. public UnityEvent OnPlayerEnter Field Value UnityEvent OnPlayerExit Invoked when a player exits the trigger. Called before OnAllPlayersExit. public UnityEvent OnPlayerExit Field Value UnityEvent"
  },
  "api/SDG.Unturned.CollisionTeleporter.html": {
    "href": "api/SDG.Unturned.CollisionTeleporter.html",
    "title": "Class CollisionTeleporter | Unturned Analyse Doc",
    "keywords": "Class CollisionTeleporter Namespace SDG.Unturned Assembly Assembly-CSharp.dll Seamlessly teleports player to an equivalent position at the destination upon contact. public class CollisionTeleporter : MonoBehaviour Inheritance object CollisionTeleporter Constructors CollisionTeleporter() public CollisionTeleporter() Fields DestinationTransform Target position and rotation. public Transform DestinationTransform Field Value Transform GizmoColor Only used in the Unity editor for visualization. public Color GizmoColor Field Value Color"
  },
  "api/SDG.Unturned.CollisionUtil.html": {
    "href": "api/SDG.Unturned.CollisionUtil.html",
    "title": "Class CollisionUtil | Unturned Analyse Doc",
    "keywords": "Class CollisionUtil Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class CollisionUtil Inheritance object CollisionUtil Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ClosestPoint(List<Collider>, Vector3) public static Vector3 ClosestPoint(List<Collider> colliders, Vector3 position) Parameters colliders List<Collider> position Vector3 Returns Vector3 ClosestPoint(List<Collider>, Vector3, int) public static Vector3 ClosestPoint(List<Collider> colliders, Vector3 position, int layerMask) Parameters colliders List<Collider> position Vector3 layerMask int Returns Vector3 ClosestPoint(List<Collider>, Vector3, int, out Vector3) public static bool ClosestPoint(List<Collider> colliders, Vector3 position, int layerMask, out Vector3 result) Parameters colliders List<Collider> position Vector3 layerMask int result Vector3 Returns bool ClosestPoint(List<Collider>, Vector3, out Vector3) public static bool ClosestPoint(List<Collider> colliders, Vector3 position, out Vector3 result) Parameters colliders List<Collider> position Vector3 result Vector3 Returns bool ClosestPoint(GameObject, Vector3, bool) public static Vector3 ClosestPoint(GameObject gameObject, Vector3 position, bool includeInactive) Parameters gameObject GameObject position Vector3 includeInactive bool Returns Vector3 ClosestPoint(GameObject, Vector3, bool, int) Find colliders in gameObject and the point closest to position, otherwise use gameObject position. public static Vector3 ClosestPoint(GameObject gameObject, Vector3 position, bool includeInactive, int layerMask) Parameters gameObject GameObject position Vector3 includeInactive bool layerMask int Collider is only included if its layer is enabled in layer mask. Returns Vector3 EncapsulateColliderBounds(GameObject, bool, out Bounds) Find colliders in gameObject and encapsulate their bounding boxes together. public static bool EncapsulateColliderBounds(GameObject gameObject, bool includeInactive, out Bounds bounds) Parameters gameObject GameObject includeInactive bool bounds Bounds Returns bool True if bounds were determined, false otherwise. OverlapBoxColliderNonAlloc(BoxCollider, Collider[], int, QueryTriggerInteraction) public static int OverlapBoxColliderNonAlloc(BoxCollider collider, Collider[] results, int mask, QueryTriggerInteraction queryTriggerInteraction) Parameters collider BoxCollider results Collider[] mask int queryTriggerInteraction QueryTriggerInteraction Returns int OverlapSphere(Vector3, float, int, QueryTriggerInteraction) Does sphere overlap anything? public static bool OverlapSphere(Vector3 position, float radius, int layerMask, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters position Vector3 radius float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns bool"
  },
  "api/SDG.Unturned.ColorPicked.html": {
    "href": "api/SDG.Unturned.ColorPicked.html",
    "title": "Delegate ColorPicked | Unturned Analyse Doc",
    "keywords": "Delegate ColorPicked Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ColorPicked(SleekColorPicker paint, Color color) Parameters paint SleekColorPicker color Color Constructors ColorPicked(object, IntPtr) public ColorPicked(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekColorPicker, Color, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekColorPicker paint, Color color, AsyncCallback callback, object @object) Parameters paint SleekColorPicker color Color callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekColorPicker, Color) public virtual void Invoke(SleekColorPicker paint, Color color) Parameters paint SleekColorPicker color Color"
  },
  "api/SDG.Unturned.Command.html": {
    "href": "api/SDG.Unturned.Command.html",
    "title": "Class Command | Unturned Analyse Doc",
    "keywords": "Class Command Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Command : IComparable<Command> Inheritance object Command Implements IComparable<Command> Derived CommandAdmin CommandAdmins CommandAirdrop CommandAnimal CommandArmor CommandBan CommandBans CommandBind CommandCamera CommandChatrate CommandCheats CommandCopyFakeIP CommandCopyServerCode CommandCycle CommandDay CommandDebug CommandDecay CommandEffectUI CommandExperience CommandFilter CommandFlag CommandGSLT CommandGameMode CommandGive CommandGold CommandHelp CommandHideAdmins CommandKick CommandKill CommandLoadout CommandLog CommandLogMemoryUsage CommandLogTransportConnections CommandMap CommandMaxPlayers CommandMode CommandModules CommandName CommandNight CommandNpcEvent CommandOwner CommandPassword CommandPermit CommandPermits CommandPlayers CommandPort CommandPvE CommandQuest CommandQueue CommandReload CommandReputation CommandResetConfig CommandSave CommandSay CommandScheduledShutdownInfo CommandSetNpcSpawnId CommandShutdown CommandSlay CommandSpy CommandSync CommandTeleport CommandTime CommandTimeout CommandToggleNpcCutsceneMode CommandUnadmin CommandUnban CommandUnlockNpcAchievement CommandUnpermit CommandVehicle CommandVotify CommandWeather CommandWelcome CommandWhitelisted Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Command() public Command() Fields _command protected string _command Field Value string _help protected string _help Field Value string _info protected string _info Field Value string localization protected Local localization Field Value Local Properties command public string command { get; } Property Value string help public string help { get; } Property Value string info public string info { get; } Property Value string Methods CompareTo(Command) public int CompareTo(Command other) Parameters other Command Returns int check(CSteamID, string, string) public virtual bool check(CSteamID executorID, string method, string parameter) Parameters executorID CSteamID method string parameter string Returns bool execute(CSteamID, string) protected virtual void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandAdmin.html": {
    "href": "api/SDG.Unturned.CommandAdmin.html",
    "title": "Class CommandAdmin | Unturned Analyse Doc",
    "keywords": "Class CommandAdmin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandAdmin : Command, IComparable<Command> Inheritance object Command CommandAdmin Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandAdmin(Local) public CommandAdmin(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandAdmins.html": {
    "href": "api/SDG.Unturned.CommandAdmins.html",
    "title": "Class CommandAdmins | Unturned Analyse Doc",
    "keywords": "Class CommandAdmins Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandAdmins : Command, IComparable<Command> Inheritance object Command CommandAdmins Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandAdmins(Local) public CommandAdmins(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandAirdrop.html": {
    "href": "api/SDG.Unturned.CommandAirdrop.html",
    "title": "Class CommandAirdrop | Unturned Analyse Doc",
    "keywords": "Class CommandAirdrop Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandAirdrop : Command, IComparable<Command> Inheritance object Command CommandAirdrop Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandAirdrop(Local) public CommandAirdrop(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandAnimal.html": {
    "href": "api/SDG.Unturned.CommandAnimal.html",
    "title": "Class CommandAnimal | Unturned Analyse Doc",
    "keywords": "Class CommandAnimal Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandAnimal : Command, IComparable<Command> Inheritance object Command CommandAnimal Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandAnimal(Local) public CommandAnimal(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandArmor.html": {
    "href": "api/SDG.Unturned.CommandArmor.html",
    "title": "Class CommandArmor | Unturned Analyse Doc",
    "keywords": "Class CommandArmor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandArmor : Command, IComparable<Command> Inheritance object Command CommandArmor Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandArmor(Local) public CommandArmor(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandBan.html": {
    "href": "api/SDG.Unturned.CommandBan.html",
    "title": "Class CommandBan | Unturned Analyse Doc",
    "keywords": "Class CommandBan Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandBan : Command, IComparable<Command> Inheritance object Command CommandBan Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandBan(Local) public CommandBan(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandBans.html": {
    "href": "api/SDG.Unturned.CommandBans.html",
    "title": "Class CommandBans | Unturned Analyse Doc",
    "keywords": "Class CommandBans Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandBans : Command, IComparable<Command> Inheritance object Command CommandBans Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandBans(Local) public CommandBans(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandBind.html": {
    "href": "api/SDG.Unturned.CommandBind.html",
    "title": "Class CommandBind | Unturned Analyse Doc",
    "keywords": "Class CommandBind Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandBind : Command, IComparable<Command> Inheritance object Command CommandBind Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandBind(Local) public CommandBind(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandCamera.html": {
    "href": "api/SDG.Unturned.CommandCamera.html",
    "title": "Class CommandCamera | Unturned Analyse Doc",
    "keywords": "Class CommandCamera Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandCamera : Command, IComparable<Command> Inheritance object Command CommandCamera Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandCamera(Local) public CommandCamera(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandChatrate.html": {
    "href": "api/SDG.Unturned.CommandChatrate.html",
    "title": "Class CommandChatrate | Unturned Analyse Doc",
    "keywords": "Class CommandChatrate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandChatrate : Command, IComparable<Command> Inheritance object Command CommandChatrate Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandChatrate(Local) public CommandChatrate(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandCheats.html": {
    "href": "api/SDG.Unturned.CommandCheats.html",
    "title": "Class CommandCheats | Unturned Analyse Doc",
    "keywords": "Class CommandCheats Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandCheats : Command, IComparable<Command> Inheritance object Command CommandCheats Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandCheats(Local) public CommandCheats(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandCopyFakeIP.html": {
    "href": "api/SDG.Unturned.CommandCopyFakeIP.html",
    "title": "Class CommandCopyFakeIP | Unturned Analyse Doc",
    "keywords": "Class CommandCopyFakeIP Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandCopyFakeIP : Command, IComparable<Command> Inheritance object Command CommandCopyFakeIP Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandCopyFakeIP(Local) public CommandCopyFakeIP(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandCopyServerCode.html": {
    "href": "api/SDG.Unturned.CommandCopyServerCode.html",
    "title": "Class CommandCopyServerCode | Unturned Analyse Doc",
    "keywords": "Class CommandCopyServerCode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandCopyServerCode : Command, IComparable<Command> Inheritance object Command CommandCopyServerCode Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandCopyServerCode(Local) public CommandCopyServerCode(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandCycle.html": {
    "href": "api/SDG.Unturned.CommandCycle.html",
    "title": "Class CommandCycle | Unturned Analyse Doc",
    "keywords": "Class CommandCycle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandCycle : Command, IComparable<Command> Inheritance object Command CommandCycle Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandCycle(Local) public CommandCycle(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandDay.html": {
    "href": "api/SDG.Unturned.CommandDay.html",
    "title": "Class CommandDay | Unturned Analyse Doc",
    "keywords": "Class CommandDay Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandDay : Command, IComparable<Command> Inheritance object Command CommandDay Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandDay(Local) public CommandDay(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandDebug.html": {
    "href": "api/SDG.Unturned.CommandDebug.html",
    "title": "Class CommandDebug | Unturned Analyse Doc",
    "keywords": "Class CommandDebug Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandDebug : Command, IComparable<Command> Inheritance object Command CommandDebug Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandDebug(Local) public CommandDebug(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandDecay.html": {
    "href": "api/SDG.Unturned.CommandDecay.html",
    "title": "Class CommandDecay | Unturned Analyse Doc",
    "keywords": "Class CommandDecay Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandDecay : Command, IComparable<Command> Inheritance object Command CommandDecay Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandDecay(Local) public CommandDecay(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandEffectUI.html": {
    "href": "api/SDG.Unturned.CommandEffectUI.html",
    "title": "Class CommandEffectUI | Unturned Analyse Doc",
    "keywords": "Class CommandEffectUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandEffectUI : Command, IComparable<Command> Inheritance object Command CommandEffectUI Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandEffectUI(Local) public CommandEffectUI(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandExperience.html": {
    "href": "api/SDG.Unturned.CommandExperience.html",
    "title": "Class CommandExperience | Unturned Analyse Doc",
    "keywords": "Class CommandExperience Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandExperience : Command, IComparable<Command> Inheritance object Command CommandExperience Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandExperience(Local) public CommandExperience(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandFilter.html": {
    "href": "api/SDG.Unturned.CommandFilter.html",
    "title": "Class CommandFilter | Unturned Analyse Doc",
    "keywords": "Class CommandFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandFilter : Command, IComparable<Command> Inheritance object Command CommandFilter Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandFilter(Local) public CommandFilter(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandFlag.html": {
    "href": "api/SDG.Unturned.CommandFlag.html",
    "title": "Class CommandFlag | Unturned Analyse Doc",
    "keywords": "Class CommandFlag Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandFlag : Command, IComparable<Command> Inheritance object Command CommandFlag Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandFlag(Local) public CommandFlag(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandGSLT.html": {
    "href": "api/SDG.Unturned.CommandGSLT.html",
    "title": "Class CommandGSLT | Unturned Analyse Doc",
    "keywords": "Class CommandGSLT Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandGSLT : Command, IComparable<Command> Inheritance object Command CommandGSLT Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandGSLT(Local) public CommandGSLT(Local newLocalization) Parameters newLocalization Local Properties loginToken public static string loginToken { get; } Property Value string Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandGameMode.html": {
    "href": "api/SDG.Unturned.CommandGameMode.html",
    "title": "Class CommandGameMode | Unturned Analyse Doc",
    "keywords": "Class CommandGameMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll Essentially deprecated for now. public class CommandGameMode : Command, IComparable<Command> Inheritance object Command CommandGameMode Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandGameMode(Local) public CommandGameMode(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandGive.html": {
    "href": "api/SDG.Unturned.CommandGive.html",
    "title": "Class CommandGive | Unturned Analyse Doc",
    "keywords": "Class CommandGive Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandGive : Command, IComparable<Command> Inheritance object Command CommandGive Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandGive(Local) public CommandGive(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandGold.html": {
    "href": "api/SDG.Unturned.CommandGold.html",
    "title": "Class CommandGold | Unturned Analyse Doc",
    "keywords": "Class CommandGold Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandGold : Command, IComparable<Command> Inheritance object Command CommandGold Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandGold(Local) public CommandGold(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandHelp.html": {
    "href": "api/SDG.Unturned.CommandHelp.html",
    "title": "Class CommandHelp | Unturned Analyse Doc",
    "keywords": "Class CommandHelp Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandHelp : Command, IComparable<Command> Inheritance object Command CommandHelp Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandHelp(Local) public CommandHelp(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandHideAdmins.html": {
    "href": "api/SDG.Unturned.CommandHideAdmins.html",
    "title": "Class CommandHideAdmins | Unturned Analyse Doc",
    "keywords": "Class CommandHideAdmins Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandHideAdmins : Command, IComparable<Command> Inheritance object Command CommandHideAdmins Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandHideAdmins(Local) public CommandHideAdmins(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandInputHandler.html": {
    "href": "api/SDG.Unturned.CommandInputHandler.html",
    "title": "Delegate CommandInputHandler | Unturned Analyse Doc",
    "keywords": "Delegate CommandInputHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void CommandInputHandler(string input) Parameters input string Constructors CommandInputHandler(object, IntPtr) public CommandInputHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(string input, AsyncCallback callback, object @object) Parameters input string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(string) public virtual void Invoke(string input) Parameters input string"
  },
  "api/SDG.Unturned.CommandKick.html": {
    "href": "api/SDG.Unturned.CommandKick.html",
    "title": "Class CommandKick | Unturned Analyse Doc",
    "keywords": "Class CommandKick Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandKick : Command, IComparable<Command> Inheritance object Command CommandKick Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandKick(Local) public CommandKick(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandKill.html": {
    "href": "api/SDG.Unturned.CommandKill.html",
    "title": "Class CommandKill | Unturned Analyse Doc",
    "keywords": "Class CommandKill Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandKill : Command, IComparable<Command> Inheritance object Command CommandKill Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandKill(Local) public CommandKill(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandLine.html": {
    "href": "api/SDG.Unturned.CommandLine.html",
    "title": "Class CommandLine | Unturned Analyse Doc",
    "keywords": "Class CommandLine Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLine Inheritance object CommandLine Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLine() public CommandLine() Fields onGetCommands public static GetCommands onGetCommands Field Value GetCommands Methods TryGetSteamConnect(string, out uint, out ushort, out string) When Steam parses a steam://connect/ip:port URL it requires the query port (e.g. 27015). public static bool TryGetSteamConnect(string line, out uint ip, out ushort queryPort, out string pass) Parameters line string ip uint queryPort ushort pass string Returns bool TryParseValue(string, string, out string) Handles these cases: key value -> value key=value -> value key = value -> value key = value -> value key \"value with spaces\" -> value with spaces key \"value with \" quotation marks\" -> value with \" quotation marks Tested in CommandLineTests.cs public static bool TryParseValue(string input, string key, out string value) Parameters input string key string value string Returns bool TryParseValue(string, out string) public static bool TryParseValue(string key, out string value) Parameters key string value string Returns bool getCommands() public static string[] getCommands() Returns string[] tryGetLanguage(out string, out string) public static bool tryGetLanguage(out string local, out string path) Parameters local string path string Returns bool tryGetLobby(string, out ulong) public static bool tryGetLobby(string line, out ulong lobby) Parameters line string lobby ulong Returns bool tryGetServer(out ESteamServerVisibility, out string) public static bool tryGetServer(out ESteamServerVisibility visibility, out string id) Parameters visibility ESteamServerVisibility id string Returns bool tryGetVR() public static bool tryGetVR() Returns bool"
  },
  "api/SDG.Unturned.CommandLineBool.html": {
    "href": "api/SDG.Unturned.CommandLineBool.html",
    "title": "Class CommandLineBool | Unturned Analyse Doc",
    "keywords": "Class CommandLineBool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLineBool : CommandLineValue<bool> Inheritance object CommandLineValue<bool> CommandLineBool Inherited Members CommandLineValue<bool>.key CommandLineValue<bool>.hasValue CommandLineValue<bool>.value object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLineBool(string) public CommandLineBool(string key) Parameters key string Methods tryParse(string) protected override bool tryParse(string stringValue) Parameters stringValue string Returns bool"
  },
  "api/SDG.Unturned.CommandLineFlag.html": {
    "href": "api/SDG.Unturned.CommandLineFlag.html",
    "title": "Class CommandLineFlag | Unturned Analyse Doc",
    "keywords": "Class CommandLineFlag Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLineFlag Inheritance object CommandLineFlag Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLineFlag(bool, string) public CommandLineFlag(bool defaultValue, string flag) Parameters defaultValue bool flag string Fields value public bool value Field Value bool Properties defaultValue public bool defaultValue { get; protected set; } Property Value bool flag public string flag { get; protected set; } Property Value string Operators implicit operator bool(CommandLineFlag) public static implicit operator bool(CommandLineFlag flag) Parameters flag CommandLineFlag Returns bool"
  },
  "api/SDG.Unturned.CommandLineFloat.html": {
    "href": "api/SDG.Unturned.CommandLineFloat.html",
    "title": "Class CommandLineFloat | Unturned Analyse Doc",
    "keywords": "Class CommandLineFloat Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLineFloat : CommandLineValue<float> Inheritance object CommandLineValue<float> CommandLineFloat Inherited Members CommandLineValue<float>.key CommandLineValue<float>.hasValue CommandLineValue<float>.value object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLineFloat(string) public CommandLineFloat(string key) Parameters key string Methods tryParse(string) protected override bool tryParse(string stringValue) Parameters stringValue string Returns bool"
  },
  "api/SDG.Unturned.CommandLineInt.html": {
    "href": "api/SDG.Unturned.CommandLineInt.html",
    "title": "Class CommandLineInt | Unturned Analyse Doc",
    "keywords": "Class CommandLineInt Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLineInt : CommandLineValue<int> Inheritance object CommandLineValue<int> CommandLineInt Inherited Members CommandLineValue<int>.key CommandLineValue<int>.hasValue CommandLineValue<int>.value object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLineInt(string) public CommandLineInt(string key) Parameters key string Methods tryParse(string) protected override bool tryParse(string stringValue) Parameters stringValue string Returns bool"
  },
  "api/SDG.Unturned.CommandLineString.html": {
    "href": "api/SDG.Unturned.CommandLineString.html",
    "title": "Class CommandLineString | Unturned Analyse Doc",
    "keywords": "Class CommandLineString Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLineString : CommandLineValue<string> Inheritance object CommandLineValue<string> CommandLineString Inherited Members CommandLineValue<string>.key CommandLineValue<string>.hasValue CommandLineValue<string>.value object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLineString(string) public CommandLineString(string key) Parameters key string Methods tryParse(string) protected override bool tryParse(string stringValue) Parameters stringValue string Returns bool"
  },
  "api/SDG.Unturned.CommandLineValue-1.html": {
    "href": "api/SDG.Unturned.CommandLineValue-1.html",
    "title": "Class CommandLineValue<T> | Unturned Analyse Doc",
    "keywords": "Class CommandLineValue<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll Parses -X=Y from command-line. Ideally we could do \"where T : TryParse\" but for the meantime there are specialized subclasses. public abstract class CommandLineValue<T> Type Parameters T Inheritance object CommandLineValue<T> Derived CommandLineBool CommandLineFloat CommandLineInt CommandLineString Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLineValue(string) public CommandLineValue(string key) Parameters key string Properties hasValue public bool hasValue { get; protected set; } Property Value bool key public string key { get; protected set; } Property Value string value public T value { get; protected set; } Property Value T Methods tryParse(string) protected abstract bool tryParse(string stringValue) Parameters stringValue string Returns bool"
  },
  "api/SDG.Unturned.CommandLoadout.html": {
    "href": "api/SDG.Unturned.CommandLoadout.html",
    "title": "Class CommandLoadout | Unturned Analyse Doc",
    "keywords": "Class CommandLoadout Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLoadout : Command, IComparable<Command> Inheritance object Command CommandLoadout Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLoadout(Local) public CommandLoadout(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandLog.html": {
    "href": "api/SDG.Unturned.CommandLog.html",
    "title": "Class CommandLog | Unturned Analyse Doc",
    "keywords": "Class CommandLog Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLog : Command, IComparable<Command> Inheritance object Command CommandLog Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLog(Local) public CommandLog(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandLogMemoryUsage.html": {
    "href": "api/SDG.Unturned.CommandLogMemoryUsage.html",
    "title": "Class CommandLogMemoryUsage | Unturned Analyse Doc",
    "keywords": "Class CommandLogMemoryUsage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLogMemoryUsage : Command, IComparable<Command> Inheritance object Command CommandLogMemoryUsage Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLogMemoryUsage(Local) public CommandLogMemoryUsage(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandLogTransportConnections.html": {
    "href": "api/SDG.Unturned.CommandLogTransportConnections.html",
    "title": "Class CommandLogTransportConnections | Unturned Analyse Doc",
    "keywords": "Class CommandLogTransportConnections Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandLogTransportConnections : Command, IComparable<Command> Inheritance object Command CommandLogTransportConnections Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandLogTransportConnections(Local) public CommandLogTransportConnections(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandMap.html": {
    "href": "api/SDG.Unturned.CommandMap.html",
    "title": "Class CommandMap | Unturned Analyse Doc",
    "keywords": "Class CommandMap Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandMap : Command, IComparable<Command> Inheritance object Command CommandMap Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandMap(Local) public CommandMap(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandMaxPlayers.html": {
    "href": "api/SDG.Unturned.CommandMaxPlayers.html",
    "title": "Class CommandMaxPlayers | Unturned Analyse Doc",
    "keywords": "Class CommandMaxPlayers Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandMaxPlayers : Command, IComparable<Command> Inheritance object Command CommandMaxPlayers Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandMaxPlayers(Local) public CommandMaxPlayers(Local newLocalization) Parameters newLocalization Local Fields MAX_NUMBER public static readonly byte MAX_NUMBER Field Value byte MIN_NUMBER public static readonly byte MIN_NUMBER Field Value byte RECOMMENDED_NUMBER [Obsolete] public static readonly byte RECOMMENDED_NUMBER Field Value byte Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandMode.html": {
    "href": "api/SDG.Unturned.CommandMode.html",
    "title": "Class CommandMode | Unturned Analyse Doc",
    "keywords": "Class CommandMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandMode : Command, IComparable<Command> Inheritance object Command CommandMode Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandMode(Local) public CommandMode(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandModules.html": {
    "href": "api/SDG.Unturned.CommandModules.html",
    "title": "Class CommandModules | Unturned Analyse Doc",
    "keywords": "Class CommandModules Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandModules : Command, IComparable<Command> Inheritance object Command CommandModules Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandModules(Local) public CommandModules(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandName.html": {
    "href": "api/SDG.Unturned.CommandName.html",
    "title": "Class CommandName | Unturned Analyse Doc",
    "keywords": "Class CommandName Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandName : Command, IComparable<Command> Inheritance object Command CommandName Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandName(Local) public CommandName(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandNight.html": {
    "href": "api/SDG.Unturned.CommandNight.html",
    "title": "Class CommandNight | Unturned Analyse Doc",
    "keywords": "Class CommandNight Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandNight : Command, IComparable<Command> Inheritance object Command CommandNight Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandNight(Local) public CommandNight(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandNpcEvent.html": {
    "href": "api/SDG.Unturned.CommandNpcEvent.html",
    "title": "Class CommandNpcEvent | Unturned Analyse Doc",
    "keywords": "Class CommandNpcEvent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandNpcEvent : Command, IComparable<Command> Inheritance object Command CommandNpcEvent Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandNpcEvent(Local) public CommandNpcEvent(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandOwner.html": {
    "href": "api/SDG.Unturned.CommandOwner.html",
    "title": "Class CommandOwner | Unturned Analyse Doc",
    "keywords": "Class CommandOwner Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandOwner : Command, IComparable<Command> Inheritance object Command CommandOwner Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandOwner(Local) public CommandOwner(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandPassword.html": {
    "href": "api/SDG.Unturned.CommandPassword.html",
    "title": "Class CommandPassword | Unturned Analyse Doc",
    "keywords": "Class CommandPassword Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandPassword : Command, IComparable<Command> Inheritance object Command CommandPassword Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandPassword(Local) public CommandPassword(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandPermit.html": {
    "href": "api/SDG.Unturned.CommandPermit.html",
    "title": "Class CommandPermit | Unturned Analyse Doc",
    "keywords": "Class CommandPermit Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandPermit : Command, IComparable<Command> Inheritance object Command CommandPermit Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandPermit(Local) public CommandPermit(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandPermits.html": {
    "href": "api/SDG.Unturned.CommandPermits.html",
    "title": "Class CommandPermits | Unturned Analyse Doc",
    "keywords": "Class CommandPermits Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandPermits : Command, IComparable<Command> Inheritance object Command CommandPermits Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandPermits(Local) public CommandPermits(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandPlayers.html": {
    "href": "api/SDG.Unturned.CommandPlayers.html",
    "title": "Class CommandPlayers | Unturned Analyse Doc",
    "keywords": "Class CommandPlayers Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandPlayers : Command, IComparable<Command> Inheritance object Command CommandPlayers Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandPlayers(Local) public CommandPlayers(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandPort.html": {
    "href": "api/SDG.Unturned.CommandPort.html",
    "title": "Class CommandPort | Unturned Analyse Doc",
    "keywords": "Class CommandPort Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandPort : Command, IComparable<Command> Inheritance object Command CommandPort Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandPort(Local) public CommandPort(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandPvE.html": {
    "href": "api/SDG.Unturned.CommandPvE.html",
    "title": "Class CommandPvE | Unturned Analyse Doc",
    "keywords": "Class CommandPvE Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandPvE : Command, IComparable<Command> Inheritance object Command CommandPvE Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandPvE(Local) public CommandPvE(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandQuest.html": {
    "href": "api/SDG.Unturned.CommandQuest.html",
    "title": "Class CommandQuest | Unturned Analyse Doc",
    "keywords": "Class CommandQuest Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandQuest : Command, IComparable<Command> Inheritance object Command CommandQuest Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandQuest(Local) public CommandQuest(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandQueue.html": {
    "href": "api/SDG.Unturned.CommandQueue.html",
    "title": "Class CommandQueue | Unturned Analyse Doc",
    "keywords": "Class CommandQueue Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandQueue : Command, IComparable<Command> Inheritance object Command CommandQueue Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandQueue(Local) public CommandQueue(Local newLocalization) Parameters newLocalization Local Fields MAX_NUMBER public static readonly byte MAX_NUMBER Field Value byte Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandReload.html": {
    "href": "api/SDG.Unturned.CommandReload.html",
    "title": "Class CommandReload | Unturned Analyse Doc",
    "keywords": "Class CommandReload Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandReload : Command, IComparable<Command> Inheritance object Command CommandReload Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandReload(Local) public CommandReload(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandReputation.html": {
    "href": "api/SDG.Unturned.CommandReputation.html",
    "title": "Class CommandReputation | Unturned Analyse Doc",
    "keywords": "Class CommandReputation Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandReputation : Command, IComparable<Command> Inheritance object Command CommandReputation Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandReputation(Local) public CommandReputation(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandResetConfig.html": {
    "href": "api/SDG.Unturned.CommandResetConfig.html",
    "title": "Class CommandResetConfig | Unturned Analyse Doc",
    "keywords": "Class CommandResetConfig Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandResetConfig : Command, IComparable<Command> Inheritance object Command CommandResetConfig Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandResetConfig(Local) public CommandResetConfig(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandSave.html": {
    "href": "api/SDG.Unturned.CommandSave.html",
    "title": "Class CommandSave | Unturned Analyse Doc",
    "keywords": "Class CommandSave Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandSave : Command, IComparable<Command> Inheritance object Command CommandSave Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandSave(Local) public CommandSave(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandSay.html": {
    "href": "api/SDG.Unturned.CommandSay.html",
    "title": "Class CommandSay | Unturned Analyse Doc",
    "keywords": "Class CommandSay Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandSay : Command, IComparable<Command> Inheritance object Command CommandSay Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandSay(Local) public CommandSay(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandScheduledShutdownInfo.html": {
    "href": "api/SDG.Unturned.CommandScheduledShutdownInfo.html",
    "title": "Class CommandScheduledShutdownInfo | Unturned Analyse Doc",
    "keywords": "Class CommandScheduledShutdownInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandScheduledShutdownInfo : Command, IComparable<Command> Inheritance object Command CommandScheduledShutdownInfo Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandScheduledShutdownInfo(Local) public CommandScheduledShutdownInfo(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandSetNpcSpawnId.html": {
    "href": "api/SDG.Unturned.CommandSetNpcSpawnId.html",
    "title": "Class CommandSetNpcSpawnId | Unturned Analyse Doc",
    "keywords": "Class CommandSetNpcSpawnId Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandSetNpcSpawnId : Command, IComparable<Command> Inheritance object Command CommandSetNpcSpawnId Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandSetNpcSpawnId(Local) public CommandSetNpcSpawnId(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandShutdown.html": {
    "href": "api/SDG.Unturned.CommandShutdown.html",
    "title": "Class CommandShutdown | Unturned Analyse Doc",
    "keywords": "Class CommandShutdown Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandShutdown : Command, IComparable<Command> Inheritance object Command CommandShutdown Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandShutdown(Local) public CommandShutdown(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandSlay.html": {
    "href": "api/SDG.Unturned.CommandSlay.html",
    "title": "Class CommandSlay | Unturned Analyse Doc",
    "keywords": "Class CommandSlay Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandSlay : Command, IComparable<Command> Inheritance object Command CommandSlay Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandSlay(Local) public CommandSlay(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandSpy.html": {
    "href": "api/SDG.Unturned.CommandSpy.html",
    "title": "Class CommandSpy | Unturned Analyse Doc",
    "keywords": "Class CommandSpy Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandSpy : Command, IComparable<Command> Inheritance object Command CommandSpy Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandSpy(Local) public CommandSpy(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandSync.html": {
    "href": "api/SDG.Unturned.CommandSync.html",
    "title": "Class CommandSync | Unturned Analyse Doc",
    "keywords": "Class CommandSync Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandSync : Command, IComparable<Command> Inheritance object Command CommandSync Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandSync(Local) public CommandSync(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandTeleport.html": {
    "href": "api/SDG.Unturned.CommandTeleport.html",
    "title": "Class CommandTeleport | Unturned Analyse Doc",
    "keywords": "Class CommandTeleport Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandTeleport : Command, IComparable<Command> Inheritance object Command CommandTeleport Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandTeleport(Local) public CommandTeleport(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string raycastFromNearPosition(ref Vector3) Cast a ray from slightly above point so indoor teleport nodes work. protected void raycastFromNearPosition(ref Vector3 position) Parameters position Vector3 raycastFromSkyToPosition(ref Vector3) Cast a ray from the sky to find highest point. protected bool raycastFromSkyToPosition(ref Vector3 position) Parameters position Vector3 Returns bool"
  },
  "api/SDG.Unturned.CommandTime.html": {
    "href": "api/SDG.Unturned.CommandTime.html",
    "title": "Class CommandTime | Unturned Analyse Doc",
    "keywords": "Class CommandTime Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandTime : Command, IComparable<Command> Inheritance object Command CommandTime Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandTime(Local) public CommandTime(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandTimeout.html": {
    "href": "api/SDG.Unturned.CommandTimeout.html",
    "title": "Class CommandTimeout | Unturned Analyse Doc",
    "keywords": "Class CommandTimeout Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandTimeout : Command, IComparable<Command> Inheritance object Command CommandTimeout Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandTimeout(Local) public CommandTimeout(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandToggleNpcCutsceneMode.html": {
    "href": "api/SDG.Unturned.CommandToggleNpcCutsceneMode.html",
    "title": "Class CommandToggleNpcCutsceneMode | Unturned Analyse Doc",
    "keywords": "Class CommandToggleNpcCutsceneMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandToggleNpcCutsceneMode : Command, IComparable<Command> Inheritance object Command CommandToggleNpcCutsceneMode Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandToggleNpcCutsceneMode(Local) public CommandToggleNpcCutsceneMode(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandUnadmin.html": {
    "href": "api/SDG.Unturned.CommandUnadmin.html",
    "title": "Class CommandUnadmin | Unturned Analyse Doc",
    "keywords": "Class CommandUnadmin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandUnadmin : Command, IComparable<Command> Inheritance object Command CommandUnadmin Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandUnadmin(Local) public CommandUnadmin(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandUnban.html": {
    "href": "api/SDG.Unturned.CommandUnban.html",
    "title": "Class CommandUnban | Unturned Analyse Doc",
    "keywords": "Class CommandUnban Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandUnban : Command, IComparable<Command> Inheritance object Command CommandUnban Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandUnban(Local) public CommandUnban(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandUnlockNpcAchievement.html": {
    "href": "api/SDG.Unturned.CommandUnlockNpcAchievement.html",
    "title": "Class CommandUnlockNpcAchievement | Unturned Analyse Doc",
    "keywords": "Class CommandUnlockNpcAchievement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandUnlockNpcAchievement : Command, IComparable<Command> Inheritance object Command CommandUnlockNpcAchievement Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandUnlockNpcAchievement(Local) public CommandUnlockNpcAchievement(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandUnpermit.html": {
    "href": "api/SDG.Unturned.CommandUnpermit.html",
    "title": "Class CommandUnpermit | Unturned Analyse Doc",
    "keywords": "Class CommandUnpermit Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandUnpermit : Command, IComparable<Command> Inheritance object Command CommandUnpermit Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandUnpermit(Local) public CommandUnpermit(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandVehicle.html": {
    "href": "api/SDG.Unturned.CommandVehicle.html",
    "title": "Class CommandVehicle | Unturned Analyse Doc",
    "keywords": "Class CommandVehicle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandVehicle : Command, IComparable<Command> Inheritance object Command CommandVehicle Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandVehicle(Local) public CommandVehicle(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandVotify.html": {
    "href": "api/SDG.Unturned.CommandVotify.html",
    "title": "Class CommandVotify | Unturned Analyse Doc",
    "keywords": "Class CommandVotify Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandVotify : Command, IComparable<Command> Inheritance object Command CommandVotify Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandVotify(Local) public CommandVotify(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandWeather.html": {
    "href": "api/SDG.Unturned.CommandWeather.html",
    "title": "Class CommandWeather | Unturned Analyse Doc",
    "keywords": "Class CommandWeather Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandWeather : Command, IComparable<Command> Inheritance object Command CommandWeather Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandWeather(Local) public CommandWeather(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandWelcome.html": {
    "href": "api/SDG.Unturned.CommandWelcome.html",
    "title": "Class CommandWelcome | Unturned Analyse Doc",
    "keywords": "Class CommandWelcome Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandWelcome : Command, IComparable<Command> Inheritance object Command CommandWelcome Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandWelcome(Local) public CommandWelcome(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandWhitelisted.html": {
    "href": "api/SDG.Unturned.CommandWhitelisted.html",
    "title": "Class CommandWhitelisted | Unturned Analyse Doc",
    "keywords": "Class CommandWhitelisted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandWhitelisted : Command, IComparable<Command> Inheritance object Command CommandWhitelisted Implements IComparable<Command> Inherited Members Command.localization Command._command Command._info Command._help Command.check(CSteamID, string, string) Command.CompareTo(Command) Command.command Command.info Command.help object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandWhitelisted(Local) public CommandWhitelisted(Local newLocalization) Parameters newLocalization Local Methods execute(CSteamID, string) protected override void execute(CSteamID executorID, string parameter) Parameters executorID CSteamID parameter string"
  },
  "api/SDG.Unturned.CommandWindow.html": {
    "href": "api/SDG.Unturned.CommandWindow.html",
    "title": "Class CommandWindow | Unturned Analyse Doc",
    "keywords": "Class CommandWindow Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommandWindow Inheritance object CommandWindow Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CommandWindow() public CommandWindow() Fields onCommandWindowInputted public static CommandWindowInputted onCommandWindowInputted Field Value CommandWindowInputted onCommandWindowOutputted public static CommandWindowOutputted onCommandWindowOutputted Field Value CommandWindowOutputted shouldCreateDefaultConsole Should the default console I/O handler be created? Plugins can disable on the command line when overriding handler. public static CommandLineFlag shouldCreateDefaultConsole Field Value CommandLineFlag shouldLogAnticheat public static bool shouldLogAnticheat Field Value bool shouldLogChat public static bool shouldLogChat Field Value bool shouldLogDeaths public static bool shouldLogDeaths Field Value bool shouldLogJoinLeave public static bool shouldLogJoinLeave Field Value bool Properties title public string title { get; set; } Property Value string Methods Log(object) Log white information. public static void Log(object text) Parameters text object LogError(object) Log red error. public static void LogError(object text) Parameters text object LogErrorFormat(string, params object[]) public static void LogErrorFormat(string format, params object[] args) Parameters format string args object[] LogFormat(string, params object[]) public static void LogFormat(string format, params object[] args) Parameters format string args object[] LogWarning(object) Log yellow warning. public static void LogWarning(object text) Parameters text object LogWarningFormat(string, params object[]) public static void LogWarningFormat(string format, params object[] args) Parameters format string args object[] addIOHandler(ICommandInputOutput) public void addIOHandler(ICommandInputOutput handler) Parameters handler ICommandInputOutput createDefaultIOHandler() protected ICommandInputOutput createDefaultIOHandler() Returns ICommandInputOutput removeDefaultIOHandler() Helper for plugins that want to replace the default without the shouldCreateDefaultConsole flag. public void removeDefaultIOHandler() removeIOHandler(ICommandInputOutput) public void removeIOHandler(ICommandInputOutput handler) Parameters handler ICommandInputOutput setIOHandler(ICommandInputOutput) [Obsolete(\"Use addIOHandler instead (multiple simultaneous handlers now supported)\")] public void setIOHandler(ICommandInputOutput newHandler) Parameters newHandler ICommandInputOutput shutdown() Called during OnApplicationQuit. public void shutdown() update() Called during Unity Update loop. public void update() Events onTitleChanged Broadcasts after dedicated server name changes. Command IO interface binds to this rather than having a title-specific method. public event CommandWindowTitleChanged onTitleChanged Event Type CommandWindowTitleChanged"
  },
  "api/SDG.Unturned.CommandWindowInputted.html": {
    "href": "api/SDG.Unturned.CommandWindowInputted.html",
    "title": "Delegate CommandWindowInputted | Unturned Analyse Doc",
    "keywords": "Delegate CommandWindowInputted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void CommandWindowInputted(string text, ref bool shouldExecuteCommand) Parameters text string shouldExecuteCommand bool Constructors CommandWindowInputted(object, IntPtr) public CommandWindowInputted(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(string, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(string text, ref bool shouldExecuteCommand, AsyncCallback callback, object @object) Parameters text string shouldExecuteCommand bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldExecuteCommand, IAsyncResult result) Parameters shouldExecuteCommand bool result IAsyncResult Invoke(string, ref bool) public virtual void Invoke(string text, ref bool shouldExecuteCommand) Parameters text string shouldExecuteCommand bool"
  },
  "api/SDG.Unturned.CommandWindowOutputted.html": {
    "href": "api/SDG.Unturned.CommandWindowOutputted.html",
    "title": "Delegate CommandWindowOutputted | Unturned Analyse Doc",
    "keywords": "Delegate CommandWindowOutputted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void CommandWindowOutputted(object text, ConsoleColor color) Parameters text object color ConsoleColor Constructors CommandWindowOutputted(object, IntPtr) public CommandWindowOutputted(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(object, ConsoleColor, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(object text, ConsoleColor color, AsyncCallback callback, object @object) Parameters text object color ConsoleColor callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(object, ConsoleColor) public virtual void Invoke(object text, ConsoleColor color) Parameters text object color ConsoleColor"
  },
  "api/SDG.Unturned.CommandWindowTitleChanged.html": {
    "href": "api/SDG.Unturned.CommandWindowTitleChanged.html",
    "title": "Delegate CommandWindowTitleChanged | Unturned Analyse Doc",
    "keywords": "Delegate CommandWindowTitleChanged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void CommandWindowTitleChanged(string title) Parameters title string Constructors CommandWindowTitleChanged(object, IntPtr) public CommandWindowTitleChanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(string title, AsyncCallback callback, object @object) Parameters title string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(string) public virtual void Invoke(string title) Parameters title string"
  },
  "api/SDG.Unturned.Commander.ServerUnityEventPermissionHandler.html": {
    "href": "api/SDG.Unturned.Commander.ServerUnityEventPermissionHandler.html",
    "title": "Delegate Commander.ServerUnityEventPermissionHandler | Unturned Analyse Doc",
    "keywords": "Delegate Commander.ServerUnityEventPermissionHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Commander.ServerUnityEventPermissionHandler(ServerTextChatMessenger messenger, string command, ref bool shouldAllow) Parameters messenger ServerTextChatMessenger command string shouldAllow bool Constructors ServerUnityEventPermissionHandler(object, IntPtr) public ServerUnityEventPermissionHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ServerTextChatMessenger, string, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ServerTextChatMessenger messenger, string command, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters messenger ServerTextChatMessenger command string shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(ServerTextChatMessenger, string, ref bool) public virtual void Invoke(ServerTextChatMessenger messenger, string command, ref bool shouldAllow) Parameters messenger ServerTextChatMessenger command string shouldAllow bool"
  },
  "api/SDG.Unturned.Commander.html": {
    "href": "api/SDG.Unturned.Commander.html",
    "title": "Class Commander | Unturned Analyse Doc",
    "keywords": "Class Commander Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Commander Inheritance object Commander Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Commander() public Commander() Properties commands public static List<Command> commands { get; set; } Property Value List<Command> Methods deregister(Command) public static void deregister(Command command) Parameters command Command execute(CSteamID, string) public static bool execute(CSteamID executorID, string command) Parameters executorID CSteamID command string Returns bool execute_UnityEvent(string, ServerTextChatMessenger) Allows Unity events to execute commands from the server. Messenger context is logged to help track down abusive assets. public static void execute_UnityEvent(string command, ServerTextChatMessenger messenger) Parameters command string messenger ServerTextChatMessenger init() public static void init() register(Command) public static void register(Command command) Parameters command Command Events onCheckUnityEventPermissions public static event Commander.ServerUnityEventPermissionHandler onCheckUnityEventPermissions Event Type Commander.ServerUnityEventPermissionHandler"
  },
  "api/SDG.Unturned.CommentComponent.html": {
    "href": "api/SDG.Unturned.CommentComponent.html",
    "title": "Class CommentComponent | Unturned Analyse Doc",
    "keywords": "Class CommentComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CommentComponent : MonoBehaviour Inheritance object CommentComponent Constructors CommentComponent() public CommentComponent() Fields message public string message Field Value string"
  },
  "api/SDG.Unturned.ConfigData.html": {
    "href": "api/SDG.Unturned.ConfigData.html",
    "title": "Class ConfigData | Unturned Analyse Doc",
    "keywords": "Class ConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ConfigData Inheritance object ConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields Browser public BrowserConfigData Browser Field Value BrowserConfigData Easy public ModeConfigData Easy Field Value ModeConfigData Hard public ModeConfigData Hard Field Value ModeConfigData Normal public ModeConfigData Normal Field Value ModeConfigData Server public ServerConfigData Server Field Value ServerConfigData UnityEvents public UnityEventConfigData UnityEvents Field Value UnityEventConfigData Methods CreateDefault(bool) public static ConfigData CreateDefault(bool singleplayer) Parameters singleplayer bool Returns ConfigData InitDedicatedServerDefaults() public void InitDedicatedServerDefaults() InitSingleplayerDefaults() public void InitSingleplayerDefaults() getModeConfig(EGameMode) public ModeConfigData getModeConfig(EGameMode mode) Parameters mode EGameMode Returns ModeConfigData"
  },
  "api/SDG.Unturned.Confirm.html": {
    "href": "api/SDG.Unturned.Confirm.html",
    "title": "Delegate Confirm | Unturned Analyse Doc",
    "keywords": "Delegate Confirm Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Confirm(SleekButtonIconConfirm button) Parameters button SleekButtonIconConfirm Constructors Confirm(object, IntPtr) public Confirm(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekButtonIconConfirm, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekButtonIconConfirm button, AsyncCallback callback, object @object) Parameters button SleekButtonIconConfirm callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekButtonIconConfirm) public virtual void Invoke(SleekButtonIconConfirm button) Parameters button SleekButtonIconConfirm"
  },
  "api/SDG.Unturned.ConsoleInputOutput.html": {
    "href": "api/SDG.Unturned.ConsoleInputOutput.html",
    "title": "Class ConsoleInputOutput | Unturned Analyse Doc",
    "keywords": "Class ConsoleInputOutput Namespace SDG.Unturned Assembly Assembly-CSharp.dll Read commands from standard input, and write logs to standard output. public class ConsoleInputOutput : ConsoleInputOutputBase, ICommandInputOutput Inheritance object ConsoleInputOutputBase ConsoleInputOutput Implements ICommandInputOutput Derived WindowsConsoleInputOutput Inherited Members ConsoleInputOutputBase.defaultShouldRedirectInput ConsoleInputOutputBase.defaultShouldRedirectOutput ConsoleInputOutputBase.defaultShouldProxyRedirectedOutput ConsoleInputOutputBase.shouldRedirectInput ConsoleInputOutputBase.shouldRedirectOutput ConsoleInputOutputBase.shouldProxyRedirectedOutput ConsoleInputOutputBase.wantsToTerminate ConsoleInputOutputBase.isTerminating ConsoleInputOutputBase.desiredTitle ConsoleInputOutputBase.initialize(CommandWindow) ConsoleInputOutputBase.shutdown(CommandWindow) ConsoleInputOutputBase.outputInformation(string) ConsoleInputOutputBase.outputWarning(string) ConsoleInputOutputBase.outputError(string) ConsoleInputOutputBase.notifyInputCommitted(string) ConsoleInputOutputBase.synchronizeTitle(string) ConsoleInputOutputBase.onTitleChanged(string) ConsoleInputOutputBase.handleCancelEvent(object, ConsoleCancelEventArgs) ConsoleInputOutputBase.handleTermination() ConsoleInputOutputBase.inputCommitted object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConsoleInputOutput() public ConsoleInputOutput() Fields pendingInput protected string pendingInput Field Value string Methods clearLine() protected void clearLine() inputFromConsole() Each Update we consume a key press from the console buffer if available. Unfortunately ReadLine is not an option without blocking output, so we maintain our own pending input. protected virtual void inputFromConsole() onConsoleInputBackspace() protected virtual void onConsoleInputBackspace() onConsoleInputEnter() protected virtual void onConsoleInputEnter() onConsoleInputEscape() protected virtual void onConsoleInputEscape() onConsoleInputKey(ConsoleKeyInfo) protected virtual void onConsoleInputKey(ConsoleKeyInfo keyInfo) Parameters keyInfo ConsoleKeyInfo outputToConsole(string, ConsoleColor) protected override void outputToConsole(string value, ConsoleColor color) Parameters value string color ConsoleColor redrawInputLine() protected void redrawInputLine() update() Called each Unity update. public override void update()"
  },
  "api/SDG.Unturned.ConsoleInputOutputBase.html": {
    "href": "api/SDG.Unturned.ConsoleInputOutputBase.html",
    "title": "Class ConsoleInputOutputBase | Unturned Analyse Doc",
    "keywords": "Class ConsoleInputOutputBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll Read commands from standard input, and write logs to standard output. public class ConsoleInputOutputBase : ICommandInputOutput Inheritance object ConsoleInputOutputBase Implements ICommandInputOutput Derived ConsoleInputOutput ThreadedConsoleInputOutput Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConsoleInputOutputBase() public ConsoleInputOutputBase() Fields defaultShouldProxyRedirectedOutput public static CommandLineFlag defaultShouldProxyRedirectedOutput Field Value CommandLineFlag defaultShouldRedirectInput public static CommandLineFlag defaultShouldRedirectInput Field Value CommandLineFlag defaultShouldRedirectOutput public static CommandLineFlag defaultShouldRedirectOutput Field Value CommandLineFlag desiredTitle protected string desiredTitle Field Value string isTerminating Is the Ctrl-C or Ctrl-Break signal being handled? protected bool isTerminating Field Value bool shouldProxyRedirectedOutput public bool shouldProxyRedirectedOutput Field Value bool shouldRedirectInput public bool shouldRedirectInput Field Value bool shouldRedirectOutput public bool shouldRedirectOutput Field Value bool wantsToTerminate Has Ctrl-C or Ctrl-Break signal been received? protected int wantsToTerminate Field Value int Methods handleCancelEvent(object, ConsoleCancelEventArgs) Intercept the Ctrl-C or Ctrl-Break termination. protected virtual void handleCancelEvent(object sender, ConsoleCancelEventArgs args) Parameters sender object args ConsoleCancelEventArgs handleTermination() Handle Ctrl-C or Ctrl-Break on the game thread. protected virtual void handleTermination() initialize(CommandWindow) Called when this implementation is setup by command window. public virtual void initialize(CommandWindow commandWindow) Parameters commandWindow CommandWindow notifyInputCommitted(string) Broadcast the inputCommited event. protected void notifyInputCommitted(string input) Parameters input string onTitleChanged(string) protected virtual void onTitleChanged(string title) Parameters title string outputError(string) Print red message. public virtual void outputError(string error) Parameters error string outputInformation(string) Print white message. public virtual void outputInformation(string information) Parameters information string outputToConsole(string, ConsoleColor) protected virtual void outputToConsole(string value, ConsoleColor color) Parameters value string color ConsoleColor outputWarning(string) Print yellow message. public virtual void outputWarning(string warning) Parameters warning string shutdown(CommandWindow) Called when this implementation is deleted or application quits. public virtual void shutdown(CommandWindow commandWindow) Parameters commandWindow CommandWindow synchronizeTitle(string) Synchronize console's title bar text. Virtual because at one point Win32 SetTitleText was required. protected virtual void synchronizeTitle(string title) Parameters title string update() Called each Unity update. public virtual void update() Events inputCommitted Broadcasts when the enter key is pressed. public event CommandInputHandler inputCommitted Event Type CommandInputHandler"
  },
  "api/SDG.Unturned.ConsoleInputRedirector.html": {
    "href": "api/SDG.Unturned.ConsoleInputRedirector.html",
    "title": "Class ConsoleInputRedirector | Unturned Analyse Doc",
    "keywords": "Class ConsoleInputRedirector Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ConsoleInputRedirector Inheritance object ConsoleInputRedirector Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConsoleInputRedirector() public ConsoleInputRedirector() Methods disable() public void disable() enable() public void enable()"
  },
  "api/SDG.Unturned.ConsoleOutputRedirector.html": {
    "href": "api/SDG.Unturned.ConsoleOutputRedirector.html",
    "title": "Class ConsoleOutputRedirector | Unturned Analyse Doc",
    "keywords": "Class ConsoleOutputRedirector Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ConsoleOutputRedirector Inheritance object ConsoleOutputRedirector Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConsoleOutputRedirector() public ConsoleOutputRedirector() Methods disable() public void disable() enable(bool) public void enable(bool shouldProxy) Parameters shouldProxy bool"
  },
  "api/SDG.Unturned.ConsoleWriterProxy.html": {
    "href": "api/SDG.Unturned.ConsoleWriterProxy.html",
    "title": "Class ConsoleWriterProxy | Unturned Analyse Doc",
    "keywords": "Class ConsoleWriterProxy Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ConsoleWriterProxy : TextWriter, IDisposable Inheritance object MarshalByRefObject TextWriter ConsoleWriterProxy Implements IDisposable Inherited Members TextWriter.Null TextWriter.CoreNewLine TextWriter.Dispose(bool) TextWriter.Dispose() TextWriter.Synchronized(TextWriter) TextWriter.Write(char[]) TextWriter.Write(char[], int, int) TextWriter.Write(bool) TextWriter.Write(int) TextWriter.Write(uint) TextWriter.Write(long) TextWriter.Write(ulong) TextWriter.Write(float) TextWriter.Write(double) TextWriter.Write(decimal) TextWriter.Write(string) TextWriter.Write(object) TextWriter.Write(string, object) TextWriter.Write(string, object, object) TextWriter.Write(string, object, object, object) TextWriter.Write(string, params object[]) TextWriter.WriteLine(char) TextWriter.WriteLine(char[]) TextWriter.WriteLine(char[], int, int) TextWriter.WriteLine(bool) TextWriter.WriteLine(int) TextWriter.WriteLine(uint) TextWriter.WriteLine(long) TextWriter.WriteLine(ulong) TextWriter.WriteLine(float) TextWriter.WriteLine(double) TextWriter.WriteLine(decimal) TextWriter.WriteLine(object) TextWriter.WriteLine(string, object) TextWriter.WriteLine(string, object, object) TextWriter.WriteLine(string, object, object, object) TextWriter.WriteLine(string, params object[]) TextWriter.WriteAsync(char) TextWriter.WriteAsync(string) TextWriter.WriteAsync(char[]) TextWriter.WriteAsync(char[], int, int) TextWriter.WriteLineAsync(char) TextWriter.WriteLineAsync(string) TextWriter.WriteLineAsync(char[]) TextWriter.WriteLineAsync(char[], int, int) TextWriter.WriteLineAsync() TextWriter.FlushAsync() MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConsoleWriterProxy(StreamWriter, TextWriter) public ConsoleWriterProxy(StreamWriter streamWriter, TextWriter defaultConsoleWriter) Parameters streamWriter StreamWriter defaultConsoleWriter TextWriter Fields defaultConsoleWriter protected TextWriter defaultConsoleWriter Field Value TextWriter Properties Encoding public override Encoding Encoding { get; } Property Value Encoding FormatProvider public override IFormatProvider FormatProvider { get; } Property Value IFormatProvider NewLine public override string NewLine { get; set; } Property Value string Methods Close() public override void Close() Flush() public override void Flush() Write(char) This is the only /required/ override of text writer. public override void Write(char value) Parameters value char WriteLine() public override void WriteLine() WriteLine(string) public override void WriteLine(string value) Parameters value string"
  },
  "api/SDG.Unturned.ContentReference-1.html": {
    "href": "api/SDG.Unturned.ContentReference-1.html",
    "title": "Struct ContentReference<T> | Unturned Analyse Doc",
    "keywords": "Struct ContentReference<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct ContentReference<T> : IContentReference, IFormattedFileReadable, IFormattedFileWritable, IDatParseable, IEquatable<ContentReference<T>> where T : Object Type Parameters T Implements IContentReference IFormattedFileReadable IFormattedFileWritable IDatParseable IEquatable<ContentReference<T>> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors ContentReference(IContentReference) public ContentReference(IContentReference contentReference) Parameters contentReference IContentReference ContentReference(string, string) public ContentReference(string newName, string newPath) Parameters newName string newPath string Fields invalid public static ContentReference<T> invalid Field Value ContentReference<T> Properties isValid public bool isValid { get; } Property Value bool name Name of the asset bundle. public string name { readonly get; set; } Property Value string Examples core.content path Path within the asset bundle. public string path { readonly get; set; } Property Value string Methods Equals(ContentReference<T>) public bool Equals(ContentReference<T> other) Parameters other ContentReference<T> Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Operators operator ==(ContentReference<T>, ContentReference<T>) public static bool operator ==(ContentReference<T> a, ContentReference<T> b) Parameters a ContentReference<T> b ContentReference<T> Returns bool operator !=(ContentReference<T>, ContentReference<T>) public static bool operator !=(ContentReference<T> a, ContentReference<T> b) Parameters a ContentReference<T> b ContentReference<T> Returns bool"
  },
  "api/SDG.Unturned.ContinuousIntegration.html": {
    "href": "api/SDG.Unturned.ContinuousIntegration.html",
    "title": "Class ContinuousIntegration | Unturned Analyse Doc",
    "keywords": "Class ContinuousIntegration Namespace SDG.Unturned Assembly Assembly-CSharp.dll Report success or failure from game systems, conditionally compiled into the Windows 64-bit build. public class ContinuousIntegration Inheritance object ContinuousIntegration Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ContinuousIntegration() public ContinuousIntegration() Methods reportFailure(object) Call when the server encounters any error. Ignored if not running in CI mode, otherwise exits the server with error code 1. [Conditional(\"DEVELOPMENT_BUILD\")] public static void reportFailure(object message) Parameters message object reportSuccess() Call when the server is done all loading without running into errors. Ignored if not running in CI mode, otherwise exits the server successfully with error code 0. [Conditional(\"DEVELOPMENT_BUILD\")] public static void reportSuccess()"
  },
  "api/SDG.Unturned.ControlBinding.html": {
    "href": "api/SDG.Unturned.ControlBinding.html",
    "title": "Class ControlBinding | Unturned Analyse Doc",
    "keywords": "Class ControlBinding Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ControlBinding Inheritance object ControlBinding Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ControlBinding(KeyCode) public ControlBinding(KeyCode newKey) Parameters newKey KeyCode Fields key public KeyCode key Field Value KeyCode"
  },
  "api/SDG.Unturned.ControlsSettings.html": {
    "href": "api/SDG.Unturned.ControlsSettings.html",
    "title": "Class ControlsSettings | Unturned Analyse Doc",
    "keywords": "Class ControlsSettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ControlsSettings Inheritance object ControlsSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ControlsSettings() public ControlsSettings() Fields ASCEND public static readonly byte ASCEND Field Value byte ATTACH public static readonly byte ATTACH Field Value byte CLIPBOARD_DEBUG public static readonly byte CLIPBOARD_DEBUG Field Value byte CRAFTING public static readonly byte CRAFTING Field Value byte CROUCH public static readonly byte CROUCH Field Value byte CUSTOM_MODAL When held the cursor is released. public const byte CUSTOM_MODAL = 74 Field Value byte DASHBOARD public static readonly byte DASHBOARD Field Value byte DEQUIP public static readonly byte DEQUIP Field Value byte DESCEND public static readonly byte DESCEND Field Value byte DOWN public static readonly byte DOWN Field Value byte FIREMODE public static readonly byte FIREMODE Field Value byte FOCUS public static readonly byte FOCUS Field Value byte GESTURE public static readonly byte GESTURE Field Value byte GLOBAL public static readonly byte GLOBAL Field Value byte GROUP public static readonly byte GROUP Field Value byte HUD public static readonly byte HUD Field Value byte INSPECT public static readonly byte INSPECT Field Value byte INTERACT public static readonly byte INTERACT Field Value byte INVENTORY public static readonly byte INVENTORY Field Value byte ITEM_0 public const byte ITEM_0 = 64 Field Value byte ITEM_1 public const byte ITEM_1 = 65 Field Value byte ITEM_2 public const byte ITEM_2 = 66 Field Value byte ITEM_3 public const byte ITEM_3 = 67 Field Value byte ITEM_4 public const byte ITEM_4 = 68 Field Value byte ITEM_5 public const byte ITEM_5 = 69 Field Value byte ITEM_6 public const byte ITEM_6 = 70 Field Value byte ITEM_7 public const byte ITEM_7 = 71 Field Value byte ITEM_8 public const byte ITEM_8 = 72 Field Value byte ITEM_9 public const byte ITEM_9 = 73 Field Value byte JUMP public static readonly byte JUMP Field Value byte LEAN_LEFT public static readonly byte LEAN_LEFT Field Value byte LEAN_RIGHT public static readonly byte LEAN_RIGHT Field Value byte LEFT public static readonly byte LEFT Field Value byte LOCAL public static readonly byte LOCAL Field Value byte LOCKER public static readonly byte LOCKER Field Value byte MAP public static readonly byte MAP Field Value byte MODIFY public static readonly byte MODIFY Field Value byte NUM_ITEM_HOTBAR_KEYS public const byte NUM_ITEM_HOTBAR_KEYS = 10 Field Value byte NUM_PLUGIN_KEYS public static readonly byte NUM_PLUGIN_KEYS Field Value byte OTHER public static readonly byte OTHER Field Value byte PERSPECTIVE public static readonly byte PERSPECTIVE Field Value byte PITCH_DOWN public static readonly byte PITCH_DOWN Field Value byte PITCH_UP public static readonly byte PITCH_UP Field Value byte PLAYERS public static readonly byte PLAYERS Field Value byte PLUGIN_0 public static readonly byte PLUGIN_0 Field Value byte PLUGIN_1 public static readonly byte PLUGIN_1 Field Value byte PLUGIN_2 public static readonly byte PLUGIN_2 Field Value byte PLUGIN_3 public static readonly byte PLUGIN_3 Field Value byte PLUGIN_4 public static readonly byte PLUGIN_4 Field Value byte PLUGIN_KEY_TOKENS public static readonly string[] PLUGIN_KEY_TOKENS Field Value string[] PRIMARY public static readonly byte PRIMARY Field Value byte PRONE public static readonly byte PRONE Field Value byte QUESTS public static readonly byte QUESTS Field Value byte REFRESH_ASSETS public static readonly byte REFRESH_ASSETS Field Value byte RELOAD public static readonly byte RELOAD Field Value byte RIGHT public static readonly byte RIGHT Field Value byte ROLL_LEFT public static readonly byte ROLL_LEFT Field Value byte ROLL_RIGHT public static readonly byte ROLL_RIGHT Field Value byte ROTATE public static readonly byte ROTATE Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SCREENSHOT public static readonly byte SCREENSHOT Field Value byte SECONDARY public static readonly byte SECONDARY Field Value byte SKILLS public static readonly byte SKILLS Field Value byte SNAP public static readonly byte SNAP Field Value byte SPRINT public static readonly byte SPRINT Field Value byte STANCE public static readonly byte STANCE Field Value byte TACTICAL public static readonly byte TACTICAL Field Value byte TERMINAL public static readonly byte TERMINAL Field Value byte THRUST_DECREASE public static readonly byte THRUST_DECREASE Field Value byte THRUST_INCREASE public static readonly byte THRUST_INCREASE Field Value byte TOOL_0 public static readonly byte TOOL_0 Field Value byte TOOL_1 public static readonly byte TOOL_1 Field Value byte TOOL_2 public static readonly byte TOOL_2 Field Value byte TOOL_3 public static readonly byte TOOL_3 Field Value byte UP public static readonly byte UP Field Value byte VISION public static readonly byte VISION Field Value byte VOICE public static readonly byte VOICE Field Value byte YAW_LEFT public static readonly byte YAW_LEFT Field Value byte YAW_RIGHT public static readonly byte YAW_RIGHT Field Value byte aiming public static EControlMode aiming Field Value EControlMode crouching public static EControlMode crouching Field Value EControlMode invert public static bool invert Field Value bool invertFlight public static bool invertFlight Field Value bool leaning public static EControlMode leaning Field Value EControlMode mouseAimSensitivity Multiplier for Input.GetAxis(\"mouse_x\") and Input.GetAxis(\"mouse_y\") public static float mouseAimSensitivity Field Value float projectionRatioCoefficient public static float projectionRatioCoefficient Field Value float proning public static EControlMode proning Field Value EControlMode sensitivityScalingMode public static ESensitivityScalingMode sensitivityScalingMode Field Value ESensitivityScalingMode sprinting public static EControlMode sprinting Field Value EControlMode voiceMode public static EControlMode voiceMode Field Value EControlMode Properties CustomModal When held the cursor is released. public static KeyCode CustomModal { get; } Property Value KeyCode ascend public static KeyCode ascend { get; } Property Value KeyCode attach public static KeyCode attach { get; } Property Value KeyCode bindings public static ControlBinding[] bindings { get; } Property Value ControlBinding[] clipboardDebug public static KeyCode clipboardDebug { get; } Property Value KeyCode crafting public static KeyCode crafting { get; } Property Value KeyCode crouch public static KeyCode crouch { get; } Property Value KeyCode dashboard public static KeyCode dashboard { get; } Property Value KeyCode dequip public static KeyCode dequip { get; } Property Value KeyCode descend public static KeyCode descend { get; } Property Value KeyCode down public static KeyCode down { get; } Property Value KeyCode firemode public static KeyCode firemode { get; } Property Value KeyCode focus public static KeyCode focus { get; } Property Value KeyCode gesture public static KeyCode gesture { get; } Property Value KeyCode global public static KeyCode global { get; } Property Value KeyCode group public static KeyCode group { get; } Property Value KeyCode hud public static KeyCode hud { get; } Property Value KeyCode inspect public static KeyCode inspect { get; } Property Value KeyCode interact public static KeyCode interact { get; } Property Value KeyCode inventory public static KeyCode inventory { get; } Property Value KeyCode jump public static KeyCode jump { get; } Property Value KeyCode leanLeft public static KeyCode leanLeft { get; } Property Value KeyCode leanRight public static KeyCode leanRight { get; } Property Value KeyCode left public static KeyCode left { get; } Property Value KeyCode local public static KeyCode local { get; } Property Value KeyCode locker public static KeyCode locker { get; } Property Value KeyCode map public static KeyCode map { get; } Property Value KeyCode modify public static KeyCode modify { get; } Property Value KeyCode other public static KeyCode other { get; } Property Value KeyCode perspective public static KeyCode perspective { get; } Property Value KeyCode pitchDown public static KeyCode pitchDown { get; } Property Value KeyCode pitchUp public static KeyCode pitchUp { get; } Property Value KeyCode players public static KeyCode players { get; } Property Value KeyCode primary public static KeyCode primary { get; } Property Value KeyCode prone public static KeyCode prone { get; } Property Value KeyCode quests public static KeyCode quests { get; } Property Value KeyCode refreshAssets public static KeyCode refreshAssets { get; } Property Value KeyCode reload public static KeyCode reload { get; } Property Value KeyCode right public static KeyCode right { get; } Property Value KeyCode rollLeft public static KeyCode rollLeft { get; } Property Value KeyCode rollRight public static KeyCode rollRight { get; } Property Value KeyCode rotate public static KeyCode rotate { get; } Property Value KeyCode screenshot public static KeyCode screenshot { get; } Property Value KeyCode secondary public static KeyCode secondary { get; } Property Value KeyCode skills public static KeyCode skills { get; } Property Value KeyCode snap public static KeyCode snap { get; } Property Value KeyCode sprint public static KeyCode sprint { get; } Property Value KeyCode stance public static KeyCode stance { get; } Property Value KeyCode tactical public static KeyCode tactical { get; } Property Value KeyCode terminal public static KeyCode terminal { get; } Property Value KeyCode thrustDecrease public static KeyCode thrustDecrease { get; } Property Value KeyCode thrustIncrease public static KeyCode thrustIncrease { get; } Property Value KeyCode tool_0 public static KeyCode tool_0 { get; } Property Value KeyCode tool_1 public static KeyCode tool_1 { get; } Property Value KeyCode tool_2 public static KeyCode tool_2 { get; } Property Value KeyCode tool_3 public static KeyCode tool_3 { get; } Property Value KeyCode up public static KeyCode up { get; } Property Value KeyCode vision public static KeyCode vision { get; } Property Value KeyCode voice public static KeyCode voice { get; } Property Value KeyCode yawLeft public static KeyCode yawLeft { get; } Property Value KeyCode yawRight public static KeyCode yawRight { get; } Property Value KeyCode Methods bind(byte, KeyCode) public static void bind(byte index, KeyCode key) Parameters index byte key KeyCode formatPluginHotkeysIntoText(ref string) Replace instances of <plugin_num></plugin_num> with their bound key text. Allows server effects to display plugin hotkeys. public static void formatPluginHotkeysIntoText(ref string text) Parameters text string getEquipmentHotbarKeyCode(int) public static KeyCode getEquipmentHotbarKeyCode(int index) Parameters index int Returns KeyCode getEquipmentHotkeyText(int) Item 0 is \"1\" and item 9 is \"0\" public static string getEquipmentHotkeyText(int index) Parameters index int Returns string getPluginKeyCode(int) public static KeyCode getPluginKeyCode(int index) Parameters index int Returns KeyCode load() public static void load() restoreDefaults() public static void restoreDefaults() save() public static void save()"
  },
  "api/SDG.Unturned.ConvenientSavedata.html": {
    "href": "api/SDG.Unturned.ConvenientSavedata.html",
    "title": "Class ConvenientSavedata | Unturned Analyse Doc",
    "keywords": "Class ConvenientSavedata Namespace SDG.Unturned Assembly Assembly-CSharp.dll Unturned equivalent of unity's PlayerPrefs. Convenient for saving one-off key-value pairs. public static class ConvenientSavedata Inheritance object ConvenientSavedata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods SaveIfDirty() public static void SaveIfDirty() get() public static IConvenientSavedata get() Returns IConvenientSavedata save() public static void save()"
  },
  "api/SDG.Unturned.CosmeticPreviewCapture.html": {
    "href": "api/SDG.Unturned.CosmeticPreviewCapture.html",
    "title": "Class CosmeticPreviewCapture | Unturned Analyse Doc",
    "keywords": "Class CosmeticPreviewCapture Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CosmeticPreviewCapture : MonoBehaviour Inheritance object CosmeticPreviewCapture Constructors CosmeticPreviewCapture() public CosmeticPreviewCapture() Fields backpackCamera public Camera backpackCamera Field Value Camera hatCamera public Camera hatCamera Field Value Camera outfitCamera public Camera outfitCamera Field Value Camera pantsCamera public Camera pantsCamera Field Value Camera shirtCamera public Camera shirtCamera Field Value Camera vestCamera public Camera vestCamera Field Value Camera Methods CaptureAllOutfits() public void CaptureAllOutfits() CaptureCosmetics() public void CaptureCosmetics() CaptureOutfit(Guid) public void CaptureOutfit(Guid guid) Parameters guid Guid"
  },
  "api/SDG.Unturned.CraftingBlacklistAsset.BlacklistedBlueprint.html": {
    "href": "api/SDG.Unturned.CraftingBlacklistAsset.BlacklistedBlueprint.html",
    "title": "Struct CraftingBlacklistAsset.BlacklistedBlueprint | Unturned Analyse Doc",
    "keywords": "Struct CraftingBlacklistAsset.BlacklistedBlueprint Namespace SDG.Unturned Assembly Assembly-CSharp.dll protected struct CraftingBlacklistAsset.BlacklistedBlueprint : IDatParseable Implements IDatParseable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors BlacklistedBlueprint(AssetReference<ItemAsset>, int) public BlacklistedBlueprint(AssetReference<ItemAsset> assetRef, int index) Parameters assetRef AssetReference<ItemAsset> index int Fields assetRef public AssetReference<ItemAsset> assetRef Field Value AssetReference<ItemAsset> index public int index Field Value int Methods TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool"
  },
  "api/SDG.Unturned.CraftingBlacklistAsset.html": {
    "href": "api/SDG.Unturned.CraftingBlacklistAsset.html",
    "title": "Class CraftingBlacklistAsset | Unturned Analyse Doc",
    "keywords": "Class CraftingBlacklistAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Restricts which items can be crafted. public class CraftingBlacklistAsset : Asset, IAssetErrorContext Inheritance object Asset CraftingBlacklistAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CraftingBlacklistAsset() public CraftingBlacklistAsset() Fields allowCoreBlueprints If false, blueprints on vanilla/core/built-in items are not allowed. Defaults to true. protected bool allowCoreBlueprints Field Value bool blueprints Restrict specific blueprints. protected List<CraftingBlacklistAsset.BlacklistedBlueprint> blueprints Field Value List<CraftingBlacklistAsset.BlacklistedBlueprint> inputItems Restrict blueprints that consume these items. protected List<AssetReference<ItemAsset>> inputItems Field Value List<AssetReference<ItemAsset>> outputItems Restrict blueprints that generate these items. protected List<AssetReference<ItemAsset>> outputItems Field Value List<AssetReference<ItemAsset>> resolvedInputItems protected List<ushort> resolvedInputItems Field Value List<ushort> resolvedOutputItems protected List<ushort> resolvedOutputItems Field Value List<ushort> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local isBlueprintBlacklisted(Blueprint) public bool isBlueprintBlacklisted(Blueprint blueprint) Parameters blueprint Blueprint Returns bool readList(DatDictionary, List<AssetReference<ItemAsset>>, string) protected void readList(DatDictionary reader, List<AssetReference<ItemAsset>> list, string key) Parameters reader DatDictionary list List<AssetReference<ItemAsset>> key string"
  },
  "api/SDG.Unturned.CraftingUpdated.html": {
    "href": "api/SDG.Unturned.CraftingUpdated.html",
    "title": "Delegate CraftingUpdated | Unturned Analyse Doc",
    "keywords": "Delegate CraftingUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void CraftingUpdated() Constructors CraftingUpdated(object, IntPtr) public CraftingUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Crosshair.html": {
    "href": "api/SDG.Unturned.Crosshair.html",
    "title": "Class Crosshair | Unturned Analyse Doc",
    "keywords": "Class Crosshair Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Crosshair : SleekWrapper Inheritance object Crosshair Constructors Crosshair(Bundle) public Crosshair(Bundle icons) Parameters icons Bundle Methods OnUpdate() public override void OnUpdate() SetDirectionalArrowsVisible(bool) public void SetDirectionalArrowsVisible(bool isVisible) Parameters isVisible bool SetGameWantsCenterDotVisible(bool) public void SetGameWantsCenterDotVisible(bool isVisible) Parameters isVisible bool SetPluginAllowsCenterDotVisible(bool) public void SetPluginAllowsCenterDotVisible(bool isVisible) Parameters isVisible bool SynchronizeCustomColors() public void SynchronizeCustomColors() SynchronizeImages() public void SynchronizeImages()"
  },
  "api/SDG.Unturned.CullingVolume.html": {
    "href": "api/SDG.Unturned.CullingVolume.html",
    "title": "Class CullingVolume | Unturned Analyse Doc",
    "keywords": "Class CullingVolume Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CullingVolume : LevelVolume<CullingVolume, CullingVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<CullingVolume, CullingVolumeManager> CullingVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<CullingVolume, CullingVolumeManager>.falloffDistance LevelVolume<CullingVolume, CullingVolumeManager>.editorGameObject LevelVolume<CullingVolume, CullingVolumeManager>.editorMeshFilter LevelVolume<CullingVolume, CullingVolumeManager>.editorMeshRenderer LevelVolume<CullingVolume, CullingVolumeManager>.forceShouldAddCollider LevelVolume<CullingVolume, CullingVolumeManager>.supportsBoxShape LevelVolume<CullingVolume, CullingVolumeManager>.supportsSphereShape LevelVolume<CullingVolume, CullingVolumeManager>.supportsFalloff LevelVolume<CullingVolume, CullingVolumeManager>.CreateMenu() LevelVolume<CullingVolume, CullingVolumeManager>.beginSelection(InteractionData) LevelVolume<CullingVolume, CullingVolumeManager>.endSelection(InteractionData) LevelVolume<CullingVolume, CullingVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<CullingVolume, CullingVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<CullingVolume, CullingVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<CullingVolume, CullingVolumeManager>.GetBoxSize() LevelVolume<CullingVolume, CullingVolumeManager>.GetBoxExtents() LevelVolume<CullingVolume, CullingVolumeManager>.GetInnerBoxSize() LevelVolume<CullingVolume, CullingVolumeManager>.GetInnerBoxExtents() LevelVolume<CullingVolume, CullingVolumeManager>.GetLocalInnerBoxSize() LevelVolume<CullingVolume, CullingVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<CullingVolume, CullingVolumeManager>.GetSphereRadius() LevelVolume<CullingVolume, CullingVolumeManager>.GetLocalSphereRadius() LevelVolume<CullingVolume, CullingVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<CullingVolume, CullingVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<CullingVolume, CullingVolumeManager>.SetSphereRadius(float) LevelVolume<CullingVolume, CullingVolumeManager>.CalculateWorldBounds() LevelVolume<CullingVolume, CullingVolumeManager>.CalculateLocalBounds() LevelVolume<CullingVolume, CullingVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<CullingVolume, CullingVolumeManager>.OnEnable() LevelVolume<CullingVolume, CullingVolumeManager>.OnDisable() LevelVolume<CullingVolume, CullingVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<CullingVolume, CullingVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<CullingVolume, CullingVolumeManager>.Awake() LevelVolume<CullingVolume, CullingVolumeManager>.Start() LevelVolume<CullingVolume, CullingVolumeManager>.OnDestroy() LevelVolume<CullingVolume, CullingVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<CullingVolume, CullingVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject Constructors CullingVolume() public CullingVolume() Properties CanBeSelected If true, editor tools can select and transform. False for items like the object-owned culling volumes. public override bool CanBeSelected { get; } Property Value bool ShouldSave If true, write to LevelHierarchy file. False for externally managed objects like legacy lighting WaterVolume. public override bool ShouldSave { get; } Property Value bool Methods CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement OnDisable() protected override void OnDisable() OnEnable() protected override void OnEnable() readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.CullingVolumeManager.html": {
    "href": "api/SDG.Unturned.CullingVolumeManager.html",
    "title": "Class CullingVolumeManager | Unturned Analyse Doc",
    "keywords": "Class CullingVolumeManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CullingVolumeManager : VolumeManager<CullingVolume, CullingVolumeManager> Inheritance object VolumeManagerBase VolumeManager<CullingVolume, CullingVolumeManager> CullingVolumeManager Inherited Members VolumeManager<CullingVolume, CullingVolumeManager>.allowInstantiation VolumeManager<CullingVolume, CullingVolumeManager>.supportsFalloff VolumeManager<CullingVolume, CullingVolumeManager>.allVolumes VolumeManager<CullingVolume, CullingVolumeManager>.Get() VolumeManager<CullingVolume, CullingVolumeManager>.GetAllVolumes() VolumeManager<CullingVolume, CullingVolumeManager>.GetRandomVolumeOrNull() VolumeManager<CullingVolume, CullingVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<CullingVolume, CullingVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<CullingVolume, CullingVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<CullingVolume, CullingVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<CullingVolume, CullingVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<CullingVolume, CullingVolumeManager>.EnumerateAllVolumes() VolumeManager<CullingVolume, CullingVolumeManager>.Raycast(Ray, out RaycastHit, out CullingVolume, float) VolumeManager<CullingVolume, CullingVolumeManager>.AddVolume(CullingVolume) VolumeManager<CullingVolume, CullingVolumeManager>.RemoveVolume(CullingVolume) VolumeManager<CullingVolume, CullingVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<CullingVolume, CullingVolumeManager>.SetDebugColor(Color) VolumeManager<CullingVolume, CullingVolumeManager>.Visibility VolumeManager<CullingVolume, CullingVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CullingVolumeManager() public CullingVolumeManager() Properties DefaultVisibility Hide culling volume by default because new mappers might wonder what these purple boxes are and why their number goes away after moving objects. protected override ELevelVolumeVisibility DefaultVisibility { get; } Property Value ELevelVolumeVisibility Methods OnUpdateGizmos(RuntimeGizmos) protected override void OnUpdateGizmos(RuntimeGizmos runtimeGizmos) Parameters runtimeGizmos RuntimeGizmos"
  },
  "api/SDG.Unturned.CuratedMapLink.html": {
    "href": "api/SDG.Unturned.CuratedMapLink.html",
    "title": "Class CuratedMapLink | Unturned Analyse Doc",
    "keywords": "Class CuratedMapLink Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CuratedMapLink Inheritance object CuratedMapLink Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CuratedMapLink() public CuratedMapLink() Fields Name Folder name of the map when it was in the game. public string Name Field Value string Required_Workshop_File_Ids Dependencies to subscribe to when subscribing through the in-game menu. e.g. Hawaii's assets are stored separately on the workshop. public ulong[] Required_Workshop_File_Ids Field Value ulong[] Visible_In_Singleplayer_Recommendations_List Only applies if player is not subscribed to the workshop file. Should an advertisement be shown in the Menu > Singleplayer > Curated list? public bool Visible_In_Singleplayer_Recommendations_List Field Value bool Workshop_File_Id Published steam id for the file after it was moved to the workshop. public ulong Workshop_File_Id Field Value ulong"
  },
  "api/SDG.Unturned.CustomWeatherComponent.html": {
    "href": "api/SDG.Unturned.CustomWeatherComponent.html",
    "title": "Class CustomWeatherComponent | Unturned Analyse Doc",
    "keywords": "Class CustomWeatherComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class CustomWeatherComponent : WeatherComponentBase Inheritance object WeatherComponentBase CustomWeatherComponent Derived LegacyRainComponent LegacySnowComponent Inherited Members WeatherComponentBase.asset WeatherComponentBase.globalBlendAlpha WeatherComponentBase.localVolumeBlendAlpha WeatherComponentBase.isWeatherActive WeatherComponentBase.hasTickedBlending WeatherComponentBase.isFullyTransitionedIn WeatherComponentBase.fogColor WeatherComponentBase.fogDensity WeatherComponentBase.overrideFog WeatherComponentBase.overrideAtmosphericFog WeatherComponentBase.overrideCloudColors WeatherComponentBase.cloudColor WeatherComponentBase.cloudRimColor WeatherComponentBase.puddleWaterLevel WeatherComponentBase.puddleIntensity WeatherComponentBase.brightnessMultiplier WeatherComponentBase.shadowStrengthMultiplier WeatherComponentBase.fogBlendExponent WeatherComponentBase.cloudBlendExponent WeatherComponentBase.windMain WeatherComponentBase.ambientAudioSource WeatherComponentBase.GetNetId() WeatherComponentBase.OnBeginTransitionIn() WeatherComponentBase.OnEndTransitionIn() WeatherComponentBase.OnBeginTransitionOut() WeatherComponentBase.OnEndTransitionOut() WeatherComponentBase.EnumerateMaskedPlayers() WeatherComponentBase.EffectBlendAlpha Constructors CustomWeatherComponent() public CustomWeatherComponent() Fields customAsset public WeatherAsset customAsset Field Value WeatherAsset Methods InitializeWeather() public override void InitializeWeather() PreDestroyWeather() public override void PreDestroyWeather() UpdateLightingTime(int, int, float) public override void UpdateLightingTime(int blendKey, int currentKey, float timeAlpha) Parameters blendKey int currentKey int timeAlpha float UpdateWeather() public override void UpdateWeather()"
  },
  "api/SDG.Unturned.CustomWeatherEventHook.html": {
    "href": "api/SDG.Unturned.CustomWeatherEventHook.html",
    "title": "Class CustomWeatherEventHook | Unturned Analyse Doc",
    "keywords": "Class CustomWeatherEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to any GameObject to receive weather events for a specific custom weather asset. public class CustomWeatherEventHook : MonoBehaviour Inheritance object CustomWeatherEventHook Constructors CustomWeatherEventHook() public CustomWeatherEventHook() Fields OnWeatherBeginTransitionIn Invoked when custom weather is activated, or immediately if weather is fading in when registered. public UnityEvent OnWeatherBeginTransitionIn Field Value UnityEvent OnWeatherBeginTransitionOut Invoked when custom weather is deactivated and begins fading out. public UnityEvent OnWeatherBeginTransitionOut Field Value UnityEvent OnWeatherEndTransitionIn Invoked when custom weather finishes fading in, or immediately if weather is already fully active when registered. public UnityEvent OnWeatherEndTransitionIn Field Value UnityEvent OnWeatherEndTransitionOut Invoked when custom weather finishes fading out and is destroyed. public UnityEvent OnWeatherEndTransitionOut Field Value UnityEvent WeatherAssetGuid GUID of custom weather asset to listen for. public string WeatherAssetGuid Field Value string parsedGuid GUID parsed from WeatherAssetGuid parameter. protected Guid parsedGuid Field Value Guid Methods OnDisable() protected void OnDisable() OnEnable() protected void OnEnable()"
  },
  "api/SDG.Unturned.Customization.html": {
    "href": "api/SDG.Unturned.Customization.html",
    "title": "Class Customization | Unturned Analyse Doc",
    "keywords": "Class Customization Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Customization Inheritance object Customization Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Customization() public Customization() Fields BEARDS_FREE public static readonly byte BEARDS_FREE Field Value byte BEARDS_PRO public static readonly byte BEARDS_PRO Field Value byte COLORS public static readonly Color[] COLORS Field Value Color[] FACES_FREE public static readonly byte FACES_FREE Field Value byte FACES_PRO public static readonly byte FACES_PRO Field Value byte FREE_CHARACTERS public static readonly byte FREE_CHARACTERS Field Value byte HAIRS_FREE public static readonly byte HAIRS_FREE Field Value byte HAIRS_PRO public static readonly byte HAIRS_PRO Field Value byte MARKER_COLORS public static readonly Color[] MARKER_COLORS Field Value Color[] PRO_CHARACTERS public static readonly byte PRO_CHARACTERS Field Value byte SKILLSETS public static readonly byte SKILLSETS Field Value byte SKINS public static readonly Color[] SKINS Field Value Color[] Methods checkColor(Color) public static bool checkColor(Color color) Parameters color Color Returns bool checkSkin(Color) public static bool checkSkin(Color color) Parameters color Color Returns bool"
  },
  "api/SDG.Unturned.DamageAnimalParameters.html": {
    "href": "api/SDG.Unturned.DamageAnimalParameters.html",
    "title": "Struct DamageAnimalParameters | Unturned Analyse Doc",
    "keywords": "Struct DamageAnimalParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll Payload for the DamageTool.damageAnimal function. public struct DamageAnimalParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors DamageAnimalParameters(Animal, Vector3, float) public DamageAnimalParameters(Animal animal, Vector3 direction, float damage) Parameters animal Animal direction Vector3 damage float Fields animal public Animal animal Field Value Animal applyGlobalArmorMultiplier Should game mode config damage multiplier be factored in? public bool applyGlobalArmorMultiplier Field Value bool damage public float damage Field Value float direction public Vector3 direction Field Value Vector3 instigator public object instigator Field Value object limb public ELimb limb Field Value ELimb ragdollEffect public ERagdollEffect ragdollEffect Field Value ERagdollEffect times public float times Field Value float Properties AlertPosition If not null and damage is applied, alertDamagedFromPoint(Vector3) is called with this position. public Vector3? AlertPosition { readonly get; set; } Property Value Vector3? Methods make(Animal, Vector3, IDamageMultiplier, ELimb) public static DamageAnimalParameters make(Animal animal, Vector3 direction, IDamageMultiplier multiplier, ELimb limb) Parameters animal Animal direction Vector3 multiplier IDamageMultiplier limb ELimb Returns DamageAnimalParameters makeInstakill(Animal) public static DamageAnimalParameters makeInstakill(Animal animal) Parameters animal Animal Returns DamageAnimalParameters"
  },
  "api/SDG.Unturned.DamageBarricadeRequestHandler.html": {
    "href": "api/SDG.Unturned.DamageBarricadeRequestHandler.html",
    "title": "Delegate DamageBarricadeRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageBarricadeRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageBarricadeRequestHandler(CSteamID instigatorSteamID, Transform barricadeTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID barricadeTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin Constructors DamageBarricadeRequestHandler(object, IntPtr) public DamageBarricadeRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, ref ushort, ref bool, EDamageOrigin, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform barricadeTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID barricadeTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref ushort, ref bool, IAsyncResult) public virtual void EndInvoke(ref ushort pendingTotalDamage, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalDamage ushort shouldAllow bool result IAsyncResult Invoke(CSteamID, Transform, ref ushort, ref bool, EDamageOrigin) public virtual void Invoke(CSteamID instigatorSteamID, Transform barricadeTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID barricadeTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin"
  },
  "api/SDG.Unturned.DamageInfo.html": {
    "href": "api/SDG.Unturned.DamageInfo.html",
    "title": "Class DamageInfo | Unturned Analyse Doc",
    "keywords": "Class DamageInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DamageInfo Inheritance object DamageInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DamageInfo() public DamageInfo() Fields collider public Collider collider Field Value Collider distance public float distance Field Value float normal public Vector3 normal Field Value Vector3 player public Player player Field Value Player point public Vector3 point Field Value Vector3 transform public Transform transform Field Value Transform vehicle public InteractableVehicle vehicle Field Value InteractableVehicle zombie public Zombie zombie Field Value Zombie Methods update(RaycastHit) public void update(RaycastHit hit) Parameters hit RaycastHit"
  },
  "api/SDG.Unturned.DamageObjectRequestHandler.html": {
    "href": "api/SDG.Unturned.DamageObjectRequestHandler.html",
    "title": "Delegate DamageObjectRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageObjectRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageObjectRequestHandler(CSteamID instigatorSteamID, Transform objectTransform, byte section, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID objectTransform Transform section byte pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin Constructors DamageObjectRequestHandler(object, IntPtr) public DamageObjectRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, byte, ref ushort, ref bool, EDamageOrigin, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform objectTransform, byte section, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID objectTransform Transform section byte pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref ushort, ref bool, IAsyncResult) public virtual void EndInvoke(ref ushort pendingTotalDamage, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalDamage ushort shouldAllow bool result IAsyncResult Invoke(CSteamID, Transform, byte, ref ushort, ref bool, EDamageOrigin) public virtual void Invoke(CSteamID instigatorSteamID, Transform objectTransform, byte section, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID objectTransform Transform section byte pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin"
  },
  "api/SDG.Unturned.DamagePlayerParameters.Bleeding.html": {
    "href": "api/SDG.Unturned.DamagePlayerParameters.Bleeding.html",
    "title": "Enum DamagePlayerParameters.Bleeding | Unturned Analyse Doc",
    "keywords": "Enum DamagePlayerParameters.Bleeding Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum DamagePlayerParameters.Bleeding Fields Always = 1 Default = 0 Heal = 3 Never = 2"
  },
  "api/SDG.Unturned.DamagePlayerParameters.Bones.html": {
    "href": "api/SDG.Unturned.DamagePlayerParameters.Bones.html",
    "title": "Enum DamagePlayerParameters.Bones | Unturned Analyse Doc",
    "keywords": "Enum DamagePlayerParameters.Bones Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum DamagePlayerParameters.Bones Fields Always = 1 Heal = 2 None = 0"
  },
  "api/SDG.Unturned.DamagePlayerParameters.html": {
    "href": "api/SDG.Unturned.DamagePlayerParameters.html",
    "title": "Struct DamagePlayerParameters | Unturned Analyse Doc",
    "keywords": "Struct DamagePlayerParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll Payload for the DamageTool.damagePlayer function. public struct DamagePlayerParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors DamagePlayerParameters(Player) public DamagePlayerParameters(Player player) Parameters player Player Fields applyGlobalArmorMultiplier Should game mode config damage multiplier be factored in? public bool applyGlobalArmorMultiplier Field Value bool bleedingModifier public DamagePlayerParameters.Bleeding bleedingModifier Field Value DamagePlayerParameters.Bleeding bonesModifier public DamagePlayerParameters.Bones bonesModifier Field Value DamagePlayerParameters.Bones cause public EDeathCause cause Field Value EDeathCause damage public float damage Field Value float direction public Vector3 direction Field Value Vector3 foodModifier public float foodModifier Field Value float hallucinationModifier public float hallucinationModifier Field Value float killer public CSteamID killer Field Value CSteamID limb public ELimb limb Field Value ELimb player public Player player Field Value Player ragdollEffect Effect to apply to ragdoll if dead. public ERagdollEffect ragdollEffect Field Value ERagdollEffect respectArmor Should armor worn on matching limb be factored in? public bool respectArmor Field Value bool times public float times Field Value float trackKill If player dies should it count towards quests? public bool trackKill Field Value bool virusModifier public float virusModifier Field Value float waterModifier public float waterModifier Field Value float Methods make(Player, EDeathCause, Vector3, IDamageMultiplier, ELimb) public static DamagePlayerParameters make(Player player, EDeathCause cause, Vector3 direction, IDamageMultiplier multiplier, ELimb limb) Parameters player Player cause EDeathCause direction Vector3 multiplier IDamageMultiplier limb ELimb Returns DamagePlayerParameters"
  },
  "api/SDG.Unturned.DamageResourceRequestHandler.html": {
    "href": "api/SDG.Unturned.DamageResourceRequestHandler.html",
    "title": "Delegate DamageResourceRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageResourceRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageResourceRequestHandler(CSteamID instigatorSteamID, Transform objectTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID objectTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin Constructors DamageResourceRequestHandler(object, IntPtr) public DamageResourceRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, ref ushort, ref bool, EDamageOrigin, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform objectTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID objectTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref ushort, ref bool, IAsyncResult) public virtual void EndInvoke(ref ushort pendingTotalDamage, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalDamage ushort shouldAllow bool result IAsyncResult Invoke(CSteamID, Transform, ref ushort, ref bool, EDamageOrigin) public virtual void Invoke(CSteamID instigatorSteamID, Transform objectTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID objectTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin"
  },
  "api/SDG.Unturned.DamageStructureRequestHandler.html": {
    "href": "api/SDG.Unturned.DamageStructureRequestHandler.html",
    "title": "Delegate DamageStructureRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageStructureRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageStructureRequestHandler(CSteamID instigatorSteamID, Transform structureTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID structureTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin Constructors DamageStructureRequestHandler(object, IntPtr) public DamageStructureRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, ref ushort, ref bool, EDamageOrigin, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform structureTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID structureTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref ushort, ref bool, IAsyncResult) public virtual void EndInvoke(ref ushort pendingTotalDamage, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalDamage ushort shouldAllow bool result IAsyncResult Invoke(CSteamID, Transform, ref ushort, ref bool, EDamageOrigin) public virtual void Invoke(CSteamID instigatorSteamID, Transform structureTransform, ref ushort pendingTotalDamage, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID structureTransform Transform pendingTotalDamage ushort shouldAllow bool damageOrigin EDamageOrigin"
  },
  "api/SDG.Unturned.DamageTireRequestHandler.html": {
    "href": "api/SDG.Unturned.DamageTireRequestHandler.html",
    "title": "Delegate DamageTireRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageTireRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageTireRequestHandler(CSteamID instigatorSteamID, InteractableVehicle vehicle, int tireIndex, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle tireIndex int shouldAllow bool damageOrigin EDamageOrigin Constructors DamageTireRequestHandler(object, IntPtr) public DamageTireRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, InteractableVehicle, int, ref bool, EDamageOrigin, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, InteractableVehicle vehicle, int tireIndex, ref bool shouldAllow, EDamageOrigin damageOrigin, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle tireIndex int shouldAllow bool damageOrigin EDamageOrigin callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(CSteamID, InteractableVehicle, int, ref bool, EDamageOrigin) public virtual void Invoke(CSteamID instigatorSteamID, InteractableVehicle vehicle, int tireIndex, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle tireIndex int shouldAllow bool damageOrigin EDamageOrigin"
  },
  "api/SDG.Unturned.DamageTool.DamageAnimalHandler.html": {
    "href": "api/SDG.Unturned.DamageTool.DamageAnimalHandler.html",
    "title": "Delegate DamageTool.DamageAnimalHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageTool.DamageAnimalHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageTool.DamageAnimalHandler(ref DamageAnimalParameters parameters, ref bool shouldAllow) Parameters parameters DamageAnimalParameters shouldAllow bool Constructors DamageAnimalHandler(object, IntPtr) public DamageAnimalHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ref DamageAnimalParameters, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ref DamageAnimalParameters parameters, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters parameters DamageAnimalParameters shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref DamageAnimalParameters, ref bool, IAsyncResult) public virtual void EndInvoke(ref DamageAnimalParameters parameters, ref bool shouldAllow, IAsyncResult result) Parameters parameters DamageAnimalParameters shouldAllow bool result IAsyncResult Invoke(ref DamageAnimalParameters, ref bool) public virtual void Invoke(ref DamageAnimalParameters parameters, ref bool shouldAllow) Parameters parameters DamageAnimalParameters shouldAllow bool"
  },
  "api/SDG.Unturned.DamageTool.DamagePlayerHandler.html": {
    "href": "api/SDG.Unturned.DamageTool.DamagePlayerHandler.html",
    "title": "Delegate DamageTool.DamagePlayerHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageTool.DamagePlayerHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageTool.DamagePlayerHandler(ref DamagePlayerParameters parameters, ref bool shouldAllow) Parameters parameters DamagePlayerParameters shouldAllow bool Constructors DamagePlayerHandler(object, IntPtr) public DamagePlayerHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ref DamagePlayerParameters, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ref DamagePlayerParameters parameters, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters parameters DamagePlayerParameters shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref DamagePlayerParameters, ref bool, IAsyncResult) public virtual void EndInvoke(ref DamagePlayerParameters parameters, ref bool shouldAllow, IAsyncResult result) Parameters parameters DamagePlayerParameters shouldAllow bool result IAsyncResult Invoke(ref DamagePlayerParameters, ref bool) public virtual void Invoke(ref DamagePlayerParameters parameters, ref bool shouldAllow) Parameters parameters DamagePlayerParameters shouldAllow bool"
  },
  "api/SDG.Unturned.DamageTool.DamageZombieHandler.html": {
    "href": "api/SDG.Unturned.DamageTool.DamageZombieHandler.html",
    "title": "Delegate DamageTool.DamageZombieHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageTool.DamageZombieHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageTool.DamageZombieHandler(ref DamageZombieParameters parameters, ref bool shouldAllow) Parameters parameters DamageZombieParameters shouldAllow bool Constructors DamageZombieHandler(object, IntPtr) public DamageZombieHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ref DamageZombieParameters, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ref DamageZombieParameters parameters, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters parameters DamageZombieParameters shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref DamageZombieParameters, ref bool, IAsyncResult) public virtual void EndInvoke(ref DamageZombieParameters parameters, ref bool shouldAllow, IAsyncResult result) Parameters parameters DamageZombieParameters shouldAllow bool result IAsyncResult Invoke(ref DamageZombieParameters, ref bool) public virtual void Invoke(ref DamageZombieParameters parameters, ref bool shouldAllow) Parameters parameters DamageZombieParameters shouldAllow bool"
  },
  "api/SDG.Unturned.DamageTool.PlayerAllowedToDamagePlayerHandler.html": {
    "href": "api/SDG.Unturned.DamageTool.PlayerAllowedToDamagePlayerHandler.html",
    "title": "Delegate DamageTool.PlayerAllowedToDamagePlayerHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageTool.PlayerAllowedToDamagePlayerHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageTool.PlayerAllowedToDamagePlayerHandler(Player instigator, Player victim, ref bool isAllowed) Parameters instigator Player victim Player isAllowed bool Constructors PlayerAllowedToDamagePlayerHandler(object, IntPtr) public PlayerAllowedToDamagePlayerHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, Player, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player instigator, Player victim, ref bool isAllowed, AsyncCallback callback, object @object) Parameters instigator Player victim Player isAllowed bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool isAllowed, IAsyncResult result) Parameters isAllowed bool result IAsyncResult Invoke(Player, Player, ref bool) public virtual void Invoke(Player instigator, Player victim, ref bool isAllowed) Parameters instigator Player victim Player isAllowed bool"
  },
  "api/SDG.Unturned.DamageTool.html": {
    "href": "api/SDG.Unturned.DamageTool.html",
    "title": "Class DamageTool | Unturned Analyse Doc",
    "keywords": "Class DamageTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DamageTool Inheritance object DamageTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DamageTool() public DamageTool() Fields animalDamaged [Obsolete(\"Use damageAnimalRequested\")] public static DamageToolAnimalDamagedHandler animalDamaged Field Value DamageToolAnimalDamagedHandler playerDamaged [Obsolete(\"Use damagePlayerRequested\")] public static DamageToolPlayerDamagedHandler playerDamaged Field Value DamageToolPlayerDamagedHandler zombieDamaged [Obsolete(\"Use damageZombieRequested\")] public static DamageToolZombieDamagedHandler zombieDamaged Field Value DamageToolZombieDamagedHandler Methods GetZombieExplosionArmor(Zombie) Refer to getPlayerExplosionArmor for explanation of total/average. public static float GetZombieExplosionArmor(Zombie zombie) Parameters zombie Zombie Returns float ReceiveSpawnBulletImpact(Vector3, Vector3, string, Transform, NetId) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveSpawnBulletImpact(Vector3 position, Vector3 normal, string materialName, Transform colliderTransform, NetId instigatorNetId) Parameters position Vector3 normal Vector3 materialName string colliderTransform Transform instigatorNetId NetId ReceiveSpawnLegacyImpact(Vector3, Vector3, string, Transform) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveSpawnLegacyImpact(Vector3 position, Vector3 normal, string materialName, Transform colliderTransform) Parameters position Vector3 normal Vector3 materialName string colliderTransform Transform ServerTriggerImpactEffectForMagazinesV2(EffectAsset, Vector3, Vector3, SteamPlayer) Server spawn effect for all players within range and instigator receives effect regardless of distance. public static void ServerTriggerImpactEffectForMagazinesV2(EffectAsset asset, Vector3 position, Vector3 normal, SteamPlayer instigatingClient) Parameters asset EffectAsset position Vector3 normal Vector3 instigatingClient SteamPlayer damage(Animal, ELimb, Vector3, IDamageMultiplier, float, out EPlayerKill, out uint, ERagdollEffect) Legacy function replaced by damageAnimal. public static void damage(Animal animal, ELimb limb, Vector3 direction, IDamageMultiplier multiplier, float times, out EPlayerKill kill, out uint xp, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters animal Animal limb ELimb direction Vector3 multiplier IDamageMultiplier times float kill EPlayerKill xp uint ragdollEffect ERagdollEffect damage(Animal, Vector3, float, float, out EPlayerKill, out uint, ERagdollEffect) Legacy function replaced by damageAnimal. public static void damage(Animal animal, Vector3 direction, float damage, float times, out EPlayerKill kill, out uint xp, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters animal Animal direction Vector3 damage float times float kill EPlayerKill xp uint ragdollEffect ERagdollEffect damage(InteractableVehicle, bool, Vector3, bool, float, float, bool, out EPlayerKill, CSteamID, EDamageOrigin) public static void damage(InteractableVehicle vehicle, bool damageTires, Vector3 position, bool isRepairing, float vehicleDamage, float times, bool canRepair, out EPlayerKill kill, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters vehicle InteractableVehicle damageTires bool position Vector3 isRepairing bool vehicleDamage float times float canRepair bool kill EPlayerKill instigatorSteamID CSteamID damageOrigin EDamageOrigin damage(Player, EDeathCause, ELimb, CSteamID, Vector3, IDamageMultiplier, float, bool, out EPlayerKill, bool, ERagdollEffect) public static void damage(Player player, EDeathCause cause, ELimb limb, CSteamID killer, Vector3 direction, IDamageMultiplier multiplier, float times, bool armor, out EPlayerKill kill, bool trackKill = false, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters player Player cause EDeathCause limb ELimb killer CSteamID direction Vector3 multiplier IDamageMultiplier times float armor bool kill EPlayerKill trackKill bool ragdollEffect ERagdollEffect damage(Player, EDeathCause, ELimb, CSteamID, Vector3, float, float, out EPlayerKill, bool, bool, ERagdollEffect) public static void damage(Player player, EDeathCause cause, ELimb limb, CSteamID killer, Vector3 direction, float damage, float times, out EPlayerKill kill, bool applyGlobalArmorMultiplier = true, bool trackKill = false, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters player Player cause EDeathCause limb ELimb killer CSteamID direction Vector3 damage float times float kill EPlayerKill applyGlobalArmorMultiplier bool trackKill bool ragdollEffect ERagdollEffect damage(Zombie, ELimb, Vector3, IDamageMultiplier, float, bool, out EPlayerKill, out uint, EZombieStunOverride, ERagdollEffect) Legacy function replaced by damageZombie. public static void damage(Zombie zombie, ELimb limb, Vector3 direction, IDamageMultiplier multiplier, float times, bool armor, out EPlayerKill kill, out uint xp, EZombieStunOverride zombieStunOverride = EZombieStunOverride.None, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters zombie Zombie limb ELimb direction Vector3 multiplier IDamageMultiplier times float armor bool kill EPlayerKill xp uint zombieStunOverride EZombieStunOverride ragdollEffect ERagdollEffect damage(Zombie, Vector3, float, float, out EPlayerKill, out uint, EZombieStunOverride, ERagdollEffect) Legacy function replaced by damageZombie. public static void damage(Zombie zombie, Vector3 direction, float damage, float times, out EPlayerKill kill, out uint xp, EZombieStunOverride zombieStunOverride = EZombieStunOverride.None, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters zombie Zombie direction Vector3 damage float times float kill EPlayerKill xp uint zombieStunOverride EZombieStunOverride ragdollEffect ERagdollEffect damage(Transform, bool, float, float, out EPlayerKill, CSteamID, EDamageOrigin) public static void damage(Transform barricade, bool isRepairing, float barricadeDamage, float times, out EPlayerKill kill, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters barricade Transform isRepairing bool barricadeDamage float times float kill EPlayerKill instigatorSteamID CSteamID damageOrigin EDamageOrigin damage(Transform, bool, Vector3, float, float, out EPlayerKill, CSteamID, EDamageOrigin) public static void damage(Transform structure, bool isRepairing, Vector3 direction, float structureDamage, float times, out EPlayerKill kill, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters structure Transform isRepairing bool direction Vector3 structureDamage float times float kill EPlayerKill instigatorSteamID CSteamID damageOrigin EDamageOrigin damage(Transform, Vector3, byte, float, float, out EPlayerKill, out uint, CSteamID, EDamageOrigin) public static void damage(Transform obj, Vector3 direction, byte section, float objectDamage, float times, out EPlayerKill kill, out uint xp, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters obj Transform direction Vector3 section byte objectDamage float times float kill EPlayerKill xp uint instigatorSteamID CSteamID damageOrigin EDamageOrigin damage(Transform, Vector3, float, float, float, out EPlayerKill, out uint, CSteamID, EDamageOrigin) public static void damage(Transform resource, Vector3 direction, float resourceDamage, float times, float drops, out EPlayerKill kill, out uint xp, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters resource Transform direction Vector3 resourceDamage float times float drops float kill EPlayerKill xp uint instigatorSteamID CSteamID damageOrigin EDamageOrigin damageAnimal(DamageAnimalParameters, out EPlayerKill, out uint) Do damage to an animal. public static void damageAnimal(DamageAnimalParameters parameters, out EPlayerKill kill, out uint xp) Parameters parameters DamageAnimalParameters kill EPlayerKill xp uint damagePlayer(DamagePlayerParameters, out EPlayerKill) public static void damagePlayer(DamagePlayerParameters parameters, out EPlayerKill kill) Parameters parameters DamagePlayerParameters kill EPlayerKill damageZombie(DamageZombieParameters, out EPlayerKill, out uint) Do damage to a zombie. public static void damageZombie(DamageZombieParameters parameters, out EPlayerKill kill, out uint xp) Parameters parameters DamageZombieParameters kill EPlayerKill xp uint explode(ExplosionParameters, out List<EPlayerKill>) Do radial damage. public static void explode(ExplosionParameters parameters, out List<EPlayerKill> kills) Parameters parameters ExplosionParameters kills List<EPlayerKill> explode(Vector3, float, EDeathCause, CSteamID, float, float, float, float, float, float, float, float, out List<EPlayerKill>, EExplosionDamageType, float, bool, bool, EDamageOrigin, ERagdollEffect) This unwieldy mess is the original explode function, but should be maintained for backwards compatibility with plugins. public static void explode(Vector3 point, float damageRadius, EDeathCause cause, CSteamID killer, float playerDamage, float zombieDamage, float animalDamage, float barricadeDamage, float structureDamage, float vehicleDamage, float resourceDamage, float objectDamage, out List<EPlayerKill> kills, EExplosionDamageType damageType = EExplosionDamageType.CONVENTIONAL, float alertRadius = 32, bool playImpactEffect = true, bool penetrateBuildables = false, EDamageOrigin damageOrigin = EDamageOrigin.Unknown, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters point Vector3 damageRadius float cause EDeathCause killer CSteamID playerDamage float zombieDamage float animalDamage float barricadeDamage float structureDamage float vehicleDamage float resourceDamage float objectDamage float kills List<EPlayerKill> damageType EExplosionDamageType alertRadius float playImpactEffect bool penetrateBuildables bool damageOrigin EDamageOrigin ragdollEffect ERagdollEffect getAnimal(Transform) public static Animal getAnimal(Transform limb) Parameters limb Transform Returns Animal getBarricadeRootTransform(Transform) public static Transform getBarricadeRootTransform(Transform barricadeTransform) Parameters barricadeTransform Transform Returns Transform getLimb(Transform) public static ELimb getLimb(Transform limb) Parameters limb Transform Returns ELimb getMaterial(Vector3, Transform, Collider) [Obsolete(\"Physics material enum replaced by string names\")] public static EPhysicsMaterial getMaterial(Vector3 point, Transform transform, Collider collider) Parameters point Vector3 transform Transform collider Collider Returns EPhysicsMaterial getPlayer(Transform) public static Player getPlayer(Transform limb) Parameters limb Transform Returns Player getPlayerArmor(ELimb, Player) public static float getPlayerArmor(ELimb limb, Player player) Parameters limb ELimb player Player Returns float getPlayerExplosionArmor(Player) Get average explosionArmor of player's equipped clothing. public static float getPlayerExplosionArmor(Player player) Parameters player Player Returns float getResourceRootTransform(Transform) Was necessary when trees were children of ground transform. public static Transform getResourceRootTransform(Transform resourceTransform) Parameters resourceTransform Transform Returns Transform getStructureRootTransform(Transform) Was necessary when structures were children of level transform. public static Transform getStructureRootTransform(Transform structureTransform) Parameters structureTransform Transform Returns Transform getVehicle(Transform) public static InteractableVehicle getVehicle(Transform model) Parameters model Transform Returns InteractableVehicle getZombie(Transform) public static Zombie getZombie(Transform limb) Parameters limb Transform Returns Zombie getZombieArmor(ELimb, Zombie) public static float getZombieArmor(ELimb limb, Zombie zombie) Parameters limb ELimb zombie Zombie Returns float impact(Vector3, Vector3, EPhysicsMaterial, bool) Server spawn impact effect for all players within range. [Obsolete(\"Replaced by separate melee and bullet impact methods\")] public static void impact(Vector3 point, Vector3 normal, EPhysicsMaterial material, bool forceDynamic) Parameters point Vector3 normal Vector3 material EPhysicsMaterial forceDynamic bool impact(Vector3, Vector3, EPhysicsMaterial, bool, CSteamID, Vector3) Server spawn impact effect for all players within range. Optional \"spectator\" receives effect regardless of distance. [Obsolete(\"Replaced by separate melee and bullet impact methods\")] public static void impact(Vector3 point, Vector3 normal, EPhysicsMaterial material, bool forceDynamic, CSteamID spectatorID, Vector3 spectatorPoint) Parameters point Vector3 normal Vector3 material EPhysicsMaterial forceDynamic bool spectatorID CSteamID spectatorPoint Vector3 impact(Vector3, Vector3, ushort, CSteamID, Vector3) Server spawn effect by ID for all players within range. Optional \"spectator\" receives effect regardless of distance. [Obsolete(\"Replaced by ServerTriggerImpactEffectForMagazinesV2\")] public static void impact(Vector3 point, Vector3 normal, ushort id, CSteamID spectatorID, Vector3 spectatorPoint) Parameters point Vector3 normal Vector3 id ushort spectatorID CSteamID spectatorPoint Vector3 isPlayerAllowedToDamagePlayer(Player, Player) public static bool isPlayerAllowedToDamagePlayer(Player instigator, Player victim) Parameters instigator Player victim Player Returns bool raycast(Ray, float, int) public static RaycastInfo raycast(Ray ray, float range, int mask) Parameters ray Ray range float mask int Returns RaycastInfo raycast(Ray, float, int, Player) public static RaycastInfo raycast(Ray ray, float range, int mask, Player ignorePlayer = null) Parameters ray Ray range float mask int ignorePlayer Player Returns RaycastInfo Events damageAnimalRequested Replacement for animalDamaged. public static event DamageTool.DamageAnimalHandler damageAnimalRequested Event Type DamageTool.DamageAnimalHandler damagePlayerRequested Replacement for playerDamaged. public static event DamageTool.DamagePlayerHandler damagePlayerRequested Event Type DamageTool.DamagePlayerHandler damageZombieRequested Replacement for zombieDamaged. public static event DamageTool.DamageZombieHandler damageZombieRequested Event Type DamageTool.DamageZombieHandler onPlayerAllowedToDamagePlayer public static event DamageTool.PlayerAllowedToDamagePlayerHandler onPlayerAllowedToDamagePlayer Event Type DamageTool.PlayerAllowedToDamagePlayerHandler"
  },
  "api/SDG.Unturned.DamageToolAnimalDamagedHandler.html": {
    "href": "api/SDG.Unturned.DamageToolAnimalDamagedHandler.html",
    "title": "Delegate DamageToolAnimalDamagedHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageToolAnimalDamagedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageToolAnimalDamagedHandler(Animal animal, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage) Parameters animal Animal direction Vector3 damage float times float canDamage bool Constructors DamageToolAnimalDamagedHandler(object, IntPtr) public DamageToolAnimalDamagedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Animal, ref Vector3, ref float, ref float, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Animal animal, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage, AsyncCallback callback, object @object) Parameters animal Animal direction Vector3 damage float times float canDamage bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref float, ref float, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 direction, ref float damage, ref float times, ref bool canDamage, IAsyncResult result) Parameters direction Vector3 damage float times float canDamage bool result IAsyncResult Invoke(Animal, ref Vector3, ref float, ref float, ref bool) public virtual void Invoke(Animal animal, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage) Parameters animal Animal direction Vector3 damage float times float canDamage bool"
  },
  "api/SDG.Unturned.DamageToolPlayerDamagedHandler.html": {
    "href": "api/SDG.Unturned.DamageToolPlayerDamagedHandler.html",
    "title": "Delegate DamageToolPlayerDamagedHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageToolPlayerDamagedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageToolPlayerDamagedHandler(Player player, ref EDeathCause cause, ref ELimb limb, ref CSteamID killer, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage) Parameters player Player cause EDeathCause limb ELimb killer CSteamID direction Vector3 damage float times float canDamage bool Constructors DamageToolPlayerDamagedHandler(object, IntPtr) public DamageToolPlayerDamagedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, ref EDeathCause, ref ELimb, ref CSteamID, ref Vector3, ref float, ref float, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, ref EDeathCause cause, ref ELimb limb, ref CSteamID killer, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage, AsyncCallback callback, object @object) Parameters player Player cause EDeathCause limb ELimb killer CSteamID direction Vector3 damage float times float canDamage bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref EDeathCause, ref ELimb, ref CSteamID, ref Vector3, ref float, ref float, ref bool, IAsyncResult) public virtual void EndInvoke(ref EDeathCause cause, ref ELimb limb, ref CSteamID killer, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage, IAsyncResult result) Parameters cause EDeathCause limb ELimb killer CSteamID direction Vector3 damage float times float canDamage bool result IAsyncResult Invoke(Player, ref EDeathCause, ref ELimb, ref CSteamID, ref Vector3, ref float, ref float, ref bool) public virtual void Invoke(Player player, ref EDeathCause cause, ref ELimb limb, ref CSteamID killer, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage) Parameters player Player cause EDeathCause limb ELimb killer CSteamID direction Vector3 damage float times float canDamage bool"
  },
  "api/SDG.Unturned.DamageToolZombieDamagedHandler.html": {
    "href": "api/SDG.Unturned.DamageToolZombieDamagedHandler.html",
    "title": "Delegate DamageToolZombieDamagedHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageToolZombieDamagedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageToolZombieDamagedHandler(Zombie zombie, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage) Parameters zombie Zombie direction Vector3 damage float times float canDamage bool Constructors DamageToolZombieDamagedHandler(object, IntPtr) public DamageToolZombieDamagedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Zombie, ref Vector3, ref float, ref float, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Zombie zombie, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage, AsyncCallback callback, object @object) Parameters zombie Zombie direction Vector3 damage float times float canDamage bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref float, ref float, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 direction, ref float damage, ref float times, ref bool canDamage, IAsyncResult result) Parameters direction Vector3 damage float times float canDamage bool result IAsyncResult Invoke(Zombie, ref Vector3, ref float, ref float, ref bool) public virtual void Invoke(Zombie zombie, ref Vector3 direction, ref float damage, ref float times, ref bool canDamage) Parameters zombie Zombie direction Vector3 damage float times float canDamage bool"
  },
  "api/SDG.Unturned.DamageTool_NetMethods.html": {
    "href": "api/SDG.Unturned.DamageTool_NetMethods.html",
    "title": "Class DamageTool_NetMethods | Unturned Analyse Doc",
    "keywords": "Class DamageTool_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(DamageTool))] public static class DamageTool_NetMethods Inheritance object DamageTool_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveSpawnBulletImpact_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSpawnBulletImpact\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSpawnBulletImpact_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSpawnBulletImpact_Write(NetPakWriter, Vector3, Vector3, string, Transform, NetId) [NetInvokableGeneratedMethod(\"ReceiveSpawnBulletImpact\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSpawnBulletImpact_Write(NetPakWriter writer, Vector3 position, Vector3 normal, string materialName, Transform colliderTransform, NetId instigatorNetId) Parameters writer NetPakWriter position Vector3 normal Vector3 materialName string colliderTransform Transform instigatorNetId NetId ReceiveSpawnLegacyImpact_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSpawnLegacyImpact\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSpawnLegacyImpact_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSpawnLegacyImpact_Write(NetPakWriter, Vector3, Vector3, string, Transform) [NetInvokableGeneratedMethod(\"ReceiveSpawnLegacyImpact\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSpawnLegacyImpact_Write(NetPakWriter writer, Vector3 position, Vector3 normal, string materialName, Transform colliderTransform) Parameters writer NetPakWriter position Vector3 normal Vector3 materialName string colliderTransform Transform"
  },
  "api/SDG.Unturned.DamageVehicleRequestHandler.html": {
    "href": "api/SDG.Unturned.DamageVehicleRequestHandler.html",
    "title": "Delegate DamageVehicleRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DamageVehicleRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DamageVehicleRequestHandler(CSteamID instigatorSteamID, InteractableVehicle vehicle, ref ushort pendingTotalDamage, ref bool canRepair, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle pendingTotalDamage ushort canRepair bool shouldAllow bool damageOrigin EDamageOrigin Constructors DamageVehicleRequestHandler(object, IntPtr) public DamageVehicleRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, InteractableVehicle, ref ushort, ref bool, ref bool, EDamageOrigin, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, InteractableVehicle vehicle, ref ushort pendingTotalDamage, ref bool canRepair, ref bool shouldAllow, EDamageOrigin damageOrigin, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle pendingTotalDamage ushort canRepair bool shouldAllow bool damageOrigin EDamageOrigin callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref ushort, ref bool, ref bool, IAsyncResult) public virtual void EndInvoke(ref ushort pendingTotalDamage, ref bool canRepair, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalDamage ushort canRepair bool shouldAllow bool result IAsyncResult Invoke(CSteamID, InteractableVehicle, ref ushort, ref bool, ref bool, EDamageOrigin) public virtual void Invoke(CSteamID instigatorSteamID, InteractableVehicle vehicle, ref ushort pendingTotalDamage, ref bool canRepair, ref bool shouldAllow, EDamageOrigin damageOrigin) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle pendingTotalDamage ushort canRepair bool shouldAllow bool damageOrigin EDamageOrigin"
  },
  "api/SDG.Unturned.DamageZombieParameters.html": {
    "href": "api/SDG.Unturned.DamageZombieParameters.html",
    "title": "Struct DamageZombieParameters | Unturned Analyse Doc",
    "keywords": "Struct DamageZombieParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll Payload for the DamageTool.damageZombie function. public struct DamageZombieParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors DamageZombieParameters(Zombie, Vector3, float) public DamageZombieParameters(Zombie zombie, Vector3 direction, float damage) Parameters zombie Zombie direction Vector3 damage float Fields allowBackstab public bool allowBackstab Field Value bool applyGlobalArmorMultiplier Should game mode config damage multiplier be factored in? public bool applyGlobalArmorMultiplier Field Value bool damage public float damage Field Value float direction public Vector3 direction Field Value Vector3 instigator public object instigator Field Value object limb public ELimb limb Field Value ELimb ragdollEffect public ERagdollEffect ragdollEffect Field Value ERagdollEffect respectArmor public bool respectArmor Field Value bool times public float times Field Value float zombie public Zombie zombie Field Value Zombie zombieStunOverride public EZombieStunOverride zombieStunOverride Field Value EZombieStunOverride Properties AlertPosition If not null and damage is applied, alert(Player) is called with this position (startle: true). public Vector3? AlertPosition { readonly get; set; } Property Value Vector3? legacyArmor Equivalent to the \"armor\" parameter of the legacy damage function. public bool legacyArmor { set; } Property Value bool Methods make(Zombie, Vector3, IDamageMultiplier, ELimb) public static DamageZombieParameters make(Zombie zombie, Vector3 direction, IDamageMultiplier multiplier, ELimb limb) Parameters zombie Zombie direction Vector3 multiplier IDamageMultiplier limb ELimb Returns DamageZombieParameters makeInstakill(Zombie) public static DamageZombieParameters makeInstakill(Zombie zombie) Parameters zombie Zombie Returns DamageZombieParameters"
  },
  "api/SDG.Unturned.Damaged.html": {
    "href": "api/SDG.Unturned.Damaged.html",
    "title": "Delegate Damaged | Unturned Analyse Doc",
    "keywords": "Delegate Damaged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Damaged(byte damage) Parameters damage byte Constructors Damaged(object, IntPtr) public Damaged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte damage, AsyncCallback callback, object @object) Parameters damage byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte) public virtual void Invoke(byte damage) Parameters damage byte"
  },
  "api/SDG.Unturned.Data.html": {
    "href": "api/SDG.Unturned.Data.html",
    "title": "Class Data | Unturned Analyse Doc",
    "keywords": "Class Data Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Data Inheritance object Data Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Data() public Data() Data(string) public Data(string content) Parameters content string Fields isCSV public bool isCSV Field Value bool Properties errors public List<string> errors { get; protected set; } Property Value List<string> hash public byte[] hash { get; } Property Value byte[] isEmpty public bool isEmpty { get; } Property Value bool Methods ReadAudioReference(string) public AudioReference ReadAudioReference(string key) Parameters key string Returns AudioReference ReadColor32RGB(string, Color32) Read 8-bit per channel color excluding alpha. public Color32 ReadColor32RGB(string key, Color32 defaultValue) Parameters key string defaultValue Color32 Returns Color32 ReadGuidOrLegacyId(string, out Guid) Intended as a drop-in replacement for existing assets with property uint16s. public ushort ReadGuidOrLegacyId(string key, out Guid guid) Parameters key string guid Guid Returns ushort ReadGuidOrLegacyId(string, out Guid, out ushort) public void ReadGuidOrLegacyId(string key, out Guid guid, out ushort legacyId) Parameters key string guid Guid legacyId ushort TryReadString(string, out string) public bool TryReadString(string key, out string value) Parameters key string value string Returns bool getContents() public KeyValuePair<string, string>[] getContents() Returns KeyValuePair<string, string>[] getFile() public string getFile() Returns string getKeysWithValue(string) public string[] getKeysWithValue(string value) Parameters value string Returns string[] getLines() public string[] getLines() Returns string[] getValuesWithKey(string) public string[] getValuesWithKey(string key) Parameters key string Returns string[] has(string) public bool has(string key) Parameters key string Returns bool log() public void log() readAssetReference<T>(string) public AssetReference<T> readAssetReference<T>(string key) where T : Asset Parameters key string Returns AssetReference<T> Type Parameters T readAssetReference<T>(string, in AssetReference<T>) public AssetReference<T> readAssetReference<T>(string key, in AssetReference<T> defaultValue) where T : Asset Parameters key string defaultValue AssetReference<T> Returns AssetReference<T> Type Parameters T readBoolean(string, bool) public bool readBoolean(string key, bool defaultValue = false) Parameters key string defaultValue bool Returns bool readByte(string, byte) public byte readByte(string key, byte defaultValue = 0) Parameters key string defaultValue byte Returns byte readByteArray(string) public byte[] readByteArray(string key) Parameters key string Returns byte[] readColor(string) public Color readColor(string key) Parameters key string Returns Color readColor(string, Color) public Color readColor(string key, Color defaultColor) Parameters key string defaultColor Color Returns Color readEnum<T>(string, T) public T readEnum<T>(string key, T defaultValue = default) where T : struct Parameters key string defaultValue T Returns T Type Parameters T readGUID(string) public Guid readGUID(string key) Parameters key string Returns Guid readInt16(string, short) public short readInt16(string key, short defaultValue = 0) Parameters key string defaultValue short Returns short readInt32(string, int) public int readInt32(string key, int defaultValue = 0) Parameters key string defaultValue int Returns int readInt64(string, long) public long readInt64(string key, long defaultValue = 0) Parameters key string defaultValue long Returns long readMasterBundleReference<T>(string) public MasterBundleReference<T> readMasterBundleReference<T>(string key) where T : Object Parameters key string Returns MasterBundleReference<T> Type Parameters T readQuaternion(string) public Quaternion readQuaternion(string key) Parameters key string Returns Quaternion readSByte(string, sbyte) public sbyte readSByte(string key, sbyte defaultValue = 0) Parameters key string defaultValue sbyte Returns sbyte readSingle(string, float) public float readSingle(string key, float defaultValue = 0) Parameters key string defaultValue float Returns float readSteamID(string) public CSteamID readSteamID(string key) Parameters key string Returns CSteamID readString(string, string) public string readString(string key, string defaultValue = null) Parameters key string defaultValue string Returns string readUInt16(string, ushort) public ushort readUInt16(string key, ushort defaultValue = 0) Parameters key string defaultValue ushort Returns ushort readUInt32(string, uint) public uint readUInt32(string key, uint defaultValue = 0) Parameters key string defaultValue uint Returns uint readUInt64(string, ulong) public ulong readUInt64(string key, ulong defaultValue = 0) Parameters key string defaultValue ulong Returns ulong readVector3(string) public Vector3 readVector3(string key) Parameters key string Returns Vector3 reset() public void reset() writeBoolean(string, bool) public void writeBoolean(string key, bool value) Parameters key string value bool writeByte(string, byte) public void writeByte(string key, byte value) Parameters key string value byte writeByteArray(string, byte[]) public void writeByteArray(string key, byte[] value) Parameters key string value byte[] writeColor(string, Color) public void writeColor(string key, Color value) Parameters key string value Color writeGUID(string, Guid) public void writeGUID(string key, Guid value) Parameters key string value Guid writeInt16(string, short) public void writeInt16(string key, short value) Parameters key string value short writeInt32(string, int) public void writeInt32(string key, int value) Parameters key string value int writeInt64(string, long) public void writeInt64(string key, long value) Parameters key string value long writeQuaternion(string, Quaternion) public void writeQuaternion(string key, Quaternion value) Parameters key string value Quaternion writeSingle(string, float) public void writeSingle(string key, float value) Parameters key string value float writeSteamID(string, CSteamID) public void writeSteamID(string key, CSteamID value) Parameters key string value CSteamID writeString(string, string) public void writeString(string key, string value) Parameters key string value string writeUInt16(string, ushort) public void writeUInt16(string key, ushort value) Parameters key string value ushort writeUInt32(string, uint) public void writeUInt32(string key, uint value) Parameters key string value uint writeUInt64(string, ulong) public void writeUInt64(string key, ulong value) Parameters key string value ulong writeVector3(string, Vector3) public void writeVector3(string key, Vector3 value) Parameters key string value Vector3"
  },
  "api/SDG.Unturned.DateTimeRange.html": {
    "href": "api/SDG.Unturned.DateTimeRange.html",
    "title": "Class DateTimeRange | Unturned Analyse Doc",
    "keywords": "Class DateTimeRange Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DateTimeRange Inheritance object DateTimeRange Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DateTimeRange(DateTime, DateTime) public DateTimeRange(DateTime start, DateTime end) Parameters start DateTime end DateTime Fields end public DateTime end Field Value DateTime start public DateTime start Field Value DateTime Methods isBackendNowWithinRange() Is server UTC time within this time range? public bool isBackendNowWithinRange() Returns bool isNowWithinRange() Is client UTC time within this time range? public bool isNowWithinRange() Returns bool isWithinRange(DateTime) public bool isWithinRange(DateTime dateTime) Parameters dateTime DateTime Returns bool"
  },
  "api/SDG.Unturned.DayNightUpdated.html": {
    "href": "api/SDG.Unturned.DayNightUpdated.html",
    "title": "Delegate DayNightUpdated | Unturned Analyse Doc",
    "keywords": "Delegate DayNightUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DayNightUpdated(bool isDaytime) Parameters isDaytime bool Constructors DayNightUpdated(object, IntPtr) public DayNightUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isDaytime, AsyncCallback callback, object @object) Parameters isDaytime bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isDaytime) Parameters isDaytime bool"
  },
  "api/SDG.Unturned.DeadzoneNode.html": {
    "href": "api/SDG.Unturned.DeadzoneNode.html",
    "title": "Class DeadzoneNode | Unturned Analyse Doc",
    "keywords": "Class DeadzoneNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DeadzoneNode : Node, IDeadzoneNode Inheritance object Node DeadzoneNode Implements IDeadzoneNode Inherited Members Node._point Node._type Node._model Node.move(Vector3) Node.setEnabled(bool) Node.remove() Node.point Node.type Node.model object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DeadzoneNode(Vector3) public DeadzoneNode(Vector3 newPoint) Parameters newPoint Vector3 DeadzoneNode(Vector3, float, EDeadzoneType) public DeadzoneNode(Vector3 newPoint, float newRadius, EDeadzoneType newDeadzoneType) Parameters newPoint Vector3 newRadius float newDeadzoneType EDeadzoneType Fields MAX_SIZE public static readonly float MAX_SIZE Field Value float MIN_SIZE public static readonly float MIN_SIZE Field Value float Properties DeadzoneType public EDeadzoneType DeadzoneType { get; set; } Property Value EDeadzoneType MaskFilterDamagePerSecond Same description as UnprotectedDamagePerSecond. public float MaskFilterDamagePerSecond { get; } Property Value float ProtectedDamagePerSecond Same description as UnprotectedDamagePerSecond. public float ProtectedDamagePerSecond { get; } Property Value float UnprotectedDamagePerSecond Nelson 2024-06-10: Added this property after nodes were converted to volumes. i.e., only old levels from before this property were added still have nodes, so it's expected that they won't deal damage over time. public float UnprotectedDamagePerSecond { get; } Property Value float UnprotectedRadiationPerSecond Same description as UnprotectedDamagePerSecond. public float UnprotectedRadiationPerSecond { get; } Property Value float radius This value is confusing because in the level editor it is the normalized radius, but in-game it is the square radius. public float radius { get; set; } Property Value float Methods CalculateNormalizedRadiusFromRadius(float) public static float CalculateNormalizedRadiusFromRadius(float radius) Parameters radius float Returns float CalculateRadiusFromNormalizedRadius(float) public static float CalculateRadiusFromNormalizedRadius(float normalizedRadius) Parameters normalizedRadius float Returns float"
  },
  "api/SDG.Unturned.Decal.html": {
    "href": "api/SDG.Unturned.Decal.html",
    "title": "Class Decal | Unturned Analyse Doc",
    "keywords": "Class Decal Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Decal : MonoBehaviour, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler Inheritance object Decal Implements IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler Constructors Decal() public Decal() Fields box protected BoxCollider box Field Value BoxCollider isSelected public bool isSelected Field Value bool lodBias public float lodBias Field Value float material public Material material Field Value Material type public EDecalType type Field Value EDecalType Methods beginSelection(InteractionData) public virtual void beginSelection(InteractionData data) Parameters data InteractionData endSelection(InteractionData) public virtual void endSelection(InteractionData data) Parameters data InteractionData"
  },
  "api/SDG.Unturned.DecalRenderer.html": {
    "href": "api/SDG.Unturned.DecalRenderer.html",
    "title": "Class DecalRenderer | Unturned Analyse Doc",
    "keywords": "Class DecalRenderer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DecalRenderer : MonoBehaviour Inheritance object DecalRenderer Constructors DecalRenderer() public DecalRenderer() Fields cube public Mesh cube Field Value Mesh Methods OnDisable() public void OnDisable()"
  },
  "api/SDG.Unturned.DecalSystem.html": {
    "href": "api/SDG.Unturned.DecalSystem.html",
    "title": "Class DecalSystem | Unturned Analyse Doc",
    "keywords": "Class DecalSystem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class DecalSystem Inheritance object DecalSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties IsVisible public static bool IsVisible { get; set; } Property Value bool decalsDiffuse public static HashSet<Decal> decalsDiffuse { get; } Property Value HashSet<Decal> Methods add(Decal) public static void add(Decal decal) Parameters decal Decal remove(Decal) public static void remove(Decal decal) Parameters decal Decal"
  },
  "api/SDG.Unturned.DedicatedUGC.html": {
    "href": "api/SDG.Unturned.DedicatedUGC.html",
    "title": "Class DedicatedUGC | Unturned Analyse Doc",
    "keywords": "Class DedicatedUGC Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class DedicatedUGC Inheritance object DedicatedUGC Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ugc public static List<SteamContent> ugc { get; } Property Value List<SteamContent> Methods beginInstallingItems(bool) Called once the server is done registering items it wants to install. public static void beginInstallingItems(bool onlyFromCache) Parameters onlyFromCache bool True when running in offline-only mode. initialize() public static void initialize() registerItemInstallation(ulong) public static void registerItemInstallation(ulong id) Parameters id ulong Events installed Broadcasts once all workshop assets are finished installing. public static event DedicatedUGCInstalledHandler installed Event Type DedicatedUGCInstalledHandler"
  },
  "api/SDG.Unturned.DedicatedUGCInstalledHandler.html": {
    "href": "api/SDG.Unturned.DedicatedUGCInstalledHandler.html",
    "title": "Delegate DedicatedUGCInstalledHandler | Unturned Analyse Doc",
    "keywords": "Delegate DedicatedUGCInstalledHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DedicatedUGCInstalledHandler() Constructors DedicatedUGCInstalledHandler(object, IntPtr) public DedicatedUGCInstalledHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.DedicatedWorkshopUpdateMonitor.MonitoredItem.html": {
    "href": "api/SDG.Unturned.DedicatedWorkshopUpdateMonitor.MonitoredItem.html",
    "title": "Struct DedicatedWorkshopUpdateMonitor.MonitoredItem | Unturned Analyse Doc",
    "keywords": "Struct DedicatedWorkshopUpdateMonitor.MonitoredItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct DedicatedWorkshopUpdateMonitor.MonitoredItem Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields fileId public PublishedFileId_t fileId Field Value PublishedFileId_t initialTimestamp public uint initialTimestamp Field Value uint"
  },
  "api/SDG.Unturned.DedicatedWorkshopUpdateMonitor.html": {
    "href": "api/SDG.Unturned.DedicatedWorkshopUpdateMonitor.html",
    "title": "Class DedicatedWorkshopUpdateMonitor | Unturned Analyse Doc",
    "keywords": "Class DedicatedWorkshopUpdateMonitor Namespace SDG.Unturned Assembly Assembly-CSharp.dll If using a map or mods from the workshop, this class monitors them for changes so the server can be restarted. public class DedicatedWorkshopUpdateMonitor : IDedicatedWorkshopUpdateMonitor Inheritance object DedicatedWorkshopUpdateMonitor Implements IDedicatedWorkshopUpdateMonitor Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DedicatedWorkshopUpdateMonitor(MonitoredItem[], float) public DedicatedWorkshopUpdateMonitor(DedicatedWorkshopUpdateMonitor.MonitoredItem[] monitoredItems, float queryInterval = 900) Parameters monitoredItems MonitoredItem[] queryInterval float Fields fileIdsForQuery protected PublishedFileId_t[] fileIdsForQuery Field Value PublishedFileId_t[] isFinishedTicking Are we done monitoring? Default finished once an update is detected. protected bool isFinishedTicking Field Value bool monitoredItems protected DedicatedWorkshopUpdateMonitor.MonitoredItem[] monitoredItems Field Value MonitoredItem[] queryInterval Interval between query submissions. protected float queryInterval Field Value float queryTimer Accumulated time before submitting query after passing interval. protected float queryTimer Field Value float shouldDoFinalTick Were update(s) detected that should be handled on next tick? protected bool shouldDoFinalTick Field Value bool Methods getInitialTimestamp(PublishedFileId_t, out uint) protected bool getInitialTimestamp(PublishedFileId_t fileId, out uint timestamp) Parameters fileId PublishedFileId_t timestamp uint Returns bool handleFinalTick() Called the next tick after update(s) detected. protected virtual void handleFinalTick() handleQueryResponse(SteamUGCQueryCompleted_t) Called when results from a call to submitQueryRequest are available. protected virtual void handleQueryResponse(SteamUGCQueryCompleted_t callback) Parameters callback SteamUGCQueryCompleted_t handleTimerTriggered() Called once timer reaches interval. protected virtual void handleTimerTriggered() handleUpdateDetected(SteamUGCDetails_t) Called when a queried item's update timestamp is newer than our initially loaded version. protected virtual void handleUpdateDetected(SteamUGCDetails_t fileDetails) Parameters fileDetails SteamUGCDetails_t submitQueryRequest(PublishedFileId_t[]) Request status of workshop items. protected void submitQueryRequest(PublishedFileId_t[] fileIds) Parameters fileIds PublishedFileId_t[] tick(float) public void tick(float deltaTime) Parameters deltaTime float"
  },
  "api/SDG.Unturned.DedicatedWorkshopUpdateMonitorFactory.CreateHandler.html": {
    "href": "api/SDG.Unturned.DedicatedWorkshopUpdateMonitorFactory.CreateHandler.html",
    "title": "Delegate DedicatedWorkshopUpdateMonitorFactory.CreateHandler | Unturned Analyse Doc",
    "keywords": "Delegate DedicatedWorkshopUpdateMonitorFactory.CreateHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate IDedicatedWorkshopUpdateMonitor DedicatedWorkshopUpdateMonitorFactory.CreateHandler(LevelInfo level) Parameters level LevelInfo Returns IDedicatedWorkshopUpdateMonitor Constructors CreateHandler(object, IntPtr) public CreateHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LevelInfo, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LevelInfo level, AsyncCallback callback, object @object) Parameters level LevelInfo callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual IDedicatedWorkshopUpdateMonitor EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns IDedicatedWorkshopUpdateMonitor Invoke(LevelInfo) public virtual IDedicatedWorkshopUpdateMonitor Invoke(LevelInfo level) Parameters level LevelInfo Returns IDedicatedWorkshopUpdateMonitor"
  },
  "api/SDG.Unturned.DedicatedWorkshopUpdateMonitorFactory.html": {
    "href": "api/SDG.Unturned.DedicatedWorkshopUpdateMonitorFactory.html",
    "title": "Class DedicatedWorkshopUpdateMonitorFactory | Unturned Analyse Doc",
    "keywords": "Class DedicatedWorkshopUpdateMonitorFactory Namespace SDG.Unturned Assembly Assembly-CSharp.dll Static functions for creating monitor instance on server. public static class DedicatedWorkshopUpdateMonitorFactory Inheritance object DedicatedWorkshopUpdateMonitorFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods createDefaultForLevel(LevelInfo) Create vanilla update monitor that watches for changes to workshop level file and any other mods. public static IDedicatedWorkshopUpdateMonitor createDefaultForLevel(LevelInfo level) Parameters level LevelInfo Returns IDedicatedWorkshopUpdateMonitor createForLevel(LevelInfo) Entry point called by dedicated server after loading level. public static IDedicatedWorkshopUpdateMonitor createForLevel(LevelInfo level) Parameters level LevelInfo Returns IDedicatedWorkshopUpdateMonitor createMonitoredItem(PublishedFileId_t, out MonitoredItem) Helper to create monitored item for use with default DedicatedWorkshopUpdateMonitor implementation. public static bool createMonitoredItem(PublishedFileId_t fileId, out DedicatedWorkshopUpdateMonitor.MonitoredItem monitoredItem) Parameters fileId PublishedFileId_t monitoredItem DedicatedWorkshopUpdateMonitor.MonitoredItem Returns bool createMonitoredItemForLevel(LevelInfo, out MonitoredItem) For use with default DedicatedWorkshopUpdateMonitor implementation. public static bool createMonitoredItemForLevel(LevelInfo level, out DedicatedWorkshopUpdateMonitor.MonitoredItem monitoredItem) Parameters level LevelInfo monitoredItem DedicatedWorkshopUpdateMonitor.MonitoredItem Returns bool getCachedInitialTimestamp(PublishedFileId_t, out uint) Helper to get updated timestamp from workshop items loaded by DedicatedUGC. public static bool getCachedInitialTimestamp(PublishedFileId_t fileId, out uint timestamp) Parameters fileId PublishedFileId_t timestamp uint Returns bool Events onCreateForLevel public static event DedicatedWorkshopUpdateMonitorFactory.CreateHandler onCreateForLevel Event Type DedicatedWorkshopUpdateMonitorFactory.CreateHandler"
  },
  "api/SDG.Unturned.Dedicator.html": {
    "href": "api/SDG.Unturned.Dedicator.html",
    "title": "Class Dedicator | Unturned Analyse Doc",
    "keywords": "Class Dedicator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Dedicator : MonoBehaviour Inheritance object Dedicator Constructors Dedicator() public Dedicator() Fields offlineOnly Should dedicated server disable requests to internet? While in LAN mode skips the Steam backend connection and workshop item queries. Needs a non-Steam networking implementation before it will be truly offline only. public static CommandLineFlag offlineOnly Field Value CommandLineFlag serverID public static string serverID Field Value string serverVisibility public static ESteamServerVisibility serverVisibility Field Value ESteamServerVisibility Properties IsDedicatedServer Is the application running as a headless server? Replacement for isDedicated property. The property could not be changed to const in dedicated-server-only builds without potentially breaking plugins. Only development builds can be run as both client or server. public static bool IsDedicatedServer { get; } Property Value bool commandWindow public static CommandWindow commandWindow { get; protected set; } Property Value CommandWindow hasBattlEye public static bool hasBattlEye { get; } Property Value bool isDedicated [Obsolete(\"Server plugins do not need to check this because they run on the dedicated-server-only builds.\")] public static bool isDedicated { get; } Property Value bool isStandaloneDedicatedServer Are we currently running the standalone dedicated server app? public static bool isStandaloneDedicatedServer { get; } Property Value bool isVR public static bool isVR { get; } Property Value bool Methods awake() public void awake()"
  },
  "api/SDG.Unturned.DeferredMasterAsset-1.html": {
    "href": "api/SDG.Unturned.DeferredMasterAsset-1.html",
    "title": "Struct DeferredMasterAsset<T> | Unturned Analyse Doc",
    "keywords": "Struct DeferredMasterAsset<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct DeferredMasterAsset<T> : IDeferredAsset<T> where T : Object Type Parameters T Implements IDeferredAsset<T> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields callback public LoadedAssetDeferredCallback<T> callback Field Value LoadedAssetDeferredCallback<T> hasLoaded public bool hasLoaded Field Value bool loadedObject public T loadedObject Field Value T masterBundle public MasterBundle masterBundle Field Value MasterBundle name public string name Field Value string Methods getOrLoad() public T getOrLoad() Returns T"
  },
  "api/SDG.Unturned.Deny.html": {
    "href": "api/SDG.Unturned.Deny.html",
    "title": "Delegate Deny | Unturned Analyse Doc",
    "keywords": "Delegate Deny Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Deny(SleekButtonIconConfirm button) Parameters button SleekButtonIconConfirm Constructors Deny(object, IntPtr) public Deny(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekButtonIconConfirm, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekButtonIconConfirm button, AsyncCallback callback, object @object) Parameters button SleekButtonIconConfirm callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekButtonIconConfirm) public virtual void Invoke(SleekButtonIconConfirm button) Parameters button SleekButtonIconConfirm"
  },
  "api/SDG.Unturned.DeployBarricadeRequestHandler.html": {
    "href": "api/SDG.Unturned.DeployBarricadeRequestHandler.html",
    "title": "Delegate DeployBarricadeRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DeployBarricadeRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DeployBarricadeRequestHandler(Barricade barricade, ItemBarricadeAsset asset, Transform hit, ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow) Parameters barricade Barricade asset ItemBarricadeAsset hit Transform point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool Constructors DeployBarricadeRequestHandler(object, IntPtr) public DeployBarricadeRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Barricade, ItemBarricadeAsset, Transform, ref Vector3, ref float, ref float, ref float, ref ulong, ref ulong, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Barricade barricade, ItemBarricadeAsset asset, Transform hit, ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters barricade Barricade asset ItemBarricadeAsset hit Transform point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref float, ref float, ref float, ref ulong, ref ulong, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow, IAsyncResult result) Parameters point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool result IAsyncResult Invoke(Barricade, ItemBarricadeAsset, Transform, ref Vector3, ref float, ref float, ref float, ref ulong, ref ulong, ref bool) public virtual void Invoke(Barricade barricade, ItemBarricadeAsset asset, Transform hit, ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow) Parameters barricade Barricade asset ItemBarricadeAsset hit Transform point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool"
  },
  "api/SDG.Unturned.DeployStructureRequestHandler.html": {
    "href": "api/SDG.Unturned.DeployStructureRequestHandler.html",
    "title": "Delegate DeployStructureRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DeployStructureRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DeployStructureRequestHandler(Structure structure, ItemStructureAsset asset, ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow) Parameters structure Structure asset ItemStructureAsset point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool Constructors DeployStructureRequestHandler(object, IntPtr) public DeployStructureRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Structure, ItemStructureAsset, ref Vector3, ref float, ref float, ref float, ref ulong, ref ulong, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Structure structure, ItemStructureAsset asset, ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters structure Structure asset ItemStructureAsset point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref float, ref float, ref float, ref ulong, ref ulong, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow, IAsyncResult result) Parameters point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool result IAsyncResult Invoke(Structure, ItemStructureAsset, ref Vector3, ref float, ref float, ref float, ref ulong, ref ulong, ref bool) public virtual void Invoke(Structure structure, ItemStructureAsset asset, ref Vector3 point, ref float angle_x, ref float angle_y, ref float angle_z, ref ulong owner, ref ulong group, ref bool shouldAllow) Parameters structure Structure asset ItemStructureAsset point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong shouldAllow bool"
  },
  "api/SDG.Unturned.DestroyEventHook.html": {
    "href": "api/SDG.Unturned.DestroyEventHook.html",
    "title": "Class DestroyEventHook | Unturned Analyse Doc",
    "keywords": "Class DestroyEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DestroyEventHook : MonoBehaviour Inheritance object DestroyEventHook Constructors DestroyEventHook() public DestroyEventHook() Fields AuthorityOnly If true the event will only be invoked in offline mode and on the server. public bool AuthorityOnly Field Value bool OnDestroyed public UnityEvent OnDestroyed Field Value UnityEvent"
  },
  "api/SDG.Unturned.DialogueAsset.html": {
    "href": "api/SDG.Unturned.DialogueAsset.html",
    "title": "Class DialogueAsset | Unturned Analyse Doc",
    "keywords": "Class DialogueAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DialogueAsset : Asset, IAssetErrorContext Inheritance object Asset DialogueAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DialogueAsset() public DialogueAsset() Properties assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType messages public DialogueMessage[] messages { get; protected set; } Property Value DialogueMessage[] responses public DialogueResponse[] responses { get; protected set; } Property Value DialogueResponse[] Methods GetAvailableMessage(Player) public DialogueMessage GetAvailableMessage(Player player) Parameters player Player Returns DialogueMessage PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local doesPlayerHaveAccessToVendor(Player, VendorAsset) [Obsolete(\"Server now tracks dialogue tree\")] public bool doesPlayerHaveAccessToVendor(Player player, VendorAsset vendorAsset) Parameters player Player vendorAsset VendorAsset Returns bool getAvailableMessage(Player) [Obsolete(\"Please use GetAvailableMessage which returns the DialogueMessage rather than index\")] public int getAvailableMessage(Player player) Parameters player Player Returns int getAvailableResponses(Player, int, List<DialogueResponse>) public void getAvailableResponses(Player player, int messageIndex, List<DialogueResponse> availableResponses) Parameters player Player messageIndex int availableResponses List<DialogueResponse>"
  },
  "api/SDG.Unturned.DialogueElement.html": {
    "href": "api/SDG.Unturned.DialogueElement.html",
    "title": "Class DialogueElement | Unturned Analyse Doc",
    "keywords": "Class DialogueElement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DialogueElement Inheritance object DialogueElement Derived DialogueMessage DialogueResponse Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DialogueElement(byte, INPCCondition[], NPCRewardsList) public DialogueElement(byte newIndex, INPCCondition[] newConditions, NPCRewardsList newRewardsList) Parameters newIndex byte newConditions INPCCondition[] newRewardsList NPCRewardsList Fields rewardsList protected NPCRewardsList rewardsList Field Value NPCRewardsList Properties conditions public INPCCondition[] conditions { get; protected set; } Property Value INPCCondition[] index public byte index { get; protected set; } Property Value byte rewards public INPCReward[] rewards { get; } Property Value INPCReward[] Methods ApplyConditions(Player) public void ApplyConditions(Player player) Parameters player Player GrantRewards(Player) public void GrantRewards(Player player) Parameters player Player applyConditions(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void applyConditions(Player player, bool shouldSend) Parameters player Player shouldSend bool areConditionsMet(Player) public bool areConditionsMet(Player player) Parameters player Player Returns bool grantRewards(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void grantRewards(Player player, bool shouldSend) Parameters player Player shouldSend bool"
  },
  "api/SDG.Unturned.DialogueMessage.html": {
    "href": "api/SDG.Unturned.DialogueMessage.html",
    "title": "Class DialogueMessage | Unturned Analyse Doc",
    "keywords": "Class DialogueMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DialogueMessage : DialogueElement Inheritance object DialogueElement DialogueMessage Inherited Members DialogueElement.rewardsList DialogueElement.areConditionsMet(Player) DialogueElement.ApplyConditions(Player) DialogueElement.GrantRewards(Player) DialogueElement.applyConditions(Player, bool) DialogueElement.grantRewards(Player, bool) DialogueElement.index DialogueElement.conditions DialogueElement.rewards object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DialogueMessage(byte, DialoguePage[], byte[], ushort, Guid, byte?, INPCCondition[], NPCRewardsList) public DialogueMessage(byte newID, DialoguePage[] newPages, byte[] newResponses, ushort newPrev, Guid newPrevGuid, byte? faceOverride, INPCCondition[] newConditions, NPCRewardsList newRewardsList) Parameters newID byte newPages DialoguePage[] newResponses byte[] newPrev ushort newPrevGuid Guid faceOverride byte? newConditions INPCCondition[] newRewardsList NPCRewardsList Fields prevGuid Please refer to FindPrevDialogueAsset(). public Guid prevGuid Field Value Guid Properties pages public DialoguePage[] pages { get; protected set; } Property Value DialoguePage[] prev Please refer to FindPrevDialogueAsset(). public ushort prev { get; protected set; } Property Value ushort responses public byte[] responses { get; protected set; } Property Value byte[] Methods FindPrevDialogueAsset() The dialogue to go to when a message has no available responses. If this is not specified the previous dialogue is used as a default. If neither is available then a default \"goodbye\" response is added. For example, Chief_Police_Doughnuts_Accepted dialogue has a single message \"Let's just keep this between the two of us.\" shown with \"prev\" dialogue set to the NPC's root dialogue asset. public DialogueAsset FindPrevDialogueAsset() Returns DialogueAsset"
  },
  "api/SDG.Unturned.DialoguePage.html": {
    "href": "api/SDG.Unturned.DialoguePage.html",
    "title": "Class DialoguePage | Unturned Analyse Doc",
    "keywords": "Class DialoguePage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DialoguePage Inheritance object DialoguePage Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DialoguePage(string) public DialoguePage(string newText) Parameters newText string Properties text public string text { get; protected set; } Property Value string"
  },
  "api/SDG.Unturned.DialogueResponse.html": {
    "href": "api/SDG.Unturned.DialogueResponse.html",
    "title": "Class DialogueResponse | Unturned Analyse Doc",
    "keywords": "Class DialogueResponse Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DialogueResponse : DialogueElement Inheritance object DialogueElement DialogueResponse Inherited Members DialogueElement.rewardsList DialogueElement.areConditionsMet(Player) DialogueElement.ApplyConditions(Player) DialogueElement.GrantRewards(Player) DialogueElement.applyConditions(Player, bool) DialogueElement.grantRewards(Player, bool) DialogueElement.index DialogueElement.conditions DialogueElement.rewards object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DialogueResponse(byte, byte[], ushort, Guid, ushort, Guid, ushort, Guid, string, INPCCondition[], NPCRewardsList) public DialogueResponse(byte newID, byte[] newMessages, ushort newDialogue, Guid newDialogueGuid, ushort newQuest, Guid newQuestGuid, ushort newVendor, Guid newVendorGuid, string newText, INPCCondition[] newConditions, NPCRewardsList newRewardsList) Parameters newID byte newMessages byte[] newDialogue ushort newDialogueGuid Guid newQuest ushort newQuestGuid Guid newVendor ushort newVendorGuid Guid newText string newConditions INPCCondition[] newRewardsList NPCRewardsList Fields dialogueGuid public Guid dialogueGuid Field Value Guid questGuid public Guid questGuid Field Value Guid vendorGuid public Guid vendorGuid Field Value Guid Properties dialogue public ushort dialogue { get; protected set; } Property Value ushort messages public byte[] messages { get; protected set; } Property Value byte[] quest public ushort quest { get; protected set; } Property Value ushort text public string text { get; protected set; } Property Value string vendor public ushort vendor { get; protected set; } Property Value ushort Methods FindDialogueAsset() public DialogueAsset FindDialogueAsset() Returns DialogueAsset FindQuestAsset() public QuestAsset FindQuestAsset() Returns QuestAsset FindVendorAsset() public VendorAsset FindVendorAsset() Returns VendorAsset IsDialogueRefNull() public bool IsDialogueRefNull() Returns bool IsQuestRefNull() public bool IsQuestRefNull() Returns bool IsVendorRefNull() public bool IsVendorRefNull() Returns bool"
  },
  "api/SDG.Unturned.DismissableTimeSpan.html": {
    "href": "api/SDG.Unturned.DismissableTimeSpan.html",
    "title": "Class DismissableTimeSpan | Unturned Analyse Doc",
    "keywords": "Class DismissableTimeSpan Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DismissableTimeSpan Inheritance object DismissableTimeSpan Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DismissableTimeSpan(DateTime, DateTime, string) public DismissableTimeSpan(DateTime start, DateTime end, string key) Parameters start DateTime end DateTime key string Methods dismiss() public void dismiss() getDismissedTime(out DateTime) public bool getDismissedTime(out DateTime dismissedTime) Parameters dismissedTime DateTime Returns bool hasDismissedSpan() Has the current time span been dismissed? For example, player may have dismissed a previous event but not this current one. public bool hasDismissedSpan() Returns bool isNowWithinSpan() Is current UTC time within this time span? public bool isNowWithinSpan() Returns bool isRelevant() Is current UTC time within this time span, and player has not dismissed? public bool isRelevant() Returns bool"
  },
  "api/SDG.Unturned.Distraction.html": {
    "href": "api/SDG.Unturned.Distraction.html",
    "title": "Class Distraction | Unturned Analyse Doc",
    "keywords": "Class Distraction Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Distraction : MonoBehaviour Inheritance object Distraction Constructors Distraction() public Distraction() Methods Distract() public void Distract()"
  },
  "api/SDG.Unturned.DragStarted.html": {
    "href": "api/SDG.Unturned.DragStarted.html",
    "title": "Delegate DragStarted | Unturned Analyse Doc",
    "keywords": "Delegate DragStarted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DragStarted(Vector2 min, Vector2 max) Parameters min Vector2 max Vector2 Constructors DragStarted(object, IntPtr) public DragStarted(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Vector2, Vector2, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Vector2 min, Vector2 max, AsyncCallback callback, object @object) Parameters min Vector2 max Vector2 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Vector2, Vector2) public virtual void Invoke(Vector2 min, Vector2 max) Parameters min Vector2 max Vector2"
  },
  "api/SDG.Unturned.DragStopped.html": {
    "href": "api/SDG.Unturned.DragStopped.html",
    "title": "Delegate DragStopped | Unturned Analyse Doc",
    "keywords": "Delegate DragStopped Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DragStopped() Constructors DragStopped(object, IntPtr) public DragStopped(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.DraggedItem.html": {
    "href": "api/SDG.Unturned.DraggedItem.html",
    "title": "Delegate DraggedItem | Unturned Analyse Doc",
    "keywords": "Delegate DraggedItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DraggedItem(SleekItem item) Parameters item SleekItem Constructors DraggedItem(object, IntPtr) public DraggedItem(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekItem, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekItem item, AsyncCallback callback, object @object) Parameters item SleekItem callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekItem) public virtual void Invoke(SleekItem item) Parameters item SleekItem"
  },
  "api/SDG.Unturned.DrivingPlayerInputPacket.html": {
    "href": "api/SDG.Unturned.DrivingPlayerInputPacket.html",
    "title": "Class DrivingPlayerInputPacket | Unturned Analyse Doc",
    "keywords": "Class DrivingPlayerInputPacket Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class DrivingPlayerInputPacket : PlayerInputPacket Inheritance object PlayerInputPacket DrivingPlayerInputPacket Inherited Members PlayerInputPacket.clientsideInputs PlayerInputPacket.serversideInputs PlayerInputPacket.clientSimulationFrameNumber PlayerInputPacket.recov PlayerInputPacket.keys PlayerInputPacket.primaryAttack PlayerInputPacket.secondaryAttack object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DrivingPlayerInputPacket(InteractableVehicle) public DrivingPlayerInputPacket(InteractableVehicle vehicle) Parameters vehicle InteractableVehicle Fields forwardVelocity public float forwardVelocity Field Value float position public Vector3 position Field Value Vector3 rotation public Quaternion rotation Field Value Quaternion speed public float speed Field Value float steeringInput public float steeringInput Field Value float velocityInput public float velocityInput Field Value float Methods read(SteamChannel, NetPakReader) public override void read(SteamChannel channel, NetPakReader reader) Parameters channel SteamChannel reader NetPakReader write(NetPakWriter) public override void write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.DropItemRequestHandler.html": {
    "href": "api/SDG.Unturned.DropItemRequestHandler.html",
    "title": "Delegate DropItemRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate DropItemRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void DropItemRequestHandler(PlayerInventory inventory, Item item, ref bool shouldAllow) Parameters inventory PlayerInventory item Item shouldAllow bool Constructors DropItemRequestHandler(object, IntPtr) public DropItemRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerInventory, Item, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerInventory inventory, Item item, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters inventory PlayerInventory item Item shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(PlayerInventory, Item, ref bool) public virtual void Invoke(PlayerInventory inventory, Item item, ref bool shouldAllow) Parameters inventory PlayerInventory item Item shouldAllow bool"
  },
  "api/SDG.Unturned.DynamicWaterTransparentSort.html": {
    "href": "api/SDG.Unturned.DynamicWaterTransparentSort.html",
    "title": "Class DynamicWaterTransparentSort | Unturned Analyse Doc",
    "keywords": "Class DynamicWaterTransparentSort Namespace SDG.Unturned Assembly Assembly-CSharp.dll Manages render queue for transparent materials on non-stationary objects. Updates one material per frame. public class DynamicWaterTransparentSort : MonoBehaviour Inheritance object DynamicWaterTransparentSort Constructors DynamicWaterTransparentSort() public DynamicWaterTransparentSort() Methods Get() public static DynamicWaterTransparentSort Get() Returns DynamicWaterTransparentSort Register(Transform, Material) public object Register(Transform transform, Material material) Parameters transform Transform material Material Returns object Unregister(object) public void Unregister(object handle) Parameters handle object"
  },
  "api/SDG.Unturned.DynamicWaterTransparentSortComponent.html": {
    "href": "api/SDG.Unturned.DynamicWaterTransparentSortComponent.html",
    "title": "Class DynamicWaterTransparentSortComponent | Unturned Analyse Doc",
    "keywords": "Class DynamicWaterTransparentSortComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll Registers renderers with DynamicWaterTransparentSort manager. public class DynamicWaterTransparentSortComponent : MonoBehaviour Inheritance object DynamicWaterTransparentSortComponent Constructors DynamicWaterTransparentSortComponent() public DynamicWaterTransparentSortComponent() Fields renderers public Renderer[] renderers Field Value Renderer[]"
  },
  "api/SDG.Unturned.EAction.html": {
    "href": "api/SDG.Unturned.EAction.html",
    "title": "Enum EAction | Unturned Analyse Doc",
    "keywords": "Enum EAction Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EAction Fields Bolt = 1 Break = 5 Minigun = 7 Pump = 2 Rail = 3 Rocket = 6 String = 4 Trigger = 0"
  },
  "api/SDG.Unturned.EActionType.html": {
    "href": "api/SDG.Unturned.EActionType.html",
    "title": "Enum EActionType | Unturned Analyse Doc",
    "keywords": "Enum EActionType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EActionType Fields BLUEPRINT = 0"
  },
  "api/SDG.Unturned.EAnimalBehaviour.html": {
    "href": "api/SDG.Unturned.EAnimalBehaviour.html",
    "title": "Enum EAnimalBehaviour | Unturned Analyse Doc",
    "keywords": "Enum EAnimalBehaviour Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EAnimalBehaviour Fields DEFENSE = 2 IGNORE = 3 NONE = 0 OFFENSE = 1"
  },
  "api/SDG.Unturned.EAnisotropicFilteringMode.html": {
    "href": "api/SDG.Unturned.EAnisotropicFilteringMode.html",
    "title": "Enum EAnisotropicFilteringMode | Unturned Analyse Doc",
    "keywords": "Enum EAnisotropicFilteringMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EAnisotropicFilteringMode Fields DISABLED = 0 FORCED_ON = 2 PER_TEXTURE = 1"
  },
  "api/SDG.Unturned.EAntiAliasingType.html": {
    "href": "api/SDG.Unturned.EAntiAliasingType.html",
    "title": "Enum EAntiAliasingType | Unturned Analyse Doc",
    "keywords": "Enum EAntiAliasingType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EAntiAliasingType Fields FXAA = 1 MSAA2 = 3 MSAA4 = 4 MSAA8 = 5 OFF = 0 TAA = 2"
  },
  "api/SDG.Unturned.EArenaMessage.html": {
    "href": "api/SDG.Unturned.EArenaMessage.html",
    "title": "Enum EArenaMessage | Unturned Analyse Doc",
    "keywords": "Enum EArenaMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EArenaMessage Fields ABANDONED = 4 DIED = 3 INTERMISSION = 7 LOBBY = 0 LOSE = 6 PLAY = 2 WARMUP = 1 WIN = 5"
  },
  "api/SDG.Unturned.EArenaMessage_NetEnum.html": {
    "href": "api/SDG.Unturned.EArenaMessage_NetEnum.html",
    "title": "Class EArenaMessage_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EArenaMessage_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EArenaMessage_NetEnum Inheritance object EArenaMessage_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EArenaMessage) public static bool ReadEnum(this NetPakReader reader, out EArenaMessage value) Parameters reader NetPakReader value EArenaMessage Returns bool WriteEnum(NetPakWriter, EArenaMessage) public static bool WriteEnum(this NetPakWriter writer, EArenaMessage value) Parameters writer NetPakWriter value EArenaMessage Returns bool"
  },
  "api/SDG.Unturned.EArenaState.html": {
    "href": "api/SDG.Unturned.EArenaState.html",
    "title": "Enum EArenaState | Unturned Analyse Doc",
    "keywords": "Enum EArenaState Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EArenaState Fields CLEAR = 1 FINALE = 5 INTERMISSION = 7 LOBBY = 0 PLAY = 4 RESTART = 6 SPAWN = 3 WARMUP = 2"
  },
  "api/SDG.Unturned.EArmorTier.html": {
    "href": "api/SDG.Unturned.EArmorTier.html",
    "title": "Enum EArmorTier | Unturned Analyse Doc",
    "keywords": "Enum EArmorTier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EArmorTier Fields HIGH = 1 LOW = 0"
  },
  "api/SDG.Unturned.EAssetOrigin.html": {
    "href": "api/SDG.Unturned.EAssetOrigin.html",
    "title": "Enum EAssetOrigin | Unturned Analyse Doc",
    "keywords": "Enum EAssetOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete(\"Replaced by AssetOrigin class\")] public enum EAssetOrigin Fields CURATED = 1 MISC = 3 OFFICIAL = 0 WORKSHOP = 2"
  },
  "api/SDG.Unturned.EAssetType.html": {
    "href": "api/SDG.Unturned.EAssetType.html",
    "title": "Enum EAssetType | Unturned Analyse Doc",
    "keywords": "Enum EAssetType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EAssetType Fields ANIMAL = 6 EFFECT = 2 ITEM = 1 MYTHIC = 7 NONE = 0 NPC = 10 OBJECT = 3 RESOURCE = 4 SKIN = 8 SPAWN = 9 VEHICLE = 5"
  },
  "api/SDG.Unturned.EAttackInputFlags.html": {
    "href": "api/SDG.Unturned.EAttackInputFlags.html",
    "title": "Enum EAttackInputFlags | Unturned Analyse Doc",
    "keywords": "Enum EAttackInputFlags Namespace SDG.Unturned Assembly Assembly-CSharp.dll Start/Stop input is encoded as 2 bits, 1 bit for Start flag and 1 bit for Stop flag. Prior to 2023-03-16 it was a single bit. The server would Start if true and the previous frame was false, and vice versa call Stop if false and the previous frame was true. The problem with that approach was when the client FPS is higher than the simulation FPS a series of repeated attack presses would be treated as a continuous held attack input. Semi-auto guns were difficult to shoot at their max rate of fire. Sending both allows the server to theoretically call Start every simulation frame as opposed to only half. First approach was to OR Start if held, otherwise OR Stop. This doesn't work because for example when Aim is pressed the Stop flag will already be enabled, so the gun Starts aiming, Stops aiming, Starts aiming, and then stays aiming rather than just Start and stay aiming. Instead we only want Stop to be sent once. [Flags] public enum EAttackInputFlags Fields None = 0 Start = 1 Wants to \"start\" primary or secondary input. (e.g., Useable.startPrimary) Stop = 2 Wants to \"stop\" primary or secondary input. (e.g., Useable.stopPrimary)"
  },
  "api/SDG.Unturned.EAttendance.html": {
    "href": "api/SDG.Unturned.EAttendance.html",
    "title": "Enum EAttendance | Unturned Analyse Doc",
    "keywords": "Enum EAttendance Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EAttendance Fields Any = 2 Empty = 0 HasPlayers = 1"
  },
  "api/SDG.Unturned.EBatteryMode.html": {
    "href": "api/SDG.Unturned.EBatteryMode.html",
    "title": "Enum EBatteryMode | Unturned Analyse Doc",
    "keywords": "Enum EBatteryMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBatteryMode Fields Burn = 1 Charge = 2 None = 0"
  },
  "api/SDG.Unturned.EBattlEyeProtectionFilter.html": {
    "href": "api/SDG.Unturned.EBattlEyeProtectionFilter.html",
    "title": "Enum EBattlEyeProtectionFilter | Unturned Analyse Doc",
    "keywords": "Enum EBattlEyeProtectionFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBattlEyeProtectionFilter Fields Any = 2 Insecure = 1 Secure = 0"
  },
  "api/SDG.Unturned.EBbCodeTokenType.html": {
    "href": "api/SDG.Unturned.EBbCodeTokenType.html",
    "title": "Enum EBbCodeTokenType | Unturned Analyse Doc",
    "keywords": "Enum EBbCodeTokenType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBbCodeTokenType Fields BoldClose = 2 [/b] BoldOpen = 1 [b] BulletListClose = 6 [/list] BulletListOpen = 5 [list] H1Close = 11 [/h1] H1Open = 10 [h1] H2Close = 13 [/h2] H2Open = 12 [h2] H3Close = 15 [/h3] H3Open = 14 [h3] ImgClose = 19 [/img] ImgOpen = 18 [img] ItalicClose = 4 [/i] ItalicOpen = 3 [i] LineBreak = 22 '\\n' or \"\\r\\n\" ListItem = 9 [*] value OrderedListClose = 8 [/olist] OrderedListOpen = 7 [olist] PreviewYouTubeClose = 21 [/previewyoutube] PreviewYouTubeOpen = 20 [previewyoutube=value] String = 0 Text between tags. UrlClose = 17 [/url] UrlOpen = 16 [url=value]"
  },
  "api/SDG.Unturned.EBbCodeWidgetType.html": {
    "href": "api/SDG.Unturned.EBbCodeWidgetType.html",
    "title": "Enum EBbCodeWidgetType | Unturned Analyse Doc",
    "keywords": "Enum EBbCodeWidgetType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBbCodeWidgetType Fields Image = 1 LinkButton = 3 RichTextLabel = 0 YouTubeButton = 2"
  },
  "api/SDG.Unturned.EBlueprintSkill.html": {
    "href": "api/SDG.Unturned.EBlueprintSkill.html",
    "title": "Enum EBlueprintSkill | Unturned Analyse Doc",
    "keywords": "Enum EBlueprintSkill Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBlueprintSkill Fields COOK = 2 CRAFT = 1 NONE = 0 REPAIR = 3"
  },
  "api/SDG.Unturned.EBlueprintType.html": {
    "href": "api/SDG.Unturned.EBlueprintType.html",
    "title": "Enum EBlueprintType | Unturned Analyse Doc",
    "keywords": "Enum EBlueprintType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBlueprintType Fields AMMO = 4 APPAREL = 1 BARRICADE = 5 FURNITURE = 8 GEAR = 3 REPAIR = 9 STRUCTURE = 6 SUPPLY = 2 TOOL = 0 UTILITIES = 7"
  },
  "api/SDG.Unturned.EBoxItemOrigin.html": {
    "href": "api/SDG.Unturned.EBoxItemOrigin.html",
    "title": "Enum EBoxItemOrigin | Unturned Analyse Doc",
    "keywords": "Enum EBoxItemOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBoxItemOrigin Fields Unbox = 0 Unwrap = 1"
  },
  "api/SDG.Unturned.EBoxProbabilityModel.html": {
    "href": "api/SDG.Unturned.EBoxProbabilityModel.html",
    "title": "Enum EBoxProbabilityModel | Unturned Analyse Doc",
    "keywords": "Enum EBoxProbabilityModel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EBoxProbabilityModel Fields Equalized = 1 Each item has an equal chance regardless of quality. Original = 0 Each quality tier has different rarities. Legendary: 5% Epic: 20% Rare: 75%"
  },
  "api/SDG.Unturned.EBuild.html": {
    "href": "api/SDG.Unturned.EBuild.html",
    "title": "Enum EBuild | Unturned Analyse Doc",
    "keywords": "Enum EBuild Namespace SDG.Unturned Assembly Assembly-CSharp.dll 2023-02-28: note order is important because BarricadeManager saves as a byte! public enum EBuild Fields BARREL_RAIN = 21 BARRICADE = 1 BARRICADE_WALL = 39 BEACON = 19 BED = 4 CAGE = 23 CAMPFIRE = 9 CHARGE = 26 CLAIM = 18 CLOCK = 38 DOOR = 2 FARM = 7 FORTIFICATION = 0 FREEFORM = 15 GATE = 3 GENERATOR = 12 GLASS = 32 HATCH = 34 LADDER = 5 LIBRARY = 30 MANNEQUIN = 35 NOTE = 33 OIL = 22 OVEN = 29 OXYGENATOR = 31 SAFEZONE = 14 SENTRY = 27 SENTRY_FREEFORM = 28 SHUTTER = 24 SIGN = 16 SIGN_WALL = 37 SPIKE = 10 SPOT = 13 STEREO = 36 STORAGE = 6 STORAGE_WALL = 20 TANK = 25 TORCH = 8 VEHICLE = 17 WIRE = 11"
  },
  "api/SDG.Unturned.ECameraMode.html": {
    "href": "api/SDG.Unturned.ECameraMode.html",
    "title": "Enum ECameraMode | Unturned Analyse Doc",
    "keywords": "Enum ECameraMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ECameraMode Fields ANY = 4 BOTH = 2 FIRST = 0 THIRD = 1 VEHICLE = 3"
  },
  "api/SDG.Unturned.ECameraMode_NetEnum.html": {
    "href": "api/SDG.Unturned.ECameraMode_NetEnum.html",
    "title": "Class ECameraMode_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ECameraMode_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ECameraMode_NetEnum Inheritance object ECameraMode_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ECameraMode) public static bool ReadEnum(this NetPakReader reader, out ECameraMode value) Parameters reader NetPakReader value ECameraMode Returns bool WriteEnum(NetPakWriter, ECameraMode) public static bool WriteEnum(this NetPakWriter writer, ECameraMode value) Parameters writer NetPakWriter value ECameraMode Returns bool"
  },
  "api/SDG.Unturned.EChatMode.html": {
    "href": "api/SDG.Unturned.EChatMode.html",
    "title": "Enum EChatMode | Unturned Analyse Doc",
    "keywords": "Enum EChatMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EChatMode Fields GLOBAL = 0 GROUP = 2 LOCAL = 1 SAY = 4 WELCOME = 3"
  },
  "api/SDG.Unturned.EChatMode_NetEnum.html": {
    "href": "api/SDG.Unturned.EChatMode_NetEnum.html",
    "title": "Class EChatMode_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EChatMode_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EChatMode_NetEnum Inheritance object EChatMode_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EChatMode) public static bool ReadEnum(this NetPakReader reader, out EChatMode value) Parameters reader NetPakReader value EChatMode Returns bool WriteEnum(NetPakWriter, EChatMode) public static bool WriteEnum(this NetPakWriter writer, EChatMode value) Parameters writer NetPakWriter value EChatMode Returns bool"
  },
  "api/SDG.Unturned.ECheats.html": {
    "href": "api/SDG.Unturned.ECheats.html",
    "title": "Enum ECheats | Unturned Analyse Doc",
    "keywords": "Enum ECheats Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ECheats Fields ANY = 2 NO = 0 YES = 1"
  },
  "api/SDG.Unturned.EClientMessage.html": {
    "href": "api/SDG.Unturned.EClientMessage.html",
    "title": "Enum EClientMessage | Unturned Analyse Doc",
    "keywords": "Enum EClientMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll When adding or removing entries remember to update NetMessages size and regenerate NetCode! public enum EClientMessage Fields Accepted = 9 Server has accepted us and will create a player game object. Admined = 13 Should be converted to an RPC. Leftover from prior to net messaging code. Banned = 11 Banned either during connect or gameplay. BattlEye = 15 Server sending BattlEye payload to client. DownloadWorkshopFiles = 7 Download these files before loading the level. InvokeMethod = 17 Server calling an RPC. Kicked = 12 Kicked during gameplay. PingRequest = 2 Server sent a ping. PingResponse = 3 Server replying to our ping. PlayerConnected = 5 Create game object for player. PlayerDisconnected = 6 Destroy game object for player. QueuePositionChanged = 16 Infrequent notification of queue position. Rejected = 10 Server rejected us, we will go back to the menu. Shutdown = 4 Server is shutting down shortly. UPDATE_RELIABLE_BUFFER = 0 UPDATE_UNRELIABLE_BUFFER = 1 Unadmined = 14 Should be converted to an RPC. Leftover from prior to net messaging code. Verify = 8 Server wants additional info before accepting us."
  },
  "api/SDG.Unturned.EClientMessage_NetEnum.html": {
    "href": "api/SDG.Unturned.EClientMessage_NetEnum.html",
    "title": "Class EClientMessage_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EClientMessage_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EClientMessage_NetEnum Inheritance object EClientMessage_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EClientMessage) public static bool ReadEnum(this NetPakReader reader, out EClientMessage value) Parameters reader NetPakReader value EClientMessage Returns bool WriteEnum(NetPakWriter, EClientMessage) public static bool WriteEnum(this NetPakWriter writer, EClientMessage value) Parameters writer NetPakWriter value EClientMessage Returns bool"
  },
  "api/SDG.Unturned.EClientPlatform.html": {
    "href": "api/SDG.Unturned.EClientPlatform.html",
    "title": "Enum EClientPlatform | Unturned Analyse Doc",
    "keywords": "Enum EClientPlatform Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EClientPlatform Fields Linux = 2 Mac = 1 Windows = 0"
  },
  "api/SDG.Unturned.EClientPlatform_NetEnum.html": {
    "href": "api/SDG.Unturned.EClientPlatform_NetEnum.html",
    "title": "Class EClientPlatform_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EClientPlatform_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EClientPlatform_NetEnum Inheritance object EClientPlatform_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EClientPlatform) public static bool ReadEnum(this NetPakReader reader, out EClientPlatform value) Parameters reader NetPakReader value EClientPlatform Returns bool WriteEnum(NetPakWriter, EClientPlatform) public static bool WriteEnum(this NetPakWriter writer, EClientPlatform value) Parameters writer NetPakWriter value EClientPlatform Returns bool"
  },
  "api/SDG.Unturned.ECombat.html": {
    "href": "api/SDG.Unturned.ECombat.html",
    "title": "Enum ECombat | Unturned Analyse Doc",
    "keywords": "Enum ECombat Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ECombat Fields ANY = 2 PVE = 1 PVP = 0"
  },
  "api/SDG.Unturned.EConstruct.html": {
    "href": "api/SDG.Unturned.EConstruct.html",
    "title": "Enum EConstruct | Unturned Analyse Doc",
    "keywords": "Enum EConstruct Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EConstruct Fields FLOOR = 0 FLOOR_POLY = 6 PILLAR = 4 POST = 5 RAMPART = 2 ROOF = 3 ROOF_POLY = 7 WALL = 1"
  },
  "api/SDG.Unturned.EConsumeMode.html": {
    "href": "api/SDG.Unturned.EConsumeMode.html",
    "title": "Enum EConsumeMode | Unturned Analyse Doc",
    "keywords": "Enum EConsumeMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EConsumeMode Fields AID = 1 USE = 0"
  },
  "api/SDG.Unturned.EConsumeMode_NetEnum.html": {
    "href": "api/SDG.Unturned.EConsumeMode_NetEnum.html",
    "title": "Class EConsumeMode_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EConsumeMode_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EConsumeMode_NetEnum Inheritance object EConsumeMode_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EConsumeMode) public static bool ReadEnum(this NetPakReader reader, out EConsumeMode value) Parameters reader NetPakReader value EConsumeMode Returns bool WriteEnum(NetPakWriter, EConsumeMode) public static bool WriteEnum(this NetPakWriter writer, EConsumeMode value) Parameters writer NetPakWriter value EConsumeMode Returns bool"
  },
  "api/SDG.Unturned.EControlMode.html": {
    "href": "api/SDG.Unturned.EControlMode.html",
    "title": "Enum EControlMode | Unturned Analyse Doc",
    "keywords": "Enum EControlMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EControlMode Fields HOLD = 0 TOGGLE = 1"
  },
  "api/SDG.Unturned.ECrosshairShape.html": {
    "href": "api/SDG.Unturned.ECrosshairShape.html",
    "title": "Enum ECrosshairShape | Unturned Analyse Doc",
    "keywords": "Enum ECrosshairShape Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ECrosshairShape Fields Classic = 1 Line = 0"
  },
  "api/SDG.Unturned.EDamageFlinchMode.html": {
    "href": "api/SDG.Unturned.EDamageFlinchMode.html",
    "title": "Enum EDamageFlinchMode | Unturned Analyse Doc",
    "keywords": "Enum EDamageFlinchMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDamageFlinchMode Fields Directional = 1 Rotate on all axes according to damage direction. This may induce motion sickness. RollOnly = 0 If hit from the left view rolls right, if hit from the right view rolls left. This may reduce motion sickness for some players."
  },
  "api/SDG.Unturned.EDamageOrigin.html": {
    "href": "api/SDG.Unturned.EDamageOrigin.html",
    "title": "Enum EDamageOrigin | Unturned Analyse Doc",
    "keywords": "Enum EDamageOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll Currently used by plugins to identify what damaged a buildable. public enum EDamageOrigin Fields Animal_Attack = 25 Bullet_Explosion = 15 Carepackage_Timeout = 5 Charge_Explosion = 13 Charge_Self_Destruct = 7 ExplosionSpawnerComponent = 30 Explosion instigated by ExplosionSpawner. Flamable_Zombie_Explosion = 17 Food_Explosion = 11 Grenade_Explosion = 9 Horde_Beacon_Self_Destruct = 3 Kill_Volume = 26 Lightning = 28 Mega_Zombie_Boulder = 1 Plant_Harvested = 6 Punch = 24 Radioactive_Zombie_Explosion = 16 Rocket_Explosion = 10 Sentry = 21 Trap_Explosion = 14 Trap_Wear_And_Tear = 4 Unknown = 0 Useable_Gun = 22 Useable_Melee = 23 VehicleDecay = 29 Vehicle_Bumper = 2 Vehicle_Collision_Self_Damage = 27 Vehicle_Explosion = 12 Zombie_Electric_Shock = 18 Zombie_Fire_Breath = 20 Zombie_Stomp = 19 Zombie_Swipe = 8"
  },
  "api/SDG.Unturned.EDeadzoneType.html": {
    "href": "api/SDG.Unturned.EDeadzoneType.html",
    "title": "Enum EDeadzoneType | Unturned Analyse Doc",
    "keywords": "Enum EDeadzoneType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDeadzoneType Fields DefaultRadiation = 0 Original type on the Russia map which requires a mask with filters. FullSuitRadiation = 1 Requires a mask with filters and full body suit."
  },
  "api/SDG.Unturned.EDeathCause.html": {
    "href": "api/SDG.Unturned.EDeathCause.html",
    "title": "Enum EDeathCause | Unturned Analyse Doc",
    "keywords": "Enum EDeathCause Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDeathCause Fields ACID = 25 ANIMAL = 9 ARENA = 20 BLEEDING = 0 BONES = 1 BOULDER = 26 BREATH = 14 BURNER = 27 BURNING = 3 CHARGE = 22 FOOD = 4 FREEZING = 2 GRENADE = 17 GUN = 6 INFECTION = 12 KILL = 11 LANDMINE = 19 MELEE = 7 MISSILE = 21 PUNCH = 13 ROADKILL = 15 SENTRY = 24 SHRED = 18 SPARK = 29 SPIT = 28 SPLASH = 23 SUICIDE = 10 VEHICLE = 16 WATER = 5 ZOMBIE = 8"
  },
  "api/SDG.Unturned.EDeathCause_NetEnum.html": {
    "href": "api/SDG.Unturned.EDeathCause_NetEnum.html",
    "title": "Class EDeathCause_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EDeathCause_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EDeathCause_NetEnum Inheritance object EDeathCause_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EDeathCause) public static bool ReadEnum(this NetPakReader reader, out EDeathCause value) Parameters reader NetPakReader value EDeathCause Returns bool WriteEnum(NetPakWriter, EDeathCause) public static bool WriteEnum(this NetPakWriter writer, EDeathCause value) Parameters writer NetPakWriter value EDeathCause Returns bool"
  },
  "api/SDG.Unturned.EDecalType.html": {
    "href": "api/SDG.Unturned.EDecalType.html",
    "title": "Enum EDecalType | Unturned Analyse Doc",
    "keywords": "Enum EDecalType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDecalType Fields DIFFUSE = 0"
  },
  "api/SDG.Unturned.EDeleteMode.html": {
    "href": "api/SDG.Unturned.EDeleteMode.html",
    "title": "Enum EDeleteMode | Unturned Analyse Doc",
    "keywords": "Enum EDeleteMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDeleteMode Fields DELETE = 0 SALVAGE = 1 TAG_TOOL_ADD = 2 TAG_TOOL_REMOVE = 3"
  },
  "api/SDG.Unturned.EDragCoordinate.html": {
    "href": "api/SDG.Unturned.EDragCoordinate.html",
    "title": "Enum EDragCoordinate | Unturned Analyse Doc",
    "keywords": "Enum EDragCoordinate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDragCoordinate Fields GLOBAL = 0 LOCAL = 1"
  },
  "api/SDG.Unturned.EDragMode.html": {
    "href": "api/SDG.Unturned.EDragMode.html",
    "title": "Enum EDragMode | Unturned Analyse Doc",
    "keywords": "Enum EDragMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDragMode Fields HAND = 2 LASER = 3 ROTATE = 1 SCALE = 4 TRANSFORM = 0"
  },
  "api/SDG.Unturned.EDragType.html": {
    "href": "api/SDG.Unturned.EDragType.html",
    "title": "Enum EDragType | Unturned Analyse Doc",
    "keywords": "Enum EDragType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EDragType Fields HAND = 10 LASER = 11 NONE = 0 PLANE_X = 4 PLANE_Y = 5 PLANE_Z = 6 ROTATION_X = 7 ROTATION_Y = 8 ROTATION_Z = 9 SCALE_X = 12 SCALE_Y = 13 SCALE_Z = 14 SIZE = 15 TRANSFORM_X = 1 TRANSFORM_Y = 2 TRANSFORM_Z = 3"
  },
  "api/SDG.Unturned.EEconFilterMode.html": {
    "href": "api/SDG.Unturned.EEconFilterMode.html",
    "title": "Enum EEconFilterMode | Unturned Analyse Doc",
    "keywords": "Enum EEconFilterMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EEconFilterMode Fields RAGDOLL_EFFECT = 4 Find an item to apply ragdoll effect tool to. RAGDOLL_EFFECT_REMOVAL = 3 Find an item with a ragdoll effect to remove. SEARCH = 0 STAT_TRACKER = 1 Find an item to apply stat tracker tool to. STAT_TRACKER_REMOVAL = 2 Find an item with a stat tracker to remove."
  },
  "api/SDG.Unturned.EEditorMessage.html": {
    "href": "api/SDG.Unturned.EEditorMessage.html",
    "title": "Enum EEditorMessage | Unturned Analyse Doc",
    "keywords": "Enum EEditorMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EEditorMessage Fields FOCUS = 5 HEIGHTS = 0 NAVIGATION = 2 NODES = 4 OBJECTS = 3 ROADS = 1 VISIBILITY = 6"
  },
  "api/SDG.Unturned.EEffectType.html": {
    "href": "api/SDG.Unturned.EEffectType.html",
    "title": "Enum EEffectType | Unturned Analyse Doc",
    "keywords": "Enum EEffectType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EEffectType Fields AREA = 0 FIRST = 3 HOOK = 1 THIRD = 2"
  },
  "api/SDG.Unturned.EEngine.html": {
    "href": "api/SDG.Unturned.EEngine.html",
    "title": "Enum EEngine | Unturned Analyse Doc",
    "keywords": "Enum EEngine Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EEngine Fields BLIMP = 3 BOAT = 4 CAR = 0 HELICOPTER = 2 PLANE = 1 TRAIN = 5"
  },
  "api/SDG.Unturned.EEquipableModelParent.html": {
    "href": "api/SDG.Unturned.EEquipableModelParent.html",
    "title": "Enum EEquipableModelParent | Unturned Analyse Doc",
    "keywords": "Enum EEquipableModelParent Namespace SDG.Unturned Assembly Assembly-CSharp.dll Which parent to use when attaching an equipped/useable item to the player. public enum EEquipableModelParent Fields LeftHook = 1 RightHook = 0 Spine = 2 SpineHook = 3"
  },
  "api/SDG.Unturned.EExplosionDamageType.html": {
    "href": "api/SDG.Unturned.EExplosionDamageType.html",
    "title": "Enum EExplosionDamageType | Unturned Analyse Doc",
    "keywords": "Enum EExplosionDamageType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EExplosionDamageType Fields CONVENTIONAL = 0 ZOMBIE_ACID = 1 ZOMBIE_ELECTRIC = 3 ZOMBIE_FIRE = 2"
  },
  "api/SDG.Unturned.EFiremode.html": {
    "href": "api/SDG.Unturned.EFiremode.html",
    "title": "Enum EFiremode | Unturned Analyse Doc",
    "keywords": "Enum EFiremode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EFiremode Fields AUTO = 2 BURST = 3 SAFETY = 0 SEMI = 1"
  },
  "api/SDG.Unturned.EFiremode_NetEnum.html": {
    "href": "api/SDG.Unturned.EFiremode_NetEnum.html",
    "title": "Class EFiremode_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EFiremode_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EFiremode_NetEnum Inheritance object EFiremode_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EFiremode) public static bool ReadEnum(this NetPakReader reader, out EFiremode value) Parameters reader NetPakReader value EFiremode Returns bool WriteEnum(NetPakWriter, EFiremode) public static bool WriteEnum(this NetPakWriter writer, EFiremode value) Parameters writer NetPakWriter value EFiremode Returns bool"
  },
  "api/SDG.Unturned.EGameMode.html": {
    "href": "api/SDG.Unturned.EGameMode.html",
    "title": "Enum EGameMode | Unturned Analyse Doc",
    "keywords": "Enum EGameMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EGameMode Fields ANY = 3 EASY = 0 HARD = 2 NORMAL = 1 TUTORIAL = 4"
  },
  "api/SDG.Unturned.EGameMode_NetEnum.html": {
    "href": "api/SDG.Unturned.EGameMode_NetEnum.html",
    "title": "Class EGameMode_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EGameMode_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EGameMode_NetEnum Inheritance object EGameMode_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EGameMode) public static bool ReadEnum(this NetPakReader reader, out EGameMode value) Parameters reader NetPakReader value EGameMode Returns bool WriteEnum(NetPakWriter, EGameMode) public static bool WriteEnum(this NetPakWriter writer, EGameMode value) Parameters writer NetPakWriter value EGameMode Returns bool"
  },
  "api/SDG.Unturned.EGizmoLayer.html": {
    "href": "api/SDG.Unturned.EGizmoLayer.html",
    "title": "Enum EGizmoLayer | Unturned Analyse Doc",
    "keywords": "Enum EGizmoLayer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EGizmoLayer Fields Foreground = 1 Solid lines regardless of depth. World = 0 Checkered lines when occluded, solid lines when visible."
  },
  "api/SDG.Unturned.EGraphicQuality.html": {
    "href": "api/SDG.Unturned.EGraphicQuality.html",
    "title": "Enum EGraphicQuality | Unturned Analyse Doc",
    "keywords": "Enum EGraphicQuality Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EGraphicQuality Fields HIGH = 3 LOW = 1 MEDIUM = 2 OFF = 0 ULTRA = 4"
  },
  "api/SDG.Unturned.EHitmarkerStyle.html": {
    "href": "api/SDG.Unturned.EHitmarkerStyle.html",
    "title": "Enum EHitmarkerStyle | Unturned Analyse Doc",
    "keywords": "Enum EHitmarkerStyle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EHitmarkerStyle Fields Animated = 0 Classic = 1"
  },
  "api/SDG.Unturned.EHuntType.html": {
    "href": "api/SDG.Unturned.EHuntType.html",
    "title": "Enum EHuntType | Unturned Analyse Doc",
    "keywords": "Enum EHuntType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EHuntType Fields PLAYER = 0 POINT = 1"
  },
  "api/SDG.Unturned.EItemOrigin.html": {
    "href": "api/SDG.Unturned.EItemOrigin.html",
    "title": "Enum EItemOrigin | Unturned Analyse Doc",
    "keywords": "Enum EItemOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EItemOrigin Fields ADMIN = 1 CRAFT = 2 NATURE = 3 WORLD = 0"
  },
  "api/SDG.Unturned.EItemRarity.html": {
    "href": "api/SDG.Unturned.EItemRarity.html",
    "title": "Enum EItemRarity | Unturned Analyse Doc",
    "keywords": "Enum EItemRarity Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EItemRarity Fields COMMON = 0 EPIC = 3 LEGENDARY = 4 MYTHICAL = 5 RARE = 2 UNCOMMON = 1"
  },
  "api/SDG.Unturned.EItemType.html": {
    "href": "api/SDG.Unturned.EItemType.html",
    "title": "Enum EItemType | Unturned Analyse Doc",
    "keywords": "Enum EItemType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EItemType Fields ARREST_END = 36 ARREST_START = 35 BACKPACK = 4 BARREL = 11 BARRICADE = 19 BEACON = 21 BOX = 34 CHARGE = 40 CLOUD = 31 COMPASS = 46 DETONATOR = 39 FARM = 22 FILTER = 42 FISHER = 30 FOOD = 13 FUEL = 17 GENERATOR = 38 GLASSES = 6 GRIP = 10 GROWER = 27 GUN = 7 HAT = 0 KEY = 33 LIBRARY = 41 MAGAZINE = 12 MAP = 32 MASK = 3 MEDICAL = 15 MELEE = 16 OIL_PUMP = 47 OPTIC = 28 PANTS = 1 REFILL = 29 SENTRY = 43 SHIRT = 2 SIGHT = 8 STORAGE = 20 STRUCTURE = 24 SUPPLY = 25 TACTICAL = 9 TANK = 37 THROWABLE = 26 TIRE = 45 TOOL = 18 TRAP = 23 VEHICLE_PAINT_TOOL = 48 VEHICLE_REPAIR_TOOL = 44 VEST = 5 WATER = 14"
  },
  "api/SDG.Unturned.ELandmarkQuality.html": {
    "href": "api/SDG.Unturned.ELandmarkQuality.html",
    "title": "Enum ELandmarkQuality | Unturned Analyse Doc",
    "keywords": "Enum ELandmarkQuality Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELandmarkQuality Fields ALL = 2 IMPORTANT = 1 OFF = 0"
  },
  "api/SDG.Unturned.ELayerMask.html": {
    "href": "api/SDG.Unturned.ELayerMask.html",
    "title": "Enum ELayerMask | Unturned Analyse Doc",
    "keywords": "Enum ELayerMask Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELayerMask Fields AGENT = 24 BARRICADE = 27 BUILTIN_3 = 3 BUILTIN_6 = 6 BUILTIN_7 = 7 CLIP = 21 DEBRIS = 12 DEFAULT = 0 ENEMY = 10 ENTITY = 23 ENVIRONMENT = 19 GROUND = 20 GROUND2 = 31 IGNORE_RAYCAST = 2 ITEM = 13 LADDER = 25 LARGE = 15 LOGIC = 8 MEDIUM = 16 NAVMESH = 22 PLAYER = 9 RESOURCE = 14 SKY = 18 SMALL = 17 STRUCTURE = 28 TIRE = 29 TRANSPARENT_FX = 1 TRAP = 30 UI = 5 VEHICLE = 26 VIEWMODEL = 11 WATER = 4"
  },
  "api/SDG.Unturned.ELevelObjectPlacementOrigin.html": {
    "href": "api/SDG.Unturned.ELevelObjectPlacementOrigin.html",
    "title": "Enum ELevelObjectPlacementOrigin | Unturned Analyse Doc",
    "keywords": "Enum ELevelObjectPlacementOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELevelObjectPlacementOrigin Fields GENERATED = 1 Spawned by foliage baking system. MANUAL = 0 Manually placed from the asset browser or old editor. PAINTED = 2 Brushed on with the foliage tool."
  },
  "api/SDG.Unturned.ELevelSize.html": {
    "href": "api/SDG.Unturned.ELevelSize.html",
    "title": "Enum ELevelSize | Unturned Analyse Doc",
    "keywords": "Enum ELevelSize Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELevelSize Fields INSANE = 4 LARGE = 3 MEDIUM = 2 SMALL = 1 TINY = 0"
  },
  "api/SDG.Unturned.ELevelType.html": {
    "href": "api/SDG.Unturned.ELevelType.html",
    "title": "Enum ELevelType | Unturned Analyse Doc",
    "keywords": "Enum ELevelType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELevelType Fields ARENA = 2 HORDE = 1 SURVIVAL = 0"
  },
  "api/SDG.Unturned.ELevelVolumeShape.html": {
    "href": "api/SDG.Unturned.ELevelVolumeShape.html",
    "title": "Enum ELevelVolumeShape | Unturned Analyse Doc",
    "keywords": "Enum ELevelVolumeShape Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELevelVolumeShape Fields Box = 0 Sphere = 1"
  },
  "api/SDG.Unturned.ELevelVolumeVisibility.html": {
    "href": "api/SDG.Unturned.ELevelVolumeVisibility.html",
    "title": "Enum ELevelVolumeVisibility | Unturned Analyse Doc",
    "keywords": "Enum ELevelVolumeVisibility Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELevelVolumeVisibility Fields Hidden = 0 Solid = 2 Wireframe = 1"
  },
  "api/SDG.Unturned.ELevelWeatherOverride.html": {
    "href": "api/SDG.Unturned.ELevelWeatherOverride.html",
    "title": "Enum ELevelWeatherOverride | Unturned Analyse Doc",
    "keywords": "Enum ELevelWeatherOverride Namespace SDG.Unturned Assembly Assembly-CSharp.dll Map creator can specify a constant weather mode. public enum ELevelWeatherOverride Fields NONE = 0 RAIN = 1 SNOW = 2"
  },
  "api/SDG.Unturned.ELightingColor.html": {
    "href": "api/SDG.Unturned.ELightingColor.html",
    "title": "Enum ELightingColor | Unturned Analyse Doc",
    "keywords": "Enum ELightingColor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELightingColor Fields AMBIENT_EQUATOR = 7 AMBIENT_GROUND = 8 AMBIENT_SKY = 6 CLOUDS = 9 CUSTOM_OVERRIDE = 12 Used by weather assets. FOG = 2 PARTICLE_LIGHTING = 11 RAYS = 10 SEA = 1 SKY_EQUATOR = 4 SKY_GROUND = 5 SKY_SKY = 3 SUN = 0"
  },
  "api/SDG.Unturned.ELightingRain.html": {
    "href": "api/SDG.Unturned.ELightingRain.html",
    "title": "Enum ELightingRain | Unturned Analyse Doc",
    "keywords": "Enum ELightingRain Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELightingRain Fields DRIZZLE = 2 Corresponds to active with new weather system. NONE = 0 Corresponds to not active and not blending with new weather system. POST_DRIZZLE = 3 Corresponds to transitioning out with new weather system. PRE_DRIZZLE = 1 Corresponds to transitioning in with new weather system."
  },
  "api/SDG.Unturned.ELightingSingle.html": {
    "href": "api/SDG.Unturned.ELightingSingle.html",
    "title": "Enum ELightingSingle | Unturned Analyse Doc",
    "keywords": "Enum ELightingSingle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELightingSingle Fields CLOUDS = 2 FOG = 1 INTENSITY = 0 RAYS = 4 SHADOWS = 3"
  },
  "api/SDG.Unturned.ELightingSnow.html": {
    "href": "api/SDG.Unturned.ELightingSnow.html",
    "title": "Enum ELightingSnow | Unturned Analyse Doc",
    "keywords": "Enum ELightingSnow Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELightingSnow Fields BLIZZARD = 2 Corresponds to active with new weather system. NONE = 0 Corresponds to not active and not blending with new weather system. POST_BLIZZARD = 3 Corresponds to transitioning out with new weather system. PRE_BLIZZARD = 1 Corresponds to transitioning in with new weather system."
  },
  "api/SDG.Unturned.ELightingTime.html": {
    "href": "api/SDG.Unturned.ELightingTime.html",
    "title": "Enum ELightingTime | Unturned Analyse Doc",
    "keywords": "Enum ELightingTime Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELightingTime Fields DAWN = 0 DUSK = 2 MIDDAY = 1 MIDNIGHT = 3"
  },
  "api/SDG.Unturned.ELightingVision.html": {
    "href": "api/SDG.Unturned.ELightingVision.html",
    "title": "Enum ELightingVision | Unturned Analyse Doc",
    "keywords": "Enum ELightingVision Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELightingVision Fields CIVILIAN = 2 HEADLAMP = 3 MILITARY = 1 NONE = 0"
  },
  "api/SDG.Unturned.ELimb.html": {
    "href": "api/SDG.Unturned.ELimb.html",
    "title": "Enum ELimb | Unturned Analyse Doc",
    "keywords": "Enum ELimb Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELimb Fields LEFT_ARM = 5 LEFT_BACK = 8 LEFT_FOOT = 0 LEFT_FRONT = 10 LEFT_HAND = 4 LEFT_LEG = 1 RIGHT_ARM = 7 RIGHT_BACK = 9 RIGHT_FOOT = 2 RIGHT_FRONT = 11 RIGHT_HAND = 6 RIGHT_LEG = 3 SKULL = 13 SPINE = 12"
  },
  "api/SDG.Unturned.ELimb_NetEnum.html": {
    "href": "api/SDG.Unturned.ELimb_NetEnum.html",
    "title": "Class ELimb_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ELimb_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ELimb_NetEnum Inheritance object ELimb_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ELimb) public static bool ReadEnum(this NetPakReader reader, out ELimb value) Parameters reader NetPakReader value ELimb Returns bool WriteEnum(NetPakWriter, ELimb) public static bool WriteEnum(this NetPakWriter writer, ELimb value) Parameters writer NetPakWriter value ELimb Returns bool"
  },
  "api/SDG.Unturned.ELoadingTip.html": {
    "href": "api/SDG.Unturned.ELoadingTip.html",
    "title": "Enum ELoadingTip | Unturned Analyse Doc",
    "keywords": "Enum ELoadingTip Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELoadingTip Fields ARREST = 15 BASE = 10 BEACON = 20 CLAIM = 17 DEQUIP = 11 DROP = 3 EQUIP = 2 GRAB = 25 GROUP = 18 HEAL = 8 HORN = 21 HOTKEY = 1 LIGHTS = 22 MAP = 19 NIGHTVISION = 12 NONE = 0 ORIENTATION = 29 QUALITY = 6 RARITY = 28 RED = 30 ROTATE = 9 SAFEZONE = 16 SEAT = 27 SIRENS = 4 SKYCRANE = 26 SNAP = 23 STEADY = 31 SURFACE = 14 TRANSFER = 13 TRANSFORM = 5 UMBRELLA = 7 UPGRADE = 24"
  },
  "api/SDG.Unturned.ELogType.html": {
    "href": "api/SDG.Unturned.ELogType.html",
    "title": "Enum ELogType | Unturned Analyse Doc",
    "keywords": "Enum ELogType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ELogType Fields Error = 2 Info = 0 Warn = 1"
  },
  "api/SDG.Unturned.EMannequinUpdateMode.html": {
    "href": "api/SDG.Unturned.EMannequinUpdateMode.html",
    "title": "Enum EMannequinUpdateMode | Unturned Analyse Doc",
    "keywords": "Enum EMannequinUpdateMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EMannequinUpdateMode Fields ADD = 1 COSMETICS = 0 REMOVE = 2 SWAP = 3"
  },
  "api/SDG.Unturned.EMannequinUpdateMode_NetEnum.html": {
    "href": "api/SDG.Unturned.EMannequinUpdateMode_NetEnum.html",
    "title": "Class EMannequinUpdateMode_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EMannequinUpdateMode_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EMannequinUpdateMode_NetEnum Inheritance object EMannequinUpdateMode_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EMannequinUpdateMode) public static bool ReadEnum(this NetPakReader reader, out EMannequinUpdateMode value) Parameters reader NetPakReader value EMannequinUpdateMode Returns bool WriteEnum(NetPakWriter, EMannequinUpdateMode) public static bool WriteEnum(this NetPakWriter writer, EMannequinUpdateMode value) Parameters writer NetPakWriter value EMannequinUpdateMode Returns bool"
  },
  "api/SDG.Unturned.EMenuPlayMapFiltersUIOpenContext.html": {
    "href": "api/SDG.Unturned.EMenuPlayMapFiltersUIOpenContext.html",
    "title": "Enum EMenuPlayMapFiltersUIOpenContext | Unturned Analyse Doc",
    "keywords": "Enum EMenuPlayMapFiltersUIOpenContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EMenuPlayMapFiltersUIOpenContext Fields Filters = 1 ServerList = 0"
  },
  "api/SDG.Unturned.EMenuSurvivorsClothingInspectUIOpenContext.html": {
    "href": "api/SDG.Unturned.EMenuSurvivorsClothingInspectUIOpenContext.html",
    "title": "Enum EMenuSurvivorsClothingInspectUIOpenContext | Unturned Analyse Doc",
    "keywords": "Enum EMenuSurvivorsClothingInspectUIOpenContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EMenuSurvivorsClothingInspectUIOpenContext Fields ItemStoreBundleContents = 2 ItemStoreDetailsMenu = 1 OwnedItem = 0"
  },
  "api/SDG.Unturned.ENPCConditionType.html": {
    "href": "api/SDG.Unturned.ENPCConditionType.html",
    "title": "Enum ENPCConditionType | Unturned Analyse Doc",
    "keywords": "Enum ENPCConditionType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCConditionType Fields COMPARE_FLAGS = 11 CURRENCY = 20 DATE_COUNTER = 25 EXPERIENCE = 1 FLAG_BOOL = 3 FLAG_SHORT = 4 HOLIDAY = 17 IS_FULL_MOON = 24 ITEM = 7 KILLS_ANIMAL = 10 KILLS_HORDE = 9 KILLS_OBJECT = 19 KILLS_PLAYER = 18 KILLS_TREE = 21 KILLS_ZOMBIE = 8 NONE = 0 PLAYER_LIFE_FOOD = 14 PLAYER_LIFE_HEALTH = 13 PLAYER_LIFE_STAMINA = 26 PLAYER_LIFE_VIRUS = 16 PLAYER_LIFE_WATER = 15 QUEST = 5 REPUTATION = 2 SKILLSET = 6 TIME_OF_DAY = 12 WEATHER_BLEND_ALPHA = 23 WEATHER_STATUS = 22"
  },
  "api/SDG.Unturned.ENPCHoliday.html": {
    "href": "api/SDG.Unturned.ENPCHoliday.html",
    "title": "Enum ENPCHoliday | Unturned Analyse Doc",
    "keywords": "Enum ENPCHoliday Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCHoliday Fields APRIL_FOOLS = 3 CHRISTMAS = 2 HALLOWEEN = 1 MAX = 6 NONE = 0 PRIDE_MONTH = 5 VALENTINES = 4"
  },
  "api/SDG.Unturned.ENPCHoliday_NetEnum.html": {
    "href": "api/SDG.Unturned.ENPCHoliday_NetEnum.html",
    "title": "Class ENPCHoliday_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ENPCHoliday_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ENPCHoliday_NetEnum Inheritance object ENPCHoliday_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ENPCHoliday) public static bool ReadEnum(this NetPakReader reader, out ENPCHoliday value) Parameters reader NetPakReader value ENPCHoliday Returns bool WriteEnum(NetPakWriter, ENPCHoliday) public static bool WriteEnum(this NetPakWriter writer, ENPCHoliday value) Parameters writer NetPakWriter value ENPCHoliday Returns bool"
  },
  "api/SDG.Unturned.ENPCLogicType.html": {
    "href": "api/SDG.Unturned.ENPCLogicType.html",
    "title": "Enum ENPCLogicType | Unturned Analyse Doc",
    "keywords": "Enum ENPCLogicType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCLogicType Fields EQUAL = 3 GREATER_THAN = 6 GREATER_THAN_OR_EQUAL_TO = 5 LESS_THAN = 1 LESS_THAN_OR_EQUAL_TO = 2 NONE = 0 NOT_EQUAL = 4"
  },
  "api/SDG.Unturned.ENPCModificationType.html": {
    "href": "api/SDG.Unturned.ENPCModificationType.html",
    "title": "Enum ENPCModificationType | Unturned Analyse Doc",
    "keywords": "Enum ENPCModificationType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCModificationType Fields ASSIGN = 1 DECREMENT = 3 INCREMENT = 2 NONE = 0"
  },
  "api/SDG.Unturned.ENPCOperationType.html": {
    "href": "api/SDG.Unturned.ENPCOperationType.html",
    "title": "Enum ENPCOperationType | Unturned Analyse Doc",
    "keywords": "Enum ENPCOperationType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCOperationType Fields ADDITION = 2 ASSIGN = 1 DIVISION = 5 MODULO = 6 MULTIPLICATION = 4 NONE = 0 RANDOM_EXCLUSIVE = 8 RANDOM_INCLUSIVE = 7 SUBTRACTION = 3"
  },
  "api/SDG.Unturned.ENPCPose.html": {
    "href": "api/SDG.Unturned.ENPCPose.html",
    "title": "Enum ENPCPose | Unturned Analyse Doc",
    "keywords": "Enum ENPCPose Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCPose Fields ASLEEP = 2 CROUCH = 4 PASSIVE = 3 PRONE = 5 REST = 7 SIT = 1 STAND = 0 SURRENDER = 8 UNDER_ARREST = 6"
  },
  "api/SDG.Unturned.ENPCQuestStatus.html": {
    "href": "api/SDG.Unturned.ENPCQuestStatus.html",
    "title": "Enum ENPCQuestStatus | Unturned Analyse Doc",
    "keywords": "Enum ENPCQuestStatus Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCQuestStatus Fields ACTIVE = 1 COMPLETED = 3 NONE = 0 READY = 2"
  },
  "api/SDG.Unturned.ENPCRewardType.html": {
    "href": "api/SDG.Unturned.ENPCRewardType.html",
    "title": "Enum ENPCRewardType | Unturned Analyse Doc",
    "keywords": "Enum ENPCRewardType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCRewardType Fields ACHIEVEMENT = 9 CURRENCY = 14 CUTSCENE_MODE = 22 EFFECT = 24 EVENT = 12 EXPERIENCE = 1 FLAG_BOOL = 3 FLAG_MATH = 13 FLAG_SHORT = 4 FLAG_SHORT_RANDOM = 5 HINT = 15 ITEM = 7 ITEM_RANDOM = 8 NONE = 0 PLAYER_LIFE_FOOD = 18 PLAYER_LIFE_HEALTH = 17 PLAYER_LIFE_STAMINA = 23 PLAYER_LIFE_VIRUS = 20 PLAYER_LIFE_WATER = 19 PLAYER_SPAWNPOINT = 16 QUEST = 6 REPUTATION = 2 REWARDS_LIST_ASSET = 21 TELEPORT = 11 VEHICLE = 10"
  },
  "api/SDG.Unturned.ENPCWeatherStatus.html": {
    "href": "api/SDG.Unturned.ENPCWeatherStatus.html",
    "title": "Enum ENPCWeatherStatus | Unturned Analyse Doc",
    "keywords": "Enum ENPCWeatherStatus Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENPCWeatherStatus Fields Active = 0 True while fading in or fully transitioned in. Fully_Transitioned_In = 2 True while finished fading in. Fully_Transitioned_Out = 4 True while finished fading out. Transitioning = 5 True while fading in or out. Transitioning_In = 1 True while fading in, but not at full intensity. Transitioning_Out = 3 True while fading out, but not at zero intensity."
  },
  "api/SDG.Unturned.ENetInvocationDeferMode.html": {
    "href": "api/SDG.Unturned.ENetInvocationDeferMode.html",
    "title": "Enum ENetInvocationDeferMode | Unturned Analyse Doc",
    "keywords": "Enum ENetInvocationDeferMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll Defines how instance methods handle invocation when the target instance does not exist yet, for example if the target instance is async loading or has time sliced instantiation. public enum ENetInvocationDeferMode Fields Discard = 0 Invocation should be ignored if the target instance does not exist. This is the only applicable defer mode for static methods and server methods. Queue = 1 Invocation will be queued up if the target instance does not exist. Originally an \"Overwrite\" mode was considered for cases like SetHealth where only the newest value is displayed, but this was potentially error-prone if multiple queued methods depended on values from each other."
  },
  "api/SDG.Unturned.ENetInvokableGeneratedMethodPurpose.html": {
    "href": "api/SDG.Unturned.ENetInvokableGeneratedMethodPurpose.html",
    "title": "Enum ENetInvokableGeneratedMethodPurpose | Unturned Analyse Doc",
    "keywords": "Enum ENetInvokableGeneratedMethodPurpose Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENetInvokableGeneratedMethodPurpose Fields Read = 0 Write = 1"
  },
  "api/SDG.Unturned.ENodeShape.html": {
    "href": "api/SDG.Unturned.ENodeShape.html",
    "title": "Enum ENodeShape | Unturned Analyse Doc",
    "keywords": "Enum ENodeShape Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENodeShape Fields BOX = 1 SPHERE = 0"
  },
  "api/SDG.Unturned.ENodeType.html": {
    "href": "api/SDG.Unturned.ENodeType.html",
    "title": "Enum ENodeType | Unturned Analyse Doc",
    "keywords": "Enum ENodeType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ENodeType Fields AIRDROP = 5 ARENA = 3 DEADZONE = 4 EFFECT = 6 LOCATION = 0 PURCHASE = 2 SAFEZONE = 1"
  },
  "api/SDG.Unturned.EObjectChart.html": {
    "href": "api/SDG.Unturned.EObjectChart.html",
    "title": "Enum EObjectChart | Unturned Analyse Doc",
    "keywords": "Enum EObjectChart Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectChart Fields CLIFF = 10 GROUND = 1 HIGHWAY = 3 IGNORE = 2 LARGE = 7 MEDIUM = 8 NONE = 0 PATH = 6 ROAD = 4 STREET = 5 WATER = 9"
  },
  "api/SDG.Unturned.EObjectInteractability.html": {
    "href": "api/SDG.Unturned.EObjectInteractability.html",
    "title": "Enum EObjectInteractability | Unturned Analyse Doc",
    "keywords": "Enum EObjectInteractability Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectInteractability Fields BINARY_STATE = 1 DIALOGUE = 9 Non-NPC object the player can talk with. DROPPER = 2 FUEL = 5 NONE = 0 NOTE = 3 NPC = 7 QUEST = 8 RUBBLE = 6 WATER = 4"
  },
  "api/SDG.Unturned.EObjectInteractabilityEditor.html": {
    "href": "api/SDG.Unturned.EObjectInteractabilityEditor.html",
    "title": "Enum EObjectInteractabilityEditor | Unturned Analyse Doc",
    "keywords": "Enum EObjectInteractabilityEditor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectInteractabilityEditor Fields NONE = 0 TOGGLE = 1"
  },
  "api/SDG.Unturned.EObjectInteractabilityHint.html": {
    "href": "api/SDG.Unturned.EObjectInteractabilityHint.html",
    "title": "Enum EObjectInteractabilityHint | Unturned Analyse Doc",
    "keywords": "Enum EObjectInteractabilityHint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectInteractabilityHint Fields CUSTOM = 5 Use \"Interact\" token from translation file. DOOR = 0 FIRE = 2 GENERATOR = 3 SWITCH = 1 USE = 4"
  },
  "api/SDG.Unturned.EObjectInteractabilityNav.html": {
    "href": "api/SDG.Unturned.EObjectInteractabilityNav.html",
    "title": "Enum EObjectInteractabilityNav | Unturned Analyse Doc",
    "keywords": "Enum EObjectInteractabilityNav Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectInteractabilityNav Fields NONE = 0 State doesn't affect AI collision. OFF = 2 AI collision is blocked when object state is OFF. ON = 1 AI collision is blocked when object state is ON."
  },
  "api/SDG.Unturned.EObjectInteractabilityPower.html": {
    "href": "api/SDG.Unturned.EObjectInteractabilityPower.html",
    "title": "Enum EObjectInteractabilityPower | Unturned Analyse Doc",
    "keywords": "Enum EObjectInteractabilityPower Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectInteractabilityPower Fields NONE = 0 STAY = 2 TOGGLE = 1"
  },
  "api/SDG.Unturned.EObjectLOD.html": {
    "href": "api/SDG.Unturned.EObjectLOD.html",
    "title": "Enum EObjectLOD | Unturned Analyse Doc",
    "keywords": "Enum EObjectLOD Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectLOD Fields AREA = 2 MESH = 1 NONE = 0"
  },
  "api/SDG.Unturned.EObjectRubble.html": {
    "href": "api/SDG.Unturned.EObjectRubble.html",
    "title": "Enum EObjectRubble | Unturned Analyse Doc",
    "keywords": "Enum EObjectRubble Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectRubble Fields DESTROY = 1 NONE = 0"
  },
  "api/SDG.Unturned.EObjectRubbleEditor.html": {
    "href": "api/SDG.Unturned.EObjectRubbleEditor.html",
    "title": "Enum EObjectRubbleEditor | Unturned Analyse Doc",
    "keywords": "Enum EObjectRubbleEditor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectRubbleEditor Fields ALIVE = 0 DEAD = 1"
  },
  "api/SDG.Unturned.EObjectRubbleNavMode.html": {
    "href": "api/SDG.Unturned.EObjectRubbleNavMode.html",
    "title": "Enum EObjectRubbleNavMode | Unturned Analyse Doc",
    "keywords": "Enum EObjectRubbleNavMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll Controls how rubble affects Nav game object. public enum EObjectRubbleNavMode Fields DeactivateIfAllDead = 1 AI collision is blocked when any sections are alive. Once all sections are dead AI collision is unblocked. Unaffected = 0 Default. Destruction of rubble sections does not affect whether Nav game object is active or not."
  },
  "api/SDG.Unturned.EObjectType.html": {
    "href": "api/SDG.Unturned.EObjectType.html",
    "title": "Enum EObjectType | Unturned Analyse Doc",
    "keywords": "Enum EObjectType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EObjectType Fields DECAL = 4 LARGE = 0 MEDIUM = 1 NPC = 3 SMALL = 2"
  },
  "api/SDG.Unturned.EOnlineSafetyDestination.html": {
    "href": "api/SDG.Unturned.EOnlineSafetyDestination.html",
    "title": "Enum EOnlineSafetyDestination | Unturned Analyse Doc",
    "keywords": "Enum EOnlineSafetyDestination Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EOnlineSafetyDestination Fields Bookmarks = 2 Connect = 0 Lobby = 3 ServerList = 1"
  },
  "api/SDG.Unturned.EPaintMode.html": {
    "href": "api/SDG.Unturned.EPaintMode.html",
    "title": "Enum EPaintMode | Unturned Analyse Doc",
    "keywords": "Enum EPaintMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPaintMode Fields ADJUST_DOWN = 1 ADJUST_UP = 0 FLATTEN = 3 SMOOTH = 2"
  },
  "api/SDG.Unturned.EPassword.html": {
    "href": "api/SDG.Unturned.EPassword.html",
    "title": "Enum EPassword | Unturned Analyse Doc",
    "keywords": "Enum EPassword Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPassword Fields ANY = 2 NO = 0 YES = 1"
  },
  "api/SDG.Unturned.EPhysicsMaterial.html": {
    "href": "api/SDG.Unturned.EPhysicsMaterial.html",
    "title": "Enum EPhysicsMaterial | Unturned Analyse Doc",
    "keywords": "Enum EPhysicsMaterial Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPhysicsMaterial Fields ALIEN_DYNAMIC = 20 CLOTH_DYNAMIC = 1 CLOTH_STATIC = 2 CONCRETE_DYNAMIC = 5 CONCRETE_STATIC = 6 FLESH_DYNAMIC = 7 FOLIAGE_DYNAMIC = 16 FOLIAGE_STATIC = 15 GRAVEL_DYNAMIC = 8 GRAVEL_STATIC = 9 ICE_STATIC = 18 METAL_DYNAMIC = 10 METAL_SLIP = 12 METAL_STATIC = 11 NONE = 0 SAND_STATIC = 21 SNOW_STATIC = 17 TILE_DYNAMIC = 3 TILE_STATIC = 4 WATER_STATIC = 19 WOOD_DYNAMIC = 13 WOOD_STATIC = 14"
  },
  "api/SDG.Unturned.EPhysicsMaterialCharacterFrictionMode.html": {
    "href": "api/SDG.Unturned.EPhysicsMaterialCharacterFrictionMode.html",
    "title": "Enum EPhysicsMaterialCharacterFrictionMode | Unturned Analyse Doc",
    "keywords": "Enum EPhysicsMaterialCharacterFrictionMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPhysicsMaterialCharacterFrictionMode Fields Custom = 1 Velocity is affected by acceleration and deceleration. ImmediatelyResponsive = 0 Velocity is directly set to input velocity."
  },
  "api/SDG.Unturned.EPhysicsMaterial_NetEnum.html": {
    "href": "api/SDG.Unturned.EPhysicsMaterial_NetEnum.html",
    "title": "Class EPhysicsMaterial_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPhysicsMaterial_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPhysicsMaterial_NetEnum Inheritance object EPhysicsMaterial_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPhysicsMaterial) public static bool ReadEnum(this NetPakReader reader, out EPhysicsMaterial value) Parameters reader NetPakReader value EPhysicsMaterial Returns bool WriteEnum(NetPakWriter, EPhysicsMaterial) public static bool WriteEnum(this NetPakWriter writer, EPhysicsMaterial value) Parameters writer NetPakWriter value EPhysicsMaterial Returns bool"
  },
  "api/SDG.Unturned.EPlayerAdminUsageFlags.html": {
    "href": "api/SDG.Unturned.EPlayerAdminUsageFlags.html",
    "title": "Enum EPlayerAdminUsageFlags | Unturned Analyse Doc",
    "keywords": "Enum EPlayerAdminUsageFlags Namespace SDG.Unturned Assembly Assembly-CSharp.dll 32-bit mask indicating to the server which admin powers are being used. Does not control which admin powers are available. [Flags] public enum EPlayerAdminUsageFlags Fields Freecam = 1 Player is using spectator camera. None = 0 SpectatorStatsOverlay = 4 Player is using overlay showing player names and positions. Workzone = 2 Player is using barricade/structure transform tools."
  },
  "api/SDG.Unturned.EPlayerBoost.html": {
    "href": "api/SDG.Unturned.EPlayerBoost.html",
    "title": "Enum EPlayerBoost | Unturned Analyse Doc",
    "keywords": "Enum EPlayerBoost Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerBoost Fields FLIGHT = 3 HARDENED = 1 NONE = 0 OLYMPIC = 4 SPLATTERIFIC = 2"
  },
  "api/SDG.Unturned.EPlayerBoost_NetEnum.html": {
    "href": "api/SDG.Unturned.EPlayerBoost_NetEnum.html",
    "title": "Class EPlayerBoost_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPlayerBoost_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPlayerBoost_NetEnum Inheritance object EPlayerBoost_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPlayerBoost) public static bool ReadEnum(this NetPakReader reader, out EPlayerBoost value) Parameters reader NetPakReader value EPlayerBoost Returns bool WriteEnum(NetPakWriter, EPlayerBoost) public static bool WriteEnum(this NetPakWriter writer, EPlayerBoost value) Parameters writer NetPakWriter value EPlayerBoost Returns bool"
  },
  "api/SDG.Unturned.EPlayerDefense.html": {
    "href": "api/SDG.Unturned.EPlayerDefense.html",
    "title": "Enum EPlayerDefense | Unturned Analyse Doc",
    "keywords": "Enum EPlayerDefense Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerDefense Fields IMMUNITY = 2 SNEAKYBEAKY = 0 STRENGTH = 4 SURVIVAL = 6 TOUGHNESS = 3 VITALITY = 1 WARMBLOODED = 5"
  },
  "api/SDG.Unturned.EPlayerGesture.html": {
    "href": "api/SDG.Unturned.EPlayerGesture.html",
    "title": "Enum EPlayerGesture | Unturned Analyse Doc",
    "keywords": "Enum EPlayerGesture Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerGesture Fields ARREST_START = 11 ARREST_STOP = 12 FACEPALM = 15 INVENTORY_START = 1 INVENTORY_STOP = 2 NONE = 0 PICKUP = 3 POINT = 8 PUNCH_LEFT = 4 PUNCH_RIGHT = 5 REST_START = 13 REST_STOP = 14 SALUTE = 10 SURRENDER_START = 6 SURRENDER_STOP = 7 WAVE = 9"
  },
  "api/SDG.Unturned.EPlayerGesture_NetEnum.html": {
    "href": "api/SDG.Unturned.EPlayerGesture_NetEnum.html",
    "title": "Class EPlayerGesture_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPlayerGesture_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPlayerGesture_NetEnum Inheritance object EPlayerGesture_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPlayerGesture) public static bool ReadEnum(this NetPakReader reader, out EPlayerGesture value) Parameters reader NetPakReader value EPlayerGesture Returns bool WriteEnum(NetPakWriter, EPlayerGesture) public static bool WriteEnum(this NetPakWriter writer, EPlayerGesture value) Parameters writer NetPakWriter value EPlayerGesture Returns bool"
  },
  "api/SDG.Unturned.EPlayerGroupRank.html": {
    "href": "api/SDG.Unturned.EPlayerGroupRank.html",
    "title": "Enum EPlayerGroupRank | Unturned Analyse Doc",
    "keywords": "Enum EPlayerGroupRank Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerGroupRank Fields ADMIN = 1 MEMBER = 0 OWNER = 2"
  },
  "api/SDG.Unturned.EPlayerGroupRank_NetEnum.html": {
    "href": "api/SDG.Unturned.EPlayerGroupRank_NetEnum.html",
    "title": "Class EPlayerGroupRank_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPlayerGroupRank_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPlayerGroupRank_NetEnum Inheritance object EPlayerGroupRank_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPlayerGroupRank) public static bool ReadEnum(this NetPakReader reader, out EPlayerGroupRank value) Parameters reader NetPakReader value EPlayerGroupRank Returns bool WriteEnum(NetPakWriter, EPlayerGroupRank) public static bool WriteEnum(this NetPakWriter writer, EPlayerGroupRank value) Parameters writer NetPakWriter value EPlayerGroupRank Returns bool"
  },
  "api/SDG.Unturned.EPlayerHeight.html": {
    "href": "api/SDG.Unturned.EPlayerHeight.html",
    "title": "Enum EPlayerHeight | Unturned Analyse Doc",
    "keywords": "Enum EPlayerHeight Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerHeight Fields CROUCH = 1 PRONE = 2 STAND = 0"
  },
  "api/SDG.Unturned.EPlayerHit.html": {
    "href": "api/SDG.Unturned.EPlayerHit.html",
    "title": "Enum EPlayerHit | Unturned Analyse Doc",
    "keywords": "Enum EPlayerHit Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerHit Fields BUILD = 3 CRITICAL = 2 ENTITIY = 1 GHOST = 4 NONE = 0"
  },
  "api/SDG.Unturned.EPlayerKill.html": {
    "href": "api/SDG.Unturned.EPlayerKill.html",
    "title": "Enum EPlayerKill | Unturned Analyse Doc",
    "keywords": "Enum EPlayerKill Namespace SDG.Unturned Assembly Assembly-CSharp.dll 2023-01-25: fixing killing self with explosive to track kill under the assumption that this is only used for tracking stats. (public issue #2692) public enum EPlayerKill Fields ANIMAL = 4 MEGA = 3 NONE = 0 OBJECT = 6 PLAYER = 1 RESOURCE = 5 ZOMBIE = 2"
  },
  "api/SDG.Unturned.EPlayerMessage.html": {
    "href": "api/SDG.Unturned.EPlayerMessage.html",
    "title": "Enum EPlayerMessage | Unturned Analyse Doc",
    "keywords": "Enum EPlayerMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerMessage Fields BAYONET = 100 BED_CLAIMED = 27 BED_OFF = 26 BED_ON = 25 BLOCKED = 15 BOUNDS = 28 BUILD_ON_OCCUPIED_VEHICLE = 104 Player cannot build on a vehicle with occupied seats. BUSY = 89 CANNOT_BUILD_ON_VEHICLE = 106 Item type is not allowed on vehicles. CANNOT_BUILD_WHILE_SEATED = 108 Player cannot build while seated in a vehicle because some vehicles are abusable to stick the camera through a wall. CLAIM = 79 CLEAN = 92 CLIMB = 109 Interacting with ladder. CONDITION = 97 CORNER = 20 DEADZONE_OFF = 81 DEADZONE_ON = 80 DIRTY = 94 DOORWAY = 22 DOOR_CLOSE = 13 DOOR_OPEN = 12 EMPTY = 41 ENEMY = 11 EXPERIENCE = 29 FARM = 31 FIRE_OFF = 35 FIRE_ON = 34 FORAGE = 36 FREEFORM_BUILDABLE_NOT_ALLOWED = 112 Notice that freeform buildables are blocked by Allow_Freeform_Buildables. FUEL = 91 FULL = 42 GARAGE = 23 GENERATOR_OFF = 38 GENERATOR_ON = 37 GROUND = 21 GROW = 32 HOUSING_PLANNER_TUTORIAL = 110 Popup when equipping housing planner \"press T to show items\" INTERACT = 98 Poorly named. Specific to InteractableObjectQuest. ITEM = 2 LASER = 9 LIGHT = 8 LOCKED = 14 MOBILE = 85 MOON_OFF = 44 MOON_ON = 43 NAV = 83 NONE = 0 NOT_ALLOWED_HERE = 105 Horde beacon cannot be built here. NOT_PAINTABLE = 114 Vehicle doesn't support spray paints. NPC_CUSTOM = 103 Directly uses input string for custom message popups. OIL = 86 PILLAR = 16 PLACEMENT_OBSTRUCTED_BY = 111 Popup when structure is blocked by something named we can format into the message. PLACEMENT_OBSTRUCTED_BY_GROUND = 113 Popup when structure is blocked by terrain. POST = 17 POWER = 50 PURCHASE = 47 RANGEFINDER = 10 RELOAD = 6 REPUTATION = 96 ROOF = 18 SAFETY = 7 SAFEZONE = 99 SAFEZONE_OFF = 46 SAFEZONE_ON = 45 SALTY = 93 SALVAGE = 52 SOIL = 33 SPACE = 1 SPAWN = 84 SPOT_OFF = 40 SPOT_ON = 39 STORAGE = 30 TALK = 95 TOO_FAR_FROM_HULL = 107 Item must be placed closer to vehicle hull. TRAPDOOR = 90 TUTORIAL_BUILD = 72 TUTORIAL_CRAFT = 62 TUTORIAL_CROUCH = 67 TUTORIAL_EDUCATED = 69 TUTORIAL_FARM = 76 TUTORIAL_FIRE = 78 TUTORIAL_FISH = 71 TUTORIAL_GUN = 60 TUTORIAL_HARVEST = 70 TUTORIAL_HORN = 73 TUTORIAL_INVENTORY = 58 TUTORIAL_JUMP = 55 TUTORIAL_LADDER = 61 TUTORIAL_LIGHTS = 74 TUTORIAL_LOOK = 54 TUTORIAL_MEDICAL = 65 TUTORIAL_MOVE = 53 TUTORIAL_PERSPECTIVE = 56 TUTORIAL_POWER = 77 TUTORIAL_PRONE = 68 TUTORIAL_RUN = 57 TUTORIAL_SIRENS = 75 TUTORIAL_SKILLS = 63 TUTORIAL_SURVIVAL = 59 TUTORIAL_SWIM = 64 TUTORIAL_VEHICLE = 66 UNDERWATER = 82 USE = 51 VEHICLE_ENTER = 3 VEHICLE_EXIT = 4 VEHICLE_LOCKED = 101 VEHICLE_SWAP = 5 VEHICLE_UNLOCKED = 102 VOLUME_FUEL = 88 VOLUME_WATER = 87 WALL = 19 WAVE_OFF = 49 WAVE_ON = 48 WINDOW = 24"
  },
  "api/SDG.Unturned.EPlayerMessage_NetEnum.html": {
    "href": "api/SDG.Unturned.EPlayerMessage_NetEnum.html",
    "title": "Class EPlayerMessage_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPlayerMessage_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPlayerMessage_NetEnum Inheritance object EPlayerMessage_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPlayerMessage) public static bool ReadEnum(this NetPakReader reader, out EPlayerMessage value) Parameters reader NetPakReader value EPlayerMessage Returns bool WriteEnum(NetPakWriter, EPlayerMessage) public static bool WriteEnum(this NetPakWriter writer, EPlayerMessage value) Parameters writer NetPakWriter value EPlayerMessage Returns bool"
  },
  "api/SDG.Unturned.EPlayerOffense.html": {
    "href": "api/SDG.Unturned.EPlayerOffense.html",
    "title": "Enum EPlayerOffense | Unturned Analyse Doc",
    "keywords": "Enum EPlayerOffense Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerOffense Fields CARDIO = 3 DEXTERITY = 2 DIVING = 5 EXERCISE = 4 OVERKILL = 0 PARKOUR = 6 SHARPSHOOTER = 1"
  },
  "api/SDG.Unturned.EPlayerPerspective.html": {
    "href": "api/SDG.Unturned.EPlayerPerspective.html",
    "title": "Enum EPlayerPerspective | Unturned Analyse Doc",
    "keywords": "Enum EPlayerPerspective Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerPerspective Fields FIRST = 0 THIRD = 1"
  },
  "api/SDG.Unturned.EPlayerPunch.html": {
    "href": "api/SDG.Unturned.EPlayerPunch.html",
    "title": "Enum EPlayerPunch | Unturned Analyse Doc",
    "keywords": "Enum EPlayerPunch Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerPunch Fields LEFT = 0 RIGHT = 1"
  },
  "api/SDG.Unturned.EPlayerSkillset.html": {
    "href": "api/SDG.Unturned.EPlayerSkillset.html",
    "title": "Enum EPlayerSkillset | Unturned Analyse Doc",
    "keywords": "Enum EPlayerSkillset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerSkillset Fields ARMY = 3 CAMP = 6 CHEF = 8 FARM = 4 FIRE = 1 FISH = 5 MEDIC = 10 NONE = 0 POLICE = 2 THIEF = 9 WORK = 7"
  },
  "api/SDG.Unturned.EPlayerSkillset_NetEnum.html": {
    "href": "api/SDG.Unturned.EPlayerSkillset_NetEnum.html",
    "title": "Class EPlayerSkillset_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPlayerSkillset_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPlayerSkillset_NetEnum Inheritance object EPlayerSkillset_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPlayerSkillset) public static bool ReadEnum(this NetPakReader reader, out EPlayerSkillset value) Parameters reader NetPakReader value EPlayerSkillset Returns bool WriteEnum(NetPakWriter, EPlayerSkillset) public static bool WriteEnum(this NetPakWriter writer, EPlayerSkillset value) Parameters writer NetPakWriter value EPlayerSkillset Returns bool"
  },
  "api/SDG.Unturned.EPlayerSpeciality.html": {
    "href": "api/SDG.Unturned.EPlayerSpeciality.html",
    "title": "Enum EPlayerSpeciality | Unturned Analyse Doc",
    "keywords": "Enum EPlayerSpeciality Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerSpeciality Fields DEFENSE = 1 OFFENSE = 0 SUPPORT = 2"
  },
  "api/SDG.Unturned.EPlayerStance.html": {
    "href": "api/SDG.Unturned.EPlayerStance.html",
    "title": "Enum EPlayerStance | Unturned Analyse Doc",
    "keywords": "Enum EPlayerStance Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerStance Fields CLIMB = 0 CROUCH = 4 DRIVING = 6 PRONE = 5 SITTING = 7 SPRINT = 2 STAND = 3 SWIM = 1"
  },
  "api/SDG.Unturned.EPlayerStance_NetEnum.html": {
    "href": "api/SDG.Unturned.EPlayerStance_NetEnum.html",
    "title": "Class EPlayerStance_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPlayerStance_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPlayerStance_NetEnum Inheritance object EPlayerStance_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPlayerStance) public static bool ReadEnum(this NetPakReader reader, out EPlayerStance value) Parameters reader NetPakReader value EPlayerStance Returns bool WriteEnum(NetPakWriter, EPlayerStance) public static bool WriteEnum(this NetPakWriter writer, EPlayerStance value) Parameters writer NetPakWriter value EPlayerStance Returns bool"
  },
  "api/SDG.Unturned.EPlayerStat.html": {
    "href": "api/SDG.Unturned.EPlayerStat.html",
    "title": "Enum EPlayerStat | Unturned Analyse Doc",
    "keywords": "Enum EPlayerStat Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerStat Fields ACCURACY = 12 ARENA_WINS = 16 DEATHS_PLAYERS = 7 FOUND_BUILDABLES = 17 FOUND_CRAFTS = 9 FOUND_EXPERIENCE = 5 FOUND_FISHES = 10 FOUND_ITEMS = 3 FOUND_PLANTS = 11 FOUND_RESOURCES = 4 FOUND_THROWABLES = 18 HEADSHOTS = 13 KILLS_ANIMALS = 8 KILLS_PLAYERS = 2 KILLS_ZOMBIES_MEGA = 6 KILLS_ZOMBIES_NORMAL = 1 NONE = 0 TRAVEL_FOOT = 14 TRAVEL_VEHICLE = 15"
  },
  "api/SDG.Unturned.EPlayerStat_NetEnum.html": {
    "href": "api/SDG.Unturned.EPlayerStat_NetEnum.html",
    "title": "Class EPlayerStat_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EPlayerStat_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EPlayerStat_NetEnum Inheritance object EPlayerStat_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EPlayerStat) public static bool ReadEnum(this NetPakReader reader, out EPlayerStat value) Parameters reader NetPakReader value EPlayerStat Returns bool WriteEnum(NetPakWriter, EPlayerStat) public static bool WriteEnum(this NetPakWriter writer, EPlayerStat value) Parameters writer NetPakWriter value EPlayerStat Returns bool"
  },
  "api/SDG.Unturned.EPlayerSupport.html": {
    "href": "api/SDG.Unturned.EPlayerSupport.html",
    "title": "Enum EPlayerSupport | Unturned Analyse Doc",
    "keywords": "Enum EPlayerSupport Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerSupport Fields AGRICULTURE = 5 COOKING = 3 CRAFTING = 1 ENGINEER = 7 FISHING = 4 HEALING = 0 MECHANIC = 6 OUTDOORS = 2"
  },
  "api/SDG.Unturned.EPlayerTemperature.html": {
    "href": "api/SDG.Unturned.EPlayerTemperature.html",
    "title": "Enum EPlayerTemperature | Unturned Analyse Doc",
    "keywords": "Enum EPlayerTemperature Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerTemperature Fields ACID = 6 BURNING = 3 COLD = 1 COVERED = 5 FREEZING = 0 NONE = 4 WARM = 2"
  },
  "api/SDG.Unturned.EPlayerType.html": {
    "href": "api/SDG.Unturned.EPlayerType.html",
    "title": "Enum EPlayerType | Unturned Analyse Doc",
    "keywords": "Enum EPlayerType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EPlayerType Fields ADMIN = 2 NORMAL = 0 PRO = 1"
  },
  "api/SDG.Unturned.EPluginWidgetFlags.html": {
    "href": "api/SDG.Unturned.EPluginWidgetFlags.html",
    "title": "Enum EPluginWidgetFlags | Unturned Analyse Doc",
    "keywords": "Enum EPluginWidgetFlags Namespace SDG.Unturned Assembly Assembly-CSharp.dll 32-bit mask granting server plugins additional control over custom UIs. Only replicated to owner. [Flags] public enum EPluginWidgetFlags Fields Default = ShowInteractWithEnemy | ShowDeathMenu | ShowLifeMeters | ShowStatusIcons | ShowUseableGunStatus | ShowVehicleStatus | ShowCenterDot | ShowReputationChangeNotification Default flags set when player spawns. ForceBlur = 4 Enable background blur regardless of other UI state. Takes precedence over NoBlur. Modal = 1 Enables cursor movement while not in a vanilla menu. NoBlur = 2 Disable background blur regardless of other UI state. None = 0 ShowCenterDot = 16384 Enable center dot when guns are not equipped. ShowDeathMenu = 16 Enable explanation and respawn buttons while dead. ShowFood = 64 Enable food meter in the HUD. ShowHealth = 32 Enable health meter in the HUD. ShowInteractWithEnemy = 8 Enable title card while focusing a nearby player. ShowLifeMeters = ShowHealth | ShowFood | ShowWater | ShowVirus | ShowStamina | ShowOxygen ShowOxygen = 1024 Enable oxygen meter in the HUD. ShowReputationChangeNotification = 32768 Enable popup when in-game rep is increased/decreased. ShowStamina = 512 Enable stamina meter in the HUD. ShowStatusIcons = 2048 Enable icons for bleeding, broken bones, temperature, starving, dehydrating, infected, drowning, full moon, safezone, and arrested status. ShowUseableGunStatus = 4096 Enable UseableGun ammo and firemode in the HUD. ShowVehicleStatus = 8192 Enable vehicle fuel, speed, health, battery charge, and locked status in the HUD. ShowVirus = 256 Enable virus/radiation/infection meter in the HUD. ShowWater = 128 Enable water meter in the HUD."
  },
  "api/SDG.Unturned.EPlugins.html": {
    "href": "api/SDG.Unturned.EPlugins.html",
    "title": "Enum EPlugins | Unturned Analyse Doc",
    "keywords": "Enum EPlugins Namespace SDG.Unturned Assembly Assembly-CSharp.dll Server list filter for plugin usage. public enum EPlugins Fields ANY = 2 NO = 0 YES = 1"
  },
  "api/SDG.Unturned.EQuestViewMode.html": {
    "href": "api/SDG.Unturned.EQuestViewMode.html",
    "title": "Enum EQuestViewMode | Unturned Analyse Doc",
    "keywords": "Enum EQuestViewMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EQuestViewMode Fields BEGIN = 0 DETAILS = 2 END = 1"
  },
  "api/SDG.Unturned.ERagdollEffect.html": {
    "href": "api/SDG.Unturned.ERagdollEffect.html",
    "title": "Enum ERagdollEffect | Unturned Analyse Doc",
    "keywords": "Enum ERagdollEffect Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ERagdollEffect Fields BRONZE = 1 GOLD = 3 JADED = 5 NONE = 0 SILVER = 2 SOUL_CRYSTAL_GREEN = 6 SOUL_CRYSTAL_MAGENTA = 7 SOUL_CRYSTAL_RED = 8 SOUL_CRYSTAL_YELLOW = 9 ZERO_KELVIN = 4"
  },
  "api/SDG.Unturned.ERagdollEffect_NetEnum.html": {
    "href": "api/SDG.Unturned.ERagdollEffect_NetEnum.html",
    "title": "Class ERagdollEffect_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ERagdollEffect_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ERagdollEffect_NetEnum Inheritance object ERagdollEffect_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ERagdollEffect) public static bool ReadEnum(this NetPakReader reader, out ERagdollEffect value) Parameters reader NetPakReader value ERagdollEffect Returns bool WriteEnum(NetPakWriter, ERagdollEffect) public static bool WriteEnum(this NetPakWriter writer, ERagdollEffect value) Parameters writer NetPakWriter value ERagdollEffect Returns bool"
  },
  "api/SDG.Unturned.ERayMask.html": {
    "href": "api/SDG.Unturned.ERayMask.html",
    "title": "Enum ERayMask | Unturned Analyse Doc",
    "keywords": "Enum ERayMask Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Flags] public enum ERayMask Fields AGENT = 16777216 BARRICADE = 134217728 BUILTIN_3 = 8 BUILTIN_6 = 64 BUILTIN_7 = 128 CLIP = 2097152 DEBRIS = 4096 DEFAULT = 1 ENEMY = 1024 ENTITY = 8388608 ENVIRONMENT = 524288 GROUND = 1048576 GROUND2 = -2147483648 IGNORE_RAYCAST = 4 ITEM = 8192 LADDER = 33554432 LARGE = 32768 LOGIC = 256 MEDIUM = 65536 NAVMESH = 4194304 PLAYER = 512 RESOURCE = 16384 SKY = 262144 SMALL = 131072 STRUCTURE = 268435456 TIRE = 536870912 TRANSPARENT_FX = 2 TRAP = 1073741824 UI = 32 VEHICLE = 67108864 VIEWMODEL = 2048 WATER = 16"
  },
  "api/SDG.Unturned.ERaycastInfoType.html": {
    "href": "api/SDG.Unturned.ERaycastInfoType.html",
    "title": "Enum ERaycastInfoType | Unturned Analyse Doc",
    "keywords": "Enum ERaycastInfoType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ERaycastInfoType Fields ANIMAL = 5 BARRICADE = 7 NONE = 0 OBJECT = 2 PLAYER = 3 RESOURCE = 9 SKIP = 1 STRUCTURE = 8 VEHICLE = 6 ZOMBIE = 4"
  },
  "api/SDG.Unturned.ERaycastInfoType_NetEnum.html": {
    "href": "api/SDG.Unturned.ERaycastInfoType_NetEnum.html",
    "title": "Class ERaycastInfoType_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ERaycastInfoType_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ERaycastInfoType_NetEnum Inheritance object ERaycastInfoType_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ERaycastInfoType) public static bool ReadEnum(this NetPakReader reader, out ERaycastInfoType value) Parameters reader NetPakReader value ERaycastInfoType Returns bool WriteEnum(NetPakWriter, ERaycastInfoType) public static bool WriteEnum(this NetPakWriter writer, ERaycastInfoType value) Parameters writer NetPakWriter value ERaycastInfoType Returns bool"
  },
  "api/SDG.Unturned.ERaycastInfoUsage.html": {
    "href": "api/SDG.Unturned.ERaycastInfoUsage.html",
    "title": "Enum ERaycastInfoUsage | Unturned Analyse Doc",
    "keywords": "Enum ERaycastInfoUsage Namespace SDG.Unturned Assembly Assembly-CSharp.dll Tags how client expects server to use a raycast input. For example, client may think they fired a gun while server thinks they dequipped the gun, so tagging the input prevents the server from handling it as a punch instead. public enum ERaycastInfoUsage Fields ArrestEnd = 14 ArrestStart = 13 Battery = 7 Bayonet = 4 Carjack = 11 Carlockpick = 9 ConsumeableAid = 1 Detonator = 8 Fuel = 10 Grower = 12 Gun = 3 Melee = 2 Paint = 15 Punch = 0 Refill = 5 Tire = 6"
  },
  "api/SDG.Unturned.ERaycastInfoUsage_NetEnum.html": {
    "href": "api/SDG.Unturned.ERaycastInfoUsage_NetEnum.html",
    "title": "Class ERaycastInfoUsage_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ERaycastInfoUsage_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ERaycastInfoUsage_NetEnum Inheritance object ERaycastInfoUsage_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ERaycastInfoUsage) public static bool ReadEnum(this NetPakReader reader, out ERaycastInfoUsage value) Parameters reader NetPakReader value ERaycastInfoUsage Returns bool WriteEnum(NetPakWriter, ERaycastInfoUsage) public static bool WriteEnum(this NetPakWriter writer, ERaycastInfoUsage value) Parameters writer NetPakWriter value ERaycastInfoUsage Returns bool"
  },
  "api/SDG.Unturned.EReadTextureFromFileMode.html": {
    "href": "api/SDG.Unturned.EReadTextureFromFileMode.html",
    "title": "Enum EReadTextureFromFileMode | Unturned Analyse Doc",
    "keywords": "Enum EReadTextureFromFileMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EReadTextureFromFileMode Fields UI = 0"
  },
  "api/SDG.Unturned.ERefillMode.html": {
    "href": "api/SDG.Unturned.ERefillMode.html",
    "title": "Enum ERefillMode | Unturned Analyse Doc",
    "keywords": "Enum ERefillMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ERefillMode Fields REFILL = 1 USE = 0"
  },
  "api/SDG.Unturned.ERefillWaterType.html": {
    "href": "api/SDG.Unturned.ERefillWaterType.html",
    "title": "Enum ERefillWaterType | Unturned Analyse Doc",
    "keywords": "Enum ERefillWaterType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ERefillWaterType Fields CLEAN = 1 DIRTY = 3 EMPTY = 0 SALTY = 2"
  },
  "api/SDG.Unturned.ERenderMode.html": {
    "href": "api/SDG.Unturned.ERenderMode.html",
    "title": "Enum ERenderMode | Unturned Analyse Doc",
    "keywords": "Enum ERenderMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ERenderMode Fields DEFERRED = 0 FORWARD = 1"
  },
  "api/SDG.Unturned.ERoadMode.html": {
    "href": "api/SDG.Unturned.ERoadMode.html",
    "title": "Enum ERoadMode | Unturned Analyse Doc",
    "keywords": "Enum ERoadMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ERoadMode Fields ALIGNED = 1 FREE = 2 MIRROR = 0"
  },
  "api/SDG.Unturned.ERotateSnapPreset.html": {
    "href": "api/SDG.Unturned.ERotateSnapPreset.html",
    "title": "Enum ERotateSnapPreset | Unturned Analyse Doc",
    "keywords": "Enum ERotateSnapPreset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ERotateSnapPreset Fields FIFTEEN = 0 FIVE = 2 TEN = 1"
  },
  "api/SDG.Unturned.ESensitivityScalingMode.html": {
    "href": "api/SDG.Unturned.ESensitivityScalingMode.html",
    "title": "Enum ESensitivityScalingMode | Unturned Analyse Doc",
    "keywords": "Enum ESensitivityScalingMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESensitivityScalingMode Fields Legacy = 2 Preserve how sensitivity felt prior to 3.22.8.0 update. None = 3 Do not adjust sensitivity while aiming. ProjectionRatio = 0 Project current field of view onto screen compared to desired field of view. ZoomFactor = 1 Multiply sensitivity according to scope/optic zoom. For example an 8x zoom has 1/8th sensitivity."
  },
  "api/SDG.Unturned.ESentryMode.html": {
    "href": "api/SDG.Unturned.ESentryMode.html",
    "title": "Enum ESentryMode | Unturned Analyse Doc",
    "keywords": "Enum ESentryMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESentryMode Fields FRIENDLY = 1 HOSTILE = 2 NEUTRAL = 0"
  },
  "api/SDG.Unturned.EServerListGoldFilter.html": {
    "href": "api/SDG.Unturned.EServerListGoldFilter.html",
    "title": "Enum EServerListGoldFilter | Unturned Analyse Doc",
    "keywords": "Enum EServerListGoldFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll Filter for whether the Permanent Gold Upgrade DLC is required to join a server. public enum EServerListGoldFilter Fields Any = 0 All servers pass the filter. DoesNotRequireGold = 1 Only non-gold servers pass the filter. RequiresGold = 2 Only gold servers pass the filter."
  },
  "api/SDG.Unturned.EServerMessage.html": {
    "href": "api/SDG.Unturned.EServerMessage.html",
    "title": "Enum EServerMessage | Unturned Analyse Doc",
    "keywords": "Enum EServerMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll When adding or removing entries remember to update NetMessages size and regenerate NetCode! public enum EServerMessage Fields Authenticate = 2 Client providing Steam login token. BattlEye = 3 Client sending BattlEye payload to server. GetWorkshopFiles = 0 Client requesting workshop files to download. GracefullyDisconnect = 8 Client intends to disconnect. It is fine if server does not receive this message because players are also removed for transport failure (e.g. timeout) and for expiry of Steam authentication ticket. This message is useful to know the client instigated the disconnection rather than an error. InvokeMethod = 6 Client calling an RPC. PingRequest = 4 Client sent a ping. PingResponse = 5 Client responded to our ping. ReadyToConnect = 1 Client has loaded the level. ValidateAssets = 7 Client providing asset GUIDs with their file hashes to check integrity."
  },
  "api/SDG.Unturned.EServerMessage_NetEnum.html": {
    "href": "api/SDG.Unturned.EServerMessage_NetEnum.html",
    "title": "Class EServerMessage_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EServerMessage_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EServerMessage_NetEnum Inheritance object EServerMessage_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EServerMessage) public static bool ReadEnum(this NetPakReader reader, out EServerMessage value) Parameters reader NetPakReader value EServerMessage Returns bool WriteEnum(NetPakWriter, EServerMessage) public static bool WriteEnum(this NetPakWriter writer, EServerMessage value) Parameters writer NetPakWriter value EServerMessage Returns bool"
  },
  "api/SDG.Unturned.EServerMonetizationTag.html": {
    "href": "api/SDG.Unturned.EServerMonetizationTag.html",
    "title": "Enum EServerMonetizationTag | Unturned Analyse Doc",
    "keywords": "Enum EServerMonetizationTag Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EServerMonetizationTag Fields Any = 1 Not an actual tag. Used for filtering. Monetized = 4 Host has specified that the server does have a real money shop which sells benefits that affect gameplay. NonGameplay = 3 Host has specified that the server does have a real money shop, but does not sell anything which affects gameplay. None = 2 Host has specified that the server does not sell anything for real money. Unspecified = 0 Host has not specified a value."
  },
  "api/SDG.Unturned.ESingleplayerMapCategory.html": {
    "href": "api/SDG.Unturned.ESingleplayerMapCategory.html",
    "title": "Enum ESingleplayerMapCategory | Unturned Analyse Doc",
    "keywords": "Enum ESingleplayerMapCategory Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESingleplayerMapCategory Fields ALL = 4 CURATED = 1 EDITABLE = 5 MISC = 3 OFFICIAL = 0 WORKSHOP = 2"
  },
  "api/SDG.Unturned.ESkinIconSize.html": {
    "href": "api/SDG.Unturned.ESkinIconSize.html",
    "title": "Enum ESkinIconSize | Unturned Analyse Doc",
    "keywords": "Enum ESkinIconSize Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESkinIconSize Fields LARGE = 1 SMALL = 0"
  },
  "api/SDG.Unturned.ESlotType.html": {
    "href": "api/SDG.Unturned.ESlotType.html",
    "title": "Enum ESlotType | Unturned Analyse Doc",
    "keywords": "Enum ESlotType Namespace SDG.Unturned Assembly Assembly-CSharp.dll Used for item placement in displays / holsters, and whether useable can be placed in primary/secondary slot. public enum ESlotType Extension Methods SlotTypeExtension.canEquipAsPrimary(ESlotType) SlotTypeExtension.canEquipAsSecondary(ESlotType) SlotTypeExtension.canEquipFromBag(ESlotType) SlotTypeExtension.canEquipInPage(ESlotType, byte) Fields ANY = 4 Can be placed in primary, secondary, or equipped while in bag. NONE = 0 Cannot be placed in primary nor secondary slots, but can be equipped from bag. PRIMARY = 1 Can be placed in primary slot, but cannot be equipped in secondary or bag. SECONDARY = 2 Can be placed in primary or secondary slot, but cannot be equipped from bag. TERTIARY = 3 Only used by NPCs."
  },
  "api/SDG.Unturned.ESpawnMode.html": {
    "href": "api/SDG.Unturned.ESpawnMode.html",
    "title": "Enum ESpawnMode | Unturned Analyse Doc",
    "keywords": "Enum ESpawnMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESpawnMode Fields ADD_ANIMAL = 10 ADD_ITEM = 2 ADD_PLAYER = 4 [Obsolete] ADD_RESOURCE = 0 ADD_VEHICLE = 8 ADD_ZOMBIE = 6 REMOVE_ANIMAL = 11 REMOVE_ITEM = 3 REMOVE_PLAYER = 5 [Obsolete] REMOVE_RESOURCE = 1 REMOVE_VEHICLE = 9 REMOVE_ZOMBIE = 7"
  },
  "api/SDG.Unturned.ESteamCall.html": {
    "href": "api/SDG.Unturned.ESteamCall.html",
    "title": "Enum ESteamCall | Unturned Analyse Doc",
    "keywords": "Enum ESteamCall Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamCall Fields [Obsolete] ALL = 1 Replaced by ClientInstanceMethod.InvokeAndLoopback or ClientStaticMethod.InvokeAndLoopback. [Obsolete] CLIENTS = 5 Replaced by ClientMethodHandle invoked with Provider.EnumerateClients. Unlike ESteamCall.OTHERS this will be loopback invoked in singleplayer or listen server. [Obsolete] NOT_OWNER = 4 Replaced by ClientMethodHandle invoked with SteamChannel.EnumerateClients_RemoteNotOwner. [Obsolete] OTHERS = 2 Replaced by ClientMethodHandle invoked with Provider.EnumerateClients_Remote. Unlike ESteamCall.CLIENTS this is not loopback invoked. [Obsolete] OWNER = 3 Replaced by ClientMethodHandle invoked with SteamChannel.GetOwnerTransportConnection. [Obsolete] PEERS = 6 May have been used by voice in early versions, but has been completely removed. [Obsolete] SERVER = 0 Replaced by ServerMethodHandle."
  },
  "api/SDG.Unturned.ESteamCallValidation.html": {
    "href": "api/SDG.Unturned.ESteamCallValidation.html",
    "title": "Enum ESteamCallValidation | Unturned Analyse Doc",
    "keywords": "Enum ESteamCallValidation Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamCallValidation Fields NONE = 0 ONLY_FROM_OWNER = 3 Only RPCs from the owner of the object will be allowed to invoke this method. ONLY_FROM_SERVER = 1 Only RPCs from the server will be allowed to invoke this method. SERVERSIDE = 2 RPCs are only allowed to invoke this method if we're running as server."
  },
  "api/SDG.Unturned.ESteamConnectionFailureInfo.html": {
    "href": "api/SDG.Unturned.ESteamConnectionFailureInfo.html",
    "title": "Enum ESteamConnectionFailureInfo | Unturned Analyse Doc",
    "keywords": "Enum ESteamConnectionFailureInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamConnectionFailureInfo Fields ALREADY_CONNECTED = 28 ALREADY_PENDING = 29 AUTH_ECON_DESERIALIZE = 25 AUTH_ECON_SERIALIZE = 24 AUTH_ECON_VERIFY = 26 AUTH_ELSEWHERE = 19 AUTH_EMPTY = 27 AUTH_LICENSE_EXPIRED = 17 AUTH_NETWORK_IDENTITY_FAILURE = 66 The network identity in the ticket does not match the server authenticating the ticket. This can happen if server's Steam ID has changed from what the client thinks it is. For example, joining a stale entry in the server list. (public issue #4101) AUTH_NO_STEAM = 16 AUTH_NO_USER = 22 AUTH_PUB_BAN = 23 AUTH_TIMED_OUT = 20 AUTH_USED = 21 AUTH_VAC_BAN = 18 AUTH_VERIFICATION = 15 BANNED = 3 BARRICADE = 43 BATTLEYE_BROKEN = 48 BATTLEYE_UNKNOWN = 50 BATTLEYE_UPDATE = 49 CLIENT_MODULE_DESYNC = 46 CONNECT_RATE_LIMITING = 75 Received too many connection requests from player in a short window. CUSTOM = 57 Used by client transport to show a custom localized message. ECON_HASH = 52 EconInfo.json hash does not match. FULL = 7 HASH_ASSEMBLY = 9 HASH_LEVEL = 8 HASH_MASTER_BUNDLE = 53 Master bundle hashes do not match. HASH_RESOURCES = 65 Player resources folders don't match. KICKED = 4 LATE_PENDING = 30 LATE_PENDING_STEAM_AUTH = 58 Server has not received an auth session response from Steam yet. LATE_PENDING_STEAM_ECON = 59 Server has not received an economy response from Steam yet. LATE_PENDING_STEAM_GROUPS = 60 Server has not received a groups response from Steam yet. LEVEL_VERSION = 51 MAP = 2 NAME_CHARACTER_INVALID = 38 NAME_CHARACTER_LONG = 37 NAME_CHARACTER_NUMBER = 39 NAME_CHARACTER_SHORT = 36 NAME_PLAYER_INVALID = 34 NAME_PLAYER_LONG = 33 NAME_PLAYER_NUMBER = 35 NAME_PLAYER_SHORT = 32 NAME_PRIVATE_INVALID = 62 Player nickname contains invalid characters. NAME_PRIVATE_LONG = 61 Player nickname exceeds limit. NAME_PRIVATE_NUMBER = 63 Player nickname should not be a number. NONE = 0 NOT_PENDING = 31 PASSWORD = 6 PING = 41 PLUGIN = 42 PRO_APPEARANCE = 14 PRO_CHARACTER = 12 PRO_DESYNC = 13 PRO_SERVER = 11 REJECT_UNKNOWN = 54 SERVER_BATTLEYE_ADVERTISEMENT_MISMATCH = 69 BattlEye status advertised on server list does not match during connect. SERVER_CAMERAMODE_ADVERTISEMENT_MISMATCH = 71 Camera mode advertised on server list does not match during connect. SERVER_MAP_ADVERTISEMENT_MISMATCH = 67 Level name advertised on server list does not match during connect. SERVER_MAXPLAYERS_ADVERTISEMENT_MISMATCH = 70 Max players advertised on server list does not match during connect. SERVER_MODULE_DESYNC = 47 SERVER_PVP_ADVERTISEMENT_MISMATCH = 72 Combat mode advertised on server list does not match during connect. SERVER_VAC_ADVERTISEMENT_MISMATCH = 68 VAC status advertised on server list does not match during connect. SHUTDOWN = 1 SKIN_COLOR_WITHIN_THRESHOLD_OF_TERRAIN_COLOR = 73 Player's skin color is too similar to one of SDG.Unturned.LevelAsset.terrainColorRules. STEAM_ID_MISMATCH = 74 Steam ID reported by net transport doesn't match client's reported Steam ID. This was exploited to fill the server queue with fake players. STRUCTURE = 44 TIMED_OUT = 40 TIMED_OUT_LOGIN = 64 Server did not respond to EServerMessage.Authenticate VEHICLE = 45 VERSION = 10 WHITELISTED = 5 WORKSHOP_ADVERTISEMENT_MISMATCH = 56 Workshop usage advertised on server list does not match during connect. WORKSHOP_DOWNLOAD_RESTRICTION = 55"
  },
  "api/SDG.Unturned.ESteamPacket.html": {
    "href": "api/SDG.Unturned.ESteamPacket.html",
    "title": "Enum ESteamPacket | Unturned Analyse Doc",
    "keywords": "Enum ESteamPacket Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete] public enum ESteamPacket Fields [Obsolete] ACCEPTED = 11 [Obsolete] ADMINED = 12 [Obsolete] AUTHENTICATE = 9 [Obsolete] BANNED = 14 [Obsolete] BATTLEYE = 24 [Obsolete] CLIENT_PENDING = 26 Server response to a non-rejected CONNECT request. Notifies client they are in the queue. [Obsolete] CONNECT = 7 [Obsolete] CONNECTED = 16 [Obsolete] DISCONNECTED = 17 [Obsolete] GUIDTABLE = 25 [Obsolete] KICKED = 15 [Obsolete] MAX = 27 [Obsolete] PING_REQUEST = 18 [Obsolete] PING_RESPONSE = 19 [Obsolete] REJECTED = 10 [Obsolete] SHUTDOWN = 5 [Obsolete] UNADMINED = 13 [Obsolete] UPDATE_RELIABLE_BUFFER = 0 [Obsolete] UPDATE_RELIABLE_CHUNK_BUFFER = 2 [Obsolete(\"Unused and will kick sender.\")] UPDATE_RELIABLE_CHUNK_INSTANT = 22 [Obsolete(\"Unused and will kick sender.\")] UPDATE_RELIABLE_INSTANT = 20 [Obsolete] UPDATE_UNRELIABLE_BUFFER = 1 [Obsolete] UPDATE_UNRELIABLE_CHUNK_BUFFER = 3 [Obsolete(\"Unused and will kick sender.\")] UPDATE_UNRELIABLE_CHUNK_INSTANT = 23 [Obsolete(\"Unused and will kick sender.\")] UPDATE_UNRELIABLE_INSTANT = 21 [Obsolete] UPDATE_VOICE = 4 [Obsolete] VERIFY = 8 [Obsolete] WORKSHOP = 6"
  },
  "api/SDG.Unturned.ESteamRejection.html": {
    "href": "api/SDG.Unturned.ESteamRejection.html",
    "title": "Enum ESteamRejection | Unturned Analyse Doc",
    "keywords": "Enum ESteamRejection Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamRejection Fields ALREADY_CONNECTED = 18 ALREADY_PENDING = 17 AUTH_ECON_DESERIALIZE = 31 AUTH_ECON_VERIFY = 32 AUTH_ELSEWHERE = 26 AUTH_LICENSE_EXPIRED = 24 AUTH_NETWORK_IDENTITY_FAILURE = 47 The network identity in the ticket does not match the server authenticating the ticket. This can happen if server's Steam ID has changed from what the client thinks it is. For example, joining a stale entry in the server list. (public issue #4101) AUTH_NO_STEAM = 23 AUTH_NO_USER = 29 AUTH_PUB_BAN = 30 AUTH_TIMED_OUT = 27 AUTH_USED = 28 AUTH_VAC_BAN = 25 AUTH_VERIFICATION = 22 CLIENT_MODULE_DESYNC = 35 Client has a critical module the server doesn't. CONNECT_RATE_LIMITING = 50 Received too many connection requests from player in a short window. LATE_PENDING = 20 LATE_PENDING_STEAM_AUTH = 40 Server has not received an auth session response from Steam yet. LATE_PENDING_STEAM_ECON = 41 Server has not received an economy response from Steam yet. LATE_PENDING_STEAM_GROUPS = 42 Server has not received a groups response from Steam yet. NAME_CHARACTER_INVALID = 11 If modifying usage please update support article: https://support.smartlydressedgames.com/hc/en-us/articles/13452208765716 NAME_CHARACTER_LONG = 10 NAME_CHARACTER_NUMBER = 12 NAME_CHARACTER_SHORT = 9 NAME_PLAYER_INVALID = 7 If modifying usage please update support article: https://support.smartlydressedgames.com/hc/en-us/articles/13452208765716 NAME_PLAYER_LONG = 6 NAME_PLAYER_NUMBER = 8 NAME_PLAYER_SHORT = 5 NAME_PRIVATE_INVALID = 44 Player nickname contains invalid characters. If modifying usage please update support article: https://support.smartlydressedgames.com/hc/en-us/articles/13452208765716 NAME_PRIVATE_LONG = 43 Player nickname exceeds limit. NAME_PRIVATE_NUMBER = 45 Player nickname should not be a number. NOT_PENDING = 19 PING = 33 PLUGIN = 34 PRO_APPEARANCE = 16 PRO_CHARACTER = 14 PRO_DESYNC = 15 PRO_SERVER = 13 SERVER_FULL = 0 SERVER_MODULE_DESYNC = 36 Server has a critical module the client doesn't. SKIN_COLOR_WITHIN_THRESHOLD_OF_TERRAIN_COLOR = 48 Player's skin color is too similar to one of SDG.Unturned.LevelAsset.terrainColorRules. STEAM_ID_MISMATCH = 49 Steam ID reported by net transport doesn't match client's reported Steam ID. This was exploited to fill the server queue with fake players. WHITELISTED = 21 WRONG_HASH_ASSEMBLY = 2 WRONG_HASH_ECON = 38 EconInfo.json hash does not match. WRONG_HASH_LEVEL = 1 WRONG_HASH_MASTER_BUNDLE = 39 Master bundle hashes do not match. WRONG_HASH_RESOURCES = 46 Player resources folders don't match. WRONG_LEVEL_VERSION = 37 Level config's version number does not match. WRONG_PASSWORD = 4 WRONG_VERSION = 3"
  },
  "api/SDG.Unturned.ESteamRejection_NetEnum.html": {
    "href": "api/SDG.Unturned.ESteamRejection_NetEnum.html",
    "title": "Class ESteamRejection_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ESteamRejection_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ESteamRejection_NetEnum Inheritance object ESteamRejection_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ESteamRejection) public static bool ReadEnum(this NetPakReader reader, out ESteamRejection value) Parameters reader NetPakReader value ESteamRejection Returns bool WriteEnum(NetPakWriter, ESteamRejection) public static bool WriteEnum(this NetPakWriter writer, ESteamRejection value) Parameters writer NetPakWriter value ESteamRejection Returns bool"
  },
  "api/SDG.Unturned.ESteamServerList.html": {
    "href": "api/SDG.Unturned.ESteamServerList.html",
    "title": "Enum ESteamServerList | Unturned Analyse Doc",
    "keywords": "Enum ESteamServerList Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamServerList Fields FAVORITES = 3 FRIENDS = 4 HISTORY = 2 INTERNET = 0 LAN = 1"
  },
  "api/SDG.Unturned.ESteamServerVisibility.html": {
    "href": "api/SDG.Unturned.ESteamServerVisibility.html",
    "title": "Enum ESteamServerVisibility | Unturned Analyse Doc",
    "keywords": "Enum ESteamServerVisibility Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamServerVisibility Fields Internet = 0 LAN = 1"
  },
  "api/SDG.Unturned.ESteamUGCType.html": {
    "href": "api/SDG.Unturned.ESteamUGCType.html",
    "title": "Enum ESteamUGCType | Unturned Analyse Doc",
    "keywords": "Enum ESteamUGCType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamUGCType Fields ITEM = 3 LOCALIZATION = 1 MAP = 0 OBJECT = 2 SKIN = 5 VEHICLE = 4"
  },
  "api/SDG.Unturned.ESteamUGCVisibility.html": {
    "href": "api/SDG.Unturned.ESteamUGCVisibility.html",
    "title": "Enum ESteamUGCVisibility | Unturned Analyse Doc",
    "keywords": "Enum ESteamUGCVisibility Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESteamUGCVisibility Fields FRIENDS_ONLY = 1 PRIVATE = 2 PUBLIC = 0 UNLISTED = 3"
  },
  "api/SDG.Unturned.ESwingMode.html": {
    "href": "api/SDG.Unturned.ESwingMode.html",
    "title": "Enum ESwingMode | Unturned Analyse Doc",
    "keywords": "Enum ESwingMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ESwingMode Fields STRONG = 1 WEAK = 0"
  },
  "api/SDG.Unturned.ESwingMode_NetEnum.html": {
    "href": "api/SDG.Unturned.ESwingMode_NetEnum.html",
    "title": "Class ESwingMode_NetEnum | Unturned Analyse Doc",
    "keywords": "Class ESwingMode_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ESwingMode_NetEnum Inheritance object ESwingMode_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out ESwingMode) public static bool ReadEnum(this NetPakReader reader, out ESwingMode value) Parameters reader NetPakReader value ESwingMode Returns bool WriteEnum(NetPakWriter, ESwingMode) public static bool WriteEnum(this NetPakWriter writer, ESwingMode value) Parameters writer NetPakWriter value ESwingMode Returns bool"
  },
  "api/SDG.Unturned.ETankSource.html": {
    "href": "api/SDG.Unturned.ETankSource.html",
    "title": "Enum ETankSource | Unturned Analyse Doc",
    "keywords": "Enum ETankSource Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ETankSource Fields FUEL = 2 NONE = 0 WATER = 1"
  },
  "api/SDG.Unturned.ETransformSnapPreset.html": {
    "href": "api/SDG.Unturned.ETransformSnapPreset.html",
    "title": "Enum ETransformSnapPreset | Unturned Analyse Doc",
    "keywords": "Enum ETransformSnapPreset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ETransformSnapPreset Fields HALF = 1 ONE = 0 QUARTER = 2"
  },
  "api/SDG.Unturned.EUseableTireMode.html": {
    "href": "api/SDG.Unturned.EUseableTireMode.html",
    "title": "Enum EUseableTireMode | Unturned Analyse Doc",
    "keywords": "Enum EUseableTireMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EUseableTireMode Fields ADD = 0 REMOVE = 1"
  },
  "api/SDG.Unturned.EUseableType.html": {
    "href": "api/SDG.Unturned.EUseableType.html",
    "title": "Enum EUseableType | Unturned Analyse Doc",
    "keywords": "Enum EUseableType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EUseableType Fields ARREST_END = 16 ARREST_START = 15 BARRICADE = 7 CARJACK = 6 CARLOCKPICK = 19 CLOTHING = 1 CLOUD = 14 CONSUMEABLE = 3 DETONATOR = 17 FILTER = 18 FISHER = 13 FUEL = 5 GROWER = 10 GUN = 2 MELEE = 4 NONE = 0 OPTIC = 11 REFILL = 12 STRUCTURE = 8 THROWABLE = 9"
  },
  "api/SDG.Unturned.EVACProtectionFilter.html": {
    "href": "api/SDG.Unturned.EVACProtectionFilter.html",
    "title": "Enum EVACProtectionFilter | Unturned Analyse Doc",
    "keywords": "Enum EVACProtectionFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EVACProtectionFilter Fields Any = 2 Insecure = 1 Secure = 0"
  },
  "api/SDG.Unturned.EVehicleBuildablePlacementRule.html": {
    "href": "api/SDG.Unturned.EVehicleBuildablePlacementRule.html",
    "title": "Enum EVehicleBuildablePlacementRule | Unturned Analyse Doc",
    "keywords": "Enum EVehicleBuildablePlacementRule Namespace SDG.Unturned Assembly Assembly-CSharp.dll Controls whether vehicle allows barricades to be attached to it. public enum EVehicleBuildablePlacementRule Fields AlwaysAllow = 1 Vehicle allows any barricade to be placed on it, regardless of the barricade's Allow_Placement_On_Vehicle setting. The legacy option for this was the Supports_Mobile_Buildables flag. Vanilla trains originally used this option, but it was exploited to move beds into tunnel walls. Block = 2 Vehicle prevents any barricade from being placed on it. Note that gameplay config Bypass_Buildable_Mobility, if true, takes priority. None = 0 Vehicle does not override placement. This means, by default, that barricades can be placed on the vehicle unless the barricade sets Allow_Placement_On_Vehicle to false. (e.g., beds and sentry guns) Note that gameplay config Bypass_Buildable_Mobility, if true, takes priority."
  },
  "api/SDG.Unturned.EVehicleThirdPersonCameraMode.html": {
    "href": "api/SDG.Unturned.EVehicleThirdPersonCameraMode.html",
    "title": "Enum EVehicleThirdPersonCameraMode | Unturned Analyse Doc",
    "keywords": "Enum EVehicleThirdPersonCameraMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EVehicleThirdPersonCameraMode Fields RotationAttached = 1 Camera rotates when the car rotates. RotationDetached = 0 Camera does not rotate when the car rotates."
  },
  "api/SDG.Unturned.EVisualToggleType.html": {
    "href": "api/SDG.Unturned.EVisualToggleType.html",
    "title": "Enum EVisualToggleType | Unturned Analyse Doc",
    "keywords": "Enum EVisualToggleType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EVisualToggleType Fields COSMETIC = 0 MYTHIC = 2 SKIN = 1"
  },
  "api/SDG.Unturned.EVisualToggleType_NetEnum.html": {
    "href": "api/SDG.Unturned.EVisualToggleType_NetEnum.html",
    "title": "Class EVisualToggleType_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EVisualToggleType_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EVisualToggleType_NetEnum Inheritance object EVisualToggleType_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EVisualToggleType) public static bool ReadEnum(this NetPakReader reader, out EVisualToggleType value) Parameters reader NetPakReader value EVisualToggleType Returns bool WriteEnum(NetPakWriter, EVisualToggleType) public static bool WriteEnum(this NetPakWriter writer, EVisualToggleType value) Parameters writer NetPakWriter value EVisualToggleType Returns bool"
  },
  "api/SDG.Unturned.EVotingMessage.html": {
    "href": "api/SDG.Unturned.EVotingMessage.html",
    "title": "Enum EVotingMessage | Unturned Analyse Doc",
    "keywords": "Enum EVotingMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EVotingMessage Fields DELAY = 1 FAIL = 4 OFF = 0 PASS = 3 PLAYERS = 2"
  },
  "api/SDG.Unturned.EVotingMessage_NetEnum.html": {
    "href": "api/SDG.Unturned.EVotingMessage_NetEnum.html",
    "title": "Class EVotingMessage_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EVotingMessage_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EVotingMessage_NetEnum Inheritance object EVotingMessage_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EVotingMessage) public static bool ReadEnum(this NetPakReader reader, out EVotingMessage value) Parameters reader NetPakReader value EVotingMessage Returns bool WriteEnum(NetPakWriter, EVotingMessage) public static bool WriteEnum(this NetPakWriter writer, EVotingMessage value) Parameters writer NetPakWriter value EVotingMessage Returns bool"
  },
  "api/SDG.Unturned.EWeatherStatusChange.html": {
    "href": "api/SDG.Unturned.EWeatherStatusChange.html",
    "title": "Enum EWeatherStatusChange | Unturned Analyse Doc",
    "keywords": "Enum EWeatherStatusChange Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EWeatherStatusChange Fields BeginTransitionIn = 0 Fading in. BeginTransitionOut = 2 Fading out. EndTransitionIn = 1 Finished fading in. EndTransitionOut = 3 Finished fading out."
  },
  "api/SDG.Unturned.EWorkshop.html": {
    "href": "api/SDG.Unturned.EWorkshop.html",
    "title": "Enum EWorkshop | Unturned Analyse Doc",
    "keywords": "Enum EWorkshop Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EWorkshop Fields ANY = 2 NO = 0 YES = 1"
  },
  "api/SDG.Unturned.EWorkshopDownloadRestrictionResult.html": {
    "href": "api/SDG.Unturned.EWorkshopDownloadRestrictionResult.html",
    "title": "Enum EWorkshopDownloadRestrictionResult | Unturned Analyse Doc",
    "keywords": "Enum EWorkshopDownloadRestrictionResult Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EWorkshopDownloadRestrictionResult Fields Allowed = 3 Workshop item does have IP restrictions, and server IP is allowed. Banned = 4 Workshop item has been banned by an admin. Blacklisted = 2 Workshop item has an IP blacklist, and server IP is on it. NoRestrictions = 0 Workshop item does not have any IP restrictions in place. NotWhitelisted = 1 Workshop item has an IP whitelist, and server IP is not on it. PrivateVisibility = 5 Workshop item is hidden from everyone."
  },
  "api/SDG.Unturned.EWorkshopMenuSubmissionMode.html": {
    "href": "api/SDG.Unturned.EWorkshopMenuSubmissionMode.html",
    "title": "Enum EWorkshopMenuSubmissionMode | Unturned Analyse Doc",
    "keywords": "Enum EWorkshopMenuSubmissionMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll Nelson 2024-12-16: This menu and ESteamUGCType are far from ideal, but I'm just trying to hack in a new tag for server browser curation assets before the update. :P public enum EWorkshopMenuSubmissionMode Fields Item = 3 Localization = 1 Map = 0 Object = 2 ServerCuration = 6 Skin = 5 Vehicle = 4"
  },
  "api/SDG.Unturned.EZombiePath.html": {
    "href": "api/SDG.Unturned.EZombiePath.html",
    "title": "Enum EZombiePath | Unturned Analyse Doc",
    "keywords": "Enum EZombiePath Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EZombiePath Fields LEFT = 1 LEFT_FLANK = 3 RIGHT = 2 RIGHT_FLANK = 4 RUSH = 0"
  },
  "api/SDG.Unturned.EZombieSpeciality.html": {
    "href": "api/SDG.Unturned.EZombieSpeciality.html",
    "title": "Enum EZombieSpeciality | Unturned Analyse Doc",
    "keywords": "Enum EZombieSpeciality Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum EZombieSpeciality Extension Methods ZombieSpecialityExtension.IsBoss(EZombieSpeciality) ZombieSpecialityExtension.IsDLVolatile(EZombieSpeciality) ZombieSpecialityExtension.IsFromBuakMap(EZombieSpeciality) Fields ACID = 8 BOSS_ALL = 12 BOSS_BUAK_ELECTRIC = 21 Buak boss types have a red-eyed flashbang effect. BOSS_BUAK_FINAL = 24 BOSS_BUAK_FIRE = 23 BOSS_BUAK_WIND = 22 BOSS_ELECTRIC = 9 BOSS_ELVER_STOMPER = 19 Elver endgame boss with reduced bullet damage and wind zombie stomping attacks. BOSS_FIRE = 11 BOSS_KUWAIT = 20 Kuwait final boss with increased rock throwing, damage players inside vehicle (turrets), and flashbangs. BOSS_MAGMA = 13 BOSS_NUCLEAR = 16 BOSS_SPIRIT = 15 BOSS_WIND = 10 BURNER = 7 CRAWLER = 3 DL_BLUE_VOLATILE = 18 Crossover from Dying Light. Only spawns during night. Explodes into fire at dawn. DL_RED_VOLATILE = 17 Crossover from Dying Light. Only spawns during night. Explodes into fire at dawn. FLANKER_FRIENDLY = 5 FLANKER_STALK = 6 MEGA = 2 NONE = 0 NORMAL = 1 SPIRIT = 14 SPRINTER = 4"
  },
  "api/SDG.Unturned.EZombieSpeciality_NetEnum.html": {
    "href": "api/SDG.Unturned.EZombieSpeciality_NetEnum.html",
    "title": "Class EZombieSpeciality_NetEnum | Unturned Analyse Doc",
    "keywords": "Class EZombieSpeciality_NetEnum Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class EZombieSpeciality_NetEnum Inheritance object EZombieSpeciality_NetEnum Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadEnum(NetPakReader, out EZombieSpeciality) public static bool ReadEnum(this NetPakReader reader, out EZombieSpeciality value) Parameters reader NetPakReader value EZombieSpeciality Returns bool WriteEnum(NetPakWriter, EZombieSpeciality) public static bool WriteEnum(this NetPakWriter writer, EZombieSpeciality value) Parameters writer NetPakWriter value EZombieSpeciality Returns bool"
  },
  "api/SDG.Unturned.EZombieStunOverride.html": {
    "href": "api/SDG.Unturned.EZombieStunOverride.html",
    "title": "Enum EZombieStunOverride | Unturned Analyse Doc",
    "keywords": "Enum EZombieStunOverride Namespace SDG.Unturned Assembly Assembly-CSharp.dll Used when damaging zombies to override in which situations they are stunned. public enum EZombieStunOverride Fields Always = 2 Stun regardless of damage. Never = 1 Don't stun even if damage is over threshold. None = 0 Default stun behaviour determined by damage dealt."
  },
  "api/SDG.Unturned.EconCraftOption.html": {
    "href": "api/SDG.Unturned.EconCraftOption.html",
    "title": "Class EconCraftOption | Unturned Analyse Doc",
    "keywords": "Class EconCraftOption Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EconCraftOption Inheritance object EconCraftOption Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EconCraftOption(string, int, ushort) public EconCraftOption(string newToken, int newGenerate, ushort newScrapsNeeded) Parameters newToken string newGenerate int newScrapsNeeded ushort Fields generate public int generate Field Value int scrapsNeeded public ushort scrapsNeeded Field Value ushort token public string token Field Value string"
  },
  "api/SDG.Unturned.EconItemRarityComparer.html": {
    "href": "api/SDG.Unturned.EconItemRarityComparer.html",
    "title": "Class EconItemRarityComparer | Unturned Analyse Doc",
    "keywords": "Class EconItemRarityComparer Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sorts higher rarity items into the front of the list. public class EconItemRarityComparer : Comparer<SteamItemDetails_t>, IComparer, IComparer<SteamItemDetails_t> Inheritance object Comparer<SteamItemDetails_t> EconItemRarityComparer Implements IComparer IComparer<SteamItemDetails_t> Inherited Members Comparer<SteamItemDetails_t>.Create(Comparison<SteamItemDetails_t>) Comparer<SteamItemDetails_t>.Default object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EconItemRarityComparer() public EconItemRarityComparer() Methods Compare(SteamItemDetails_t, SteamItemDetails_t) public override int Compare(SteamItemDetails_t x, SteamItemDetails_t y) Parameters x SteamItemDetails_t y SteamItemDetails_t Returns int"
  },
  "api/SDG.Unturned.EconSortMode_Name.html": {
    "href": "api/SDG.Unturned.EconSortMode_Name.html",
    "title": "Class EconSortMode_Name | Unturned Analyse Doc",
    "keywords": "Class EconSortMode_Name Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sorts name alphabetically to the front of the list. public class EconSortMode_Name : Comparer<SteamItemDetails_t>, IComparer, IComparer<SteamItemDetails_t> Inheritance object Comparer<SteamItemDetails_t> EconSortMode_Name Implements IComparer IComparer<SteamItemDetails_t> Inherited Members Comparer<SteamItemDetails_t>.Create(Comparison<SteamItemDetails_t>) Comparer<SteamItemDetails_t>.Default object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EconSortMode_Name() public EconSortMode_Name() Methods Compare(SteamItemDetails_t, SteamItemDetails_t) public override int Compare(SteamItemDetails_t x, SteamItemDetails_t y) Parameters x SteamItemDetails_t y SteamItemDetails_t Returns int"
  },
  "api/SDG.Unturned.EconSortMode_Rarity.html": {
    "href": "api/SDG.Unturned.EconSortMode_Rarity.html",
    "title": "Class EconSortMode_Rarity | Unturned Analyse Doc",
    "keywords": "Class EconSortMode_Rarity Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sorts higher rarity items into the front of the list. public class EconSortMode_Rarity : Comparer<SteamItemDetails_t>, IComparer, IComparer<SteamItemDetails_t> Inheritance object Comparer<SteamItemDetails_t> EconSortMode_Rarity Implements IComparer IComparer<SteamItemDetails_t> Inherited Members Comparer<SteamItemDetails_t>.Create(Comparison<SteamItemDetails_t>) Comparer<SteamItemDetails_t>.Default object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EconSortMode_Rarity() public EconSortMode_Rarity() Methods Compare(SteamItemDetails_t, SteamItemDetails_t) public override int Compare(SteamItemDetails_t x, SteamItemDetails_t y) Parameters x SteamItemDetails_t y SteamItemDetails_t Returns int"
  },
  "api/SDG.Unturned.EconSortMode_Type.html": {
    "href": "api/SDG.Unturned.EconSortMode_Type.html",
    "title": "Class EconSortMode_Type | Unturned Analyse Doc",
    "keywords": "Class EconSortMode_Type Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sorts type alphabetically to the front of the list. public class EconSortMode_Type : Comparer<SteamItemDetails_t>, IComparer, IComparer<SteamItemDetails_t> Inheritance object Comparer<SteamItemDetails_t> EconSortMode_Type Implements IComparer IComparer<SteamItemDetails_t> Inherited Members Comparer<SteamItemDetails_t>.Create(Comparison<SteamItemDetails_t>) Comparer<SteamItemDetails_t>.Default object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EconSortMode_Type() public EconSortMode_Type() Methods Compare(SteamItemDetails_t, SteamItemDetails_t) public override int Compare(SteamItemDetails_t x, SteamItemDetails_t y) Parameters x SteamItemDetails_t y SteamItemDetails_t Returns int"
  },
  "api/SDG.Unturned.Editor.html": {
    "href": "api/SDG.Unturned.Editor.html",
    "title": "Class Editor | Unturned Analyse Doc",
    "keywords": "Class Editor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Editor : MonoBehaviour Inheritance object Editor Constructors Editor() public Editor() Fields onEditorCreated public static EditorCreated onEditorCreated Field Value EditorCreated Properties area public EditorArea area { get; } Property Value EditorArea editor public static Editor editor { get; } Property Value Editor Methods init() public virtual void init() save() public static void save()"
  },
  "api/SDG.Unturned.EditorArea.html": {
    "href": "api/SDG.Unturned.EditorArea.html",
    "title": "Class EditorArea | Unturned Analyse Doc",
    "keywords": "Class EditorArea Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorArea : MonoBehaviour Inheritance object EditorArea Constructors EditorArea() public EditorArea() Fields onBoundUpdated public EditorBoundUpdated onBoundUpdated Field Value EditorBoundUpdated onRegionUpdated public EditorRegionUpdated onRegionUpdated Field Value EditorRegionUpdated Properties bound public byte bound { get; } Property Value byte effectNode public IAmbianceNode effectNode { get; } Property Value IAmbianceNode instance public static EditorArea instance { get; protected set; } Property Value EditorArea region_x public byte region_x { get; } Property Value byte region_y public byte region_y { get; } Property Value byte Methods triggerRegistered() protected void triggerRegistered() Events registered public static event EditorAreaRegisteredHandler registered Event Type EditorAreaRegisteredHandler"
  },
  "api/SDG.Unturned.EditorAreaRegisteredHandler.html": {
    "href": "api/SDG.Unturned.EditorAreaRegisteredHandler.html",
    "title": "Delegate EditorAreaRegisteredHandler | Unturned Analyse Doc",
    "keywords": "Delegate EditorAreaRegisteredHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void EditorAreaRegisteredHandler(EditorArea area) Parameters area EditorArea Constructors EditorAreaRegisteredHandler(object, IntPtr) public EditorAreaRegisteredHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EditorArea, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EditorArea area, AsyncCallback callback, object @object) Parameters area EditorArea callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EditorArea) public virtual void Invoke(EditorArea area) Parameters area EditorArea"
  },
  "api/SDG.Unturned.EditorAssetRedirector.html": {
    "href": "api/SDG.Unturned.EditorAssetRedirector.html",
    "title": "Class EditorAssetRedirector | Unturned Analyse Doc",
    "keywords": "Class EditorAssetRedirector Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows mappers to bulk replace assets by listing pairs in a text file. https://github.com/SmartlyDressedGames/Unturned-3.x-Community/issues/2275 public static class EditorAssetRedirector Inheritance object EditorAssetRedirector Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties HasRedirects public static bool HasRedirects { get; } Property Value bool Methods RedirectObject(Guid) public static ObjectAsset RedirectObject(Guid oldGuid) Parameters oldGuid Guid Returns ObjectAsset"
  },
  "api/SDG.Unturned.EditorBoundUpdated.html": {
    "href": "api/SDG.Unturned.EditorBoundUpdated.html",
    "title": "Delegate EditorBoundUpdated | Unturned Analyse Doc",
    "keywords": "Delegate EditorBoundUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void EditorBoundUpdated(byte oldBound, byte newBound) Parameters oldBound byte newBound byte Constructors EditorBoundUpdated(object, IntPtr) public EditorBoundUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte oldBound, byte newBound, AsyncCallback callback, object @object) Parameters oldBound byte newBound byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte) public virtual void Invoke(byte oldBound, byte newBound) Parameters oldBound byte newBound byte"
  },
  "api/SDG.Unturned.EditorCopy.html": {
    "href": "api/SDG.Unturned.EditorCopy.html",
    "title": "Class EditorCopy | Unturned Analyse Doc",
    "keywords": "Class EditorCopy Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorCopy Inheritance object EditorCopy Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorCopy(Vector3, Quaternion, Vector3, ObjectAsset, ItemAsset) public EditorCopy(Vector3 newPosition, Quaternion newRotation, Vector3 newScale, ObjectAsset newObjectAsset, ItemAsset newItemAsset) Parameters newPosition Vector3 newRotation Quaternion newScale Vector3 newObjectAsset ObjectAsset newItemAsset ItemAsset Properties itemAsset public ItemAsset itemAsset { get; } Property Value ItemAsset objectAsset public ObjectAsset objectAsset { get; } Property Value ObjectAsset position public Vector3 position { get; } Property Value Vector3 rotation public Quaternion rotation { get; } Property Value Quaternion scale public Vector3 scale { get; } Property Value Vector3"
  },
  "api/SDG.Unturned.EditorCreated.html": {
    "href": "api/SDG.Unturned.EditorCreated.html",
    "title": "Delegate EditorCreated | Unturned Analyse Doc",
    "keywords": "Delegate EditorCreated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void EditorCreated() Constructors EditorCreated(object, IntPtr) public EditorCreated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.EditorDashboardUI.html": {
    "href": "api/SDG.Unturned.EditorDashboardUI.html",
    "title": "Class EditorDashboardUI | Unturned Analyse Doc",
    "keywords": "Class EditorDashboardUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorDashboardUI Inheritance object EditorDashboardUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorDashboardUI() public EditorDashboardUI() Fields localization public static Local localization Field Value Local Methods OnDestroy() public void OnDestroy()"
  },
  "api/SDG.Unturned.EditorDrag.html": {
    "href": "api/SDG.Unturned.EditorDrag.html",
    "title": "Class EditorDrag | Unturned Analyse Doc",
    "keywords": "Class EditorDrag Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorDrag Inheritance object EditorDrag Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorDrag(Transform, Vector3) public EditorDrag(Transform newTransform, Vector3 newScreen) Parameters newTransform Transform newScreen Vector3 Properties screen public Vector3 screen { get; } Property Value Vector3 transform public Transform transform { get; } Property Value Transform"
  },
  "api/SDG.Unturned.EditorEnvironmentLightingUI.html": {
    "href": "api/SDG.Unturned.EditorEnvironmentLightingUI.html",
    "title": "Class EditorEnvironmentLightingUI | Unturned Analyse Doc",
    "keywords": "Class EditorEnvironmentLightingUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorEnvironmentLightingUI Inheritance object EditorEnvironmentLightingUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorEnvironmentLightingUI() public EditorEnvironmentLightingUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.EditorEnvironmentNavigationUI.html": {
    "href": "api/SDG.Unturned.EditorEnvironmentNavigationUI.html",
    "title": "Class EditorEnvironmentNavigationUI | Unturned Analyse Doc",
    "keywords": "Class EditorEnvironmentNavigationUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorEnvironmentNavigationUI Inheritance object EditorEnvironmentNavigationUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorEnvironmentNavigationUI() public EditorEnvironmentNavigationUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open() updateSelection(Flag) public static void updateSelection(Flag flag) Parameters flag Flag"
  },
  "api/SDG.Unturned.EditorEnvironmentRoadsUI.html": {
    "href": "api/SDG.Unturned.EditorEnvironmentRoadsUI.html",
    "title": "Class EditorEnvironmentRoadsUI | Unturned Analyse Doc",
    "keywords": "Class EditorEnvironmentRoadsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorEnvironmentRoadsUI Inheritance object EditorEnvironmentRoadsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorEnvironmentRoadsUI() public EditorEnvironmentRoadsUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open() updateSelection(Road, RoadJoint) public static void updateSelection(Road road, RoadJoint joint) Parameters road Road joint RoadJoint"
  },
  "api/SDG.Unturned.EditorEnvironmentUI.html": {
    "href": "api/SDG.Unturned.EditorEnvironmentUI.html",
    "title": "Class EditorEnvironmentUI | Unturned Analyse Doc",
    "keywords": "Class EditorEnvironmentUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorEnvironmentUI Inheritance object EditorEnvironmentUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorEnvironmentUI() public EditorEnvironmentUI() Fields active public static bool active Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.EditorLevelObjectsUI.html": {
    "href": "api/SDG.Unturned.EditorLevelObjectsUI.html",
    "title": "Class EditorLevelObjectsUI | Unturned Analyse Doc",
    "keywords": "Class EditorLevelObjectsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorLevelObjectsUI : SleekFullscreenBox Inheritance object SleekFullscreenBox EditorLevelObjectsUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) Constructors EditorLevelObjectsUI() public EditorLevelObjectsUI() Fields active public static bool active Field Value bool coordinateButton public static SleekButtonState coordinateButton Field Value SleekButtonState Methods OnDestroy() public override void OnDestroy() OnUpdate() public override void OnUpdate() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.EditorLevelPlayersUI.html": {
    "href": "api/SDG.Unturned.EditorLevelPlayersUI.html",
    "title": "Class EditorLevelPlayersUI | Unturned Analyse Doc",
    "keywords": "Class EditorLevelPlayersUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorLevelPlayersUI Inheritance object EditorLevelPlayersUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorLevelPlayersUI() public EditorLevelPlayersUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.EditorLevelUI.html": {
    "href": "api/SDG.Unturned.EditorLevelUI.html",
    "title": "Class EditorLevelUI | Unturned Analyse Doc",
    "keywords": "Class EditorLevelUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorLevelUI Inheritance object EditorLevelUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorLevelUI() public EditorLevelUI() Fields active public static bool active Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.EditorLevelVisibilityUI.html": {
    "href": "api/SDG.Unturned.EditorLevelVisibilityUI.html",
    "title": "Class EditorLevelVisibilityUI | Unturned Analyse Doc",
    "keywords": "Class EditorLevelVisibilityUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorLevelVisibilityUI Inheritance object EditorLevelVisibilityUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorLevelVisibilityUI() public EditorLevelVisibilityUI() Fields active public static bool active Field Value bool animalsToggle public static ISleekToggle animalsToggle Field Value ISleekToggle borderToggle public static ISleekToggle borderToggle Field Value ISleekToggle decalsToggle public static ISleekToggle decalsToggle Field Value ISleekToggle itemsToggle public static ISleekToggle itemsToggle Field Value ISleekToggle navigationToggle public static ISleekToggle navigationToggle Field Value ISleekToggle nodesToggle public static ISleekToggle nodesToggle Field Value ISleekToggle playersToggle public static ISleekToggle playersToggle Field Value ISleekToggle roadsToggle public static ISleekToggle roadsToggle Field Value ISleekToggle vehiclesToggle public static ISleekToggle vehiclesToggle Field Value ISleekToggle zombiesToggle public static ISleekToggle zombiesToggle Field Value ISleekToggle Methods close() public static void close() open() public static void open() update() public static void update()"
  },
  "api/SDG.Unturned.EditorLook.html": {
    "href": "api/SDG.Unturned.EditorLook.html",
    "title": "Class EditorLook | Unturned Analyse Doc",
    "keywords": "Class EditorLook Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorLook : MonoBehaviour Inheritance object EditorLook Constructors EditorLook() public EditorLook() Properties pitch public static float pitch { get; } Property Value float yaw public static float yaw { get; } Property Value float"
  },
  "api/SDG.Unturned.EditorMovement.html": {
    "href": "api/SDG.Unturned.EditorMovement.html",
    "title": "Class EditorMovement | Unturned Analyse Doc",
    "keywords": "Class EditorMovement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorMovement : MonoBehaviour Inheritance object EditorMovement Constructors EditorMovement() public EditorMovement() Properties isMoving public static bool isMoving { get; } Property Value bool"
  },
  "api/SDG.Unturned.EditorNavigation.html": {
    "href": "api/SDG.Unturned.EditorNavigation.html",
    "title": "Class EditorNavigation | Unturned Analyse Doc",
    "keywords": "Class EditorNavigation Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorNavigation : MonoBehaviour Inheritance object EditorNavigation Constructors EditorNavigation() public EditorNavigation() Properties flag public static Flag flag { get; } Property Value Flag isPathfinding public static bool isPathfinding { get; set; } Property Value bool"
  },
  "api/SDG.Unturned.EditorObjectSearchFilter.html": {
    "href": "api/SDG.Unturned.EditorObjectSearchFilter.html",
    "title": "Class EditorObjectSearchFilter | Unturned Analyse Doc",
    "keywords": "Class EditorObjectSearchFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorObjectSearchFilter Inheritance object EditorObjectSearchFilter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ignores(ItemAsset) public bool ignores(ItemAsset itemAsset) Parameters itemAsset ItemAsset Returns bool ignores(ObjectAsset) public bool ignores(ObjectAsset objectAsset) Parameters objectAsset ObjectAsset Returns bool matches(ItemAsset) public bool matches(ItemAsset itemAsset) Parameters itemAsset ItemAsset Returns bool matches(ObjectAsset) public bool matches(ObjectAsset objectAsset) Parameters objectAsset ObjectAsset Returns bool parse(string) public static EditorObjectSearchFilter parse(string filter) Parameters filter string Returns EditorObjectSearchFilter"
  },
  "api/SDG.Unturned.EditorObjects.html": {
    "href": "api/SDG.Unturned.EditorObjects.html",
    "title": "Class EditorObjects | Unturned Analyse Doc",
    "keywords": "Class EditorObjects Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorObjects : MonoBehaviour Inheritance object EditorObjects Constructors EditorObjects() public EditorObjects() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte onDragStarted public static DragStarted onDragStarted Field Value DragStarted onDragStopped public static DragStopped onDragStopped Field Value DragStopped selectedItemAsset public static ItemAsset selectedItemAsset Field Value ItemAsset selectedObjectAsset public static ObjectAsset selectedObjectAsset Field Value ObjectAsset snapRotation public static float snapRotation Field Value float snapTransform public static float snapTransform Field Value float Properties dragCoordinate public static EDragCoordinate dragCoordinate { get; set; } Property Value EDragCoordinate dragMode public static EDragMode dragMode { get; set; } Property Value EDragMode isBuilding public static bool isBuilding { get; set; } Property Value bool Methods EnumerateSelectedGameObjects() public static IEnumerable<GameObject> EnumerateSelectedGameObjects() Returns IEnumerable<GameObject> GetMostRecentSelectedGameObject() public static GameObject GetMostRecentSelectedGameObject() Returns GameObject addSelection(Transform) public static void addSelection(Transform select) Parameters select Transform applySelection() public static void applySelection() containsSelection(Transform) public static bool containsSelection(Transform select) Parameters select Transform Returns bool pointSelection() public static void pointSelection() removeSelection(Transform) public static void removeSelection(Transform select) Parameters select Transform save() public static void save()"
  },
  "api/SDG.Unturned.EditorPauseUI.html": {
    "href": "api/SDG.Unturned.EditorPauseUI.html",
    "title": "Class EditorPauseUI | Unturned Analyse Doc",
    "keywords": "Class EditorPauseUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorPauseUI Inheritance object EditorPauseUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorPauseUI() public EditorPauseUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.EditorRegionUpdated.html": {
    "href": "api/SDG.Unturned.EditorRegionUpdated.html",
    "title": "Delegate EditorRegionUpdated | Unturned Analyse Doc",
    "keywords": "Delegate EditorRegionUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void EditorRegionUpdated(byte old_x, byte old_y, byte new_x, byte new_y) Parameters old_x byte old_y byte new_x byte new_y byte Constructors EditorRegionUpdated(object, IntPtr) public EditorRegionUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte old_x, byte old_y, byte new_x, byte new_y, AsyncCallback callback, object @object) Parameters old_x byte old_y byte new_x byte new_y byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, byte, byte) public virtual void Invoke(byte old_x, byte old_y, byte new_x, byte new_y) Parameters old_x byte old_y byte new_x byte new_y byte"
  },
  "api/SDG.Unturned.EditorRoads.html": {
    "href": "api/SDG.Unturned.EditorRoads.html",
    "title": "Class EditorRoads | Unturned Analyse Doc",
    "keywords": "Class EditorRoads Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorRoads : MonoBehaviour Inheritance object EditorRoads Constructors EditorRoads() public EditorRoads() Fields selected public static byte selected Field Value byte Properties isPaving public static bool isPaving { get; set; } Property Value bool joint public static RoadJoint joint { get; } Property Value RoadJoint path public static RoadPath path { get; } Property Value RoadPath road public static Road road { get; } Property Value Road"
  },
  "api/SDG.Unturned.EditorSelection.html": {
    "href": "api/SDG.Unturned.EditorSelection.html",
    "title": "Class EditorSelection | Unturned Analyse Doc",
    "keywords": "Class EditorSelection Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorSelection Inheritance object EditorSelection Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorSelection(Transform, Vector3, Quaternion, Vector3) public EditorSelection(Transform newTransform, Vector3 newFromPosition, Quaternion newFromRotation, Vector3 newFromScale) Parameters newTransform Transform newFromPosition Vector3 newFromRotation Quaternion newFromScale Vector3 Fields fromPosition public Vector3 fromPosition Field Value Vector3 fromRotation public Quaternion fromRotation Field Value Quaternion fromScale public Vector3 fromScale Field Value Vector3 relativeToPivot public Matrix4x4 relativeToPivot Field Value Matrix4x4 Properties transform public Transform transform { get; } Property Value Transform"
  },
  "api/SDG.Unturned.EditorSpawns.html": {
    "href": "api/SDG.Unturned.EditorSpawns.html",
    "title": "Class EditorSpawns | Unturned Analyse Doc",
    "keywords": "Class EditorSpawns Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorSpawns : MonoBehaviour Inheritance object EditorSpawns Constructors EditorSpawns() public EditorSpawns() Fields MAX_REMOVE_SIZE public static readonly byte MAX_REMOVE_SIZE Field Value byte MIN_REMOVE_SIZE public static readonly byte MIN_REMOVE_SIZE Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte selectedAnimal public static byte selectedAnimal Field Value byte selectedItem public static byte selectedItem Field Value byte selectedVehicle public static byte selectedVehicle Field Value byte selectedZombie public static byte selectedZombie Field Value byte Properties animalSpawn public static Transform animalSpawn { get; } Property Value Transform isSpawning public static bool isSpawning { get; set; } Property Value bool itemSpawn public static Transform itemSpawn { get; } Property Value Transform playerSpawn public static Transform playerSpawn { get; } Property Value Transform playerSpawnAlt public static Transform playerSpawnAlt { get; } Property Value Transform radius public static byte radius { get; set; } Property Value byte remove public static Transform remove { get; } Property Value Transform rotation public static float rotation { get; set; } Property Value float selectedAlt public static bool selectedAlt { get; set; } Property Value bool spawnMode public static ESpawnMode spawnMode { get; set; } Property Value ESpawnMode vehicleSpawn public static Transform vehicleSpawn { get; } Property Value Transform zombieSpawn public static Transform zombieSpawn { get; } Property Value Transform Methods load() public static void load() save() public static void save()"
  },
  "api/SDG.Unturned.EditorSpawnsAnimalsUI.html": {
    "href": "api/SDG.Unturned.EditorSpawnsAnimalsUI.html",
    "title": "Class EditorSpawnsAnimalsUI | Unturned Analyse Doc",
    "keywords": "Class EditorSpawnsAnimalsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorSpawnsAnimalsUI Inheritance object EditorSpawnsAnimalsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorSpawnsAnimalsUI() public EditorSpawnsAnimalsUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open() updateSelection() public static void updateSelection() updateTables() public static void updateTables()"
  },
  "api/SDG.Unturned.EditorSpawnsItemsUI.html": {
    "href": "api/SDG.Unturned.EditorSpawnsItemsUI.html",
    "title": "Class EditorSpawnsItemsUI | Unturned Analyse Doc",
    "keywords": "Class EditorSpawnsItemsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorSpawnsItemsUI Inheritance object EditorSpawnsItemsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorSpawnsItemsUI() public EditorSpawnsItemsUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open() updateSelection() public static void updateSelection() updateTables() public static void updateTables()"
  },
  "api/SDG.Unturned.EditorSpawnsUI.html": {
    "href": "api/SDG.Unturned.EditorSpawnsUI.html",
    "title": "Class EditorSpawnsUI | Unturned Analyse Doc",
    "keywords": "Class EditorSpawnsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorSpawnsUI Inheritance object EditorSpawnsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorSpawnsUI() public EditorSpawnsUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.EditorSpawnsVehiclesUI.html": {
    "href": "api/SDG.Unturned.EditorSpawnsVehiclesUI.html",
    "title": "Class EditorSpawnsVehiclesUI | Unturned Analyse Doc",
    "keywords": "Class EditorSpawnsVehiclesUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorSpawnsVehiclesUI Inheritance object EditorSpawnsVehiclesUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorSpawnsVehiclesUI() public EditorSpawnsVehiclesUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open() updateSelection() public static void updateSelection() updateTables() public static void updateTables()"
  },
  "api/SDG.Unturned.EditorSpawnsZombiesUI.html": {
    "href": "api/SDG.Unturned.EditorSpawnsZombiesUI.html",
    "title": "Class EditorSpawnsZombiesUI | Unturned Analyse Doc",
    "keywords": "Class EditorSpawnsZombiesUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorSpawnsZombiesUI Inheritance object EditorSpawnsZombiesUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorSpawnsZombiesUI() public EditorSpawnsZombiesUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open() updateSelection() public static void updateSelection() updateTables() public static void updateTables()"
  },
  "api/SDG.Unturned.EditorTerrainUI.html": {
    "href": "api/SDG.Unturned.EditorTerrainUI.html",
    "title": "Class EditorTerrainUI | Unturned Analyse Doc",
    "keywords": "Class EditorTerrainUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorTerrainUI Inheritance object EditorTerrainUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EditorTerrainUI() public EditorTerrainUI() Fields active public static bool active Field Value bool Methods GoToFoliageTab() public void GoToFoliageTab() GoToHeightsTab() public void GoToHeightsTab() GoToMaterialsTab() public void GoToMaterialsTab() GoToTilesTab() public void GoToTilesTab() close() public void close() open() public void open()"
  },
  "api/SDG.Unturned.EditorUI.html": {
    "href": "api/SDG.Unturned.EditorUI.html",
    "title": "Class EditorUI | Unturned Analyse Doc",
    "keywords": "Class EditorUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EditorUI : MonoBehaviour Inheritance object EditorUI Constructors EditorUI() public EditorUI() Fields HINT_TIME public static readonly float HINT_TIME Field Value float MESSAGE_TIME public static readonly float MESSAGE_TIME Field Value float window public static SleekWindow window Field Value SleekWindow Methods hint(EEditorMessage, string) public static void hint(EEditorMessage message, string text) Parameters message EEditorMessage text string message(EEditorMessage) public static void message(EEditorMessage message) Parameters message EEditorMessage"
  },
  "api/SDG.Unturned.EffectAsset.html": {
    "href": "api/SDG.Unturned.EffectAsset.html",
    "title": "Class EffectAsset | Unturned Analyse Doc",
    "keywords": "Class EffectAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EffectAsset : Asset, IAssetErrorContext Inheritance object Asset EffectAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EffectAsset() public EffectAsset() Fields _effect protected GameObject _effect Field Value GameObject _splatters protected GameObject[] _splatters Field Value GameObject[] blastmarkEffectGuid public Guid blastmarkEffectGuid Field Value Guid cameraShakeMagnitudeDegrees public float cameraShakeMagnitudeDegrees Field Value float cameraShakeRadius public float cameraShakeRadius Field Value float Properties assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType blast public ushort blast { get; } Property Value ushort effect public GameObject effect { get; } Property Value GameObject gore public bool gore { get; } Property Value bool isMusic If true the music option is respected when this effect is used by ambiance volume. public bool isMusic { get; } Property Value bool isStatic public bool isStatic { get; } Property Value bool lifetime public float lifetime { get; } Property Value float lifetimeSpread public float lifetimeSpread { get; } Property Value float preload public byte preload { get; } Property Value byte randomizeRotation public bool randomizeRotation { get; protected set; } Property Value bool relevantDistance In multiplayer the effect will be spawned for players within this radius. public float relevantDistance { get; protected set; } Property Value float spawnOnDedicatedServer public bool spawnOnDedicatedServer { get; protected set; } Property Value bool splatter public byte splatter { get; } Property Value byte splatterLifetime public float splatterLifetime { get; } Property Value float splatterLifetimeSpread public float splatterLifetimeSpread { get; } Property Value float splatterLiquid public bool splatterLiquid { get; } Property Value bool splatterPreload public byte splatterPreload { get; } Property Value byte splatterTemperature public EPlayerTemperature splatterTemperature { get; } Property Value EPlayerTemperature splatters public GameObject[] splatters { get; } Property Value GameObject[] Methods FindBlastmarkEffectAsset() public EffectAsset FindBlastmarkEffectAsset() Returns EffectAsset PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.EffectManager.EffectButtonClickedHandler.html": {
    "href": "api/SDG.Unturned.EffectManager.EffectButtonClickedHandler.html",
    "title": "Delegate EffectManager.EffectButtonClickedHandler | Unturned Analyse Doc",
    "keywords": "Delegate EffectManager.EffectButtonClickedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void EffectManager.EffectButtonClickedHandler(Player player, string buttonName) Parameters player Player buttonName string Constructors EffectButtonClickedHandler(object, IntPtr) public EffectButtonClickedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, string buttonName, AsyncCallback callback, object @object) Parameters player Player buttonName string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, string) public virtual void Invoke(Player player, string buttonName) Parameters player Player buttonName string"
  },
  "api/SDG.Unturned.EffectManager.EffectTextCommittedHandler.html": {
    "href": "api/SDG.Unturned.EffectManager.EffectTextCommittedHandler.html",
    "title": "Delegate EffectManager.EffectTextCommittedHandler | Unturned Analyse Doc",
    "keywords": "Delegate EffectManager.EffectTextCommittedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void EffectManager.EffectTextCommittedHandler(Player player, string buttonName, string text) Parameters player Player buttonName string text string Constructors EffectTextCommittedHandler(object, IntPtr) public EffectTextCommittedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, string, string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, string buttonName, string text, AsyncCallback callback, object @object) Parameters player Player buttonName string text string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, string, string) public virtual void Invoke(Player player, string buttonName, string text) Parameters player Player buttonName string text string"
  },
  "api/SDG.Unturned.EffectManager.html": {
    "href": "api/SDG.Unturned.EffectManager.html",
    "title": "Class EffectManager | Unturned Analyse Doc",
    "keywords": "Class EffectManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EffectManager : SteamCaller Inheritance object SteamCaller EffectManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors EffectManager() public EffectManager() Fields INSANE public static readonly float INSANE Field Value float LARGE public static readonly float LARGE Field Value float MEDIUM public static readonly float MEDIUM Field Value float SMALL public static readonly float SMALL Field Value float onEffectButtonClicked public static EffectManager.EffectButtonClickedHandler onEffectButtonClicked Field Value EffectManager.EffectButtonClickedHandler onEffectTextCommitted public static EffectManager.EffectTextCommittedHandler onEffectTextCommitted Field Value EffectManager.EffectTextCommittedHandler Properties instance Exposed for Rocket transition to modules backwards compatibility. public static EffectManager instance { get; } Property Value EffectManager Methods ClearEffectByGuid(Guid, ITransportConnection) public static void ClearEffectByGuid(Guid assetGuid, ITransportConnection transportConnection) Parameters assetGuid Guid transportConnection ITransportConnection ClearEffectByGuid_AllPlayers(Guid) public static void ClearEffectByGuid_AllPlayers(Guid assetGuid) Parameters assetGuid Guid ClearEffectByID_AllPlayers(ushort) public static void ClearEffectByID_AllPlayers(ushort id) Parameters id ushort Destroy(GameObject) [Obsolete(\"Renamed to DestroyIntoPool to fix name conflict with Object.Destroy\")] public static void Destroy(GameObject element) Parameters element GameObject Destroy(GameObject, float) [Obsolete(\"Renamed to DestroyIntoPool to fix name conflict with Object.Destroy\")] public static void Destroy(GameObject element, float t) Parameters element GameObject t float DestroyIntoPool(GameObject) public static void DestroyIntoPool(GameObject element) Parameters element GameObject DestroyIntoPool(GameObject, float) public static void DestroyIntoPool(GameObject element, float t) Parameters element GameObject t float Instantiate(GameObject) [Obsolete(\"Renamed to InstantiateFromPool to fix name conflict with Object.Instantiate\")] public static GameObject Instantiate(GameObject element) Parameters element GameObject Returns GameObject InstantiateFromPool(EffectAsset) public static GameObject InstantiateFromPool(EffectAsset asset) Parameters asset EffectAsset Returns GameObject InstantiateFromPool(GameObject) [Obsolete(\"Replaced with overload that takes an EffectAsset.\")] public static GameObject InstantiateFromPool(GameObject element) Parameters element GameObject Returns GameObject ReceiveEffectClearAll() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellEffectClearAll\")] public static void ReceiveEffectClearAll() ReceiveEffectClearByGuid(Guid) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveEffectClearByGuid(Guid assetGuid) Parameters assetGuid Guid ReceiveEffectClearById(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellEffectClearByID\")] public static void ReceiveEffectClearById(ushort id) Parameters id ushort ReceiveEffectClicked(in ServerInvocationContext, string) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 20, legacyName = \"tellEffectClicked\")] public static void ReceiveEffectClicked(in ServerInvocationContext context, string buttonName) Parameters context ServerInvocationContext buttonName string ReceiveEffectPoint(Guid, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellEffectPoint\")] public static void ReceiveEffectPoint(Guid assetGuid, Vector3 point) Parameters assetGuid Guid point Vector3 ReceiveEffectPointNormal(Guid, Vector3, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveEffectPointNormal(Guid assetGuid, Vector3 point, Vector3 normal) Parameters assetGuid Guid point Vector3 normal Vector3 ReceiveEffectPointNormal_NonUniformScale(Guid, Vector3, Vector3, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveEffectPointNormal_NonUniformScale(Guid assetGuid, Vector3 point, Vector3 normal, Vector3 scale) Parameters assetGuid Guid point Vector3 normal Vector3 scale Vector3 ReceiveEffectPointNormal_UniformScale(Guid, Vector3, Vector3, float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveEffectPointNormal_UniformScale(Guid assetGuid, Vector3 point, Vector3 normal, float uniformScale) Parameters assetGuid Guid point Vector3 normal Vector3 uniformScale float ReceiveEffectPoint_NonUniformScale(Guid, Vector3, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellEffectPoint_NonUniformScale\")] public static void ReceiveEffectPoint_NonUniformScale(Guid assetGuid, Vector3 point, Vector3 scale) Parameters assetGuid Guid point Vector3 scale Vector3 ReceiveEffectPoint_UniformScale(Guid, Vector3, float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellEffectPoint_UniformScale\")] public static void ReceiveEffectPoint_UniformScale(Guid assetGuid, Vector3 point, float uniformScale) Parameters assetGuid Guid point Vector3 uniformScale float ReceiveEffectPositionRotation(Guid, Vector3, Quaternion) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveEffectPositionRotation(Guid assetGuid, Vector3 position, Quaternion rotation) Parameters assetGuid Guid position Vector3 rotation Quaternion ReceiveEffectPositionRotation_NonUniformScale(Guid, Vector3, Quaternion, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveEffectPositionRotation_NonUniformScale(Guid assetGuid, Vector3 position, Quaternion rotation, Vector3 scale) Parameters assetGuid Guid position Vector3 rotation Quaternion scale Vector3 ReceiveEffectPositionRotation_UniformScale(Guid, Vector3, Quaternion, float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveEffectPositionRotation_UniformScale(Guid assetGuid, Vector3 position, Quaternion rotation, float uniformScale) Parameters assetGuid Guid position Vector3 rotation Quaternion uniformScale float ReceiveEffectTextCommitted(in ServerInvocationContext, string, string) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 20, legacyName = \"tellEffectTextCommitted\")] public static void ReceiveEffectTextCommitted(in ServerInvocationContext context, string inputFieldName, string text) Parameters context ServerInvocationContext inputFieldName string text string ReceiveUIEffect(ushort, short) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffect\")] public static void ReceiveUIEffect(ushort id, short key) Parameters id ushort key short ReceiveUIEffect1Arg(ushort, short, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffect1Arg\")] public static void ReceiveUIEffect1Arg(ushort id, short key, string arg0) Parameters id ushort key short arg0 string ReceiveUIEffect2Args(ushort, short, string, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffect2Args\")] public static void ReceiveUIEffect2Args(ushort id, short key, string arg0, string arg1) Parameters id ushort key short arg0 string arg1 string ReceiveUIEffect3Args(ushort, short, string, string, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffect3Args\")] public static void ReceiveUIEffect3Args(ushort id, short key, string arg0, string arg1, string arg2) Parameters id ushort key short arg0 string arg1 string arg2 string ReceiveUIEffect4Args(ushort, short, string, string, string, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffect4Args\")] public static void ReceiveUIEffect4Args(ushort id, short key, string arg0, string arg1, string arg2, string arg3) Parameters id ushort key short arg0 string arg1 string arg2 string arg3 string ReceiveUIEffectImageURL(short, string, string, bool, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffectImageURL\")] public static void ReceiveUIEffectImageURL(short key, string childNameOrPath, string url, bool shouldCache, bool forceRefresh) Parameters key short childNameOrPath string url string shouldCache bool forceRefresh bool ReceiveUIEffectText(short, string, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffectText\")] public static void ReceiveUIEffectText(short key, string childNameOrPath, string text) Parameters key short childNameOrPath string text string ReceiveUIEffectVisibility(short, string, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUIEffectVisibility\")] public static void ReceiveUIEffectVisibility(short key, string childNameOrPath, bool visible) Parameters key short childNameOrPath string visible bool RegisterDebris(GameObject) public static void RegisterDebris(GameObject item) Parameters item GameObject askEffectClearAll() public static void askEffectClearAll() askEffectClearByID(ushort, ITransportConnection) public static void askEffectClearByID(ushort id, ITransportConnection transportConnection) Parameters id ushort transportConnection ITransportConnection askEffectClearByID(ushort, CSteamID) [Obsolete] public static void askEffectClearByID(ushort id, CSteamID steamID) Parameters id ushort steamID CSteamID createAndFormatUIEffect(ushort, short, params object[]) public static Transform createAndFormatUIEffect(ushort id, short key, params object[] args) Parameters id ushort key short args object[] Returns Transform createUIEffect(ushort, short) public static Transform createUIEffect(ushort id, short key) Parameters id ushort key short Returns Transform effect(AssetReference<EffectAsset>, Vector3) public static Transform effect(AssetReference<EffectAsset> assetRef, Vector3 position) Parameters assetRef AssetReference<EffectAsset> position Vector3 Returns Transform effect(EffectAsset, Vector3, Vector3) public static Transform effect(EffectAsset asset, Vector3 point, Vector3 normal) Parameters asset EffectAsset point Vector3 normal Vector3 Returns Transform effect(EffectAsset, Vector3, Vector3, Vector3) public static Transform effect(EffectAsset asset, Vector3 point, Vector3 normal, Vector3 scaleMultiplier) Parameters asset EffectAsset point Vector3 normal Vector3 scaleMultiplier Vector3 Returns Transform effect(Guid, Vector3, Vector3) public static Transform effect(Guid assetGuid, Vector3 point, Vector3 normal) Parameters assetGuid Guid point Vector3 normal Vector3 Returns Transform effect(Guid, Vector3, Vector3, Vector3) public static Transform effect(Guid assetGuid, Vector3 point, Vector3 normal, Vector3 scaleMultiplier) Parameters assetGuid Guid point Vector3 normal Vector3 scaleMultiplier Vector3 Returns Transform effect(ushort, Vector3, Vector3) public static Transform effect(ushort id, Vector3 point, Vector3 normal) Parameters id ushort point Vector3 normal Vector3 Returns Transform effect(ushort, Vector3, Vector3, Vector3) public static Transform effect(ushort id, Vector3 point, Vector3 normal, Vector3 scaleMultiplier) Parameters id ushort point Vector3 normal Vector3 scaleMultiplier Vector3 Returns Transform formatPluginHotkeysIntoUIEffect(Transform) public static void formatPluginHotkeysIntoUIEffect(Transform effect) Parameters effect Transform formatTextIntoUIEffect(Transform, params object[]) public static void formatTextIntoUIEffect(Transform effect, params object[] args) Parameters effect Transform args object[] gatherFormattingForUIEffect(Transform) public static void gatherFormattingForUIEffect(Transform effect) Parameters effect Transform hookButtonsInUIEffect(Transform) public static void hookButtonsInUIEffect(Transform effect) Parameters effect Transform hookInputFieldsInUIEffect(Transform) public static void hookInputFieldsInUIEffect(Transform effect) Parameters effect Transform sendEffect(ushort, ITransportConnection, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, ITransportConnection transportConnection, Vector3 point) Parameters id ushort transportConnection ITransportConnection point Vector3 sendEffect(ushort, ITransportConnection, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, ITransportConnection transportConnection, Vector3 point, Vector3 normal) Parameters id ushort transportConnection ITransportConnection point Vector3 normal Vector3 sendEffect(ushort, CSteamID, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, CSteamID steamID, Vector3 point) Parameters id ushort steamID CSteamID point Vector3 sendEffect(ushort, CSteamID, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, CSteamID steamID, Vector3 point, Vector3 normal) Parameters id ushort steamID CSteamID point Vector3 normal Vector3 sendEffect(ushort, byte, byte, byte, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, byte x, byte y, byte area, Vector3 point) Parameters id ushort x byte y byte area byte point Vector3 sendEffect(ushort, byte, byte, byte, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, byte x, byte y, byte area, Vector3 point, Vector3 normal) Parameters id ushort x byte y byte area byte point Vector3 normal Vector3 sendEffect(ushort, float, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, float radius, Vector3 point) Parameters id ushort radius float point Vector3 sendEffect(ushort, float, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffect(ushort id, float radius, Vector3 point, Vector3 normal) Parameters id ushort radius float point Vector3 normal Vector3 sendEffectClicked(string) Notify server that a button was clicked in a clientside effect. public static void sendEffectClicked(string buttonName) Parameters buttonName string sendEffectReliable(ushort, ITransportConnection, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, ITransportConnection transportConnection, Vector3 point) Parameters id ushort transportConnection ITransportConnection point Vector3 sendEffectReliable(ushort, ITransportConnection, Vector3, float) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, ITransportConnection transportConnection, Vector3 point, float uniformScale) Parameters id ushort transportConnection ITransportConnection point Vector3 uniformScale float sendEffectReliable(ushort, ITransportConnection, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, ITransportConnection transportConnection, Vector3 point, Vector3 normal) Parameters id ushort transportConnection ITransportConnection point Vector3 normal Vector3 sendEffectReliable(ushort, ITransportConnection, Vector3, Vector3, float) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, ITransportConnection transportConnection, Vector3 point, Vector3 normal, float uniformScale) Parameters id ushort transportConnection ITransportConnection point Vector3 normal Vector3 uniformScale float sendEffectReliable(ushort, CSteamID, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, CSteamID steamID, Vector3 point) Parameters id ushort steamID CSteamID point Vector3 sendEffectReliable(ushort, CSteamID, Vector3, float) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, CSteamID steamID, Vector3 point, float uniformScale) Parameters id ushort steamID CSteamID point Vector3 uniformScale float sendEffectReliable(ushort, CSteamID, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, CSteamID steamID, Vector3 point, Vector3 normal) Parameters id ushort steamID CSteamID point Vector3 normal Vector3 sendEffectReliable(ushort, CSteamID, Vector3, Vector3, float) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, CSteamID steamID, Vector3 point, Vector3 normal, float uniformScale) Parameters id ushort steamID CSteamID point Vector3 normal Vector3 uniformScale float sendEffectReliable(ushort, byte, byte, byte, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, byte x, byte y, byte area, Vector3 point) Parameters id ushort x byte y byte area byte point Vector3 sendEffectReliable(ushort, byte, byte, byte, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, byte x, byte y, byte area, Vector3 point, Vector3 normal) Parameters id ushort x byte y byte area byte point Vector3 normal Vector3 sendEffectReliable(ushort, float, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, float radius, Vector3 point) Parameters id ushort radius float point Vector3 sendEffectReliable(ushort, float, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable(ushort id, float radius, Vector3 point, Vector3 normal) Parameters id ushort radius float point Vector3 normal Vector3 sendEffectReliable_NonUniformScale(ushort, ITransportConnection, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable_NonUniformScale(ushort id, ITransportConnection transportConnection, Vector3 point, Vector3 scale) Parameters id ushort transportConnection ITransportConnection point Vector3 scale Vector3 sendEffectReliable_NonUniformScale(ushort, ITransportConnection, Vector3, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable_NonUniformScale(ushort id, ITransportConnection transportConnection, Vector3 point, Vector3 normal, Vector3 scale) Parameters id ushort transportConnection ITransportConnection point Vector3 normal Vector3 scale Vector3 sendEffectReliable_NonUniformScale(ushort, CSteamID, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable_NonUniformScale(ushort id, CSteamID steamID, Vector3 point, Vector3 scale) Parameters id ushort steamID CSteamID point Vector3 scale Vector3 sendEffectReliable_NonUniformScale(ushort, CSteamID, Vector3, Vector3, Vector3) [Obsolete(\"Please use TriggerEffectParameters with guid instead\")] public static void sendEffectReliable_NonUniformScale(ushort id, CSteamID steamID, Vector3 point, Vector3 normal, Vector3 scale) Parameters id ushort steamID CSteamID point Vector3 normal Vector3 scale Vector3 sendEffectTextCommitted(string, string) Notify server that an input field text was committed. public static void sendEffectTextCommitted(string inputFieldName, string text) Parameters inputFieldName string text string sendUIEffect(ushort, short, ITransportConnection, bool) public static void sendUIEffect(ushort id, short key, ITransportConnection transportConnection, bool reliable) Parameters id ushort key short transportConnection ITransportConnection reliable bool sendUIEffect(ushort, short, ITransportConnection, bool, string) public static void sendUIEffect(ushort id, short key, ITransportConnection transportConnection, bool reliable, string arg0) Parameters id ushort key short transportConnection ITransportConnection reliable bool arg0 string sendUIEffect(ushort, short, ITransportConnection, bool, string, string) public static void sendUIEffect(ushort id, short key, ITransportConnection transportConnection, bool reliable, string arg0, string arg1) Parameters id ushort key short transportConnection ITransportConnection reliable bool arg0 string arg1 string sendUIEffect(ushort, short, ITransportConnection, bool, string, string, string) public static void sendUIEffect(ushort id, short key, ITransportConnection transportConnection, bool reliable, string arg0, string arg1, string arg2) Parameters id ushort key short transportConnection ITransportConnection reliable bool arg0 string arg1 string arg2 string sendUIEffect(ushort, short, ITransportConnection, bool, string, string, string, string) public static void sendUIEffect(ushort id, short key, ITransportConnection transportConnection, bool reliable, string arg0, string arg1, string arg2, string arg3) Parameters id ushort key short transportConnection ITransportConnection reliable bool arg0 string arg1 string arg2 string arg3 string sendUIEffect(ushort, short, CSteamID, bool) [Obsolete] public static void sendUIEffect(ushort id, short key, CSteamID steamID, bool reliable) Parameters id ushort key short steamID CSteamID reliable bool sendUIEffect(ushort, short, CSteamID, bool, string) [Obsolete] public static void sendUIEffect(ushort id, short key, CSteamID steamID, bool reliable, string arg0) Parameters id ushort key short steamID CSteamID reliable bool arg0 string sendUIEffect(ushort, short, CSteamID, bool, string, string) [Obsolete] public static void sendUIEffect(ushort id, short key, CSteamID steamID, bool reliable, string arg0, string arg1) Parameters id ushort key short steamID CSteamID reliable bool arg0 string arg1 string sendUIEffect(ushort, short, CSteamID, bool, string, string, string) [Obsolete] public static void sendUIEffect(ushort id, short key, CSteamID steamID, bool reliable, string arg0, string arg1, string arg2) Parameters id ushort key short steamID CSteamID reliable bool arg0 string arg1 string arg2 string sendUIEffect(ushort, short, CSteamID, bool, string, string, string, string) [Obsolete] public static void sendUIEffect(ushort id, short key, CSteamID steamID, bool reliable, string arg0, string arg1, string arg2, string arg3) Parameters id ushort key short steamID CSteamID reliable bool arg0 string arg1 string arg2 string arg3 string sendUIEffect(ushort, short, bool) public static void sendUIEffect(ushort id, short key, bool reliable) Parameters id ushort key short reliable bool sendUIEffect(ushort, short, bool, string) public static void sendUIEffect(ushort id, short key, bool reliable, string arg0) Parameters id ushort key short reliable bool arg0 string sendUIEffect(ushort, short, bool, string, string) public static void sendUIEffect(ushort id, short key, bool reliable, string arg0, string arg1) Parameters id ushort key short reliable bool arg0 string arg1 string sendUIEffect(ushort, short, bool, string, string, string) public static void sendUIEffect(ushort id, short key, bool reliable, string arg0, string arg1, string arg2) Parameters id ushort key short reliable bool arg0 string arg1 string arg2 string sendUIEffect(ushort, short, bool, string, string, string, string) public static void sendUIEffect(ushort id, short key, bool reliable, string arg0, string arg1, string arg2, string arg3) Parameters id ushort key short reliable bool arg0 string arg1 string arg2 string arg3 string sendUIEffectImageURL(short, ITransportConnection, bool, string, string, bool, bool) public static void sendUIEffectImageURL(short key, ITransportConnection transportConnection, bool reliable, string childNameOrPath, string url, bool shouldCache = true, bool forceRefresh = false) Parameters key short transportConnection ITransportConnection reliable bool childNameOrPath string url string shouldCache bool If true, client will download the image once and re-use it for subsequent calls. forceRefresh bool If true, client will destroy any cached copy of the image and re-acquire it. sendUIEffectImageURL(short, CSteamID, bool, string, string) public static void sendUIEffectImageURL(short key, CSteamID steamID, bool reliable, string childNameOrPath, string url) Parameters key short steamID CSteamID reliable bool childNameOrPath string url string sendUIEffectImageURL(short, CSteamID, bool, string, string, bool, bool) public static void sendUIEffectImageURL(short key, CSteamID steamID, bool reliable, string childNameOrPath, string url, bool shouldCache = true, bool forceRefresh = false) Parameters key short steamID CSteamID reliable bool childNameOrPath string url string shouldCache bool forceRefresh bool sendUIEffectText(short, ITransportConnection, bool, string, string) public static void sendUIEffectText(short key, ITransportConnection transportConnection, bool reliable, string childNameOrPath, string text) Parameters key short transportConnection ITransportConnection reliable bool childNameOrPath string text string sendUIEffectText(short, CSteamID, bool, string, string) [Obsolete] public static void sendUIEffectText(short key, CSteamID steamID, bool reliable, string childNameOrPath, string text) Parameters key short steamID CSteamID reliable bool childNameOrPath string text string sendUIEffectVisibility(short, ITransportConnection, bool, string, bool) public static void sendUIEffectVisibility(short key, ITransportConnection transportConnection, bool reliable, string childNameOrPath, bool visible) Parameters key short transportConnection ITransportConnection reliable bool childNameOrPath string visible bool sendUIEffectVisibility(short, CSteamID, bool, string, bool) [Obsolete] public static void sendUIEffectVisibility(short key, CSteamID steamID, bool reliable, string childNameOrPath, bool visible) Parameters key short steamID CSteamID reliable bool childNameOrPath string visible bool tellEffectClearAll(CSteamID) [Obsolete] public void tellEffectClearAll(CSteamID steamID) Parameters steamID CSteamID tellEffectClearByID(CSteamID, ushort) [Obsolete] public void tellEffectClearByID(CSteamID steamID, ushort id) Parameters steamID CSteamID id ushort tellEffectClicked(CSteamID, string) [Obsolete] public void tellEffectClicked(CSteamID steamID, string buttonName) Parameters steamID CSteamID buttonName string tellEffectPoint(CSteamID, ushort, Vector3) [Obsolete] public void tellEffectPoint(CSteamID steamID, ushort id, Vector3 point) Parameters steamID CSteamID id ushort point Vector3 tellEffectPointNormal(CSteamID, ushort, Vector3, Vector3) [Obsolete] public void tellEffectPointNormal(CSteamID steamID, ushort id, Vector3 point, Vector3 normal) Parameters steamID CSteamID id ushort point Vector3 normal Vector3 tellEffectPointNormal_NonUniformScale(CSteamID, ushort, Vector3, Vector3, Vector3) [Obsolete] public void tellEffectPointNormal_NonUniformScale(CSteamID steamID, ushort id, Vector3 point, Vector3 normal, Vector3 scale) Parameters steamID CSteamID id ushort point Vector3 normal Vector3 scale Vector3 tellEffectPointNormal_UniformScale(CSteamID, ushort, Vector3, Vector3, float) [Obsolete] public void tellEffectPointNormal_UniformScale(CSteamID steamID, ushort id, Vector3 point, Vector3 normal, float uniformScale) Parameters steamID CSteamID id ushort point Vector3 normal Vector3 uniformScale float tellEffectPoint_NonUniformScale(CSteamID, ushort, Vector3, Vector3) [Obsolete] public void tellEffectPoint_NonUniformScale(CSteamID steamID, ushort id, Vector3 point, Vector3 scale) Parameters steamID CSteamID id ushort point Vector3 scale Vector3 tellEffectPoint_UniformScale(CSteamID, ushort, Vector3, float) [Obsolete] public void tellEffectPoint_UniformScale(CSteamID steamID, ushort id, Vector3 point, float uniformScale) Parameters steamID CSteamID id ushort point Vector3 uniformScale float tellEffectTextCommitted(CSteamID, string, string) [Obsolete] public void tellEffectTextCommitted(CSteamID steamID, string inputFieldName, string text) Parameters steamID CSteamID inputFieldName string text string tellUIEffect(CSteamID, ushort, short) [Obsolete] public void tellUIEffect(CSteamID steamID, ushort id, short key) Parameters steamID CSteamID id ushort key short tellUIEffect1Arg(CSteamID, ushort, short, string) [Obsolete] public void tellUIEffect1Arg(CSteamID steamID, ushort id, short key, string arg0) Parameters steamID CSteamID id ushort key short arg0 string tellUIEffect2Args(CSteamID, ushort, short, string, string) [Obsolete] public void tellUIEffect2Args(CSteamID steamID, ushort id, short key, string arg0, string arg1) Parameters steamID CSteamID id ushort key short arg0 string arg1 string tellUIEffect3Args(CSteamID, ushort, short, string, string, string) [Obsolete] public void tellUIEffect3Args(CSteamID steamID, ushort id, short key, string arg0, string arg1, string arg2) Parameters steamID CSteamID id ushort key short arg0 string arg1 string arg2 string tellUIEffect4Args(CSteamID, ushort, short, string, string, string, string) [Obsolete] public void tellUIEffect4Args(CSteamID steamID, ushort id, short key, string arg0, string arg1, string arg2, string arg3) Parameters steamID CSteamID id ushort key short arg0 string arg1 string arg2 string arg3 string tellUIEffectImageURL(CSteamID, short, string, string, bool, bool) [Obsolete] public void tellUIEffectImageURL(CSteamID steamID, short key, string childNameOrPath, string url, bool shouldCache, bool forceRefresh) Parameters steamID CSteamID key short childNameOrPath string url string shouldCache bool forceRefresh bool tellUIEffectText(CSteamID, short, string, string) [Obsolete] public void tellUIEffectText(CSteamID steamID, short key, string childNameOrPath, string text) Parameters steamID CSteamID key short childNameOrPath string text string tellUIEffectVisibility(CSteamID, short, string, bool) [Obsolete] public void tellUIEffectVisibility(CSteamID steamID, short key, string childNameOrPath, bool visible) Parameters steamID CSteamID key short childNameOrPath string visible bool triggerEffect(TriggerEffectParameters) Helper for sending and spawning effects. Newer and refactored code should use this method. public static void triggerEffect(TriggerEffectParameters parameters) Parameters parameters TriggerEffectParameters"
  },
  "api/SDG.Unturned.EffectManager_NetMethods.html": {
    "href": "api/SDG.Unturned.EffectManager_NetMethods.html",
    "title": "Class EffectManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class EffectManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(EffectManager))] public static class EffectManager_NetMethods Inheritance object EffectManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveEffectClearAll_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectClearAll\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectClearAll_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectClearAll_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveEffectClearAll\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectClearAll_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveEffectClearByGuid_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectClearByGuid\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectClearByGuid_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectClearByGuid_Write(NetPakWriter, Guid) [NetInvokableGeneratedMethod(\"ReceiveEffectClearByGuid\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectClearByGuid_Write(NetPakWriter writer, Guid assetGuid) Parameters writer NetPakWriter assetGuid Guid ReceiveEffectClearById_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectClearById\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectClearById_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectClearById_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveEffectClearById\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectClearById_Write(NetPakWriter writer, ushort id) Parameters writer NetPakWriter id ushort ReceiveEffectClicked_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectClicked\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectClicked_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveEffectClicked_Write(NetPakWriter, string) [NetInvokableGeneratedMethod(\"ReceiveEffectClicked\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectClicked_Write(NetPakWriter writer, string buttonName) Parameters writer NetPakWriter buttonName string ReceiveEffectPointNormal_NonUniformScale_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPointNormal_NonUniformScale\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPointNormal_NonUniformScale_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPointNormal_NonUniformScale_Write(NetPakWriter, Guid, Vector3, Vector3, Vector3) [NetInvokableGeneratedMethod(\"ReceiveEffectPointNormal_NonUniformScale\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPointNormal_NonUniformScale_Write(NetPakWriter writer, Guid assetGuid, Vector3 point, Vector3 normal, Vector3 scale) Parameters writer NetPakWriter assetGuid Guid point Vector3 normal Vector3 scale Vector3 ReceiveEffectPointNormal_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPointNormal\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPointNormal_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPointNormal_UniformScale_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPointNormal_UniformScale\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPointNormal_UniformScale_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPointNormal_UniformScale_Write(NetPakWriter, Guid, Vector3, Vector3, float) [NetInvokableGeneratedMethod(\"ReceiveEffectPointNormal_UniformScale\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPointNormal_UniformScale_Write(NetPakWriter writer, Guid assetGuid, Vector3 point, Vector3 normal, float uniformScale) Parameters writer NetPakWriter assetGuid Guid point Vector3 normal Vector3 uniformScale float ReceiveEffectPointNormal_Write(NetPakWriter, Guid, Vector3, Vector3) [NetInvokableGeneratedMethod(\"ReceiveEffectPointNormal\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPointNormal_Write(NetPakWriter writer, Guid assetGuid, Vector3 point, Vector3 normal) Parameters writer NetPakWriter assetGuid Guid point Vector3 normal Vector3 ReceiveEffectPoint_NonUniformScale_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPoint_NonUniformScale\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPoint_NonUniformScale_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPoint_NonUniformScale_Write(NetPakWriter, Guid, Vector3, Vector3) [NetInvokableGeneratedMethod(\"ReceiveEffectPoint_NonUniformScale\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPoint_NonUniformScale_Write(NetPakWriter writer, Guid assetGuid, Vector3 point, Vector3 scale) Parameters writer NetPakWriter assetGuid Guid point Vector3 scale Vector3 ReceiveEffectPoint_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPoint\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPoint_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPoint_UniformScale_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPoint_UniformScale\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPoint_UniformScale_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPoint_UniformScale_Write(NetPakWriter, Guid, Vector3, float) [NetInvokableGeneratedMethod(\"ReceiveEffectPoint_UniformScale\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPoint_UniformScale_Write(NetPakWriter writer, Guid assetGuid, Vector3 point, float uniformScale) Parameters writer NetPakWriter assetGuid Guid point Vector3 uniformScale float ReceiveEffectPoint_Write(NetPakWriter, Guid, Vector3) [NetInvokableGeneratedMethod(\"ReceiveEffectPoint\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPoint_Write(NetPakWriter writer, Guid assetGuid, Vector3 point) Parameters writer NetPakWriter assetGuid Guid point Vector3 ReceiveEffectPositionRotation_NonUniformScale_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPositionRotation_NonUniformScale\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPositionRotation_NonUniformScale_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPositionRotation_NonUniformScale_Write(NetPakWriter, Guid, Vector3, Quaternion, Vector3) [NetInvokableGeneratedMethod(\"ReceiveEffectPositionRotation_NonUniformScale\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPositionRotation_NonUniformScale_Write(NetPakWriter writer, Guid assetGuid, Vector3 position, Quaternion rotation, Vector3 scale) Parameters writer NetPakWriter assetGuid Guid position Vector3 rotation Quaternion scale Vector3 ReceiveEffectPositionRotation_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPositionRotation\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPositionRotation_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPositionRotation_UniformScale_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectPositionRotation_UniformScale\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectPositionRotation_UniformScale_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEffectPositionRotation_UniformScale_Write(NetPakWriter, Guid, Vector3, Quaternion, float) [NetInvokableGeneratedMethod(\"ReceiveEffectPositionRotation_UniformScale\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPositionRotation_UniformScale_Write(NetPakWriter writer, Guid assetGuid, Vector3 position, Quaternion rotation, float uniformScale) Parameters writer NetPakWriter assetGuid Guid position Vector3 rotation Quaternion uniformScale float ReceiveEffectPositionRotation_Write(NetPakWriter, Guid, Vector3, Quaternion) [NetInvokableGeneratedMethod(\"ReceiveEffectPositionRotation\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectPositionRotation_Write(NetPakWriter writer, Guid assetGuid, Vector3 position, Quaternion rotation) Parameters writer NetPakWriter assetGuid Guid position Vector3 rotation Quaternion ReceiveEffectTextCommitted_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEffectTextCommitted\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEffectTextCommitted_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveEffectTextCommitted_Write(NetPakWriter, string, string) [NetInvokableGeneratedMethod(\"ReceiveEffectTextCommitted\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEffectTextCommitted_Write(NetPakWriter writer, string inputFieldName, string text) Parameters writer NetPakWriter inputFieldName string text string ReceiveUIEffect1Arg_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffect1Arg\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffect1Arg_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffect1Arg_Write(NetPakWriter, ushort, short, string) [NetInvokableGeneratedMethod(\"ReceiveUIEffect1Arg\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffect1Arg_Write(NetPakWriter writer, ushort id, short key, string arg0) Parameters writer NetPakWriter id ushort key short arg0 string ReceiveUIEffect2Args_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffect2Args\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffect2Args_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffect2Args_Write(NetPakWriter, ushort, short, string, string) [NetInvokableGeneratedMethod(\"ReceiveUIEffect2Args\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffect2Args_Write(NetPakWriter writer, ushort id, short key, string arg0, string arg1) Parameters writer NetPakWriter id ushort key short arg0 string arg1 string ReceiveUIEffect3Args_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffect3Args\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffect3Args_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffect3Args_Write(NetPakWriter, ushort, short, string, string, string) [NetInvokableGeneratedMethod(\"ReceiveUIEffect3Args\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffect3Args_Write(NetPakWriter writer, ushort id, short key, string arg0, string arg1, string arg2) Parameters writer NetPakWriter id ushort key short arg0 string arg1 string arg2 string ReceiveUIEffect4Args_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffect4Args\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffect4Args_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffect4Args_Write(NetPakWriter, ushort, short, string, string, string, string) [NetInvokableGeneratedMethod(\"ReceiveUIEffect4Args\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffect4Args_Write(NetPakWriter writer, ushort id, short key, string arg0, string arg1, string arg2, string arg3) Parameters writer NetPakWriter id ushort key short arg0 string arg1 string arg2 string arg3 string ReceiveUIEffectImageURL_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffectImageURL\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffectImageURL_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffectImageURL_Write(NetPakWriter, short, string, string, bool, bool) [NetInvokableGeneratedMethod(\"ReceiveUIEffectImageURL\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffectImageURL_Write(NetPakWriter writer, short key, string childNameOrPath, string url, bool shouldCache, bool forceRefresh) Parameters writer NetPakWriter key short childNameOrPath string url string shouldCache bool forceRefresh bool ReceiveUIEffectText_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffectText\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffectText_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffectText_Write(NetPakWriter, short, string, string) [NetInvokableGeneratedMethod(\"ReceiveUIEffectText\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffectText_Write(NetPakWriter writer, short key, string childNameOrPath, string text) Parameters writer NetPakWriter key short childNameOrPath string text string ReceiveUIEffectVisibility_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffectVisibility\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffectVisibility_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffectVisibility_Write(NetPakWriter, short, string, bool) [NetInvokableGeneratedMethod(\"ReceiveUIEffectVisibility\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffectVisibility_Write(NetPakWriter writer, short key, string childNameOrPath, bool visible) Parameters writer NetPakWriter key short childNameOrPath string visible bool ReceiveUIEffect_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIEffect\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIEffect_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIEffect_Write(NetPakWriter, ushort, short) [NetInvokableGeneratedMethod(\"ReceiveUIEffect\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIEffect_Write(NetPakWriter writer, ushort id, short key) Parameters writer NetPakWriter id ushort key short"
  },
  "api/SDG.Unturned.EffectNode.html": {
    "href": "api/SDG.Unturned.EffectNode.html",
    "title": "Class EffectNode | Unturned Analyse Doc",
    "keywords": "Class EffectNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EffectNode : Node, IAmbianceNode Inheritance object Node EffectNode Implements IAmbianceNode Inherited Members Node._point Node._type Node._model Node.move(Vector3) Node.setEnabled(bool) Node.remove() Node.point Node.type Node.model object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EffectNode(Vector3) public EffectNode(Vector3 newPoint) Parameters newPoint Vector3 EffectNode(Vector3, ENodeShape, float, Vector3, ushort, bool, bool) public EffectNode(Vector3 newPoint, ENodeShape newShape, float newRadius, Vector3 newBounds, ushort newID, bool newNoWater, bool newNoLighting) Parameters newPoint Vector3 newShape ENodeShape newRadius float newBounds Vector3 newID ushort newNoWater bool newNoLighting bool Fields MAX_SIZE public static readonly float MAX_SIZE Field Value float MIN_SIZE public static readonly float MIN_SIZE Field Value float Properties bounds public Vector3 bounds { get; set; } Property Value Vector3 editorRadius public float editorRadius { get; } Property Value float id public ushort id { get; set; } Property Value ushort noLighting public bool noLighting { get; set; } Property Value bool noWater public bool noWater { get; set; } Property Value bool radius This value is confusing because in the level editor it is the normalized radius, but in-game it is the square radius. public float radius { get; set; } Property Value float shape public ENodeShape shape { get; set; } Property Value ENodeShape Methods CalculateNormalizedRadiusFromRadius(float) public static float CalculateNormalizedRadiusFromRadius(float radius) Parameters radius float Returns float CalculateRadiusFromNormalizedRadius(float) public static float CalculateRadiusFromNormalizedRadius(float normalizedRadius) Parameters normalizedRadius float Returns float GetEffectAsset() public EffectAsset GetEffectAsset() Returns EffectAsset"
  },
  "api/SDG.Unturned.EffectSpawner.html": {
    "href": "api/SDG.Unturned.EffectSpawner.html",
    "title": "Class EffectSpawner | Unturned Analyse Doc",
    "keywords": "Class EffectSpawner Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows Unity events to spawn effects. public class EffectSpawner : MonoBehaviour Inheritance object EffectSpawner Constructors EffectSpawner() public EffectSpawner() Fields AuthorityOnly If true the server will spawn the effect and replicate it to clients, otherwise clients will predict their own local copy. public bool AuthorityOnly Field Value bool DefaultEffectAssetGuid GUID of effect asset to spawn when SpawnDefaultEffect is invoked. public string DefaultEffectAssetGuid Field Value string OverrideRelevantDistance Applied if greater than zero. Defaults to 128. public float OverrideRelevantDistance Field Value float OverrideTransform Transform to spawn the effect at. If unset this game object's transform will be used instead. public Transform OverrideTransform Field Value Transform Reliable Should the RPC be called in reliable mode? Unreliable effects might not be received. public bool Reliable Field Value bool Methods SpawnDefaultEffect() public void SpawnDefaultEffect() SpawnEffect(string) public void SpawnEffect(string guid) Parameters guid string"
  },
  "api/SDG.Unturned.EngineCurvesComponent.html": {
    "href": "api/SDG.Unturned.EngineCurvesComponent.html",
    "title": "Class EngineCurvesComponent | Unturned Analyse Doc",
    "keywords": "Class EngineCurvesComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EngineCurvesComponent : MonoBehaviour Inheritance object EngineCurvesComponent Constructors EngineCurvesComponent() public EngineCurvesComponent() Fields engineRpmToTorqueCurve public AnimationCurve engineRpmToTorqueCurve Field Value AnimationCurve"
  },
  "api/SDG.Unturned.EventsConfigData.html": {
    "href": "api/SDG.Unturned.EventsConfigData.html",
    "title": "Class EventsConfigData | Unturned Analyse Doc",
    "keywords": "Class EventsConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class EventsConfigData Inheritance object EventsConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EventsConfigData(EGameMode) public EventsConfigData(EGameMode mode) Parameters mode EGameMode Fields Airdrop_Force public float Airdrop_Force Field Value float Airdrop_Frequency_Max public float Airdrop_Frequency_Max Field Value float Airdrop_Frequency_Min public float Airdrop_Frequency_Min Field Value float Airdrop_Speed public float Airdrop_Speed Field Value float Arena_Clear_Timer public uint Arena_Clear_Timer Field Value uint Arena_Compactor_Damage public uint Arena_Compactor_Damage Field Value uint Arena_Compactor_Delay_Timer public uint Arena_Compactor_Delay_Timer Field Value uint Arena_Compactor_Extra_Damage_Per_Second public float Arena_Compactor_Extra_Damage_Per_Second Field Value float Arena_Compactor_Pause_Timer public uint Arena_Compactor_Pause_Timer Field Value uint Arena_Compactor_Shrink_Factor public float Arena_Compactor_Shrink_Factor Field Value float Arena_Compactor_Speed_Insane public float Arena_Compactor_Speed_Insane Field Value float Arena_Compactor_Speed_Large public float Arena_Compactor_Speed_Large Field Value float Arena_Compactor_Speed_Medium public float Arena_Compactor_Speed_Medium Field Value float Arena_Compactor_Speed_Small public float Arena_Compactor_Speed_Small Field Value float Arena_Compactor_Speed_Tiny public float Arena_Compactor_Speed_Tiny Field Value float Arena_Finale_Timer public uint Arena_Finale_Timer Field Value uint Arena_Min_Players public uint Arena_Min_Players Field Value uint Arena_Restart_Timer public uint Arena_Restart_Timer Field Value uint Arena_Use_Compactor_Pause public bool Arena_Use_Compactor_Pause Field Value bool Rain_Duration_Max public float Rain_Duration_Max Field Value float Rain_Duration_Min public float Rain_Duration_Min Field Value float Rain_Frequency_Max public float Rain_Frequency_Max Field Value float Rain_Frequency_Min public float Rain_Frequency_Min Field Value float Snow_Duration_Max public float Snow_Duration_Max Field Value float Snow_Duration_Min public float Snow_Duration_Min Field Value float Snow_Frequency_Max public float Snow_Frequency_Max Field Value float Snow_Frequency_Min public float Snow_Frequency_Min Field Value float Use_Airdrops public bool Use_Airdrops Field Value bool Weather_Duration_Multiplier Each per-level custom weather duration is multiplied by this value. public float Weather_Duration_Multiplier Field Value float Weather_Frequency_Multiplier Each per-level custom weather frequency is multiplied by this value. public float Weather_Frequency_Multiplier Field Value float"
  },
  "api/SDG.Unturned.ExperienceUpdated.html": {
    "href": "api/SDG.Unturned.ExperienceUpdated.html",
    "title": "Delegate ExperienceUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ExperienceUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ExperienceUpdated(uint newExperience) Parameters newExperience uint Constructors ExperienceUpdated(object, IntPtr) public ExperienceUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(uint, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(uint newExperience, AsyncCallback callback, object @object) Parameters newExperience uint callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(uint) public virtual void Invoke(uint newExperience) Parameters newExperience uint"
  },
  "api/SDG.Unturned.ExplosionDamageParameters.html": {
    "href": "api/SDG.Unturned.ExplosionDamageParameters.html",
    "title": "Struct ExplosionDamageParameters | Unturned Analyse Doc",
    "keywords": "Struct ExplosionDamageParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll Intended for internal use only. public struct ExplosionDamageParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields canDealPlayerDamage public bool canDealPlayerDamage Field Value bool closestPoint public Vector3 closestPoint Field Value Vector3 kills public List<EPlayerKill> kills Field Value List<EPlayerKill> obstructionMask public int obstructionMask Field Value int shouldAffectAnimals public bool shouldAffectAnimals Field Value bool shouldAffectBarricades public bool shouldAffectBarricades Field Value bool shouldAffectObjects public bool shouldAffectObjects Field Value bool shouldAffectPlayers public bool shouldAffectPlayers Field Value bool shouldAffectStructures public bool shouldAffectStructures Field Value bool shouldAffectTrees public bool shouldAffectTrees Field Value bool shouldAffectVehicles public bool shouldAffectVehicles Field Value bool shouldAffectZombies public bool shouldAffectZombies Field Value bool xp public uint xp Field Value uint"
  },
  "api/SDG.Unturned.ExplosionParameters.html": {
    "href": "api/SDG.Unturned.ExplosionParameters.html",
    "title": "Struct ExplosionParameters | Unturned Analyse Doc",
    "keywords": "Struct ExplosionParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll Payload for the DamageTool.explode function. Moved into struct because the amount of arguments to that function were insane, but now is not the time to completely refactor damage. public struct ExplosionParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors ExplosionParameters(Vector3, float, EDeathCause) public ExplosionParameters(Vector3 point, float damageRadius, EDeathCause cause) Parameters point Vector3 damageRadius float cause EDeathCause ExplosionParameters(Vector3, float, EDeathCause, CSteamID) public ExplosionParameters(Vector3 point, float damageRadius, EDeathCause cause, CSteamID killer) Parameters point Vector3 damageRadius float cause EDeathCause killer CSteamID Fields alertRadius public float alertRadius Field Value float animalDamage public float animalDamage Field Value float barricadeDamage public float barricadeDamage Field Value float cause public EDeathCause cause Field Value EDeathCause damageOrigin public EDamageOrigin damageOrigin Field Value EDamageOrigin damageRadius public float damageRadius Field Value float damageType public EExplosionDamageType damageType Field Value EExplosionDamageType killer public CSteamID killer Field Value CSteamID launchSpeed Speed to launch players away from blast position. public float launchSpeed Field Value float objectDamage public float objectDamage Field Value float penetrateBuildables public bool penetrateBuildables Field Value bool playImpactEffect public bool playImpactEffect Field Value bool playerDamage public float playerDamage Field Value float point public Vector3 point Field Value Vector3 ragdollEffect public ERagdollEffect ragdollEffect Field Value ERagdollEffect resourceDamage public float resourceDamage Field Value float structureDamage public float structureDamage Field Value float vehicleDamage public float vehicleDamage Field Value float zombieDamage public float zombieDamage Field Value float"
  },
  "api/SDG.Unturned.ExplosionSpawner.html": {
    "href": "api/SDG.Unturned.ExplosionSpawner.html",
    "title": "Class ExplosionSpawner | Unturned Analyse Doc",
    "keywords": "Class ExplosionSpawner Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allow Unity events to apply damage in a sphere. (doesn't have any visual effects) Intended to replace unsupported/unintentional use of \"Grenade.cs\" and \"Rocket.cs\" scripts. public class ExplosionSpawner : MonoBehaviour Inheritance object ExplosionSpawner Constructors ExplosionSpawner() public ExplosionSpawner() Fields AlertRadiusOverride If greater than -0.5, overrides default radius zombies and animals will be alerted within. public float AlertRadiusOverride Field Value float AnimalDamage public float AnimalDamage Field Value float BarricadeDamage public float BarricadeDamage Field Value float Cause public EDeathCause Cause Field Value EDeathCause DamageRadius public float DamageRadius Field Value float DamageType Zombie explosion types have slight variations e.g. lighting zombies on fire. public EExplosionDamageType DamageType Field Value EExplosionDamageType LaunchSpeed Speed to launch players away from blast position. public float LaunchSpeed Field Value float ObjectDamage public float ObjectDamage Field Value float PenetrateBuildables If true, explosion damage passes through Barricades and Structures. public bool PenetrateBuildables Field Value bool PlayImpactEffects If true, per-surface effects like blood splatter are created. public bool PlayImpactEffects Field Value bool PlayerDamage public float PlayerDamage Field Value float ResourceDamage public float ResourceDamage Field Value float StructureDamage public float StructureDamage Field Value float VehicleDamage public float VehicleDamage Field Value float ZombieDamage public float ZombieDamage Field Value float Methods Explode() public void Explode()"
  },
  "api/SDG.Unturned.ExternalConditionsUpdated.html": {
    "href": "api/SDG.Unturned.ExternalConditionsUpdated.html",
    "title": "Delegate ExternalConditionsUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ExternalConditionsUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ExternalConditionsUpdated() Constructors ExternalConditionsUpdated(object, IntPtr) public ExternalConditionsUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.ExtraItemIconInfo.html": {
    "href": "api/SDG.Unturned.ExtraItemIconInfo.html",
    "title": "Class ExtraItemIconInfo | Unturned Analyse Doc",
    "keywords": "Class ExtraItemIconInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ExtraItemIconInfo Inheritance object ExtraItemIconInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ExtraItemIconInfo() public ExtraItemIconInfo() Fields extraPath public string extraPath Field Value string Methods onItemIconReady(Texture2D) public void onItemIconReady(Texture2D texture) Parameters texture Texture2D"
  },
  "api/SDG.Unturned.FallDamageOverride.EMode.html": {
    "href": "api/SDG.Unturned.FallDamageOverride.EMode.html",
    "title": "Enum FallDamageOverride.EMode | Unturned Analyse Doc",
    "keywords": "Enum FallDamageOverride.EMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll Could be extended in the future to increase, decrease, or set fall damage. public enum FallDamageOverride.EMode Fields None = 0 Potentially useful for an event to toggle the override. PreventFallDamage = 1 Character will not take any fall damage."
  },
  "api/SDG.Unturned.FallDamageOverride.html": {
    "href": "api/SDG.Unturned.FallDamageOverride.html",
    "title": "Class FallDamageOverride | Unturned Analyse Doc",
    "keywords": "Class FallDamageOverride Namespace SDG.Unturned Assembly Assembly-CSharp.dll Overrides how fall damage is calculated when landing on this game object or its descendants. public class FallDamageOverride : MonoBehaviour Inheritance object FallDamageOverride Constructors FallDamageOverride() public FallDamageOverride() Fields Mode public FallDamageOverride.EMode Mode Field Value FallDamageOverride.EMode"
  },
  "api/SDG.Unturned.FavoriteSearchFilter-1.SubFilterParser.html": {
    "href": "api/SDG.Unturned.FavoriteSearchFilter-1.SubFilterParser.html",
    "title": "Delegate FavoriteSearchFilter<T>.SubFilterParser | Unturned Analyse Doc",
    "keywords": "Delegate FavoriteSearchFilter<T>.SubFilterParser Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate bool FavoriteSearchFilter<T>.SubFilterParser(string input, out T subFilter) Parameters input string subFilter T Returns bool Constructors SubFilterParser(object, IntPtr) public SubFilterParser(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(string, out T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(string input, out T subFilter, AsyncCallback callback, object @object) Parameters input string subFilter T callback AsyncCallback object object Returns IAsyncResult EndInvoke(out T, IAsyncResult) public virtual bool EndInvoke(out T subFilter, IAsyncResult result) Parameters subFilter T result IAsyncResult Returns bool Invoke(string, out T) public virtual bool Invoke(string input, out T subFilter) Parameters input string subFilter T Returns bool"
  },
  "api/SDG.Unturned.FavoriteSearchFilter-1.html": {
    "href": "api/SDG.Unturned.FavoriteSearchFilter-1.html",
    "title": "Struct FavoriteSearchFilter<T> | Unturned Analyse Doc",
    "keywords": "Struct FavoriteSearchFilter<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll Parses fv:X from input string and loads X.txt from game folder. public struct FavoriteSearchFilter<T> Type Parameters T Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FavoriteSearchFilter(T[]) public FavoriteSearchFilter(T[] subFilters) Parameters subFilters T[] Properties subFilters public readonly T[] subFilters { get; } Property Value T[] Methods parse(string, SubFilterParser) public static FavoriteSearchFilter<T>? parse(string filter, FavoriteSearchFilter<T>.SubFilterParser parseSubFilter) Parameters filter string parseSubFilter FavoriteSearchFilter<T>.SubFilterParser Returns FavoriteSearchFilter<T>?"
  },
  "api/SDG.Unturned.FilterSettings.ServerBrowserColumns.html": {
    "href": "api/SDG.Unturned.FilterSettings.ServerBrowserColumns.html",
    "title": "Class FilterSettings.ServerBrowserColumns | Unturned Analyse Doc",
    "keywords": "Class FilterSettings.ServerBrowserColumns Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class FilterSettings.ServerBrowserColumns Inheritance object FilterSettings.ServerBrowserColumns Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerBrowserColumns() public ServerBrowserColumns() Fields anticheat public bool anticheat Field Value bool cheats public bool cheats Field Value bool combat public bool combat Field Value bool fullnessPercentage % Full public bool fullnessPercentage Field Value bool gold public bool gold Field Value bool map public bool map Field Value bool maxPlayers public bool maxPlayers Field Value bool monetization public bool monetization Field Value bool password public bool password Field Value bool perspective public bool perspective Field Value bool ping public bool ping Field Value bool players public bool players Field Value bool plugins public bool plugins Field Value bool workshop public bool workshop Field Value bool Methods Read(byte, Block) public void Read(byte version, Block block) Parameters version byte block Block Write(Block) public void Write(Block block) Parameters block Block"
  },
  "api/SDG.Unturned.FilterSettings.ServerBrowserFilterVisibility.html": {
    "href": "api/SDG.Unturned.FilterSettings.ServerBrowserFilterVisibility.html",
    "title": "Class FilterSettings.ServerBrowserFilterVisibility | Unturned Analyse Doc",
    "keywords": "Class FilterSettings.ServerBrowserFilterVisibility Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class FilterSettings.ServerBrowserFilterVisibility Inheritance object FilterSettings.ServerBrowserFilterVisibility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerBrowserFilterVisibility() public ServerBrowserFilterVisibility() Fields attendance public bool attendance Field Value bool battlEyeProtection public bool battlEyeProtection Field Value bool camera public bool camera Field Value bool cheats public bool cheats Field Value bool combat public bool combat Field Value bool gold public bool gold Field Value bool listSource public bool listSource Field Value bool map public bool map Field Value bool maxPing public bool maxPing Field Value bool monetization public bool monetization Field Value bool name public bool name Field Value bool notFull public bool notFull Field Value bool password public bool password Field Value bool plugins public bool plugins Field Value bool vacProtection public bool vacProtection Field Value bool workshop public bool workshop Field Value bool Methods Read(byte, Block) public void Read(byte version, Block block) Parameters version byte block Block Write(Block) public void Write(Block block) Parameters block Block"
  },
  "api/SDG.Unturned.FilterSettings.html": {
    "href": "api/SDG.Unturned.FilterSettings.html",
    "title": "Class FilterSettings | Unturned Analyse Doc",
    "keywords": "Class FilterSettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class FilterSettings Inheritance object FilterSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields DEFAULT_MAX_PING public const int DEFAULT_MAX_PING = 300 Field Value int SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_ADDED_FULLNESS_COLUMN public const byte SAVEDATA_VERSION_ADDED_FULLNESS_COLUMN = 23 Field Value byte SAVEDATA_VERSION_ADDED_GOLD_FILTER public const byte SAVEDATA_VERSION_ADDED_GOLD_FILTER = 15 Field Value byte SAVEDATA_VERSION_ADDED_PRESETS public const byte SAVEDATA_VERSION_ADDED_PRESETS = 17 Field Value byte SAVEDATA_VERSION_FILTER_VISIBILITY public const byte SAVEDATA_VERSION_FILTER_VISIBILITY = 21 Field Value byte SAVEDATA_VERSION_INCREASED_DEFAULT_MAX_PING public const byte SAVEDATA_VERSION_INCREASED_DEFAULT_MAX_PING = 24 Field Value byte SAVEDATA_VERSION_INITIAL Version before named version constants were introduced. (2023-11-13) public const byte SAVEDATA_VERSION_INITIAL = 14 Field Value byte SAVEDATA_VERSION_MAX_PING public const byte SAVEDATA_VERSION_MAX_PING = 22 Field Value byte SAVEDATA_VERSION_MOVED_SERVER_NAME_FILTER public const byte SAVEDATA_VERSION_MOVED_SERVER_NAME_FILTER = 16 Field Value byte SAVEDATA_VERSION_MULTIPLE_MAPS public const byte SAVEDATA_VERSION_MULTIPLE_MAPS = 20 Field Value byte SAVEDATA_VERSION_SAVE_COLUMNS public const byte SAVEDATA_VERSION_SAVE_COLUMNS = 18 Field Value byte SAVEDATA_VERSION_SAVE_SUBMENUS_OPEN public const byte SAVEDATA_VERSION_SAVE_SUBMENUS_OPEN = 19 Field Value byte activeFilters public static ServerListFilters activeFilters Field Value ServerListFilters columns public static FilterSettings.ServerBrowserColumns columns Field Value FilterSettings.ServerBrowserColumns customPresets public static List<ServerListFilters> customPresets Field Value List<ServerListFilters> defaultPresetFavorites public static ServerListFilters defaultPresetFavorites Field Value ServerListFilters defaultPresetFriends public static ServerListFilters defaultPresetFriends Field Value ServerListFilters defaultPresetHistory public static ServerListFilters defaultPresetHistory Field Value ServerListFilters defaultPresetInternet public static ServerListFilters defaultPresetInternet Field Value ServerListFilters defaultPresetLAN public static ServerListFilters defaultPresetLAN Field Value ServerListFilters filterVisibility public static FilterSettings.ServerBrowserFilterVisibility filterVisibility Field Value FilterSettings.ServerBrowserFilterVisibility isColumnsEditorOpen public static bool isColumnsEditorOpen Field Value bool isPresetsListOpen public static bool isPresetsListOpen Field Value bool isQuickFiltersEditorOpen public static bool isQuickFiltersEditorOpen Field Value bool isQuickFiltersVisibilityEditorOpen public static bool isQuickFiltersVisibilityEditorOpen Field Value bool Methods CreatePresetId() public static int CreatePresetId() Returns int InvokeActiveFiltersReplaced() public static void InvokeActiveFiltersReplaced() InvokeCustomFiltersListChanged() public static void InvokeCustomFiltersListChanged() MarkActiveFilterModified() public static void MarkActiveFilterModified() RemovePreset(int) public static void RemovePreset(int presetId) Parameters presetId int load() public static void load() save() public static void save() Events OnActiveFiltersModified public static event Action OnActiveFiltersModified Event Type Action OnActiveFiltersReplaced public static event Action OnActiveFiltersReplaced Event Type Action OnCustomPresetsListChanged public static event Action OnCustomPresetsListChanged Event Type Action"
  },
  "api/SDG.Unturned.Flag.html": {
    "href": "api/SDG.Unturned.Flag.html",
    "title": "Class Flag | Unturned Analyse Doc",
    "keywords": "Class Flag Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Flag Inheritance object Flag Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Flag(Vector3, RecastGraph, FlagData) public Flag(Vector3 newPoint, RecastGraph newGraph, FlagData newData) Parameters newPoint Vector3 newGraph RecastGraph newData FlagData Flag(Vector3, float, float, RecastGraph, FlagData) public Flag(Vector3 newPoint, float newWidth, float newHeight, RecastGraph newGraph, FlagData newData) Parameters newPoint Vector3 newWidth float newHeight float newGraph RecastGraph newData FlagData Fields MAX_SIZE public static readonly float MAX_SIZE Field Value float MIN_SIZE public static readonly float MIN_SIZE Field Value float height public float height Field Value float needsNavigationSave public bool needsNavigationSave Field Value bool width public float width Field Value float Properties area public LineRenderer area { get; } Property Value LineRenderer bounds public LineRenderer bounds { get; } Property Value LineRenderer data public FlagData data { get; } Property Value FlagData graph public RecastGraph graph { get; } Property Value RecastGraph model public Transform model { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 Methods bakeNavigation() public void bakeNavigation() buildMesh() public void buildMesh() move(Vector3) public void move(Vector3 newPoint) Parameters newPoint Vector3 remove() public void remove() setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.FlagData.html": {
    "href": "api/SDG.Unturned.FlagData.html",
    "title": "Class FlagData | Unturned Analyse Doc",
    "keywords": "Class FlagData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class FlagData Inheritance object FlagData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FlagData(string, byte, bool, bool, int) public FlagData(string newDifficultyGUID = \"\", byte newMaxZombies = 64, bool newSpawnZombies = true, bool newHyperAgro = false, int maxBossZombies = -1) Parameters newDifficultyGUID string newMaxZombies byte newSpawnZombies bool newHyperAgro bool maxBossZombies int Fields hyperAgro public bool hyperAgro Field Value bool maxBossZombies Maximum count of naturally spawned boss zombies. Unlimited if negative. Game will not spawn/respawn boss zombie types passing this limit, but quest spawns can bypass it. public int maxBossZombies Field Value int maxZombies public byte maxZombies Field Value byte spawnZombies public bool spawnZombies Field Value bool Properties difficulty public AssetReference<ZombieDifficultyAsset> difficulty { get; } Property Value AssetReference<ZombieDifficultyAsset> difficultyGUID public string difficultyGUID { get; set; } Property Value string Methods resolveDifficulty() public ZombieDifficultyAsset resolveDifficulty() Returns ZombieDifficultyAsset"
  },
  "api/SDG.Unturned.FlagUpdated.html": {
    "href": "api/SDG.Unturned.FlagUpdated.html",
    "title": "Delegate FlagUpdated | Unturned Analyse Doc",
    "keywords": "Delegate FlagUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void FlagUpdated(ushort id) Parameters id ushort Constructors FlagUpdated(object, IntPtr) public FlagUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort id, AsyncCallback callback, object @object) Parameters id ushort callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort) public virtual void Invoke(ushort id) Parameters id ushort"
  },
  "api/SDG.Unturned.FlagsUpdated.html": {
    "href": "api/SDG.Unturned.FlagsUpdated.html",
    "title": "Delegate FlagsUpdated | Unturned Analyse Doc",
    "keywords": "Delegate FlagsUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void FlagsUpdated() Constructors FlagsUpdated(object, IntPtr) public FlagsUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Flashbang.html": {
    "href": "api/SDG.Unturned.Flashbang.html",
    "title": "Class Flashbang | Unturned Analyse Doc",
    "keywords": "Class Flashbang Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Flashbang : MonoBehaviour, IExplodableThrowable Inheritance object Flashbang Implements IExplodableThrowable Constructors Flashbang() public Flashbang() Fields color public Color color Field Value Color fuseLength public float fuseLength Field Value float playAudioSource public bool playAudioSource Field Value bool Methods Explode() public void Explode()"
  },
  "api/SDG.Unturned.FlickeringLight.html": {
    "href": "api/SDG.Unturned.FlickeringLight.html",
    "title": "Class FlickeringLight | Unturned Analyse Doc",
    "keywords": "Class FlickeringLight Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class FlickeringLight : MonoBehaviour Inheritance object FlickeringLight Constructors FlickeringLight() public FlickeringLight() Fields target public Light target Field Value Light"
  },
  "api/SDG.Unturned.FloatExtension.html": {
    "href": "api/SDG.Unturned.FloatExtension.html",
    "title": "Class FloatExtension | Unturned Analyse Doc",
    "keywords": "Class FloatExtension Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class FloatExtension Inheritance object FloatExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsFinite(float) public static bool IsFinite(this float value) Parameters value float Returns bool"
  },
  "api/SDG.Unturned.FoodUpdated.html": {
    "href": "api/SDG.Unturned.FoodUpdated.html",
    "title": "Delegate FoodUpdated | Unturned Analyse Doc",
    "keywords": "Delegate FoodUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void FoodUpdated(byte newFood) Parameters newFood byte Constructors FoodUpdated(object, IntPtr) public FoodUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte newFood, AsyncCallback callback, object @object) Parameters newFood byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte) public virtual void Invoke(byte newFood) Parameters newFood byte"
  },
  "api/SDG.Unturned.GameMode.html": {
    "href": "api/SDG.Unturned.GameMode.html",
    "title": "Class GameMode | Unturned Analyse Doc",
    "keywords": "Class GameMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GameMode Inheritance object GameMode Derived ArenaGameMode SurvivalGameMode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameMode() public GameMode() Methods getPlayerGameObject(SteamPlayerID) public virtual GameObject getPlayerGameObject(SteamPlayerID playerID) Parameters playerID SteamPlayerID Returns GameObject"
  },
  "api/SDG.Unturned.GameObjectPool.html": {
    "href": "api/SDG.Unturned.GameObjectPool.html",
    "title": "Class GameObjectPool | Unturned Analyse Doc",
    "keywords": "Class GameObjectPool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GameObjectPool Inheritance object GameObjectPool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameObjectPool(GameObject) public GameObjectPool(GameObject prefab) Parameters prefab GameObject GameObjectPool(GameObject, int) public GameObjectPool(GameObject prefab, int count) Parameters prefab GameObject count int Methods Destroy(PoolReference) public void Destroy(PoolReference reference) Parameters reference PoolReference DestroyAll() public void DestroyAll() Instantiate() public PoolReference Instantiate() Returns PoolReference Instantiate(Vector3, Quaternion) public PoolReference Instantiate(Vector3 position, Quaternion rotation) Parameters position Vector3 rotation Quaternion Returns PoolReference"
  },
  "api/SDG.Unturned.GameObjectPoolDictionary.html": {
    "href": "api/SDG.Unturned.GameObjectPoolDictionary.html",
    "title": "Class GameObjectPoolDictionary | Unturned Analyse Doc",
    "keywords": "Class GameObjectPoolDictionary Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GameObjectPoolDictionary Inheritance object GameObjectPoolDictionary Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameObjectPoolDictionary() public GameObjectPoolDictionary() Methods Destroy(GameObject) public void Destroy(GameObject element) Parameters element GameObject Destroy(GameObject, float) public void Destroy(GameObject element, float t) Parameters element GameObject t float DestroyAll() public void DestroyAll() DestroyAllMatchingPrefab(GameObject) public void DestroyAllMatchingPrefab(GameObject prefab) Parameters prefab GameObject Instantiate(GameObject) public PoolReference Instantiate(GameObject prefab) Parameters prefab GameObject Returns PoolReference Instantiate(GameObject, string, int) public void Instantiate(GameObject prefab, string name, int count) Parameters prefab GameObject name string count int Instantiate(GameObject, Vector3, Quaternion) public PoolReference Instantiate(GameObject prefab, Vector3 position, Quaternion rotation) Parameters prefab GameObject position Vector3 rotation Quaternion Returns PoolReference"
  },
  "api/SDG.Unturned.GameProject.html": {
    "href": "api/SDG.Unturned.GameProject.html",
    "title": "Class GameProject | Unturned Analyse Doc",
    "keywords": "Class GameProject Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GameProject Inheritance object GameProject Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameProject() public GameProject() Properties PROJECT_PATH Absolute path to project directory, e.g. C:/U3 [Obsolete(\"Replaced by UnityPaths.ProjectDirectory\")] public static string PROJECT_PATH { get; } Property Value string"
  },
  "api/SDG.Unturned.GameStatusData.html": {
    "href": "api/SDG.Unturned.GameStatusData.html",
    "title": "Class GameStatusData | Unturned Analyse Doc",
    "keywords": "Class GameStatusData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GameStatusData Inheritance object GameStatusData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameStatusData() public GameStatusData() Fields GrantPackageIDs public int[] GrantPackageIDs Field Value int[] GrantPackageURL public string GrantPackageURL Field Value string Major_Version public byte Major_Version Field Value byte Minor_Version public byte Minor_Version Field Value byte Patch_Version public byte Patch_Version Field Value byte Methods FormatApplicationVersion() public string FormatApplicationVersion() Returns string"
  },
  "api/SDG.Unturned.GameUpdateMonitor.GameUpdateDetectedHandler.html": {
    "href": "api/SDG.Unturned.GameUpdateMonitor.GameUpdateDetectedHandler.html",
    "title": "Delegate GameUpdateMonitor.GameUpdateDetectedHandler | Unturned Analyse Doc",
    "keywords": "Delegate GameUpdateMonitor.GameUpdateDetectedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GameUpdateMonitor.GameUpdateDetectedHandler(string newVersion, ref bool shouldShutdown) Parameters newVersion string shouldShutdown bool Constructors GameUpdateDetectedHandler(object, IntPtr) public GameUpdateDetectedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(string, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(string newVersion, ref bool shouldShutdown, AsyncCallback callback, object @object) Parameters newVersion string shouldShutdown bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldShutdown, IAsyncResult result) Parameters shouldShutdown bool result IAsyncResult Invoke(string, ref bool) public virtual void Invoke(string newVersion, ref bool shouldShutdown) Parameters newVersion string shouldShutdown bool"
  },
  "api/SDG.Unturned.GameUpdateMonitor.html": {
    "href": "api/SDG.Unturned.GameUpdateMonitor.html",
    "title": "Class GameUpdateMonitor | Unturned Analyse Doc",
    "keywords": "Class GameUpdateMonitor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class GameUpdateMonitor Inheritance object GameUpdateMonitor Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Events OnGameUpdateDetected Event for plugins to be notified when a server update is detected. Pandahut requested this because they run the game as a Windows service and need to shutdown through their central management system rather than per-process. public static event GameUpdateMonitor.GameUpdateDetectedHandler OnGameUpdateDetected Event Type GameUpdateMonitor.GameUpdateDetectedHandler"
  },
  "api/SDG.Unturned.GameplayConfigData.html": {
    "href": "api/SDG.Unturned.GameplayConfigData.html",
    "title": "Class GameplayConfigData | Unturned Analyse Doc",
    "keywords": "Class GameplayConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GameplayConfigData Inheritance object GameplayConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GameplayConfigData(EGameMode) public GameplayConfigData(EGameMode mode) Parameters mode EGameMode Fields AirStrafing_Acceleration_Multiplier Scales midair input change in player direction. public float AirStrafing_Acceleration_Multiplier Field Value float AirStrafing_Deceleration_Multiplier Scales midair decrease in speed while faster than max walk speed. public float AirStrafing_Deceleration_Multiplier Field Value float Allow_Dynamic_Groups public bool Allow_Dynamic_Groups Field Value bool Allow_Freeform_Buildables Can \"freeform\" barricades be placed in the world? Defaults to true. public bool Allow_Freeform_Buildables Field Value bool Allow_Freeform_Buildables_On_Vehicles Can \"freeform\" barricades be placed on vehicles? Defaults to true. public bool Allow_Freeform_Buildables_On_Vehicles Field Value bool Allow_Holidays Should holiday (Halloween and Christmas) content like NPC outfits and decorations be loaded? public bool Allow_Holidays Field Value bool Allow_Lobby_Groups If true, allow automatically creating an in-game group for members of your Steam lobby. Requires Allow_Dynamic_Groups to be enabled as well. public bool Allow_Lobby_Groups Field Value bool Allow_Shoulder_Camera public bool Allow_Shoulder_Camera Field Value bool Allow_Static_Groups public bool Allow_Static_Groups Field Value bool Ballistics public bool Ballistics Field Value bool Bypass_Buildable_Mobility Are sentry guns and beds allowed on vehicles? public bool Bypass_Buildable_Mobility Field Value bool Can_Suicide public bool Can_Suicide Field Value bool Chart public bool Chart Field Value bool Compass public bool Compass Field Value bool Crosshair public bool Crosshair Field Value bool Enable_Damage_Flinch If true, aim flinches away from center when damaged. Defaults to true. public bool Enable_Damage_Flinch Field Value bool Enable_Explosion_Camera_Shake If true, camera will shake near explosions. Can also be toned down client-side in Options menu. Defaults to true. public bool Enable_Explosion_Camera_Shake Field Value bool Explosion_Launch_Speed_Multiplier Scales velocity added to players by explosion knock-back. public float Explosion_Launch_Speed_Multiplier Field Value float Friendly_Fire Is friendly-fire allowed? public bool Friendly_Fire Field Value bool Group_HUD public bool Group_HUD Field Value bool Group_Map public bool Group_Map Field Value bool Group_Player_List Should group connections be shown on player list? public bool Group_Player_List Field Value bool Hitmarkers public bool Hitmarkers Field Value bool Max_Group_Members public uint Max_Group_Members Field Value uint Repair_Level_Max public uint Repair_Level_Max Field Value uint Satellite public bool Satellite Field Value bool ThirdPerson_RecoilMultiplier Scales magnitude of recoil while using third-person perspective. public float ThirdPerson_RecoilMultiplier Field Value float ThirdPerson_SpreadMultiplier Scales magnitude of bullet inaccuracy while using third-person perspective. public float ThirdPerson_SpreadMultiplier Field Value float Timer_Exit public uint Timer_Exit Field Value uint Timer_Home public uint Timer_Home Field Value uint Timer_Leave_Group public uint Timer_Leave_Group Field Value uint Timer_Respawn public uint Timer_Respawn Field Value uint Methods InitSingleplayerDefaults() public void InitSingleplayerDefaults()"
  },
  "api/SDG.Unturned.GermanyTeleporterA.html": {
    "href": "api/SDG.Unturned.GermanyTeleporterA.html",
    "title": "Class GermanyTeleporterA | Unturned Analyse Doc",
    "keywords": "Class GermanyTeleporterA Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GermanyTeleporterA : MonoBehaviour Inheritance object GermanyTeleporterA Derived GermanyTeleporterB Constructors GermanyTeleporterA() public GermanyTeleporterA() Fields eventID public string eventID Field Value string nearbyPlayers protected static List<Player> nearbyPlayers Field Value List<Player> sqrRadius public float sqrRadius Field Value float target public Transform target Field Value Transform teleportEffect public ushort teleportEffect Field Value ushort Methods OnDisable() protected virtual void OnDisable() OnEnable() protected virtual void OnEnable() handleEventTriggered(Player, string) protected virtual void handleEventTriggered(Player player, string id) Parameters player Player id string teleport() protected virtual IEnumerator teleport() Returns IEnumerator"
  },
  "api/SDG.Unturned.GermanyTeleporterB.html": {
    "href": "api/SDG.Unturned.GermanyTeleporterB.html",
    "title": "Class GermanyTeleporterB | Unturned Analyse Doc",
    "keywords": "Class GermanyTeleporterB Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GermanyTeleporterB : GermanyTeleporterA Inheritance object GermanyTeleporterA GermanyTeleporterB Inherited Members GermanyTeleporterA.nearbyPlayers GermanyTeleporterA.target GermanyTeleporterA.sqrRadius GermanyTeleporterA.eventID GermanyTeleporterA.teleportEffect GermanyTeleporterA.handleEventTriggered(Player, string) Constructors GermanyTeleporterB() public GermanyTeleporterB() Fields navIndex public int navIndex Field Value int sqrBossRadius public float sqrBossRadius Field Value float Methods OnDisable() protected override void OnDisable() OnEnable() protected override void OnEnable() teleport() protected override IEnumerator teleport() Returns IEnumerator"
  },
  "api/SDG.Unturned.GestureUpdated.html": {
    "href": "api/SDG.Unturned.GestureUpdated.html",
    "title": "Delegate GestureUpdated | Unturned Analyse Doc",
    "keywords": "Delegate GestureUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GestureUpdated(EPlayerGesture gesture) Parameters gesture EPlayerGesture Constructors GestureUpdated(object, IntPtr) public GestureUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EPlayerGesture, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EPlayerGesture gesture, AsyncCallback callback, object @object) Parameters gesture EPlayerGesture callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EPlayerGesture) public virtual void Invoke(EPlayerGesture gesture) Parameters gesture EPlayerGesture"
  },
  "api/SDG.Unturned.GetCommands.html": {
    "href": "api/SDG.Unturned.GetCommands.html",
    "title": "Delegate GetCommands | Unturned Analyse Doc",
    "keywords": "Delegate GetCommands Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GetCommands(List<string> commands) Parameters commands List<string> Constructors GetCommands(object, IntPtr) public GetCommands(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(List<string>, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(List<string> commands, AsyncCallback callback, object @object) Parameters commands List<string> callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(List<string>) public virtual void Invoke(List<string> commands) Parameters commands List<string>"
  },
  "api/SDG.Unturned.GetStatTrackerValueHandler.html": {
    "href": "api/SDG.Unturned.GetStatTrackerValueHandler.html",
    "title": "Delegate GetStatTrackerValueHandler | Unturned Analyse Doc",
    "keywords": "Delegate GetStatTrackerValueHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate bool GetStatTrackerValueHandler(out EStatTrackerType type, out int kills) Parameters type EStatTrackerType kills int Returns bool Constructors GetStatTrackerValueHandler(object, IntPtr) public GetStatTrackerValueHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(out EStatTrackerType, out int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(out EStatTrackerType type, out int kills, AsyncCallback callback, object @object) Parameters type EStatTrackerType kills int callback AsyncCallback object object Returns IAsyncResult EndInvoke(out EStatTrackerType, out int, IAsyncResult) public virtual bool EndInvoke(out EStatTrackerType type, out int kills, IAsyncResult result) Parameters type EStatTrackerType kills int result IAsyncResult Returns bool Invoke(out EStatTrackerType, out int) public virtual bool Invoke(out EStatTrackerType type, out int kills) Parameters type EStatTrackerType kills int Returns bool"
  },
  "api/SDG.Unturned.GlassesUpdated.html": {
    "href": "api/SDG.Unturned.GlassesUpdated.html",
    "title": "Delegate GlassesUpdated | Unturned Analyse Doc",
    "keywords": "Delegate GlassesUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GlassesUpdated(ushort newGlasses, byte newGlassesQuality, byte[] newGlassesState) Parameters newGlasses ushort newGlassesQuality byte newGlassesState byte[] Constructors GlassesUpdated(object, IntPtr) public GlassesUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, byte, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort newGlasses, byte newGlassesQuality, byte[] newGlassesState, AsyncCallback callback, object @object) Parameters newGlasses ushort newGlassesQuality byte newGlassesState byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort, byte, byte[]) public virtual void Invoke(ushort newGlasses, byte newGlassesQuality, byte[] newGlassesState) Parameters newGlasses ushort newGlassesQuality byte newGlassesState byte[]"
  },
  "api/SDG.Unturned.GlazierFactory.html": {
    "href": "api/SDG.Unturned.GlazierFactory.html",
    "title": "Class GlazierFactory | Unturned Analyse Doc",
    "keywords": "Class GlazierFactory Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class GlazierFactory Inheritance object GlazierFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Create() Create glazier implementation. Invoked early during startup. public static void Create()"
  },
  "api/SDG.Unturned.GrabbedItem.html": {
    "href": "api/SDG.Unturned.GrabbedItem.html",
    "title": "Delegate GrabbedItem | Unturned Analyse Doc",
    "keywords": "Delegate GrabbedItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GrabbedItem(byte page, byte x, byte y, SleekItem item) Parameters page byte x byte y byte item SleekItem Constructors GrabbedItem(object, IntPtr) public GrabbedItem(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, byte, SleekItem, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte x, byte y, SleekItem item, AsyncCallback callback, object @object) Parameters page byte x byte y byte item SleekItem callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, byte, SleekItem) public virtual void Invoke(byte page, byte x, byte y, SleekItem item) Parameters page byte x byte y byte item SleekItem"
  },
  "api/SDG.Unturned.GrantPackagePromo.html": {
    "href": "api/SDG.Unturned.GrantPackagePromo.html",
    "title": "Class GrantPackagePromo | Unturned Analyse Doc",
    "keywords": "Class GrantPackagePromo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class GrantPackagePromo Inheritance object GrantPackagePromo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsEligible() Do we think the local player is eligible to send request? public static bool IsEligible() Returns bool SendRequest() public static void SendRequest()"
  },
  "api/SDG.Unturned.GraphicsPreferenceData.html": {
    "href": "api/SDG.Unturned.GraphicsPreferenceData.html",
    "title": "Class GraphicsPreferenceData | Unturned Analyse Doc",
    "keywords": "Class GraphicsPreferenceData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GraphicsPreferenceData Inheritance object GraphicsPreferenceData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GraphicsPreferenceData() public GraphicsPreferenceData() Fields Chromatic_Aberration_Intensity public float Chromatic_Aberration_Intensity Field Value float Colorful_Text_Contrast public ETextContrastPreference Colorful_Text_Contrast Field Value ETextContrastPreference Default_Text_Contrast public ETextContrastPreference Default_Text_Contrast Field Value ETextContrastPreference Inconspicuous_Text_Contrast public ETextContrastPreference Inconspicuous_Text_Contrast Field Value ETextContrastPreference LOD_Bias public float LOD_Bias Field Value float Override_Fullscreen_Mode public int Override_Fullscreen_Mode Field Value int Override_Refresh_Rate public int Override_Refresh_Rate Field Value int Override_Resolution_Height public int Override_Resolution_Height Field Value int Override_Resolution_Width public int Override_Resolution_Width Field Value int Override_UI_Scale public float Override_UI_Scale Field Value float Override_Vertical_Field_Of_View public float Override_Vertical_Field_Of_View Field Value float Use_Lens_Dirt public bool Use_Lens_Dirt Field Value bool"
  },
  "api/SDG.Unturned.GraphicsSettings.html": {
    "href": "api/SDG.Unturned.GraphicsSettings.html",
    "title": "Class GraphicsSettings | Unturned Analyse Doc",
    "keywords": "Class GraphicsSettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GraphicsSettings Inheritance object GraphicsSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GraphicsSettings() public GraphicsSettings() Fields EFFECT_HIGH public const float EFFECT_HIGH = 48 Field Value float EFFECT_LOW public const float EFFECT_LOW = 16 Field Value float EFFECT_MEDIUM public const float EFFECT_MEDIUM = 32 Field Value float EFFECT_ULTRA public const float EFFECT_ULTRA = 64 Field Value float planarReflectionUpdateIndex Planar reflection component updates its culling distance and culling mask when this is incremented. public static int planarReflectionUpdateIndex Field Value int Properties IsItemIconAntiAliasingEnabled public static bool IsItemIconAntiAliasingEnabled { get; set; } Property Value bool IsWindEnabled public static bool IsWindEnabled { get; set; } Property Value bool NormalizedFarClipDistance Multiplier for far clip plane distance. Clamped within [0, 1] range to prevent editing config files for an advantage. public static float NormalizedFarClipDistance { get; set; } Property Value float TargetFrameRate public static int TargetFrameRate { get; set; } Property Value int UnfocusedTargetFrameRate public static int UnfocusedTargetFrameRate { get; set; } Property Value int UseTargetFrameRate public static bool UseTargetFrameRate { get; set; } Property Value bool UseUnfocusedTargetFrameRate public static bool UseUnfocusedTargetFrameRate { get; set; } Property Value bool anisotropicFilteringMode public static EAnisotropicFilteringMode anisotropicFilteringMode { get; set; } Property Value EAnisotropicFilteringMode antiAliasingType public static EAntiAliasingType antiAliasingType { get; set; } Property Value EAntiAliasingType blast public static bool blast { get; set; } Property Value bool blend public static bool blend { get; set; } Property Value bool bloom public static bool bloom { get; set; } Property Value bool buffer public static bool buffer { get; set; } Property Value bool chromaticAberration public static bool chromaticAberration { get; set; } Property Value bool debris public static bool debris { get; set; } Property Value bool effect public static float effect { get; } Property Value float effectQuality public static EGraphicQuality effectQuality { get; set; } Property Value EGraphicQuality filmGrain public static bool filmGrain { get; set; } Property Value bool foliageFocus public static bool foliageFocus { get; set; } Property Value bool foliageQuality public static EGraphicQuality foliageQuality { get; set; } Property Value EGraphicQuality fullscreenMode public static FullScreenMode fullscreenMode { get; set; } Property Value FullScreenMode glitter public static bool glitter { get; set; } Property Value bool grassDisplacement public static bool grassDisplacement { get; set; } Property Value bool isAmbientOcclusionEnabled public static bool isAmbientOcclusionEnabled { get; set; } Property Value bool landmarkQuality public static EGraphicQuality landmarkQuality { get; set; } Property Value EGraphicQuality lightingQuality public static EGraphicQuality lightingQuality { get; set; } Property Value EGraphicQuality normalizedDrawDistance Multiplier for draw distance. Clamped within [0, 1] range to prevent editing config files for an advantage. public static float normalizedDrawDistance { get; set; } Property Value float normalizedLandmarkDrawDistance Multiplier for draw distance of optional super-low LOD models. Clamped within [0, 1] range to prevent editing config files for an advantage. public static float normalizedLandmarkDrawDistance { get; set; } Property Value float outlineQuality public static EGraphicQuality outlineQuality { get; set; } Property Value EGraphicQuality planarReflectionQuality public static EGraphicQuality planarReflectionQuality { get; set; } Property Value EGraphicQuality puddle public static bool puddle { get; set; } Property Value bool ragdolls public static bool ragdolls { get; set; } Property Value bool reflectionQuality public static EGraphicQuality reflectionQuality { get; set; } Property Value EGraphicQuality renderMode public static ERenderMode renderMode { get; set; } Property Value ERenderMode resolution public static GraphicsSettingsResolution resolution { get; set; } Property Value GraphicsSettingsResolution scopeQuality public static EGraphicQuality scopeQuality { get; set; } Property Value EGraphicQuality skyboxReflection public static bool skyboxReflection { get; set; } Property Value bool sunShaftsQuality public static EGraphicQuality sunShaftsQuality { get; set; } Property Value EGraphicQuality terrainBasemapDistance Distance to use terrain shaders before fallback to a baked texture. public static float terrainBasemapDistance { get; } Property Value float terrainHeightmapPixelError Higher error reduces vertex density as distance increases. public static float terrainHeightmapPixelError { get; } Property Value float terrainQuality public static EGraphicQuality terrainQuality { get; set; } Property Value EGraphicQuality triplanar public static bool triplanar { get; set; } Property Value bool uncapLandmarks public static bool uncapLandmarks { get; set; } Property Value bool userInterfaceScale public static float userInterfaceScale { get; set; } Property Value float waterQuality public static EGraphicQuality waterQuality { get; set; } Property Value EGraphicQuality Methods apply(string) public static void apply(string reason) Parameters reason string applyResolution() public static void applyResolution() load() public static void load() restoreDefaults() public static void restoreDefaults() save() public static void save() Events graphicsSettingsApplied public static event GraphicsSettingsApplied graphicsSettingsApplied Event Type GraphicsSettingsApplied"
  },
  "api/SDG.Unturned.GraphicsSettingsApplied.html": {
    "href": "api/SDG.Unturned.GraphicsSettingsApplied.html",
    "title": "Delegate GraphicsSettingsApplied | Unturned Analyse Doc",
    "keywords": "Delegate GraphicsSettingsApplied Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GraphicsSettingsApplied() Constructors GraphicsSettingsApplied(object, IntPtr) public GraphicsSettingsApplied(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.GraphicsSettingsData.html": {
    "href": "api/SDG.Unturned.GraphicsSettingsData.html",
    "title": "Class GraphicsSettingsData | Unturned Analyse Doc",
    "keywords": "Class GraphicsSettingsData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GraphicsSettingsData Inheritance object GraphicsSettingsData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GraphicsSettingsData() public GraphicsSettingsData() Fields EditorFarClipDistance Far clip plane multiplier in level editor. public float EditorFarClipDistance Field Value float FarClipDistance Far clip plane multiplier in-game. public float FarClipDistance Field Value float FullscreenMode public FullScreenMode FullscreenMode Field Value FullScreenMode IsAmbientOcclusionEnabled public bool IsAmbientOcclusionEnabled Field Value bool IsBlastEnabled public bool IsBlastEnabled Field Value bool IsDebrisEnabled public bool IsDebrisEnabled Field Value bool IsFoliageFocusEnabled public bool IsFoliageFocusEnabled Field Value bool IsGlitterEnabled public bool IsGlitterEnabled Field Value bool IsGrassDisplacementEnabled public bool IsGrassDisplacementEnabled Field Value bool IsItemIconAntiAliasingEnabled public bool IsItemIconAntiAliasingEnabled Field Value bool IsPuddleEnabled public bool IsPuddleEnabled Field Value bool IsRagdollsEnabled public bool IsRagdollsEnabled Field Value bool IsSkyboxReflectionEnabled public bool IsSkyboxReflectionEnabled Field Value bool IsTriplanarMappingEnabled public bool IsTriplanarMappingEnabled Field Value bool IsWindEnabled public bool IsWindEnabled Field Value bool LandmarkQuality public EGraphicQuality LandmarkQuality Field Value EGraphicQuality RenderMode2 public ERenderMode RenderMode2 Field Value ERenderMode TargetFrameRate public int TargetFrameRate Field Value int UnfocusedTargetFrameRate public int UnfocusedTargetFrameRate Field Value int UseTargetFrameRate public bool UseTargetFrameRate Field Value bool UseUnfocusedTargetFrameRate public bool UseUnfocusedTargetFrameRate Field Value bool UserInterfaceScale public float UserInterfaceScale Field Value float Properties AnisotropicFilteringMode public EAnisotropicFilteringMode AnisotropicFilteringMode { get; set; } Property Value EAnisotropicFilteringMode AntiAliasingType5 public EAntiAliasingType AntiAliasingType5 { get; set; } Property Value EAntiAliasingType DrawDistance public float DrawDistance { get; set; } Property Value float EffectQuality public EGraphicQuality EffectQuality { get; set; } Property Value EGraphicQuality FoliageQuality2 public EGraphicQuality FoliageQuality2 { get; set; } Property Value EGraphicQuality IsBloomEnabled public bool IsBloomEnabled { get; set; } Property Value bool IsChromaticAberrationEnabled public bool IsChromaticAberrationEnabled { get; set; } Property Value bool IsFilmGrainEnabled public bool IsFilmGrainEnabled { get; set; } Property Value bool IsNiceBlendEnabled public bool IsNiceBlendEnabled { get; set; } Property Value bool IsVSyncEnabled public bool IsVSyncEnabled { get; set; } Property Value bool LandmarkDistance public float LandmarkDistance { get; set; } Property Value float LightingQuality public EGraphicQuality LightingQuality { get; set; } Property Value EGraphicQuality OutlineQuality public EGraphicQuality OutlineQuality { get; set; } Property Value EGraphicQuality PlanarReflectionQuality public EGraphicQuality PlanarReflectionQuality { get; set; } Property Value EGraphicQuality Resolution public GraphicsSettingsResolution Resolution { get; set; } Property Value GraphicsSettingsResolution ScopeQuality2 public EGraphicQuality ScopeQuality2 { get; set; } Property Value EGraphicQuality ScreenSpaceReflectionQuality public EGraphicQuality ScreenSpaceReflectionQuality { get; set; } Property Value EGraphicQuality SunShaftsQuality public EGraphicQuality SunShaftsQuality { get; set; } Property Value EGraphicQuality TerrainQuality public EGraphicQuality TerrainQuality { get; set; } Property Value EGraphicQuality WaterQuality public EGraphicQuality WaterQuality { get; set; } Property Value EGraphicQuality"
  },
  "api/SDG.Unturned.GraphicsSettingsResolution.html": {
    "href": "api/SDG.Unturned.GraphicsSettingsResolution.html",
    "title": "Class GraphicsSettingsResolution | Unturned Analyse Doc",
    "keywords": "Class GraphicsSettingsResolution Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GraphicsSettingsResolution Inheritance object GraphicsSettingsResolution Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GraphicsSettingsResolution() public GraphicsSettingsResolution() GraphicsSettingsResolution(Resolution) public GraphicsSettingsResolution(Resolution resolution) Parameters resolution Resolution Properties Height public int Height { get; set; } Property Value int Width public int Width { get; set; } Property Value int"
  },
  "api/SDG.Unturned.GrassDisplacement.html": {
    "href": "api/SDG.Unturned.GrassDisplacement.html",
    "title": "Class GrassDisplacement | Unturned Analyse Doc",
    "keywords": "Class GrassDisplacement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GrassDisplacement : MonoBehaviour Inheritance object GrassDisplacement Constructors GrassDisplacement() public GrassDisplacement()"
  },
  "api/SDG.Unturned.Grenade.html": {
    "href": "api/SDG.Unturned.Grenade.html",
    "title": "Class Grenade | Unturned Analyse Doc",
    "keywords": "Class Grenade Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Grenade : MonoBehaviour, IExplodableThrowable Inheritance object Grenade Implements IExplodableThrowable Constructors Grenade() public Grenade() Fields animalDamage public float animalDamage Field Value float barricadeDamage public float barricadeDamage Field Value float explosion Kept because lots of modders have been using this script in Unity, so removing legacy effect id would break their content. public ushort explosion Field Value ushort explosionEffectGuid public Guid explosionEffectGuid Field Value Guid explosionLaunchSpeed public float explosionLaunchSpeed Field Value float fuseLength public float fuseLength Field Value float killer public CSteamID killer Field Value CSteamID objectDamage public float objectDamage Field Value float playerDamage public float playerDamage Field Value float range public float range Field Value float resourceDamage public float resourceDamage Field Value float shouldDestroySelf Hack for modders using grenade component as a way to deal radial damage. Not a good long term solution but widely requested for the meantime until I get the chance to rewrite some of the health stuff. public bool shouldDestroySelf Field Value bool structureDamage public float structureDamage Field Value float vehicleDamage public float vehicleDamage Field Value float zombieDamage public float zombieDamage Field Value float Methods Explode() public void Explode()"
  },
  "api/SDG.Unturned.GroupIDChangedHandler.html": {
    "href": "api/SDG.Unturned.GroupIDChangedHandler.html",
    "title": "Delegate GroupIDChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate GroupIDChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GroupIDChangedHandler(PlayerQuests sender, CSteamID oldGroupID, CSteamID newGroupID) Parameters sender PlayerQuests oldGroupID CSteamID newGroupID CSteamID Constructors GroupIDChangedHandler(object, IntPtr) public GroupIDChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, CSteamID, CSteamID, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests sender, CSteamID oldGroupID, CSteamID newGroupID, AsyncCallback callback, object @object) Parameters sender PlayerQuests oldGroupID CSteamID newGroupID CSteamID callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests, CSteamID, CSteamID) public virtual void Invoke(PlayerQuests sender, CSteamID oldGroupID, CSteamID newGroupID) Parameters sender PlayerQuests oldGroupID CSteamID newGroupID CSteamID"
  },
  "api/SDG.Unturned.GroupInfo.html": {
    "href": "api/SDG.Unturned.GroupInfo.html",
    "title": "Class GroupInfo | Unturned Analyse Doc",
    "keywords": "Class GroupInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GroupInfo Inheritance object GroupInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GroupInfo(CSteamID, string, uint) public GroupInfo(CSteamID newGroupID, string newName, uint newMembers) Parameters newGroupID CSteamID newName string newMembers uint Fields members public uint members Field Value uint name public string name Field Value string Properties groupID public CSteamID groupID { get; } Property Value CSteamID hasSpaceForMoreMembersInGroup public bool hasSpaceForMoreMembersInGroup { get; } Property Value bool useMaxGroupMembersLimit public bool useMaxGroupMembersLimit { get; } Property Value bool"
  },
  "api/SDG.Unturned.GroupInfoReadyHandler.html": {
    "href": "api/SDG.Unturned.GroupInfoReadyHandler.html",
    "title": "Delegate GroupInfoReadyHandler | Unturned Analyse Doc",
    "keywords": "Delegate GroupInfoReadyHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GroupInfoReadyHandler(GroupInfo group) Parameters group GroupInfo Constructors GroupInfoReadyHandler(object, IntPtr) public GroupInfoReadyHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(GroupInfo, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(GroupInfo group, AsyncCallback callback, object @object) Parameters group GroupInfo callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(GroupInfo) public virtual void Invoke(GroupInfo group) Parameters group GroupInfo"
  },
  "api/SDG.Unturned.GroupInvitesChangedHandler.html": {
    "href": "api/SDG.Unturned.GroupInvitesChangedHandler.html",
    "title": "Delegate GroupInvitesChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate GroupInvitesChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GroupInvitesChangedHandler(PlayerQuests sender) Parameters sender PlayerQuests Constructors GroupInvitesChangedHandler(object, IntPtr) public GroupInvitesChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests sender, AsyncCallback callback, object @object) Parameters sender PlayerQuests callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests) public virtual void Invoke(PlayerQuests sender) Parameters sender PlayerQuests"
  },
  "api/SDG.Unturned.GroupManager.html": {
    "href": "api/SDG.Unturned.GroupManager.html",
    "title": "Class GroupManager | Unturned Analyse Doc",
    "keywords": "Class GroupManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class GroupManager : SteamCaller Inheritance object SteamCaller GroupManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors GroupManager() public GroupManager() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties instance public static GroupManager instance { get; } Property Value GroupManager Methods CancelAllQueuedExitsForGroup(CSteamID) public static void CancelAllQueuedExitsForGroup(CSteamID groupId) Parameters groupId CSteamID ReceiveGroupInfo(CSteamID, string, uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellGroupInfo\")] public static void ReceiveGroupInfo(CSteamID groupID, string name, uint members) Parameters groupID CSteamID name string members uint addGroup(CSteamID, string) public static GroupInfo addGroup(CSteamID groupID, string name) Parameters groupID CSteamID name string Returns GroupInfo cancelGroupExit(Player) Remove player from queue if they're waiting to exit their group. public static void cancelGroupExit(Player player) Parameters player Player deleteGroup(CSteamID) public static void deleteGroup(CSteamID groupID) Parameters groupID CSteamID generateUniqueGroupID() public static CSteamID generateUniqueGroupID() Returns CSteamID getGroupInfo(CSteamID) public static GroupInfo getGroupInfo(CSteamID groupID) Parameters groupID CSteamID Returns GroupInfo getOrAddGroup(CSteamID, string, out bool) public static GroupInfo getOrAddGroup(CSteamID groupID, string name, out bool wasCreated) Parameters groupID CSteamID name string wasCreated bool Returns GroupInfo isPlayerInGroupExitQueue(Player) Is player already waiting to exit their group? public static bool isPlayerInGroupExitQueue(Player player) Parameters player Player Returns bool load() public static void load() requestGroupExit(Player) Add player to exit queue if enabled, or immediately remove. public static void requestGroupExit(Player player) Parameters player Player save() public static void save() sendGroupInfo(ITransportConnection, GroupInfo) public static void sendGroupInfo(ITransportConnection transportConnection, GroupInfo group) Parameters transportConnection ITransportConnection group GroupInfo sendGroupInfo(GroupInfo) public static void sendGroupInfo(GroupInfo group) Parameters group GroupInfo sendGroupInfo(CSteamID, GroupInfo) [Obsolete] public static void sendGroupInfo(CSteamID steamID, GroupInfo group) Parameters steamID CSteamID group GroupInfo sendGroupInfo(IEnumerable<ITransportConnection>, GroupInfo) [Obsolete] public static void sendGroupInfo(IEnumerable<ITransportConnection> transportConnections, GroupInfo group) Parameters transportConnections IEnumerable<ITransportConnection> group GroupInfo sendGroupInfo(List<ITransportConnection>, GroupInfo) public static void sendGroupInfo(List<ITransportConnection> transportConnections, GroupInfo group) Parameters transportConnections List<ITransportConnection> group GroupInfo tellGroupInfo(CSteamID, CSteamID, string, uint) [Obsolete] public void tellGroupInfo(CSteamID steamID, CSteamID groupID, string name, uint members) Parameters steamID CSteamID groupID CSteamID name string members uint Events groupInfoReady public static event GroupInfoReadyHandler groupInfoReady Event Type GroupInfoReadyHandler"
  },
  "api/SDG.Unturned.GroupManager_NetMethods.html": {
    "href": "api/SDG.Unturned.GroupManager_NetMethods.html",
    "title": "Class GroupManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class GroupManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(GroupManager))] public static class GroupManager_NetMethods Inheritance object GroupManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveGroupInfo_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveGroupInfo\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveGroupInfo_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveGroupInfo_Write(NetPakWriter, CSteamID, string, uint) [NetInvokableGeneratedMethod(\"ReceiveGroupInfo\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveGroupInfo_Write(NetPakWriter writer, CSteamID groupID, string name, uint members) Parameters writer NetPakWriter groupID CSteamID name string members uint"
  },
  "api/SDG.Unturned.GroupRankChangedHandler.html": {
    "href": "api/SDG.Unturned.GroupRankChangedHandler.html",
    "title": "Delegate GroupRankChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate GroupRankChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GroupRankChangedHandler(PlayerQuests sender, EPlayerGroupRank oldGroupRank, EPlayerGroupRank newGroupRank) Parameters sender PlayerQuests oldGroupRank EPlayerGroupRank newGroupRank EPlayerGroupRank Constructors GroupRankChangedHandler(object, IntPtr) public GroupRankChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, EPlayerGroupRank, EPlayerGroupRank, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests sender, EPlayerGroupRank oldGroupRank, EPlayerGroupRank newGroupRank, AsyncCallback callback, object @object) Parameters sender PlayerQuests oldGroupRank EPlayerGroupRank newGroupRank EPlayerGroupRank callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests, EPlayerGroupRank, EPlayerGroupRank) public virtual void Invoke(PlayerQuests sender, EPlayerGroupRank oldGroupRank, EPlayerGroupRank newGroupRank) Parameters sender PlayerQuests oldGroupRank EPlayerGroupRank newGroupRank EPlayerGroupRank"
  },
  "api/SDG.Unturned.GroupUpdatedHandler.html": {
    "href": "api/SDG.Unturned.GroupUpdatedHandler.html",
    "title": "Delegate GroupUpdatedHandler | Unturned Analyse Doc",
    "keywords": "Delegate GroupUpdatedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void GroupUpdatedHandler(PlayerQuests sender) Parameters sender PlayerQuests Constructors GroupUpdatedHandler(object, IntPtr) public GroupUpdatedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests sender, AsyncCallback callback, object @object) Parameters sender PlayerQuests callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests) public virtual void Invoke(PlayerQuests sender) Parameters sender PlayerQuests"
  },
  "api/SDG.Unturned.Hash.html": {
    "href": "api/SDG.Unturned.Hash.html",
    "title": "Class Hash | Unturned Analyse Doc",
    "keywords": "Class Hash Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Hash Inheritance object Hash Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Hash() public Hash() Methods SHA1(CSteamID) public static byte[] SHA1(CSteamID steamID) Parameters steamID CSteamID Returns byte[] SHA1(byte[]) public static byte[] SHA1(byte[] bytes) Parameters bytes byte[] Returns byte[] SHA1(Stream) public static byte[] SHA1(Stream stream) Parameters stream Stream Returns byte[] SHA1(string) public static byte[] SHA1(string text) Parameters text string Returns byte[] combine(params byte[][]) public static byte[] combine(params byte[][] hashes) Parameters hashes byte[][] Returns byte[] combine(List<byte[]>) public static byte[] combine(List<byte[]> hashes) Parameters hashes List<byte[]> Returns byte[] combineSHA1Hashes(byte[], byte[]) Combine two existing 20-byte hashes. public static byte[] combineSHA1Hashes(byte[] a, byte[] b) Parameters a byte[] b byte[] Returns byte[] log(byte[]) public static void log(byte[] hash) Parameters hash byte[] toString(byte[]) public static string toString(byte[] hash) Parameters hash byte[] Returns string verifyHash(byte[], byte[]) public static bool verifyHash(byte[] hash_0, byte[] hash_1) Parameters hash_0 byte[] hash_1 byte[] Returns bool"
  },
  "api/SDG.Unturned.HashStream.html": {
    "href": "api/SDG.Unturned.HashStream.html",
    "title": "Class HashStream | Unturned Analyse Doc",
    "keywords": "Class HashStream Namespace SDG.Unturned Assembly Assembly-CSharp.dll Run hash algorithm for all data passing through a stream. public class HashStream : Stream, IDisposable Inheritance object MarshalByRefObject Stream HashStream Implements IDisposable Derived SHA1Stream Inherited Members Stream.Null Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.Close() Stream.Dispose() Stream.Dispose(bool) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.ReadByte() Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HashStream(Stream, HashAlgorithm) public HashStream(Stream underlyingStream, HashAlgorithm hashAlgo) Parameters underlyingStream Stream hashAlgo HashAlgorithm Properties CanRead public override bool CanRead { get; } Property Value bool CanSeek public override bool CanSeek { get; } Property Value bool CanWrite public override bool CanWrite { get; } Property Value bool Hash public byte[] Hash { get; } Property Value byte[] Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long Methods Flush() public override void Flush() Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Seek(long, SeekOrigin) public override long Seek(long offset, SeekOrigin origin) Parameters offset long origin SeekOrigin Returns long SetLength(long) public override void SetLength(long value) Parameters value long Write(byte[], int, int) public override void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int"
  },
  "api/SDG.Unturned.HatUpdated.html": {
    "href": "api/SDG.Unturned.HatUpdated.html",
    "title": "Delegate HatUpdated | Unturned Analyse Doc",
    "keywords": "Delegate HatUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void HatUpdated(ushort newHat, byte newHatQuality, byte[] newHatState) Parameters newHat ushort newHatQuality byte newHatState byte[] Constructors HatUpdated(object, IntPtr) public HatUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, byte, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort newHat, byte newHatQuality, byte[] newHatState, AsyncCallback callback, object @object) Parameters newHat ushort newHatQuality byte newHatState byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort, byte, byte[]) public virtual void Invoke(ushort newHat, byte newHatQuality, byte[] newHatState) Parameters newHat ushort newHatQuality byte newHatState byte[]"
  },
  "api/SDG.Unturned.HealthUpdated.html": {
    "href": "api/SDG.Unturned.HealthUpdated.html",
    "title": "Delegate HealthUpdated | Unturned Analyse Doc",
    "keywords": "Delegate HealthUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void HealthUpdated(byte newHealth) Parameters newHealth byte Constructors HealthUpdated(object, IntPtr) public HealthUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte newHealth, AsyncCallback callback, object @object) Parameters newHealth byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte) public virtual void Invoke(byte newHealth) Parameters newHealth byte"
  },
  "api/SDG.Unturned.HighlighterTool.html": {
    "href": "api/SDG.Unturned.HighlighterTool.html",
    "title": "Class HighlighterTool | Unturned Analyse Doc",
    "keywords": "Class HighlighterTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HighlighterTool Inheritance object HighlighterTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HighlighterTool() public HighlighterTool() Methods color(Transform, Color) public static void color(Transform target, Color color) Parameters target Transform color Color destroyMaterials(Transform) public static void destroyMaterials(Transform target) Parameters target Transform getMaterial(Transform) [Obsolete] public static Material getMaterial(Transform target) Parameters target Transform Returns Material getMaterialInstance(Transform) public static Material getMaterialInstance(Transform target) Parameters target Transform Returns Material guide(Transform) public static void guide(Transform target) Parameters target Transform help(Transform, bool) public static void help(Transform target, bool isValid) Parameters target Transform isValid bool help(Transform, bool, bool) public static void help(Transform target, bool isValid, bool isRecursive) Parameters target Transform isValid bool isRecursive bool highlight(Transform, Color) public static void highlight(Transform target, Color color) Parameters target Transform color Color rematerialize(Transform, Material, out Material) public static void rematerialize(Transform target, Material newMaterial, out Material oldMaterial) Parameters target Transform newMaterial Material oldMaterial Material remesh(Transform, List<Mesh>, List<Mesh>) public static void remesh(Transform target, List<Mesh> newMeshes, List<Mesh> outOldMeshes) Parameters target Transform newMeshes List<Mesh> outOldMeshes List<Mesh> skin(Transform, Material) public static void skin(Transform target, Material skin) Parameters target Transform skin Material unhighlight(Transform) public static void unhighlight(Transform target) Parameters target Transform"
  },
  "api/SDG.Unturned.HitmarkerInfo.html": {
    "href": "api/SDG.Unturned.HitmarkerInfo.html",
    "title": "Struct HitmarkerInfo | Unturned Analyse Doc",
    "keywords": "Struct HitmarkerInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct HitmarkerInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields aliveTime public float aliveTime Field Value float shouldFollowWorldPosition public bool shouldFollowWorldPosition Field Value bool sleekElement public SleekHitmarker sleekElement Field Value SleekHitmarker worldPosition public Vector3 worldPosition Field Value Vector3"
  },
  "api/SDG.Unturned.HolidayUtil.html": {
    "href": "api/SDG.Unturned.HolidayUtil.html",
    "title": "Class HolidayUtil | Unturned Analyse Doc",
    "keywords": "Class HolidayUtil Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class HolidayUtil Inheritance object HolidayUtil Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods getActiveHoliday() public static ENPCHoliday getActiveHoliday() Returns ENPCHoliday isHolidayActive(ENPCHoliday) public static bool isHolidayActive(ENPCHoliday holiday) Parameters holiday ENPCHoliday Returns bool scheduleHolidays() public static void scheduleHolidays()"
  },
  "api/SDG.Unturned.HookInfo.html": {
    "href": "api/SDG.Unturned.HookInfo.html",
    "title": "Class HookInfo | Unturned Analyse Doc",
    "keywords": "Class HookInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HookInfo Inheritance object HookInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HookInfo() public HookInfo() Fields deltaPosition public Vector3 deltaPosition Field Value Vector3 deltaRotation public Quaternion deltaRotation Field Value Quaternion target public Transform target Field Value Transform vehicle public InteractableVehicle vehicle Field Value InteractableVehicle"
  },
  "api/SDG.Unturned.HookVehicleRequestHandler.html": {
    "href": "api/SDG.Unturned.HookVehicleRequestHandler.html",
    "title": "Delegate HookVehicleRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate HookVehicleRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void HookVehicleRequestHandler(InteractableVehicle instigatingVehicle, InteractableVehicle targetVehicle, ref bool shouldAllow) Parameters instigatingVehicle InteractableVehicle targetVehicle InteractableVehicle shouldAllow bool Constructors HookVehicleRequestHandler(object, IntPtr) public HookVehicleRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableVehicle, InteractableVehicle, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableVehicle instigatingVehicle, InteractableVehicle targetVehicle, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigatingVehicle InteractableVehicle targetVehicle InteractableVehicle shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(InteractableVehicle, InteractableVehicle, ref bool) public virtual void Invoke(InteractableVehicle instigatingVehicle, InteractableVehicle targetVehicle, ref bool shouldAllow) Parameters instigatingVehicle InteractableVehicle targetVehicle InteractableVehicle shouldAllow bool"
  },
  "api/SDG.Unturned.HordePurchaseVolume.html": {
    "href": "api/SDG.Unturned.HordePurchaseVolume.html",
    "title": "Class HordePurchaseVolume | Unturned Analyse Doc",
    "keywords": "Class HordePurchaseVolume Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HordePurchaseVolume : LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager> HordePurchaseVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.falloffDistance LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.editorGameObject LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.editorMeshFilter LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.editorMeshRenderer LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.forceShouldAddCollider LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.supportsBoxShape LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.supportsSphereShape LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.supportsFalloff LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.CreateMenu() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.beginSelection(InteractionData) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.endSelection(InteractionData) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetBoxSize() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetBoxExtents() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetInnerBoxSize() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetInnerBoxExtents() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetLocalInnerBoxSize() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetSphereRadius() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetLocalSphereRadius() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.SetSphereRadius(float) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.CalculateWorldBounds() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.CalculateLocalBounds() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.OnEnable() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.OnDisable() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.Awake() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.Start() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.OnDestroy() LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<HordePurchaseVolume, HordePurchaseVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors HordePurchaseVolume() public HordePurchaseVolume() Fields cost public uint cost Field Value uint id public ushort id Field Value ushort Methods CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.HordePurchaseVolumeManager.html": {
    "href": "api/SDG.Unturned.HordePurchaseVolumeManager.html",
    "title": "Class HordePurchaseVolumeManager | Unturned Analyse Doc",
    "keywords": "Class HordePurchaseVolumeManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HordePurchaseVolumeManager : VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager> Inheritance object VolumeManagerBase VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager> HordePurchaseVolumeManager Inherited Members VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.allowInstantiation VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.supportsFalloff VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.allVolumes VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.Get() VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.GetAllVolumes() VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.GetRandomVolumeOrNull() VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.EnumerateAllVolumes() VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.Raycast(Ray, out RaycastHit, out HordePurchaseVolume, float) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.AddVolume(HordePurchaseVolume) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.RemoveVolume(HordePurchaseVolume) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.SetDebugColor(Color) VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.Visibility VolumeManager<HordePurchaseVolume, HordePurchaseVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HordePurchaseVolumeManager() public HordePurchaseVolumeManager()"
  },
  "api/SDG.Unturned.HotkeyInfo.html": {
    "href": "api/SDG.Unturned.HotkeyInfo.html",
    "title": "Class HotkeyInfo | Unturned Analyse Doc",
    "keywords": "Class HotkeyInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HotkeyInfo Inheritance object HotkeyInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HotkeyInfo() public HotkeyInfo() Fields id Which item ID we thought was there. If the item ID currently at the coordinates doesn't match we clear this hotkey. public ushort id Field Value ushort page public byte page Field Value byte x public byte x Field Value byte y public byte y Field Value byte"
  },
  "api/SDG.Unturned.HotkeysUpdated.html": {
    "href": "api/SDG.Unturned.HotkeysUpdated.html",
    "title": "Delegate HotkeysUpdated | Unturned Analyse Doc",
    "keywords": "Delegate HotkeysUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void HotkeysUpdated() Constructors HotkeysUpdated(object, IntPtr) public HotkeysUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.HousingConnections.html": {
    "href": "api/SDG.Unturned.HousingConnections.html",
    "title": "Class HousingConnections | Unturned Analyse Doc",
    "keywords": "Class HousingConnections Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HousingConnections Inheritance object HousingConnections Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HousingConnections() public HousingConnections() Fields EDGE_LENGTH Side length of square and triangular floor/roof. Walls can be slightly less, but we treat them as if they are the full length. public const float EDGE_LENGTH = 6 Field Value float HALF_EDGE_LENGTH public const float HALF_EDGE_LENGTH = 3 Field Value float HALF_WALL_HEIGHT public const float HALF_WALL_HEIGHT = 2.125 Field Value float RAMPART_PIVOT_OFFSET Vertical distance from edge center to rampart pivot. public const float RAMPART_PIVOT_OFFSET = 0.9 Field Value float WALL_HEIGHT public const float WALL_HEIGHT = 4.25 Field Value float WALL_PIVOT_OFFSET Vertical distance from edge center to wall pivot. public const float WALL_PIVOT_OFFSET = 2.125 Field Value float"
  },
  "api/SDG.Unturned.HumanAnimator.html": {
    "href": "api/SDG.Unturned.HumanAnimator.html",
    "title": "Class HumanAnimator | Unturned Analyse Doc",
    "keywords": "Class HumanAnimator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HumanAnimator : CharacterAnimator Inheritance object CharacterAnimator HumanAnimator Inherited Members CharacterAnimator.BLEND CharacterAnimator.anim CharacterAnimator.spine CharacterAnimator.skull CharacterAnimator.leftShoulder CharacterAnimator.rightShoulder CharacterAnimator.spineHook CharacterAnimator.clip CharacterAnimator.sample() CharacterAnimator.mixAnimation(string) CharacterAnimator.mixAnimation(string, bool, bool) CharacterAnimator.mixAnimation(string, bool, bool, bool) CharacterAnimator.AddEquippedItemAnimation(AnimationClip, Transform) CharacterAnimator.removeAnimation(AnimationClip) CharacterAnimator.setAnimationSpeed(string, float) CharacterAnimator.getAnimationLength(string) CharacterAnimator.GetAnimationLength(string, bool) CharacterAnimator.getAnimationPlaying() CharacterAnimator.state(string) CharacterAnimator.checkExists(string) CharacterAnimator.play(string, bool) CharacterAnimator.stop(string) CharacterAnimator.init() Constructors HumanAnimator() public HumanAnimator() Fields LEAN public static readonly float LEAN Field Value float lean public float lean Field Value float offset public float offset Field Value float pitch public float pitch Field Value float Methods apply() public void apply() force() public void force()"
  },
  "api/SDG.Unturned.HumanClothes.html": {
    "href": "api/SDG.Unturned.HumanClothes.html",
    "title": "Class HumanClothes | Unturned Analyse Doc",
    "keywords": "Class HumanClothes Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class HumanClothes : MonoBehaviour Inheritance object HumanClothes Constructors HumanClothes() public HumanClothes() Fields _visualBackpack public int _visualBackpack Field Value int _visualGlasses public int _visualGlasses Field Value int _visualMask public int _visualMask Field Value int _visualVest public int _visualVest Field Value int canWearPro public bool canWearPro Field Value bool isMine public bool isMine Field Value bool isRagdoll public bool isRagdoll Field Value bool isView public bool isView Field Value bool Properties backpack public ushort backpack { get; set; } Property Value ushort backpackAsset public ItemBackpackAsset backpackAsset { get; } Property Value ItemBackpackAsset backpackGuid public Guid backpackGuid { get; set; } Property Value Guid backpackModel public Transform backpackModel { get; } Property Value Transform beard public byte beard { get; set; } Property Value byte beardModel public Transform beardModel { get; } Property Value Transform color public Color color { get; set; } Property Value Color face public byte face { get; set; } Property Value byte glasses public ushort glasses { get; set; } Property Value ushort glassesAsset public ItemGlassesAsset glassesAsset { get; } Property Value ItemGlassesAsset glassesGuid public Guid glassesGuid { get; set; } Property Value Guid glassesModel public Transform glassesModel { get; } Property Value Transform hair public byte hair { get; set; } Property Value byte hairModel public Transform hairModel { get; } Property Value Transform hand public bool hand { get; set; } Property Value bool hasBackpack public bool hasBackpack { get; set; } Property Value bool hat public ushort hat { get; set; } Property Value ushort hatAsset public ItemHatAsset hatAsset { get; } Property Value ItemHatAsset hatGuid public Guid hatGuid { get; set; } Property Value Guid hatModel public Transform hatModel { get; } Property Value Transform isMythic public bool isMythic { get; set; } Property Value bool isVisual public bool isVisual { get; set; } Property Value bool mask public ushort mask { get; set; } Property Value ushort maskAsset public ItemMaskAsset maskAsset { get; } Property Value ItemMaskAsset maskGuid public Guid maskGuid { get; set; } Property Value Guid maskModel public Transform maskModel { get; } Property Value Transform pants public ushort pants { get; set; } Property Value ushort pantsAsset public ItemPantsAsset pantsAsset { get; } Property Value ItemPantsAsset pantsGuid public Guid pantsGuid { get; set; } Property Value Guid shirt public ushort shirt { get; set; } Property Value ushort shirtAsset public ItemShirtAsset shirtAsset { get; } Property Value ItemShirtAsset shirtGuid public Guid shirtGuid { get; set; } Property Value Guid skin public Color skin { get; set; } Property Value Color vest public ushort vest { get; set; } Property Value ushort vestAsset public ItemVestAsset vestAsset { get; } Property Value ItemVestAsset vestGuid public Guid vestGuid { get; set; } Property Value Guid vestModel public Transform vestModel { get; } Property Value Transform visualBackpack public int visualBackpack { get; set; } Property Value int visualGlasses public int visualGlasses { get; set; } Property Value int visualHat public int visualHat { get; set; } Property Value int visualMask public int visualMask { get; set; } Property Value int visualPants public int visualPants { get; set; } Property Value int visualShirt public int visualShirt { get; set; } Property Value int visualVest public int visualVest { get; set; } Property Value int Methods apply() public void apply()"
  },
  "api/SDG.Unturned.Hurt.html": {
    "href": "api/SDG.Unturned.Hurt.html",
    "title": "Delegate Hurt | Unturned Analyse Doc",
    "keywords": "Delegate Hurt Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Hurt(Player player, byte damage, Vector3 force, EDeathCause cause, ELimb limb, CSteamID killer) Parameters player Player damage byte force Vector3 cause EDeathCause limb ELimb killer CSteamID Constructors Hurt(object, IntPtr) public Hurt(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, byte, Vector3, EDeathCause, ELimb, CSteamID, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, byte damage, Vector3 force, EDeathCause cause, ELimb limb, CSteamID killer, AsyncCallback callback, object @object) Parameters player Player damage byte force Vector3 cause EDeathCause limb ELimb killer CSteamID callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, byte, Vector3, EDeathCause, ELimb, CSteamID) public virtual void Invoke(Player player, byte damage, Vector3 force, EDeathCause cause, ELimb limb, CSteamID killer) Parameters player Player damage byte force Vector3 cause EDeathCause limb ELimb killer CSteamID"
  },
  "api/SDG.Unturned.HyperUpdated.html": {
    "href": "api/SDG.Unturned.HyperUpdated.html",
    "title": "Delegate HyperUpdated | Unturned Analyse Doc",
    "keywords": "Delegate HyperUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void HyperUpdated(bool isHyper) Parameters isHyper bool Constructors HyperUpdated(object, IntPtr) public HyperUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isHyper, AsyncCallback callback, object @object) Parameters isHyper bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isHyper) Parameters isHyper bool"
  },
  "api/SDG.Unturned.IAmbianceNode.html": {
    "href": "api/SDG.Unturned.IAmbianceNode.html",
    "title": "Interface IAmbianceNode | Unturned Analyse Doc",
    "keywords": "Interface IAmbianceNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IAmbianceNode Properties id [Obsolete] ushort id { get; } Property Value ushort noLighting bool noLighting { get; } Property Value bool noWater bool noWater { get; } Property Value bool Methods GetEffectAsset() EffectAsset GetEffectAsset() Returns EffectAsset"
  },
  "api/SDG.Unturned.IAssetErrorContext.html": {
    "href": "api/SDG.Unturned.IAssetErrorContext.html",
    "title": "Interface IAssetErrorContext | Unturned Analyse Doc",
    "keywords": "Interface IAssetErrorContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll Context for the Assets.ReportError methods. Nelson 2024-11-20: Converted from directly using asset to this interface so that asset-related features can more easily log warnings to the in-game menu. public interface IAssetErrorContext Properties AssetErrorPrefix Format text to prefix any errors reported in this context. (e.g., this asset's name and ID) string AssetErrorPrefix { get; } Property Value string"
  },
  "api/SDG.Unturned.IAssetReference.html": {
    "href": "api/SDG.Unturned.IAssetReference.html",
    "title": "Interface IAssetReference | Unturned Analyse Doc",
    "keywords": "Interface IAssetReference Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IAssetReference Properties GUID GUID of the asset this is referring to. Guid GUID { get; set; } Property Value Guid isValid bool isValid { get; } Property Value bool"
  },
  "api/SDG.Unturned.ICommandInputOutput.html": {
    "href": "api/SDG.Unturned.ICommandInputOutput.html",
    "title": "Interface ICommandInputOutput | Unturned Analyse Doc",
    "keywords": "Interface ICommandInputOutput Namespace SDG.Unturned Assembly Assembly-CSharp.dll Interface between the dedicated server command I/O and per-platform console. public interface ICommandInputOutput Methods initialize(CommandWindow) Called when this implementation is setup by command window. void initialize(CommandWindow commandWindow) Parameters commandWindow CommandWindow outputError(string) Print red message. void outputError(string error) Parameters error string outputInformation(string) Print white message. void outputInformation(string information) Parameters information string outputWarning(string) Print yellow message. void outputWarning(string warning) Parameters warning string shutdown(CommandWindow) Called when this implementation is deleted or application quits. void shutdown(CommandWindow commandWindow) Parameters commandWindow CommandWindow update() Called each Unity update. void update() Events inputCommitted Broadcasts when the enter key is pressed. event CommandInputHandler inputCommitted Event Type CommandInputHandler"
  },
  "api/SDG.Unturned.IContentReference.html": {
    "href": "api/SDG.Unturned.IContentReference.html",
    "title": "Interface IContentReference | Unturned Analyse Doc",
    "keywords": "Interface IContentReference Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IContentReference Properties isValid bool isValid { get; } Property Value bool name Name of the asset bundle. string name { get; set; } Property Value string Examples core.content path Path within the asset bundle. string path { get; set; } Property Value string"
  },
  "api/SDG.Unturned.IConvenientSavedata.html": {
    "href": "api/SDG.Unturned.IConvenientSavedata.html",
    "title": "Interface IConvenientSavedata | Unturned Analyse Doc",
    "keywords": "Interface IConvenientSavedata Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IConvenientSavedata Methods DeleteBool(string) bool DeleteBool(string key) Parameters key string Returns bool true if key existed and was removed. hasFlag(string) bool hasFlag(string flag) Parameters flag string Returns bool read(string, out bool) bool read(string key, out bool value) Parameters key string value bool Returns bool read(string, out DateTime) bool read(string key, out DateTime value) Parameters key string value DateTime Returns bool read(string, out long) bool read(string key, out long value) Parameters key string value long Returns bool read(string, out string) bool read(string key, out string value) Parameters key string value string Returns bool setFlag(string) void setFlag(string flag) Parameters flag string write(string, bool) void write(string key, bool value) Parameters key string value bool write(string, DateTime) void write(string key, DateTime value) Parameters key string value DateTime write(string, long) void write(string key, long value) Parameters key string value long write(string, string) void write(string key, string value) Parameters key string value string"
  },
  "api/SDG.Unturned.IDamageMultiplier.html": {
    "href": "api/SDG.Unturned.IDamageMultiplier.html",
    "title": "Interface IDamageMultiplier | Unturned Analyse Doc",
    "keywords": "Interface IDamageMultiplier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IDamageMultiplier Methods multiply(ELimb) float multiply(ELimb limb) Parameters limb ELimb Returns float"
  },
  "api/SDG.Unturned.IDeadzoneNode.html": {
    "href": "api/SDG.Unturned.IDeadzoneNode.html",
    "title": "Interface IDeadzoneNode | Unturned Analyse Doc",
    "keywords": "Interface IDeadzoneNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IDeadzoneNode Properties DeadzoneType EDeadzoneType DeadzoneType { get; } Property Value EDeadzoneType MaskFilterDamagePerSecond Rate of depletion from gasmask filter's quality/durability. Defaults to 0.4 to preserve behavior from before adding this property. float MaskFilterDamagePerSecond { get; } Property Value float ProtectedDamagePerSecond Damage dealt to players while inside the volume if they do have clothing matching the deadzone type. For example, an area could be so dangerous that even with protection they take a constant 0.1 DPS. float ProtectedDamagePerSecond { get; } Property Value float UnprotectedDamagePerSecond Damage dealt to players while inside the volume if they don't have clothing matching the deadzone type. Could help prevent players from running in and out to grab a few items without dieing. float UnprotectedDamagePerSecond { get; } Property Value float UnprotectedRadiationPerSecond Virus damage to players while inside the volume if they don't have clothing matching the deadzone type. Defaults to 6.25 to preserve behavior from before adding this property. float UnprotectedRadiationPerSecond { get; } Property Value float"
  },
  "api/SDG.Unturned.IDedicatedWorkshopUpdateMonitor.html": {
    "href": "api/SDG.Unturned.IDedicatedWorkshopUpdateMonitor.html",
    "title": "Interface IDedicatedWorkshopUpdateMonitor | Unturned Analyse Doc",
    "keywords": "Interface IDedicatedWorkshopUpdateMonitor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IDedicatedWorkshopUpdateMonitor Methods tick(float) void tick(float deltaTime) Parameters deltaTime float"
  },
  "api/SDG.Unturned.IDeferredAsset-1.html": {
    "href": "api/SDG.Unturned.IDeferredAsset-1.html",
    "title": "Interface IDeferredAsset<T> | Unturned Analyse Doc",
    "keywords": "Interface IDeferredAsset<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll Struct interface so that for transient asset bundles (older workshop mods) they can be preloaded and retrieved as-needed, but for master bundles the asset loading can be deferred until needed. public interface IDeferredAsset<T> where T : Object Type Parameters T Methods getOrLoad() T getOrLoad() Returns T"
  },
  "api/SDG.Unturned.IDialogueTarget.html": {
    "href": "api/SDG.Unturned.IDialogueTarget.html",
    "title": "Interface IDialogueTarget | Unturned Analyse Doc",
    "keywords": "Interface IDialogueTarget Namespace SDG.Unturned Assembly Assembly-CSharp.dll Implemented by components the player can talk with using DialogeAssets. (e.g., InteractableObjectNPC) public interface IDialogueTarget Methods FindStartingDialogueAsset() Called on server to find the start of conversation dialogue asset. DialogueAsset FindStartingDialogueAsset() Returns DialogueAsset GetDialogueTargetDebugName() Used in error messages. string GetDialogueTargetDebugName() Returns string GetDialogueTargetNameShownToPlayer(Player) Called on client to format in UI. string GetDialogueTargetNameShownToPlayer(Player player) Parameters player Player Returns string GetDialogueTargetNetId() Get a net ID that can be used with GetDialogueTargetFromNetId to resolve IDialogueTarget in multiplayer. NetId GetDialogueTargetNetId() Returns NetId GetDialogueTargetWorldPosition() Used to test whether player is within range. Ideally, this should be removed in the future in favor of the server resetting speaker when out of range. Vector3 GetDialogueTargetWorldPosition() Returns Vector3 SetFaceOverride(byte?) void SetFaceOverride(byte? faceOverride) Parameters faceOverride byte? SetIsTalkingWithLocalPlayer(bool) void SetIsTalkingWithLocalPlayer(bool isTalkingWithLocalPlayer) Parameters isTalkingWithLocalPlayer bool ShouldServerApproveDialogueRequest(Player) Called on server to test whether object conditions are met. bool ShouldServerApproveDialogueRequest(Player withPlayer) Parameters withPlayer Player Returns bool"
  },
  "api/SDG.Unturned.IExplodableThrowable.html": {
    "href": "api/SDG.Unturned.IExplodableThrowable.html",
    "title": "Interface IExplodableThrowable | Unturned Analyse Doc",
    "keywords": "Interface IExplodableThrowable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IExplodableThrowable Methods Explode() void Explode()"
  },
  "api/SDG.Unturned.IExplosionDamageable.html": {
    "href": "api/SDG.Unturned.IExplosionDamageable.html",
    "title": "Interface IExplosionDamageable | Unturned Analyse Doc",
    "keywords": "Interface IExplosionDamageable Namespace SDG.Unturned Assembly Assembly-CSharp.dll Implemented by components to support taking damage from explosions. Not intended for external use (yet?) and may need to change. public interface IExplosionDamageable : IEquatable<IExplosionDamageable> Inherited Members IEquatable<IExplosionDamageable>.Equals(IExplosionDamageable) Properties IsEligibleForExplosionDamage Used to exclude dead entities from further evaluation. bool IsEligibleForExplosionDamage { get; } Property Value bool Methods ApplyExplosionDamage(in ExplosionParameters, ref ExplosionDamageParameters) void ApplyExplosionDamage(in ExplosionParameters explosionParameters, ref ExplosionDamageParameters damageParameters) Parameters explosionParameters ExplosionParameters damageParameters ExplosionDamageParameters GetClosestPointToExplosion(Vector3) Used to sort damage from nearest to furthest. Vector3 GetClosestPointToExplosion(Vector3 explosionCenter) Parameters explosionCenter Vector3 Returns Vector3"
  },
  "api/SDG.Unturned.ILocalWorkshopSettings.html": {
    "href": "api/SDG.Unturned.ILocalWorkshopSettings.html",
    "title": "Interface ILocalWorkshopSettings | Unturned Analyse Doc",
    "keywords": "Interface ILocalWorkshopSettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface ILocalWorkshopSettings Methods getEnabled(PublishedFileId_t) bool getEnabled(PublishedFileId_t fileId) Parameters fileId PublishedFileId_t Returns bool setEnabled(PublishedFileId_t, bool) void setEnabled(PublishedFileId_t fileId, bool newEnabled) Parameters fileId PublishedFileId_t newEnabled bool"
  },
  "api/SDG.Unturned.IManualOnDestroy.html": {
    "href": "api/SDG.Unturned.IManualOnDestroy.html",
    "title": "Interface IManualOnDestroy | Unturned Analyse Doc",
    "keywords": "Interface IManualOnDestroy Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IManualOnDestroy Methods ManualOnDestroy() void ManualOnDestroy()"
  },
  "api/SDG.Unturned.INPCCondition.html": {
    "href": "api/SDG.Unturned.INPCCondition.html",
    "title": "Class INPCCondition | Unturned Analyse Doc",
    "keywords": "Class INPCCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class INPCCondition Inheritance object INPCCondition Derived NPCAnimalKillsCondition NPCHordeKillsCondition NPCIsFullMoonCondition NPCLogicCondition NPCObjectKillsCondition NPCPlayerKillsCondition NPCTreeKillsCondition NPCZombieKillsCondition Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors INPCCondition(string, bool) public INPCCondition(string newText, bool newShouldReset) Parameters newText string newShouldReset bool Fields shouldReset protected bool shouldReset Field Value bool text protected string text Field Value string Methods ApplyCondition(Player) public virtual void ApplyCondition(Player player) Parameters player Player AreUIRequirementsMet(List<bool>) public bool AreUIRequirementsMet(List<bool> areConditionsMet) Parameters areConditionsMet List<bool> Returns bool applyCondition(Player, bool) [Obsolete(\"Removed shouldSend parameter because ApplyCondition is only called on the server now\")] public virtual void applyCondition(Player player, bool shouldSend) Parameters player Player shouldSend bool createUI(Player, Texture2D) public virtual ISleekElement createUI(Player player, Texture2D icon) Parameters player Player icon Texture2D Returns ISleekElement formatCondition(Player) public virtual string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public virtual bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public virtual bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.INPCReward.html": {
    "href": "api/SDG.Unturned.INPCReward.html",
    "title": "Class INPCReward | Unturned Analyse Doc",
    "keywords": "Class INPCReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class INPCReward Inheritance object INPCReward Derived NPCAchievementReward NPCBoolFlagReward NPCCurrencyReward NPCCutsceneModeReward NPCEffectReward NPCEventReward NPCExperienceReward NPCFlagMathReward NPCHintReward NPCItemReward NPCPlayerLifeFoodReward NPCPlayerLifeHealthReward NPCPlayerLifeStaminaReward NPCPlayerLifeVirusReward NPCPlayerLifeWaterReward NPCPlayerSpawnpointReward NPCQuestReward NPCRandomItemReward NPCReputationReward NPCRewardsListAssetReward NPCShortFlagReward NPCTeleportReward NPCVehicleReward Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors INPCReward(string) public INPCReward(string newText) Parameters newText string Fields grantDelayApplyWhenInterrupted If true and player has this reward pending when they die or disconnect it will be granted. public bool grantDelayApplyWhenInterrupted Field Value bool grantDelaySeconds If >0 the game will start a coroutine to grant the reward after waiting. public float grantDelaySeconds Field Value float text protected string text Field Value string Methods GrantReward(Player) public virtual void GrantReward(Player player) Parameters player Player createUI(Player) public virtual ISleekElement createUI(Player player) Parameters player Player Returns ISleekElement formatReward(Player) public virtual string formatReward(Player player) Parameters player Player Returns string grantReward(Player, bool) [Obsolete(\"Removed shouldSend parameter because GrantReward is only called on the server now\")] public virtual void grantReward(Player player, bool shouldSend) Parameters player Player shouldSend bool"
  },
  "api/SDG.Unturned.IPluginAdvertising.html": {
    "href": "api/SDG.Unturned.IPluginAdvertising.html",
    "title": "Interface IPluginAdvertising | Unturned Analyse Doc",
    "keywords": "Interface IPluginAdvertising Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IPluginAdvertising Properties PluginFrameworkName string PluginFrameworkName { get; set; } Property Value string Methods AddPlugin(string) void AddPlugin(string name) Parameters name string AddPlugins(IEnumerable<string>) void AddPlugins(IEnumerable<string> names) Parameters names IEnumerable<string> GetPluginNames() IEnumerable<string> GetPluginNames() Returns IEnumerable<string> RemovePlugin(string) void RemovePlugin(string name) Parameters name string RemovePlugins(IEnumerable<string>) void RemovePlugins(IEnumerable<string> names) Parameters names IEnumerable<string>"
  },
  "api/SDG.Unturned.IReun.html": {
    "href": "api/SDG.Unturned.IReun.html",
    "title": "Interface IReun | Unturned Analyse Doc",
    "keywords": "Interface IReun Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface IReun Properties step int step { get; } Property Value int Methods redo() Transform redo() Returns Transform undo() void undo()"
  },
  "api/SDG.Unturned.ISkinableAsset.html": {
    "href": "api/SDG.Unturned.ISkinableAsset.html",
    "title": "Interface ISkinableAsset | Unturned Analyse Doc",
    "keywords": "Interface ISkinableAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface ISkinableAsset Properties albedoBase Texture albedoBase { get; } Property Value Texture emissionBase Texture emissionBase { get; } Property Value Texture metallicBase Texture metallicBase { get; } Property Value Texture"
  },
  "api/SDG.Unturned.ISnapshotInfo-1.html": {
    "href": "api/SDG.Unturned.ISnapshotInfo-1.html",
    "title": "Interface ISnapshotInfo<T> | Unturned Analyse Doc",
    "keywords": "Interface ISnapshotInfo<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface ISnapshotInfo<T> Type Parameters T Methods lerp(T, float, out T) void lerp(T target, float delta, out T result) Parameters target T delta float result T"
  },
  "api/SDG.Unturned.ITransformedHandler.html": {
    "href": "api/SDG.Unturned.ITransformedHandler.html",
    "title": "Interface ITransformedHandler | Unturned Analyse Doc",
    "keywords": "Interface ITransformedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface ITransformedHandler Methods OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) void OnTransformed(Vector3 oldPosition, Quaternion oldRotation, Vector3 oldLocalScale, Vector3 newPosition, Quaternion newRotation, Vector3 newLocalScale, bool modifyRotation, bool modifyScale) Parameters oldPosition Vector3 oldRotation Quaternion oldLocalScale Vector3 newPosition Vector3 newRotation Quaternion newLocalScale Vector3 modifyRotation bool modifyScale bool"
  },
  "api/SDG.Unturned.ITypeReference.html": {
    "href": "api/SDG.Unturned.ITypeReference.html",
    "title": "Interface ITypeReference | Unturned Analyse Doc",
    "keywords": "Interface ITypeReference Namespace SDG.Unturned Assembly Assembly-CSharp.dll public interface ITypeReference Properties assemblyQualifiedName GUID of the asset this is referring to. string assemblyQualifiedName { get; set; } Property Value string isValid bool isValid { get; } Property Value bool type Type type { get; } Property Value Type"
  },
  "api/SDG.Unturned.IconUtils.html": {
    "href": "api/SDG.Unturned.IconUtils.html",
    "title": "Class IconUtils | Unturned Analyse Doc",
    "keywords": "Class IconUtils Namespace SDG.Unturned Assembly Assembly-CSharp.dll Moved icon code from MenuTitleUI to here. public class IconUtils Inheritance object IconUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors IconUtils() public IconUtils() Fields extraIcons public static List<ExtraItemIconInfo> extraIcons Field Value List<ExtraItemIconInfo> icons public static List<ItemDefIconInfo> icons Field Value List<ItemDefIconInfo> Methods CaptureAllOutfitPreviews() public static void CaptureAllOutfitPreviews() CaptureAllSkinIcons() public static void CaptureAllSkinIcons() CaptureCosmeticPreviews() public static void CaptureCosmeticPreviews() CaptureOutfitPreview(Guid) public static void CaptureOutfitPreview(Guid guid) Parameters guid Guid CreateExtrasDirectory() These directories are excluded from source control and Steam depots so they might not exist yet. public static void CreateExtrasDirectory() captureAllItemIcons() public static void captureAllItemIcons() captureItemIcon(ItemAsset) public static void captureItemIcon(ItemAsset itemAsset) Parameters itemAsset ItemAsset getItemDefIcon(ItemAsset, VehicleAsset, ushort) public static ItemDefIconInfo getItemDefIcon(ItemAsset itemAsset, VehicleAsset vehicleAsset, ushort skinID) Parameters itemAsset ItemAsset vehicleAsset VehicleAsset skinID ushort Returns ItemDefIconInfo getItemDefIcon(ushort, ushort, ushort) public static ItemDefIconInfo getItemDefIcon(ushort itemID, ushort vehicleID, ushort skinID) Parameters itemID ushort vehicleID ushort skinID ushort Returns ItemDefIconInfo"
  },
  "api/SDG.Unturned.IgnoredCraftingBlueprint.html": {
    "href": "api/SDG.Unturned.IgnoredCraftingBlueprint.html",
    "title": "Class IgnoredCraftingBlueprint | Unturned Analyse Doc",
    "keywords": "Class IgnoredCraftingBlueprint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class IgnoredCraftingBlueprint Inheritance object IgnoredCraftingBlueprint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors IgnoredCraftingBlueprint() public IgnoredCraftingBlueprint() Fields blueprintIndex public byte blueprintIndex Field Value byte itemId public ushort itemId Field Value ushort Methods matchesBlueprint(Blueprint) public bool matchesBlueprint(Blueprint blueprint) Parameters blueprint Blueprint Returns bool"
  },
  "api/SDG.Unturned.ImpactGrenade.html": {
    "href": "api/SDG.Unturned.ImpactGrenade.html",
    "title": "Class ImpactGrenade | Unturned Analyse Doc",
    "keywords": "Class ImpactGrenade Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ImpactGrenade : TriggerGrenadeBase Inheritance object TriggerGrenadeBase ImpactGrenade Inherited Members TriggerGrenadeBase.ignoreTransform Constructors ImpactGrenade() public ImpactGrenade() Fields explodable public IExplodableThrowable explodable Field Value IExplodableThrowable Methods GrenadeTriggered() protected override void GrenadeTriggered()"
  },
  "api/SDG.Unturned.InputEx.html": {
    "href": "api/SDG.Unturned.InputEx.html",
    "title": "Class InputEx | Unturned Analyse Doc",
    "keywords": "Class InputEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll Extensions to the built-in Input class. public static class InputEx Inheritance object InputEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties NormalizedMousePosition Get mouse position in viewport coordinates where zero is the bottom left and one is the top right. public static Vector2 NormalizedMousePosition { get; } Property Value Vector2 Methods ConsumeKeyDown(KeyCode) Should be used anywhere that Input.GetKeyDown opens a UI. Each frame one input event can be consumed. This is a hack to prevent multiple UI-related key presses from interfering during the same frame. Only the first input event proceeds, while the others are ignored. public static bool ConsumeKeyDown(KeyCode key) Parameters key KeyCode Returns bool True if caller should proceed, false otherwise. GetKey(KeyCode) Wrapper for Input.GetKey, but returns false while typing in a uGUI text field. public static bool GetKey(KeyCode key) Parameters key KeyCode Returns bool GetKeyDown(KeyCode) Wrapper for Input.GetKeyDown, but returns false while typing in a uGUI text field. public static bool GetKeyDown(KeyCode key) Parameters key KeyCode Returns bool GetKeyUp(KeyCode) Wrapper for Input.GetKeyUp, but returns false while typing in a uGUI text field. public static bool GetKeyUp(KeyCode key) Parameters key KeyCode Returns bool"
  },
  "api/SDG.Unturned.InputInfo.html": {
    "href": "api/SDG.Unturned.InputInfo.html",
    "title": "Class InputInfo | Unturned Analyse Doc",
    "keywords": "Class InputInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InputInfo Inheritance object InputInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InputInfo() public InputInfo() Fields animal public Animal animal Field Value Animal colliderTransform Hit collider's transform. Can be null. public Transform colliderTransform Field Value Transform direction public Vector3 direction Field Value Vector3 limb public ELimb limb Field Value ELimb material [Obsolete(\"Replaced by materialName\")] public EPhysicsMaterial material Field Value EPhysicsMaterial materialName public string materialName Field Value string normal public Vector3 normal Field Value Vector3 player public Player player Field Value Player point public Vector3 point Field Value Vector3 section public byte section Field Value byte transform Root transform. public Transform transform Field Value Transform type public ERaycastInfoType type Field Value ERaycastInfoType usage public ERaycastInfoUsage usage Field Value ERaycastInfoUsage vehicle public InteractableVehicle vehicle Field Value InteractableVehicle zombie public Zombie zombie Field Value Zombie"
  },
  "api/SDG.Unturned.Interactable.html": {
    "href": "api/SDG.Unturned.Interactable.html",
    "title": "Class Interactable | Unturned Analyse Doc",
    "keywords": "Class Interactable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Interactable : MonoBehaviour Inheritance object Interactable Derived InteractableBed InteractableCharge InteractableClaim InteractableDoor InteractableFarm InteractableFire InteractableForage InteractableGenerator InteractableItem InteractableLadder InteractableLibrary InteractableMannequin InteractablePower InteractableRainBarrel InteractableSign InteractableStereo InteractableStorage InteractableTank InteractableTrap InteractableVehicle Constructors Interactable() public Interactable() Properties IsChildOfVehicle public bool IsChildOfVehicle { get; } Property Value bool isPlant [Obsolete(\"Renamed to IsChildOfVehicle\")] public bool isPlant { get; } Property Value bool Methods GetNetId() public NetId GetNetId() Returns NetId checkHighlight(out Color) public virtual bool checkHighlight(out Color color) Parameters color Color Returns bool checkHint(out EPlayerMessage, out string, out Color) public virtual bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkInteractable() public virtual bool checkInteractable() Returns bool checkUseable() public virtual bool checkUseable() Returns bool updateState(Asset, byte[]) public virtual void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public virtual void use()"
  },
  "api/SDG.Unturned.Interactable2.html": {
    "href": "api/SDG.Unturned.Interactable2.html",
    "title": "Class Interactable2 | Unturned Analyse Doc",
    "keywords": "Class Interactable2 Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Interactable2 : MonoBehaviour Inheritance object Interactable2 Derived Interactable2SalvageBarricade Interactable2SalvageStructure Constructors Interactable2() public Interactable2() Fields group public ulong group Field Value ulong owner public ulong owner Field Value ulong salvageDurationMultiplier public float salvageDurationMultiplier Field Value float Properties hasOwnership public bool hasOwnership { get; } Property Value bool Methods checkHint(out EPlayerMessage, out float) public virtual bool checkHint(out EPlayerMessage message, out float data) Parameters message EPlayerMessage data float Returns bool use() public virtual void use()"
  },
  "api/SDG.Unturned.Interactable2HP.html": {
    "href": "api/SDG.Unturned.Interactable2HP.html",
    "title": "Class Interactable2HP | Unturned Analyse Doc",
    "keywords": "Class Interactable2HP Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Interactable2HP : MonoBehaviour Inheritance object Interactable2HP Constructors Interactable2HP() public Interactable2HP() Fields hp public byte hp Field Value byte"
  },
  "api/SDG.Unturned.Interactable2SalvageBarricade.html": {
    "href": "api/SDG.Unturned.Interactable2SalvageBarricade.html",
    "title": "Class Interactable2SalvageBarricade | Unturned Analyse Doc",
    "keywords": "Class Interactable2SalvageBarricade Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Interactable2SalvageBarricade : Interactable2 Inheritance object Interactable2 Interactable2SalvageBarricade Inherited Members Interactable2.owner Interactable2.group Interactable2.salvageDurationMultiplier Interactable2.hasOwnership Constructors Interactable2SalvageBarricade() public Interactable2SalvageBarricade() Fields hp public Interactable2HP hp Field Value Interactable2HP root public Transform root Field Value Transform shouldBypassPickupOwnership public bool shouldBypassPickupOwnership Field Value bool Methods checkHint(out EPlayerMessage, out float) public override bool checkHint(out EPlayerMessage message, out float data) Parameters message EPlayerMessage data float Returns bool use() public override void use()"
  },
  "api/SDG.Unturned.Interactable2SalvageStructure.html": {
    "href": "api/SDG.Unturned.Interactable2SalvageStructure.html",
    "title": "Class Interactable2SalvageStructure | Unturned Analyse Doc",
    "keywords": "Class Interactable2SalvageStructure Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Interactable2SalvageStructure : Interactable2 Inheritance object Interactable2 Interactable2SalvageStructure Inherited Members Interactable2.owner Interactable2.group Interactable2.salvageDurationMultiplier Interactable2.hasOwnership Constructors Interactable2SalvageStructure() public Interactable2SalvageStructure() Fields hp public Interactable2HP hp Field Value Interactable2HP Methods checkHint(out EPlayerMessage, out float) public override bool checkHint(out EPlayerMessage message, out float data) Parameters message EPlayerMessage data float Returns bool use() public override void use()"
  },
  "api/SDG.Unturned.InteractableBeacon.html": {
    "href": "api/SDG.Unturned.InteractableBeacon.html",
    "title": "Class InteractableBeacon | Unturned Analyse Doc",
    "keywords": "Class InteractableBeacon Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableBeacon : MonoBehaviour, IManualOnDestroy Inheritance object InteractableBeacon Implements IManualOnDestroy Constructors InteractableBeacon() public InteractableBeacon() Properties IsChildOfVehicle public bool IsChildOfVehicle { get; } Property Value bool initialParticipants Number of players inside the navmesh when the beacon was placed. Clamped to 1 if ShouldScaleWithNumberOfParticipants is false. public int initialParticipants { get; } Property Value int isPlant [Obsolete(\"Renamed to IsChildOfVehicle\")] public bool isPlant { get; } Property Value bool Methods ManualOnDestroy() public void ManualOnDestroy() despawnAlive() public void despawnAlive() getAlive() public int getAlive() Returns int getRemaining() public int getRemaining() Returns int init(int) public void init(int amount) Parameters amount int spawnRemaining() public void spawnRemaining() updateState(ItemBarricadeAsset) public void updateState(ItemBarricadeAsset asset) Parameters asset ItemBarricadeAsset"
  },
  "api/SDG.Unturned.InteractableBed.html": {
    "href": "api/SDG.Unturned.InteractableBed.html",
    "title": "Class InteractableBed | Unturned Analyse Doc",
    "keywords": "Class InteractableBed Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableBed : Interactable Inheritance object Interactable InteractableBed Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableBed() public InteractableBed() Properties isClaimable public bool isClaimable { get; } Property Value bool isClaimed public bool isClaimed { get; } Property Value bool owner public CSteamID owner { get; } Property Value CSteamID Methods ClientClaim() public void ClientClaim() ReceiveClaim(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveClaim(CSteamID newOwner) Parameters newOwner CSteamID ReceiveClaimRequest(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 1)] public void ReceiveClaimRequest(in ServerInvocationContext context) Parameters context ServerInvocationContext checkClaim(CSteamID) public bool checkClaim(CSteamID enemy) Parameters enemy CSteamID Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool updateClaim(CSteamID) public void updateClaim(CSteamID newOwner) Parameters newOwner CSteamID updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use()"
  },
  "api/SDG.Unturned.InteractableBed_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableBed_NetMethods.html",
    "title": "Class InteractableBed_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableBed_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableBed))] public static class InteractableBed_NetMethods Inheritance object InteractableBed_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveClaimRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClaimRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClaimRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveClaim_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClaim\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClaim_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveClaim_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveClaim\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveClaim_Write(NetPakWriter writer, CSteamID newOwner) Parameters writer NetPakWriter newOwner CSteamID"
  },
  "api/SDG.Unturned.InteractableCharge.html": {
    "href": "api/SDG.Unturned.InteractableCharge.html",
    "title": "Class InteractableCharge | Unturned Analyse Doc",
    "keywords": "Class InteractableCharge Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableCharge : Interactable Inheritance object Interactable InteractableCharge Inherited Members Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.checkHint(out EPlayerMessage, out string, out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableCharge() public InteractableCharge() Fields detonationEffectGuid public Guid detonationEffectGuid Field Value Guid group public ulong group Field Value ulong owner public ulong owner Field Value ulong Properties hasOwnership public bool hasOwnership { get; } Property Value bool isSelected public bool isSelected { get; } Property Value bool isTargeted public bool isTargeted { get; } Property Value bool Methods Detonate(Player) public void Detonate(Player instigatingPlayer) Parameters instigatingPlayer Player checkInteractable() public override bool checkInteractable() Returns bool deselect() public void deselect() detonate(CSteamID) public void detonate(CSteamID killer) Parameters killer CSteamID highlight() public void highlight() select() public void select() target() public void target() unhighlight() public void unhighlight() untarget() public void untarget() updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableClaim.html": {
    "href": "api/SDG.Unturned.InteractableClaim.html",
    "title": "Class InteractableClaim | Unturned Analyse Doc",
    "keywords": "Class InteractableClaim Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableClaim : Interactable Inheritance object Interactable InteractableClaim Inherited Members Interactable.updateState(Asset, byte[]) Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.checkHint(out EPlayerMessage, out string, out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableClaim() public InteractableClaim() Fields group public ulong group Field Value ulong owner public ulong owner Field Value ulong Methods checkInteractable() public override bool checkInteractable() Returns bool updateState(ItemBarricadeAsset) public void updateState(ItemBarricadeAsset asset) Parameters asset ItemBarricadeAsset"
  },
  "api/SDG.Unturned.InteractableClock.html": {
    "href": "api/SDG.Unturned.InteractableClock.html",
    "title": "Class InteractableClock | Unturned Analyse Doc",
    "keywords": "Class InteractableClock Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableClock : InteractablePower Inheritance object Interactable InteractablePower InteractableClock Inherited Members InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableClock() public InteractableClock() Methods checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableDoor.html": {
    "href": "api/SDG.Unturned.InteractableDoor.html",
    "title": "Class InteractableDoor | Unturned Analyse Doc",
    "keywords": "Class InteractableDoor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableDoor : Interactable Inheritance object Interactable InteractableDoor Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableDoor() public InteractableDoor() Fields animCoroutine protected Coroutine animCoroutine Field Value Coroutine checkColliders public static Collider[] checkColliders Field Value Collider[] Properties group public CSteamID group { get; } Property Value CSteamID isOpen public bool isOpen { get; } Property Value bool isOpenable public bool isOpenable { get; } Property Value bool owner public CSteamID owner { get; } Property Value CSteamID Methods ClientToggle() public void ClientToggle() OnDisable() protected virtual void OnDisable() ReceiveOpen(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveOpen(bool newOpen) Parameters newOpen bool ReceiveToggleRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveToggleRequest(in ServerInvocationContext context, bool desiredOpen) Parameters context ServerInvocationContext desiredOpen bool Start() protected virtual void Start() areAnimatedCollidersOverlapping() protected bool areAnimatedCollidersOverlapping() Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkToggle(CSteamID, CSteamID) public bool checkToggle(CSteamID enemyPlayer, CSteamID enemyGroup) Parameters enemyPlayer CSteamID enemyGroup CSteamID Returns bool checkUseable() public override bool checkUseable() Returns bool disableAnimatedColliders(float) protected IEnumerator disableAnimatedColliders(float delay) Parameters delay float Returns IEnumerator overlapBox(BoxCollider) protected int overlapBox(BoxCollider boxCollider) Parameters boxCollider BoxCollider Returns int playAnimation(Animation, bool) protected void playAnimation(Animation animationComponent, bool applyInstantly) Parameters animationComponent Animation applyInstantly bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateToggle(bool) public void updateToggle(bool newOpen) Parameters newOpen bool use() public override void use() Events OnDoorChanged_Global Invoked when door is opened/closed, but not when loaded. public static event Action<InteractableDoor> OnDoorChanged_Global Event Type Action<InteractableDoor>"
  },
  "api/SDG.Unturned.InteractableDoor_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableDoor_NetMethods.html",
    "title": "Class InteractableDoor_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableDoor_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableDoor))] public static class InteractableDoor_NetMethods Inheritance object InteractableDoor_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveOpen_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveOpen\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveOpen_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveOpen_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveOpen\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveOpen_Write(NetPakWriter writer, bool newOpen) Parameters writer NetPakWriter newOpen bool ReceiveToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleRequest_Write(NetPakWriter writer, bool desiredOpen) Parameters writer NetPakWriter desiredOpen bool"
  },
  "api/SDG.Unturned.InteractableFarm.HarvestRequestHandler.html": {
    "href": "api/SDG.Unturned.InteractableFarm.HarvestRequestHandler.html",
    "title": "Delegate InteractableFarm.HarvestRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate InteractableFarm.HarvestRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InteractableFarm.HarvestRequestHandler(InteractableFarm harvestable, SteamPlayer instigatorPlayer, ref bool shouldAllow) Parameters harvestable InteractableFarm instigatorPlayer SteamPlayer shouldAllow bool Constructors HarvestRequestHandler(object, IntPtr) public HarvestRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableFarm, SteamPlayer, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableFarm harvestable, SteamPlayer instigatorPlayer, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters harvestable InteractableFarm instigatorPlayer SteamPlayer shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(InteractableFarm, SteamPlayer, ref bool) public virtual void Invoke(InteractableFarm harvestable, SteamPlayer instigatorPlayer, ref bool shouldAllow) Parameters harvestable InteractableFarm instigatorPlayer SteamPlayer shouldAllow bool"
  },
  "api/SDG.Unturned.InteractableFarm.html": {
    "href": "api/SDG.Unturned.InteractableFarm.html",
    "title": "Class InteractableFarm | Unturned Analyse Doc",
    "keywords": "Class InteractableFarm Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableFarm : Interactable Inheritance object Interactable InteractableFarm Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableFarm() public InteractableFarm() Fields harvestRewardExperience public uint harvestRewardExperience Field Value uint Properties IsFullyGrown public bool IsFullyGrown { get; } Property Value bool canFertilize public bool canFertilize { get; } Property Value bool grow Item legacy ID to grant the player. public ushort grow { get; } Property Value ushort growth Number of seconds to finish growing. public uint growth { get; } Property Value uint planted public uint planted { get; } Property Value uint Methods ClientHarvest() public void ClientHarvest() ReceiveHarvestRequest(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10)] public void ReceiveHarvestRequest(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceivePlanted(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceivePlanted(uint newPlanted) Parameters newPlanted uint checkFarm() public bool checkFarm() Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool updatePlanted(uint) public void updatePlanted(uint newPlanted) Parameters newPlanted uint updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use() Events OnHarvestRequested_Global public static event InteractableFarm.HarvestRequestHandler OnHarvestRequested_Global Event Type InteractableFarm.HarvestRequestHandler"
  },
  "api/SDG.Unturned.InteractableFarm_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableFarm_NetMethods.html",
    "title": "Class InteractableFarm_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableFarm_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableFarm))] public static class InteractableFarm_NetMethods Inheritance object InteractableFarm_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveHarvestRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveHarvestRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveHarvestRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceivePlanted_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlanted\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlanted_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlanted_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceivePlanted\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlanted_Write(NetPakWriter writer, uint newPlanted) Parameters writer NetPakWriter newPlanted uint"
  },
  "api/SDG.Unturned.InteractableFire.html": {
    "href": "api/SDG.Unturned.InteractableFire.html",
    "title": "Class InteractableFire | Unturned Analyse Doc",
    "keywords": "Class InteractableFire Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableFire : Interactable Inheritance object Interactable InteractableFire Inherited Members Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableFire() public InteractableFire() Properties isLit public bool isLit { get; } Property Value bool Methods ClientToggle() public void ClientToggle() ReceiveLit(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveLit(bool newLit) Parameters newLit bool ReceiveToggleRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveToggleRequest(in ServerInvocationContext context, bool desiredLit) Parameters context ServerInvocationContext desiredLit bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool updateLit(bool) public void updateLit(bool newLit) Parameters newLit bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use()"
  },
  "api/SDG.Unturned.InteractableFire_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableFire_NetMethods.html",
    "title": "Class InteractableFire_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableFire_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableFire))] public static class InteractableFire_NetMethods Inheritance object InteractableFire_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveLit_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLit\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLit_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLit_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveLit\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLit_Write(NetPakWriter writer, bool newLit) Parameters writer NetPakWriter newLit bool ReceiveToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleRequest_Write(NetPakWriter writer, bool desiredLit) Parameters writer NetPakWriter desiredLit bool"
  },
  "api/SDG.Unturned.InteractableForage.html": {
    "href": "api/SDG.Unturned.InteractableForage.html",
    "title": "Class InteractableForage | Unturned Analyse Doc",
    "keywords": "Class InteractableForage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableForage : Interactable Inheritance object Interactable InteractableForage Inherited Members Interactable.updateState(Asset, byte[]) Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableForage() public InteractableForage() Methods checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool use() public override void use()"
  },
  "api/SDG.Unturned.InteractableGenerator.html": {
    "href": "api/SDG.Unturned.InteractableGenerator.html",
    "title": "Class InteractableGenerator | Unturned Analyse Doc",
    "keywords": "Class InteractableGenerator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableGenerator : Interactable, IManualOnDestroy Inheritance object Interactable InteractableGenerator Implements IManualOnDestroy Inherited Members Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableGenerator() public InteractableGenerator() Properties capacity public ushort capacity { get; } Property Value ushort fuel public ushort fuel { get; } Property Value ushort isPowered public bool isPowered { get; } Property Value bool isRefillable public bool isRefillable { get; } Property Value bool isSiphonable public bool isSiphonable { get; } Property Value bool sqrWirerange public float sqrWirerange { get; } Property Value float wirerange public float wirerange { get; } Property Value float Methods ClientToggle() public void ClientToggle() ManualOnDestroy() public void ManualOnDestroy() ReceiveFuel(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveFuel(ushort newFuel) Parameters newFuel ushort ReceivePowered(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceivePowered(bool newPowered) Parameters newPowered bool ReceiveToggleRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveToggleRequest(in ServerInvocationContext context, bool desiredPowered) Parameters context ServerInvocationContext desiredPowered bool askBurn(ushort) public void askBurn(ushort amount) Parameters amount ushort askFill(ushort) public void askFill(ushort amount) Parameters amount ushort checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool tellFuel(ushort) public void tellFuel(ushort newFuel) Parameters newFuel ushort updatePowered(bool) public void updatePowered(bool newPowered) Parameters newPowered bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use()"
  },
  "api/SDG.Unturned.InteractableGenerator_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableGenerator_NetMethods.html",
    "title": "Class InteractableGenerator_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableGenerator_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableGenerator))] public static class InteractableGenerator_NetMethods Inheritance object InteractableGenerator_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveFuel_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveFuel\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveFuel_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFuel_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveFuel\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveFuel_Write(NetPakWriter writer, ushort newFuel) Parameters writer NetPakWriter newFuel ushort ReceivePowered_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePowered_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePowered_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePowered_Write(NetPakWriter writer, bool newPowered) Parameters writer NetPakWriter newPowered bool ReceiveToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleRequest_Write(NetPakWriter writer, bool desiredPowered) Parameters writer NetPakWriter desiredPowered bool"
  },
  "api/SDG.Unturned.InteractableItem.html": {
    "href": "api/SDG.Unturned.InteractableItem.html",
    "title": "Class InteractableItem | Unturned Analyse Doc",
    "keywords": "Class InteractableItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableItem : Interactable Inheritance object Interactable InteractableItem Inherited Members Interactable.updateState(Asset, byte[]) Interactable.checkInteractable() Interactable.checkUseable() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableItem() public InteractableItem() Fields asset public ItemAsset asset Field Value ItemAsset item public Item item Field Value Item jar public ItemJar jar Field Value ItemJar Methods checkHighlight(out Color) public override bool checkHighlight(out Color color) Parameters color Color Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool clampRange() public void clampRange() use() public override void use()"
  },
  "api/SDG.Unturned.InteractableLadder.html": {
    "href": "api/SDG.Unturned.InteractableLadder.html",
    "title": "Class InteractableLadder | Unturned Analyse Doc",
    "keywords": "Class InteractableLadder Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableLadder : Interactable Inheritance object Interactable InteractableLadder Inherited Members Interactable.updateState(Asset, byte[]) Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableLadder() public InteractableLadder() Methods checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool use() public override void use()"
  },
  "api/SDG.Unturned.InteractableLibrary.html": {
    "href": "api/SDG.Unturned.InteractableLibrary.html",
    "title": "Class InteractableLibrary | Unturned Analyse Doc",
    "keywords": "Class InteractableLibrary Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableLibrary : Interactable Inheritance object Interactable InteractableLibrary Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableLibrary() public InteractableLibrary() Properties amount public uint amount { get; } Property Value uint capacity public uint capacity { get; } Property Value uint group public CSteamID group { get; } Property Value CSteamID owner public CSteamID owner { get; } Property Value CSteamID tax public byte tax { get; } Property Value byte Methods ClientTransfer(byte, uint) public void ClientTransfer(byte transaction, uint delta) Parameters transaction byte delta uint ReceiveAmount(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveAmount(uint newAmount) Parameters newAmount uint ReceiveTransferLibraryRequest(in ServerInvocationContext, byte, uint) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveTransferLibraryRequest(in ServerInvocationContext context, byte transaction, uint delta) Parameters context ServerInvocationContext transaction byte delta uint checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkTransfer(CSteamID, CSteamID) public bool checkTransfer(CSteamID enemyPlayer, CSteamID enemyGroup) Parameters enemyPlayer CSteamID enemyGroup CSteamID Returns bool checkUseable() public override bool checkUseable() Returns bool updateAmount(uint) public void updateAmount(uint newAmount) Parameters newAmount uint updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use()"
  },
  "api/SDG.Unturned.InteractableLibrary_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableLibrary_NetMethods.html",
    "title": "Class InteractableLibrary_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableLibrary_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableLibrary))] public static class InteractableLibrary_NetMethods Inheritance object InteractableLibrary_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAmount_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAmount\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAmount_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAmount_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveAmount\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAmount_Write(NetPakWriter writer, uint newAmount) Parameters writer NetPakWriter newAmount uint ReceiveTransferLibraryRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTransferLibraryRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTransferLibraryRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTransferLibraryRequest_Write(NetPakWriter, byte, uint) [NetInvokableGeneratedMethod(\"ReceiveTransferLibraryRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTransferLibraryRequest_Write(NetPakWriter writer, byte transaction, uint delta) Parameters writer NetPakWriter transaction byte delta uint"
  },
  "api/SDG.Unturned.InteractableMannequin.html": {
    "href": "api/SDG.Unturned.InteractableMannequin.html",
    "title": "Class InteractableMannequin | Unturned Analyse Doc",
    "keywords": "Class InteractableMannequin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableMannequin : Interactable, IManualOnDestroy Inheritance object Interactable InteractableMannequin Implements IManualOnDestroy Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableMannequin() public InteractableMannequin() Fields backpackQuality public byte backpackQuality Field Value byte backpackState public byte[] backpackState Field Value byte[] glassesQuality public byte glassesQuality Field Value byte glassesState public byte[] glassesState Field Value byte[] hatQuality public byte hatQuality Field Value byte hatState public byte[] hatState Field Value byte[] maskQuality public byte maskQuality Field Value byte maskState public byte[] maskState Field Value byte[] mirror public bool mirror Field Value bool pantsQuality public byte pantsQuality Field Value byte pantsState public byte[] pantsState Field Value byte[] pose public byte pose Field Value byte pose_comp public byte pose_comp Field Value byte shirtQuality public byte shirtQuality Field Value byte shirtState public byte[] shirtState Field Value byte[] vestQuality public byte vestQuality Field Value byte vestState public byte[] vestState Field Value byte[] Properties backpack public ushort backpack { get; } Property Value ushort clothes public HumanClothes clothes { get; } Property Value HumanClothes glasses public ushort glasses { get; } Property Value ushort group public CSteamID group { get; } Property Value CSteamID hat public ushort hat { get; } Property Value ushort isUpdatable public bool isUpdatable { get; } Property Value bool mask public ushort mask { get; } Property Value ushort owner public CSteamID owner { get; } Property Value CSteamID pants public ushort pants { get; } Property Value ushort shirt public ushort shirt { get; } Property Value ushort vest public ushort vest { get; } Property Value ushort visualBackpack public int visualBackpack { get; } Property Value int visualGlasses public int visualGlasses { get; } Property Value int visualHat public int visualHat { get; } Property Value int visualMask public int visualMask { get; } Property Value int visualPants public int visualPants { get; } Property Value int visualShirt public int visualShirt { get; } Property Value int visualVest public int visualVest { get; } Property Value int Methods ManualOnDestroy() public void ManualOnDestroy() ReceivePose(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceivePose(byte poseComp) Parameters poseComp byte ReceivePoseRequest(in ServerInvocationContext, byte) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceivePoseRequest(in ServerInvocationContext context, byte poseComp) Parameters context ServerInvocationContext poseComp byte ReceiveUpdate(byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveUpdate(byte[] state) Parameters state byte[] ReceiveUpdateRequest(in ServerInvocationContext, EMannequinUpdateMode) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveUpdateRequest(in ServerInvocationContext context, EMannequinUpdateMode updateMode) Parameters context ServerInvocationContext updateMode EMannequinUpdateMode applyPose(byte) public void applyPose(byte poseComp) Parameters poseComp byte checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUpdate(CSteamID, CSteamID) public bool checkUpdate(CSteamID enemyPlayer, CSteamID enemyGroup) Parameters enemyPlayer CSteamID enemyGroup CSteamID Returns bool checkUseable() public override bool checkUseable() Returns bool clearClothes() public void clearClothes() clearVisuals() public void clearVisuals() dropClothes() public void dropClothes() getComp(bool, byte) public byte getComp(bool mirror, byte pose) Parameters mirror bool pose byte Returns byte isObstructedByPlayers() Are any players standing on the mannequin? Used to prevent exploiting pose switches to push through objects. public bool isObstructedByPlayers() Returns bool rebuildState() public void rebuildState() setPose(byte) public void setPose(byte poseComp) Parameters poseComp byte updateClothes(ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[]) public void updateClothes(ushort newShirt, byte newShirtQuality, byte[] newShirtState, ushort newPants, byte newPantsQuality, byte[] newPantsState, ushort newHat, byte newHatQuality, byte[] newHatState, ushort newBackpack, byte newBackpackQuality, byte[] newBackpackState, ushort newVest, byte newVestQuality, byte[] newVestState, ushort newMask, byte newMaskQuality, byte[] newMaskState, ushort newGlasses, byte newGlassesQuality, byte[] newGlassesState) Parameters newShirt ushort newShirtQuality byte newShirtState byte[] newPants ushort newPantsQuality byte newPantsState byte[] newHat ushort newHatQuality byte newHatState byte[] newBackpack ushort newBackpackQuality byte newBackpackState byte[] newVest ushort newVestQuality byte newVestState byte[] newMask ushort newMaskQuality byte newMaskState byte[] newGlasses ushort newGlassesQuality byte newGlassesState byte[] updatePose() public void updatePose() updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateState(byte[]) public void updateState(byte[] state) Parameters state byte[] updateVisuals(int, int, int, int, int, int, int) public void updateVisuals(int newVisualShirt, int newVisualPants, int newVisualHat, int newVisualBackpack, int newVisualVest, int newVisualMask, int newVisualGlasses) Parameters newVisualShirt int newVisualPants int newVisualHat int newVisualBackpack int newVisualVest int newVisualMask int newVisualGlasses int use() public override void use()"
  },
  "api/SDG.Unturned.InteractableMannequin_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableMannequin_NetMethods.html",
    "title": "Class InteractableMannequin_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableMannequin_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableMannequin))] public static class InteractableMannequin_NetMethods Inheritance object InteractableMannequin_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePoseRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePoseRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePoseRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceivePoseRequest_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceivePoseRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePoseRequest_Write(NetPakWriter writer, byte poseComp) Parameters writer NetPakWriter poseComp byte ReceivePose_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePose\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePose_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePose_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceivePose\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePose_Write(NetPakWriter writer, byte poseComp) Parameters writer NetPakWriter poseComp byte ReceiveUpdateRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdateRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdateRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveUpdateRequest_Write(NetPakWriter, EMannequinUpdateMode) [NetInvokableGeneratedMethod(\"ReceiveUpdateRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdateRequest_Write(NetPakWriter writer, EMannequinUpdateMode updateMode) Parameters writer NetPakWriter updateMode EMannequinUpdateMode ReceiveUpdate_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdate\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdate_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUpdate_Write(NetPakWriter, byte[]) [NetInvokableGeneratedMethod(\"ReceiveUpdate\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdate_Write(NetPakWriter writer, byte[] state) Parameters writer NetPakWriter state byte[]"
  },
  "api/SDG.Unturned.InteractableObject.html": {
    "href": "api/SDG.Unturned.InteractableObject.html",
    "title": "Class InteractableObject | Unturned Analyse Doc",
    "keywords": "Class InteractableObject Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObject : InteractablePower Inheritance object Interactable InteractablePower InteractableObject Derived InteractableObjectBinaryState InteractableObjectDialogue InteractableObjectNPC InteractableObjectResource InteractableObjectTriggerableBase Inherited Members InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.checkHint(out EPlayerMessage, out string, out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObject() public InteractableObject() Fields _objectAsset protected ObjectAsset _objectAsset Field Value ObjectAsset Properties objectAsset public ObjectAsset objectAsset { get; } Property Value ObjectAsset Methods updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableObjectBinaryState.UsedChanged.html": {
    "href": "api/SDG.Unturned.InteractableObjectBinaryState.UsedChanged.html",
    "title": "Delegate InteractableObjectBinaryState.UsedChanged | Unturned Analyse Doc",
    "keywords": "Delegate InteractableObjectBinaryState.UsedChanged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InteractableObjectBinaryState.UsedChanged(InteractableObjectBinaryState sender) Parameters sender InteractableObjectBinaryState Constructors UsedChanged(object, IntPtr) public UsedChanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableObjectBinaryState, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableObjectBinaryState sender, AsyncCallback callback, object @object) Parameters sender InteractableObjectBinaryState callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(InteractableObjectBinaryState) public virtual void Invoke(InteractableObjectBinaryState sender) Parameters sender InteractableObjectBinaryState"
  },
  "api/SDG.Unturned.InteractableObjectBinaryState.html": {
    "href": "api/SDG.Unturned.InteractableObjectBinaryState.html",
    "title": "Class InteractableObjectBinaryState | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectBinaryState Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectBinaryState : InteractableObject Inheritance object Interactable InteractablePower InteractableObject InteractableObjectBinaryState Inherited Members InteractableObject._objectAsset InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectBinaryState() public InteractableObjectBinaryState() Fields modHookCounter Number of event hooks monitoring or controlling this. Used to allow client to control remote objects on server. public int modHookCounter Field Value int Properties isUsable public bool isUsable { get; } Property Value bool isUsed public bool isUsed { get; } Property Value bool Methods SetUsedFromClientOrServer(bool, EListenServerHostMode) public void SetUsedFromClientOrServer(bool newUsed, InteractableObjectBinaryStateEventHook.EListenServerHostMode listenServerHostMode) Parameters newUsed bool listenServerHostMode InteractableObjectBinaryStateEventHook.EListenServerHostMode checkCanReset(float) public bool checkCanReset(float multiplier) Parameters multiplier float Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkInteractable() public override bool checkInteractable() Returns bool checkUseable() public override bool checkUseable() Returns bool setUsedFromClientOrServer(bool) [Obsolete(\"Matches behavior from before addition of EListenServerHostMode.\")] public void setUsedFromClientOrServer(bool newUsed) Parameters newUsed bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateToggle(bool) public void updateToggle(bool newUsed) Parameters newUsed bool updateWired() protected override void updateWired() use() public override void use() Events onStateChanged Invoked after interaction changes state. public event InteractableObjectBinaryState.UsedChanged onStateChanged Event Type InteractableObjectBinaryState.UsedChanged onStateInitialized Invoked after state is first loaded, synced from server when entering relevancy, or reset. public event InteractableObjectBinaryState.UsedChanged onStateInitialized Event Type InteractableObjectBinaryState.UsedChanged"
  },
  "api/SDG.Unturned.InteractableObjectBinaryStateEventHook.EListenServerHostMode.html": {
    "href": "api/SDG.Unturned.InteractableObjectBinaryStateEventHook.EListenServerHostMode.html",
    "title": "Enum InteractableObjectBinaryStateEventHook.EListenServerHostMode | Unturned Analyse Doc",
    "keywords": "Enum InteractableObjectBinaryStateEventHook.EListenServerHostMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum InteractableObjectBinaryStateEventHook.EListenServerHostMode Fields OverrideState = 1 When a state change is requested in singleplayer it should be treated as if running as a dedicated server. RequestAsClient = 0 When a state change is requested in singleplayer it should be treated as if running as a client on a server. This is the default to match behavior from before this option was added."
  },
  "api/SDG.Unturned.InteractableObjectBinaryStateEventHook.html": {
    "href": "api/SDG.Unturned.InteractableObjectBinaryStateEventHook.html",
    "title": "Class InteractableObjectBinaryStateEventHook | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectBinaryStateEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to any GameObject with an interactable binary state in its parents. If players should not be allowed to interact with the object in the ordinary manner, add the Interactability_Remote flag to its asset to indicate only mod hooks should control it. public class InteractableObjectBinaryStateEventHook : MonoBehaviour Inheritance object InteractableObjectBinaryStateEventHook Constructors InteractableObjectBinaryStateEventHook() public InteractableObjectBinaryStateEventHook() Fields InvokeWhenInitialized Should the OnStateEnabled and OnStateDisabled events be invoked when the object is loaded, becomes relevant in multiplayer, and is reset? True is useful when visuals need to be kept in sync with the state, whereas false is useful for transient interactions. public bool InvokeWhenInitialized Field Value bool ListenServerHostMode Controls how state change requests are performed when running as both client and server (\"listen server\"). On the dedicated server, requesting a state change overrides the current state without processing NPC conditions, whereas when a client requests a state change NPC conditions apply. This option fixes the inconsistency in singleplayer of whether to treat as server or client. (public issue #4298) At the time of writing (2024-01-29) listen server only applies to singleplayer. public InteractableObjectBinaryStateEventHook.EListenServerHostMode ListenServerHostMode Field Value InteractableObjectBinaryStateEventHook.EListenServerHostMode OnStateDisabled Invoked when interactable object enters the Unused / Off / Disabled state. public UnityEvent OnStateDisabled Field Value UnityEvent OnStateEnabled Invoked when interactable object enters the Used / On / Enabled state. public UnityEvent OnStateEnabled Field Value UnityEvent Methods GotoDisabledState() Set state to Disabled if currently Enabled. On dedicated server this directly changes the state, but as client this will apply the usual conditions and rewards. public void GotoDisabledState() GotoEnabledState() Set state to Enabled if currently Disabled. On dedicated server this directly changes the state, but as client this will apply the usual conditions and rewards. public void GotoEnabledState() OnDestroy() protected void OnDestroy() Start() protected void Start() ToggleState() Toggle between the Enabled and Disabled states. On dedicated server this directly changes the state, but as client this will apply the usual conditions and rewards. public void ToggleState() onStateChanged(InteractableObjectBinaryState) protected void onStateChanged(InteractableObjectBinaryState sender) Parameters sender InteractableObjectBinaryState"
  },
  "api/SDG.Unturned.InteractableObjectDialogue.html": {
    "href": "api/SDG.Unturned.InteractableObjectDialogue.html",
    "title": "Class InteractableObjectDialogue | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectDialogue Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectDialogue : InteractableObject, IDialogueTarget Inheritance object Interactable InteractablePower InteractableObject InteractableObjectDialogue Implements IDialogueTarget Inherited Members InteractableObject._objectAsset InteractableObject.updateState(Asset, byte[]) InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectDialogue() public InteractableObjectDialogue() Methods FindStartingDialogueAsset() Called on server to find the start of conversation dialogue asset. public DialogueAsset FindStartingDialogueAsset() Returns DialogueAsset GetDialogueTargetDebugName() Used in error messages. public string GetDialogueTargetDebugName() Returns string GetDialogueTargetNameShownToPlayer(Player) Called on client to format in UI. public string GetDialogueTargetNameShownToPlayer(Player player) Parameters player Player Returns string GetDialogueTargetNetId() Get a net ID that can be used with GetDialogueTargetFromNetId to resolve IDialogueTarget in multiplayer. public NetId GetDialogueTargetNetId() Returns NetId GetDialogueTargetWorldPosition() Used to test whether player is within range. Ideally, this should be removed in the future in favor of the server resetting speaker when out of range. public Vector3 GetDialogueTargetWorldPosition() Returns Vector3 SetFaceOverride(byte?) public void SetFaceOverride(byte? faceOverride) Parameters faceOverride byte? SetIsTalkingWithLocalPlayer(bool) public void SetIsTalkingWithLocalPlayer(bool isTalkingWithLocalPlayer) Parameters isTalkingWithLocalPlayer bool ShouldServerApproveDialogueRequest(Player) Called on server to test whether object conditions are met. public bool ShouldServerApproveDialogueRequest(Player withPlayer) Parameters withPlayer Player Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool use() public override void use()"
  },
  "api/SDG.Unturned.InteractableObjectDropper.html": {
    "href": "api/SDG.Unturned.InteractableObjectDropper.html",
    "title": "Class InteractableObjectDropper | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectDropper Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectDropper : InteractableObjectTriggerableBase Inheritance object Interactable InteractablePower InteractableObject InteractableObjectTriggerableBase InteractableObjectDropper Inherited Members InteractableObject._objectAsset InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectDropper() public InteractableObjectDropper() Properties isUsable public bool isUsable { get; } Property Value bool Methods checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool drop() public void drop() updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use()"
  },
  "api/SDG.Unturned.InteractableObjectNPC.html": {
    "href": "api/SDG.Unturned.InteractableObjectNPC.html",
    "title": "Class InteractableObjectNPC | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectNPC Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectNPC : InteractableObject, IDialogueTarget Inheritance object Interactable InteractablePower InteractableObject InteractableObjectNPC Implements IDialogueTarget Inherited Members InteractableObject._objectAsset InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectNPC() public InteractableObjectNPC() Fields _npcAsset protected ObjectNPCAsset _npcAsset Field Value ObjectNPCAsset isLookingAtPlayer public bool isLookingAtPlayer Field Value bool Properties npcAsset public ObjectNPCAsset npcAsset { get; } Property Value ObjectNPCAsset Methods FindStartingDialogueAsset() Called on server to find the start of conversation dialogue asset. public DialogueAsset FindStartingDialogueAsset() Returns DialogueAsset GetDialogueTargetDebugName() Used in error messages. public string GetDialogueTargetDebugName() Returns string GetDialogueTargetFromNetId(NetId) public static IDialogueTarget GetDialogueTargetFromNetId(NetId netId) Parameters netId NetId Returns IDialogueTarget GetDialogueTargetNameShownToPlayer(Player) Called on client to format in UI. public string GetDialogueTargetNameShownToPlayer(Player player) Parameters player Player Returns string GetDialogueTargetNetId() Get a net ID that can be used with GetDialogueTargetFromNetId to resolve IDialogueTarget in multiplayer. public NetId GetDialogueTargetNetId() Returns NetId GetDialogueTargetWorldPosition() Used to test whether player is within range. Ideally, this should be removed in the future in favor of the server resetting speaker when out of range. public Vector3 GetDialogueTargetWorldPosition() Returns Vector3 GetNpcFromObjectNetId(NetId) [Obsolete(\"Replaced by GetDialogueTargetFromObjectNetId. Will be removed in a future version!\")] public static InteractableObjectNPC GetNpcFromObjectNetId(NetId netId) Parameters netId NetId Returns InteractableObjectNPC SetFaceOverride(byte?) public void SetFaceOverride(byte? faceOverride) Parameters faceOverride byte? SetIsTalkingWithLocalPlayer(bool) public void SetIsTalkingWithLocalPlayer(bool isTalkingWithLocalPlayer) Parameters isTalkingWithLocalPlayer bool ShouldServerApproveDialogueRequest(Player) Called on server to test whether object conditions are met. public bool ShouldServerApproveDialogueRequest(Player withPlayer) Parameters withPlayer Player Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use()"
  },
  "api/SDG.Unturned.InteractableObjectNote.html": {
    "href": "api/SDG.Unturned.InteractableObjectNote.html",
    "title": "Class InteractableObjectNote | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectNote Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectNote : InteractableObjectTriggerableBase Inheritance object Interactable InteractablePower InteractableObject InteractableObjectTriggerableBase InteractableObjectNote Inherited Members InteractableObject._objectAsset InteractableObject.updateState(Asset, byte[]) InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectNote() public InteractableObjectNote() Methods checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool use() public override void use()"
  },
  "api/SDG.Unturned.InteractableObjectQuest.html": {
    "href": "api/SDG.Unturned.InteractableObjectQuest.html",
    "title": "Class InteractableObjectQuest | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectQuest Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectQuest : InteractableObjectTriggerableBase Inheritance object Interactable InteractablePower InteractableObject InteractableObjectTriggerableBase InteractableObjectQuest Inherited Members InteractableObject._objectAsset InteractableObject.updateState(Asset, byte[]) InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectQuest() public InteractableObjectQuest() Methods checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool use() public override void use()"
  },
  "api/SDG.Unturned.InteractableObjectQuestEventHook.html": {
    "href": "api/SDG.Unturned.InteractableObjectQuestEventHook.html",
    "title": "Class InteractableObjectQuestEventHook | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectQuestEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to any GameObject with a Dropper, Note, or Quest interactable object in its parents. public class InteractableObjectQuestEventHook : MonoBehaviour Inheritance object InteractableObjectQuestEventHook Constructors InteractableObjectQuestEventHook() public InteractableObjectQuestEventHook() Fields OnUsed Invoked on authority when interactable object is used successfully. Only invoked on clients if ShouldReplicate is true. public UnityEvent OnUsed Field Value UnityEvent OverrideRelevantDistance Applied if greater than zero. Defaults to 128. public float OverrideRelevantDistance Field Value float Reliable If ShouldReplicate is enabled, should the RPC be called in reliable mode? Unreliable might not be received by clients. public bool Reliable Field Value bool ShouldReplicate If true, the server will replicate the OnUsed event to clients as well. public bool ShouldReplicate Field Value bool Methods OnDestroy() protected void OnDestroy() ReceiveUsedNotification(Transform) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveUsedNotification(Transform eventHookTransform) Parameters eventHookTransform Transform Start() protected void Start()"
  },
  "api/SDG.Unturned.InteractableObjectQuestEventHook_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableObjectQuestEventHook_NetMethods.html",
    "title": "Class InteractableObjectQuestEventHook_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectQuestEventHook_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableObjectQuestEventHook))] public static class InteractableObjectQuestEventHook_NetMethods Inheritance object InteractableObjectQuestEventHook_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveUsedNotification_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUsedNotification\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUsedNotification_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUsedNotification_Write(NetPakWriter, Transform) [NetInvokableGeneratedMethod(\"ReceiveUsedNotification\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUsedNotification_Write(NetPakWriter writer, Transform eventHookTransform) Parameters writer NetPakWriter eventHookTransform Transform"
  },
  "api/SDG.Unturned.InteractableObjectResource.html": {
    "href": "api/SDG.Unturned.InteractableObjectResource.html",
    "title": "Class InteractableObjectResource | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectResource Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectResource : InteractableObject Inheritance object Interactable InteractablePower InteractableObject InteractableObjectResource Inherited Members InteractableObject._objectAsset InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectResource() public InteractableObjectResource() Properties amount public ushort amount { get; } Property Value ushort capacity public ushort capacity { get; } Property Value ushort isRefillable public bool isRefillable { get; } Property Value bool isSiphonable public bool isSiphonable { get; } Property Value bool Methods checkCanReset(float) public bool checkCanReset(float multiplier) Parameters multiplier float Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool updateAmount(ushort) public void updateAmount(ushort newAmount) Parameters newAmount ushort updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableObjectRubble.html": {
    "href": "api/SDG.Unturned.InteractableObjectRubble.html",
    "title": "Class InteractableObjectRubble | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectRubble Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableObjectRubble : MonoBehaviour, IExplosionDamageable, IEquatable<IExplosionDamageable> Inheritance object InteractableObjectRubble Implements IExplosionDamageable IEquatable<IExplosionDamageable> Constructors InteractableObjectRubble() public InteractableObjectRubble() Properties IsEligibleForExplosionDamage Used to exclude dead entities from further evaluation. public bool IsEligibleForExplosionDamage { get; } Property Value bool asset public ObjectAsset asset { get; protected set; } Property Value ObjectAsset Methods ApplyExplosionDamage(in ExplosionParameters, ref ExplosionDamageParameters) public void ApplyExplosionDamage(in ExplosionParameters explosionParameters, ref ExplosionDamageParameters damageParameters) Parameters explosionParameters ExplosionParameters damageParameters ExplosionDamageParameters Equals(IExplosionDamageable) public bool Equals(IExplosionDamageable obj) Parameters obj IExplosionDamageable Returns bool GetClosestPointToExplosion(Vector3) Used to sort damage from nearest to furthest. public Vector3 GetClosestPointToExplosion(Vector3 explosionCenter) Parameters explosionCenter Vector3 Returns Vector3 IsSectionIndexValid(byte) public bool IsSectionIndexValid(byte sectionIndex) Parameters sectionIndex byte Returns bool TryGetRandomAliveSectionIndex(out byte) public bool TryGetRandomAliveSectionIndex(out byte sectionIndex) Parameters sectionIndex byte Returns bool askDamage(byte, ushort) public void askDamage(byte section, ushort amount) Parameters section byte amount ushort checkCanReset(float) public byte checkCanReset(float multiplier) Parameters multiplier float Returns byte getSection(byte) public Transform getSection(byte section) Parameters section byte Returns Transform getSection(Transform) public byte getSection(Transform hitTransform) Parameters hitTransform Transform Returns byte getSectionCount() public byte getSectionCount() Returns byte getSectionInfo(byte) public RubbleInfo getSectionInfo(byte section) Parameters section byte Returns RubbleInfo isAllAlive() public bool isAllAlive() Returns bool isAllDead() public bool isAllDead() Returns bool isSectionDead(byte) public bool isSectionDead(byte section) Parameters section byte Returns bool updateRubble(byte, bool, bool, Vector3) public void updateRubble(byte section, bool isAlive, bool playEffect, Vector3 ragdoll) Parameters section byte isAlive bool playEffect bool ragdoll Vector3 updateState(Asset, byte[]) public void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableObjectTriggerableBase.html": {
    "href": "api/SDG.Unturned.InteractableObjectTriggerableBase.html",
    "title": "Class InteractableObjectTriggerableBase | Unturned Analyse Doc",
    "keywords": "Class InteractableObjectTriggerableBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll Nelson 2024-02-06: when looking into resolving public issue #3703 I figured since there is a common behavior between InteractableObjectQuest, InteractableObjectNote, and InteractableObjectDropper (in that they all request the server to do X we may as well support a \"mod hook\" that works with all three. public abstract class InteractableObjectTriggerableBase : InteractableObject Inheritance object Interactable InteractablePower InteractableObject InteractableObjectTriggerableBase Derived InteractableObjectDropper InteractableObjectNote InteractableObjectQuest Inherited Members InteractableObject._objectAsset InteractableObject.updateState(Asset, byte[]) InteractableObject.objectAsset InteractablePower._isWired InteractablePower.updateWired() InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.checkHint(out EPlayerMessage, out string, out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableObjectTriggerableBase() protected InteractableObjectTriggerableBase()"
  },
  "api/SDG.Unturned.InteractableOil.html": {
    "href": "api/SDG.Unturned.InteractableOil.html",
    "title": "Class InteractableOil | Unturned Analyse Doc",
    "keywords": "Class InteractableOil Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableOil : InteractablePower Inheritance object Interactable InteractablePower InteractableOil Inherited Members InteractablePower._isWired InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableOil() public InteractableOil() Properties capacity public ushort capacity { get; protected set; } Property Value ushort fuel public ushort fuel { get; } Property Value ushort isRefillable public bool isRefillable { get; } Property Value bool isSiphonable public bool isSiphonable { get; } Property Value bool Methods ReceiveFuel(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveFuel(ushort newFuel) Parameters newFuel ushort askBurn(ushort) public void askBurn(ushort amount) Parameters amount ushort askFill(ushort) public void askFill(ushort amount) Parameters amount ushort checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool tellFuel(ushort) public void tellFuel(ushort newFuel) Parameters newFuel ushort updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateWired() protected override void updateWired()"
  },
  "api/SDG.Unturned.InteractableOil_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableOil_NetMethods.html",
    "title": "Class InteractableOil_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableOil_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableOil))] public static class InteractableOil_NetMethods Inheritance object InteractableOil_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveFuel_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveFuel\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveFuel_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFuel_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveFuel\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveFuel_Write(NetPakWriter writer, ushort newFuel) Parameters writer NetPakWriter newFuel ushort"
  },
  "api/SDG.Unturned.InteractableOven.html": {
    "href": "api/SDG.Unturned.InteractableOven.html",
    "title": "Class InteractableOven | Unturned Analyse Doc",
    "keywords": "Class InteractableOven Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableOven : InteractablePower Inheritance object Interactable InteractablePower InteractableOven Inherited Members InteractablePower._isWired InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableOven() public InteractableOven() Properties isLit public bool isLit { get; } Property Value bool Methods ClientToggle() public void ClientToggle() ReceiveLit(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveLit(bool newLit) Parameters newLit bool ReceiveToggleRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveToggleRequest(in ServerInvocationContext context, bool desiredLit) Parameters context ServerInvocationContext desiredLit bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool updateLit(bool) public void updateLit(bool newLit) Parameters newLit bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateWired() protected override void updateWired() use() public override void use()"
  },
  "api/SDG.Unturned.InteractableOven_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableOven_NetMethods.html",
    "title": "Class InteractableOven_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableOven_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableOven))] public static class InteractableOven_NetMethods Inheritance object InteractableOven_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveLit_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLit\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLit_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLit_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveLit\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLit_Write(NetPakWriter writer, bool newLit) Parameters writer NetPakWriter newLit bool ReceiveToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleRequest_Write(NetPakWriter writer, bool desiredLit) Parameters writer NetPakWriter desiredLit bool"
  },
  "api/SDG.Unturned.InteractableOxygenator.html": {
    "href": "api/SDG.Unturned.InteractableOxygenator.html",
    "title": "Class InteractableOxygenator | Unturned Analyse Doc",
    "keywords": "Class InteractableOxygenator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableOxygenator : InteractablePower Inheritance object Interactable InteractablePower InteractableOxygenator Inherited Members InteractablePower._isWired InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableOxygenator() public InteractableOxygenator() Properties isPowered public bool isPowered { get; } Property Value bool Methods ClientToggle() public void ClientToggle() ReceivePowered(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceivePowered(bool newPowered) Parameters newPowered bool ReceiveToggleRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveToggleRequest(in ServerInvocationContext context, bool desiredPowered) Parameters context ServerInvocationContext desiredPowered bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool updatePowered(bool) public void updatePowered(bool newPowered) Parameters newPowered bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateWired() protected override void updateWired() use() public override void use()"
  },
  "api/SDG.Unturned.InteractableOxygenator_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableOxygenator_NetMethods.html",
    "title": "Class InteractableOxygenator_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableOxygenator_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableOxygenator))] public static class InteractableOxygenator_NetMethods Inheritance object InteractableOxygenator_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePowered_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePowered_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePowered_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePowered_Write(NetPakWriter writer, bool newPowered) Parameters writer NetPakWriter newPowered bool ReceiveToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleRequest_Write(NetPakWriter writer, bool desiredPowered) Parameters writer NetPakWriter desiredPowered bool"
  },
  "api/SDG.Unturned.InteractablePower.html": {
    "href": "api/SDG.Unturned.InteractablePower.html",
    "title": "Class InteractablePower | Unturned Analyse Doc",
    "keywords": "Class InteractablePower Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractablePower : Interactable Inheritance object Interactable InteractablePower Derived InteractableClock InteractableObject InteractableOil InteractableOven InteractableOxygenator InteractableSafezone InteractableSpot Inherited Members Interactable.updateState(Asset, byte[]) Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.checkHint(out EPlayerMessage, out string, out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractablePower() public InteractablePower() Fields _isWired protected bool _isWired Field Value bool Properties isWired public bool isWired { get; } Property Value bool Methods updateWired() protected virtual void updateWired() updateWired(bool) public void updateWired(bool newWired) Parameters newWired bool"
  },
  "api/SDG.Unturned.InteractableRainBarrel.html": {
    "href": "api/SDG.Unturned.InteractableRainBarrel.html",
    "title": "Class InteractableRainBarrel | Unturned Analyse Doc",
    "keywords": "Class InteractableRainBarrel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableRainBarrel : Interactable Inheritance object Interactable InteractableRainBarrel Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableRainBarrel() public InteractableRainBarrel() Properties isFull public bool isFull { get; } Property Value bool Methods ReceiveFull(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveFull(bool newFull) Parameters newFull bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool updateFull(bool) public void updateFull(bool newFull) Parameters newFull bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableRainBarrel_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableRainBarrel_NetMethods.html",
    "title": "Class InteractableRainBarrel_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableRainBarrel_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableRainBarrel))] public static class InteractableRainBarrel_NetMethods Inheritance object InteractableRainBarrel_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveFull_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveFull\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveFull_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFull_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveFull\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveFull_Write(NetPakWriter writer, bool newFull) Parameters writer NetPakWriter newFull bool"
  },
  "api/SDG.Unturned.InteractableSafezone.html": {
    "href": "api/SDG.Unturned.InteractableSafezone.html",
    "title": "Class InteractableSafezone | Unturned Analyse Doc",
    "keywords": "Class InteractableSafezone Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableSafezone : InteractablePower Inheritance object Interactable InteractablePower InteractableSafezone Inherited Members InteractablePower._isWired InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableSafezone() public InteractableSafezone() Properties isPowered public bool isPowered { get; } Property Value bool Methods ClientToggle() public void ClientToggle() ReceivePowered(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceivePowered(bool newPowered) Parameters newPowered bool ReceiveToggleRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveToggleRequest(in ServerInvocationContext context, bool desiredPowered) Parameters context ServerInvocationContext desiredPowered bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool updatePowered(bool) public void updatePowered(bool newPowered) Parameters newPowered bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateWired() protected override void updateWired() use() public override void use()"
  },
  "api/SDG.Unturned.InteractableSafezone_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableSafezone_NetMethods.html",
    "title": "Class InteractableSafezone_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableSafezone_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableSafezone))] public static class InteractableSafezone_NetMethods Inheritance object InteractableSafezone_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePowered_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePowered_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePowered_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePowered_Write(NetPakWriter writer, bool newPowered) Parameters writer NetPakWriter newPowered bool ReceiveToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleRequest_Write(NetPakWriter writer, bool desiredPowered) Parameters writer NetPakWriter desiredPowered bool"
  },
  "api/SDG.Unturned.InteractableSentry.html": {
    "href": "api/SDG.Unturned.InteractableSentry.html",
    "title": "Class InteractableSentry | Unturned Analyse Doc",
    "keywords": "Class InteractableSentry Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableSentry : InteractableStorage, IManualOnDestroy Inheritance object Interactable InteractableStorage InteractableSentry Implements IManualOnDestroy Inherited Members InteractableStorage.displayModel InteractableStorage.displayAsset InteractableStorage.displayItem InteractableStorage.displaySkin InteractableStorage.displayMythic InteractableStorage.displayTags InteractableStorage.displayDynamicProps InteractableStorage.rot_comp InteractableStorage.rot_x InteractableStorage.rot_y InteractableStorage.rot_z InteractableStorage.isOpen InteractableStorage.opener InteractableStorage.despawnWhenDestroyed InteractableStorage.shouldCloseWhenOutsideRange InteractableStorage.onStateRebuilt InteractableStorage.getDisplayStatTrackerValue(out EStatTrackerType, out int) InteractableStorage.rebuildState() InteractableStorage.setDisplay(ushort, byte, byte[], ushort, ushort, string, string) InteractableStorage.getRotation(byte, byte, byte) InteractableStorage.applyRotation(byte) InteractableStorage.setRotation(byte) InteractableStorage.checkRot(CSteamID, CSteamID) InteractableStorage.checkStore(CSteamID, CSteamID) InteractableStorage.checkUseable() InteractableStorage.use() InteractableStorage.checkHint(out EPlayerMessage, out string, out Color) InteractableStorage.ManualOnDestroy() InteractableStorage.ClientInteract(bool) InteractableStorage.ReceiveInteractRequest(in ServerInvocationContext, bool) InteractableStorage.ReceiveDisplay(ushort, byte, byte[], ushort, ushort, string, string) InteractableStorage.ClientSetDisplayRotation(byte) InteractableStorage.ReceiveRotDisplay(byte) InteractableStorage.ReceiveRotDisplayRequest(in ServerInvocationContext, byte) InteractableStorage.owner InteractableStorage.group InteractableStorage.items InteractableStorage.isDisplay Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableSentry() public InteractableSentry() Fields power public InteractablePower power Field Value InteractablePower Properties isPowered public bool isPowered { get; } Property Value bool sentryAsset public ItemSentryAsset sentryAsset { get; } Property Value ItemSentryAsset sentryMode public ESentryMode sentryMode { get; } Property Value ESentryMode Methods ReceiveAlert(byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveAlert(byte yaw, byte pitch) Parameters yaw byte pitch byte ReceiveShoot() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveShoot() alert(float, float) public void alert(float newYaw, float newPitch) Parameters newYaw float newPitch float refreshDisplay() public override void refreshDisplay() shoot() public void shoot() updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableSentry_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableSentry_NetMethods.html",
    "title": "Class InteractableSentry_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableSentry_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableSentry))] public static class InteractableSentry_NetMethods Inheritance object InteractableSentry_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAlert_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAlert\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAlert_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAlert_Write(NetPakWriter, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveAlert\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAlert_Write(NetPakWriter writer, byte yaw, byte pitch) Parameters writer NetPakWriter yaw byte pitch byte ReceiveShoot_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveShoot\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveShoot_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveShoot_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveShoot\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveShoot_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.InteractableSign.html": {
    "href": "api/SDG.Unturned.InteractableSign.html",
    "title": "Class InteractableSign | Unturned Analyse Doc",
    "keywords": "Class InteractableSign Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableSign : Interactable Inheritance object Interactable InteractableSign Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableSign() public InteractableSign() Properties DisplayText If profanity filter is enabled this filtered text is displayed on the 3D sign and in the note UI. Null or empty on the dedicated server. public string DisplayText { get; } Property Value string group public CSteamID group { get; } Property Value CSteamID hasMesh public bool hasMesh { get; } Property Value bool owner public CSteamID owner { get; } Property Value CSteamID text Actual unfiltered text. Kept because plugins might be referencing, and game should use directly once state byte array is refactored. public string text { get; } Property Value string Methods ClientSetText(string) public void ClientSetText(string newText) Parameters newText string ReceiveChangeText(string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveChangeText(string newText) Parameters newText string ReceiveChangeTextRequest(in ServerInvocationContext, string) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveChangeTextRequest(in ServerInvocationContext context, string newText) Parameters context ServerInvocationContext newText string checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUpdate(CSteamID, CSteamID) public bool checkUpdate(CSteamID enemyPlayer, CSteamID enemyGroup) Parameters enemyPlayer CSteamID enemyGroup CSteamID Returns bool checkUseable() public override bool checkUseable() Returns bool isTextValid(string) public bool isTextValid(string text) Parameters text string Returns bool trimText(string) public string trimText(string text) Parameters text string Returns string updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateText(string) public void updateText(string newText) Parameters newText string use() public override void use()"
  },
  "api/SDG.Unturned.InteractableSign_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableSign_NetMethods.html",
    "title": "Class InteractableSign_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableSign_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableSign))] public static class InteractableSign_NetMethods Inheritance object InteractableSign_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveChangeTextRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChangeTextRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChangeTextRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveChangeTextRequest_Write(NetPakWriter, string) [NetInvokableGeneratedMethod(\"ReceiveChangeTextRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChangeTextRequest_Write(NetPakWriter writer, string newText) Parameters writer NetPakWriter newText string ReceiveChangeText_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChangeText\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChangeText_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveChangeText_Write(NetPakWriter, string) [NetInvokableGeneratedMethod(\"ReceiveChangeText\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChangeText_Write(NetPakWriter writer, string newText) Parameters writer NetPakWriter newText string"
  },
  "api/SDG.Unturned.InteractableSpot.html": {
    "href": "api/SDG.Unturned.InteractableSpot.html",
    "title": "Class InteractableSpot | Unturned Analyse Doc",
    "keywords": "Class InteractableSpot Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableSpot : InteractablePower Inheritance object Interactable InteractablePower InteractableSpot Inherited Members InteractablePower._isWired InteractablePower.updateWired(bool) InteractablePower.isWired Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableSpot() public InteractableSpot() Properties isPowered public bool isPowered { get; } Property Value bool Methods ClientToggle() public void ClientToggle() ReceivePowered(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceivePowered(bool newPowered) Parameters newPowered bool ReceiveToggleRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveToggleRequest(in ServerInvocationContext context, bool desiredPowered) Parameters context ServerInvocationContext desiredPowered bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool updatePowered(bool) public void updatePowered(bool newPowered) Parameters newPowered bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateWired() protected override void updateWired() use() public override void use()"
  },
  "api/SDG.Unturned.InteractableSpot_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableSpot_NetMethods.html",
    "title": "Class InteractableSpot_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableSpot_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableSpot))] public static class InteractableSpot_NetMethods Inheritance object InteractableSpot_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePowered_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePowered_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePowered_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceivePowered\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePowered_Write(NetPakWriter writer, bool newPowered) Parameters writer NetPakWriter newPowered bool ReceiveToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleRequest_Write(NetPakWriter writer, bool desiredPowered) Parameters writer NetPakWriter desiredPowered bool"
  },
  "api/SDG.Unturned.InteractableStereo.html": {
    "href": "api/SDG.Unturned.InteractableStereo.html",
    "title": "Class InteractableStereo | Unturned Analyse Doc",
    "keywords": "Class InteractableStereo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableStereo : Interactable Inheritance object Interactable InteractableStereo Inherited Members Interactable.checkInteractable() Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableStereo() public InteractableStereo() Fields _volume protected float _volume Field Value float audioSource public AudioSource audioSource Field Value AudioSource track public AssetReference<StereoSongAsset> track Field Value AssetReference<StereoSongAsset> Properties compressedVolume public byte compressedVolume { get; set; } Property Value byte volume public float volume { get; set; } Property Value float Methods ClientSetTrack(Guid) public void ClientSetTrack(Guid newTrack) Parameters newTrack Guid ClientSetVolume(byte) public void ClientSetVolume(byte newVolume) Parameters newVolume byte ReceiveChangeVolume(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveChangeVolume(byte newVolume) Parameters newVolume byte ReceiveChangeVolumeRequest(in ServerInvocationContext, byte) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 8)] public void ReceiveChangeVolumeRequest(in ServerInvocationContext context, byte newVolume) Parameters context ServerInvocationContext newVolume byte ReceiveTrack(Guid) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveTrack(Guid newTrack) Parameters newTrack Guid ReceiveTrackRequest(in ServerInvocationContext, Guid) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveTrackRequest(in ServerInvocationContext context, Guid newTrack) Parameters context ServerInvocationContext newTrack Guid checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] updateTrack(Guid) public void updateTrack(Guid newTrack) Parameters newTrack Guid use() public override void use()"
  },
  "api/SDG.Unturned.InteractableStereo_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableStereo_NetMethods.html",
    "title": "Class InteractableStereo_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableStereo_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableStereo))] public static class InteractableStereo_NetMethods Inheritance object InteractableStereo_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveChangeVolumeRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChangeVolumeRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChangeVolumeRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveChangeVolumeRequest_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveChangeVolumeRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChangeVolumeRequest_Write(NetPakWriter writer, byte newVolume) Parameters writer NetPakWriter newVolume byte ReceiveChangeVolume_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChangeVolume\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChangeVolume_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveChangeVolume_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveChangeVolume\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChangeVolume_Write(NetPakWriter writer, byte newVolume) Parameters writer NetPakWriter newVolume byte ReceiveTrackRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTrackRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTrackRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTrackRequest_Write(NetPakWriter, Guid) [NetInvokableGeneratedMethod(\"ReceiveTrackRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTrackRequest_Write(NetPakWriter writer, Guid newTrack) Parameters writer NetPakWriter newTrack Guid ReceiveTrack_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTrack\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTrack_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTrack_Write(NetPakWriter, Guid) [NetInvokableGeneratedMethod(\"ReceiveTrack\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTrack_Write(NetPakWriter writer, Guid newTrack) Parameters writer NetPakWriter newTrack Guid"
  },
  "api/SDG.Unturned.InteractableStorage.RebuiltStateHandler.html": {
    "href": "api/SDG.Unturned.InteractableStorage.RebuiltStateHandler.html",
    "title": "Delegate InteractableStorage.RebuiltStateHandler | Unturned Analyse Doc",
    "keywords": "Delegate InteractableStorage.RebuiltStateHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InteractableStorage.RebuiltStateHandler(InteractableStorage storage, byte[] state, int size) Parameters storage InteractableStorage state byte[] size int Constructors RebuiltStateHandler(object, IntPtr) public RebuiltStateHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableStorage, byte[], int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableStorage storage, byte[] state, int size, AsyncCallback callback, object @object) Parameters storage InteractableStorage state byte[] size int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(InteractableStorage, byte[], int) public virtual void Invoke(InteractableStorage storage, byte[] state, int size) Parameters storage InteractableStorage state byte[] size int"
  },
  "api/SDG.Unturned.InteractableStorage.html": {
    "href": "api/SDG.Unturned.InteractableStorage.html",
    "title": "Class InteractableStorage | Unturned Analyse Doc",
    "keywords": "Class InteractableStorage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableStorage : Interactable, IManualOnDestroy Inheritance object Interactable InteractableStorage Implements IManualOnDestroy Derived InteractableSentry Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableStorage() public InteractableStorage() Fields despawnWhenDestroyed public bool despawnWhenDestroyed Field Value bool displayAsset protected ItemAsset displayAsset Field Value ItemAsset displayDynamicProps public string displayDynamicProps Field Value string displayItem public Item displayItem Field Value Item displayModel protected Transform displayModel Field Value Transform displayMythic public ushort displayMythic Field Value ushort displaySkin public ushort displaySkin Field Value ushort displayTags public string displayTags Field Value string isOpen public bool isOpen Field Value bool onStateRebuilt public InteractableStorage.RebuiltStateHandler onStateRebuilt Field Value InteractableStorage.RebuiltStateHandler opener public Player opener Field Value Player rot_comp public byte rot_comp Field Value byte rot_x public byte rot_x Field Value byte rot_y public byte rot_y Field Value byte rot_z public byte rot_z Field Value byte shouldCloseWhenOutsideRange If player gets too far away from this storage while using it, should we close out? False by default for trunk storage because player is inside vehicle. Plugins needed to be able to set this to false for \"virtual storage\" plugins, so we default to false and set to true if asset enables it. public bool shouldCloseWhenOutsideRange Field Value bool Properties group public CSteamID group { get; } Property Value CSteamID isDisplay public bool isDisplay { get; } Property Value bool items public Items items { get; } Property Value Items owner public CSteamID owner { get; } Property Value CSteamID Methods ClientInteract(bool) public void ClientInteract(bool quickGrab) Parameters quickGrab bool ClientSetDisplayRotation(byte) public void ClientSetDisplayRotation(byte rotComp) Parameters rotComp byte ManualOnDestroy() public void ManualOnDestroy() ReceiveDisplay(ushort, byte, byte[], ushort, ushort, string, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveDisplay(ushort id, byte quality, byte[] state, ushort skin, ushort mythic, string tags, string dynamicProps) Parameters id ushort quality byte state byte[] skin ushort mythic ushort tags string dynamicProps string ReceiveInteractRequest(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 4)] public void ReceiveInteractRequest(in ServerInvocationContext context, bool quickGrab) Parameters context ServerInvocationContext quickGrab bool ReceiveRotDisplay(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveRotDisplay(byte rotComp) Parameters rotComp byte ReceiveRotDisplayRequest(in ServerInvocationContext, byte) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2)] public void ReceiveRotDisplayRequest(in ServerInvocationContext context, byte rotComp) Parameters context ServerInvocationContext rotComp byte applyRotation(byte) public void applyRotation(byte rotComp) Parameters rotComp byte checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkRot(CSteamID, CSteamID) public bool checkRot(CSteamID enemyPlayer, CSteamID enemyGroup) Parameters enemyPlayer CSteamID enemyGroup CSteamID Returns bool checkStore(CSteamID, CSteamID) public bool checkStore(CSteamID enemyPlayer, CSteamID enemyGroup) Parameters enemyPlayer CSteamID enemyGroup CSteamID Returns bool checkUseable() public override bool checkUseable() Returns bool getDisplayStatTrackerValue(out EStatTrackerType, out int) protected bool getDisplayStatTrackerValue(out EStatTrackerType type, out int kills) Parameters type EStatTrackerType kills int Returns bool getRotation(byte, byte, byte) public byte getRotation(byte rot_x, byte rot_y, byte rot_z) Parameters rot_x byte rot_y byte rot_z byte Returns byte rebuildState() public void rebuildState() refreshDisplay() public virtual void refreshDisplay() setDisplay(ushort, byte, byte[], ushort, ushort, string, string) public void setDisplay(ushort id, byte quality, byte[] state, ushort skin, ushort mythic, string tags, string dynamicProps) Parameters id ushort quality byte state byte[] skin ushort mythic ushort tags string dynamicProps string setRotation(byte) public void setRotation(byte rotComp) Parameters rotComp byte updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[] use() public override void use()"
  },
  "api/SDG.Unturned.InteractableStorage_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableStorage_NetMethods.html",
    "title": "Class InteractableStorage_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableStorage_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableStorage))] public static class InteractableStorage_NetMethods Inheritance object InteractableStorage_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveDisplay_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDisplay\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDisplay_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDisplay_Write(NetPakWriter, ushort, byte, byte[], ushort, ushort, string, string) [NetInvokableGeneratedMethod(\"ReceiveDisplay\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDisplay_Write(NetPakWriter writer, ushort id, byte quality, byte[] state, ushort skin, ushort mythic, string tags, string dynamicProps) Parameters writer NetPakWriter id ushort quality byte state byte[] skin ushort mythic ushort tags string dynamicProps string ReceiveInteractRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveInteractRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveInteractRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveInteractRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveInteractRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveInteractRequest_Write(NetPakWriter writer, bool quickGrab) Parameters writer NetPakWriter quickGrab bool ReceiveRotDisplayRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRotDisplayRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRotDisplayRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveRotDisplayRequest_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveRotDisplayRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRotDisplayRequest_Write(NetPakWriter writer, byte rotComp) Parameters writer NetPakWriter rotComp byte ReceiveRotDisplay_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRotDisplay\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRotDisplay_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRotDisplay_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveRotDisplay\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRotDisplay_Write(NetPakWriter writer, byte rotComp) Parameters writer NetPakWriter rotComp byte"
  },
  "api/SDG.Unturned.InteractableTank.html": {
    "href": "api/SDG.Unturned.InteractableTank.html",
    "title": "Class InteractableTank | Unturned Analyse Doc",
    "keywords": "Class InteractableTank Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableTank : Interactable Inheritance object Interactable InteractableTank Inherited Members Interactable.checkInteractable() Interactable.checkHighlight(out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableTank() public InteractableTank() Properties amount public ushort amount { get; } Property Value ushort capacity public ushort capacity { get; } Property Value ushort isRefillable public bool isRefillable { get; } Property Value bool isSiphonable public bool isSiphonable { get; } Property Value bool source public ETankSource source { get; } Property Value ETankSource Methods ReceiveAmount(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveAmount(ushort newAmount) Parameters newAmount ushort ServerSetAmount(ushort) public void ServerSetAmount(ushort newAmount) Parameters newAmount ushort checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool updateAmount(ushort) public void updateAmount(ushort newAmount) Parameters newAmount ushort updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableTank_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableTank_NetMethods.html",
    "title": "Class InteractableTank_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableTank_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableTank))] public static class InteractableTank_NetMethods Inheritance object InteractableTank_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAmount_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAmount\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAmount_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAmount_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveAmount\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAmount_Write(NetPakWriter writer, ushort newAmount) Parameters writer NetPakWriter newAmount ushort"
  },
  "api/SDG.Unturned.InteractableTrap.html": {
    "href": "api/SDG.Unturned.InteractableTrap.html",
    "title": "Class InteractableTrap | Unturned Analyse Doc",
    "keywords": "Class InteractableTrap Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableTrap : Interactable Inheritance object Interactable InteractableTrap Inherited Members Interactable.checkUseable() Interactable.checkHighlight(out Color) Interactable.checkHint(out EPlayerMessage, out string, out Color) Interactable.use() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableTrap() public InteractableTrap() Fields trapDetonationEffectGuid public Guid trapDetonationEffectGuid Field Value Guid Methods checkInteractable() public override bool checkInteractable() Returns bool updateState(Asset, byte[]) public override void updateState(Asset asset, byte[] state) Parameters asset Asset state byte[]"
  },
  "api/SDG.Unturned.InteractableTrapDamageTires.html": {
    "href": "api/SDG.Unturned.InteractableTrapDamageTires.html",
    "title": "Class InteractableTrapDamageTires | Unturned Analyse Doc",
    "keywords": "Class InteractableTrapDamageTires Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableTrapDamageTires : MonoBehaviour Inheritance object InteractableTrapDamageTires Constructors InteractableTrapDamageTires() public InteractableTrapDamageTires()"
  },
  "api/SDG.Unturned.InteractableVehicle.html": {
    "href": "api/SDG.Unturned.InteractableVehicle.html",
    "title": "Class InteractableVehicle | Unturned Analyse Doc",
    "keywords": "Class InteractableVehicle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InteractableVehicle : Interactable, IExplosionDamageable, IEquatable<IExplosionDamageable> Inheritance object Interactable InteractableVehicle Implements IExplosionDamageable IEquatable<IExplosionDamageable> Inherited Members Interactable.updateState(Asset, byte[]) Interactable.checkInteractable() Interactable.GetNetId() Interactable.IsChildOfVehicle Interactable.isPlant Constructors InteractableVehicle() public InteractableVehicle() Fields batteryCharge Nelson 2024-06-24: When first implementing batteries there was only the vanilla battery item, and it was fine to delete it when the charge reached zero. This may not be desirable, however, so zero now represents no battery item is present, and one represents the battery is completely drained but still there. public ushort batteryCharge Field Value ushort defaultCenterOfMass public Vector3 defaultCenterOfMass Field Value Vector3 effectSlots protected Transform[] effectSlots Field Value Transform[] effectSlotsRoot protected Transform effectSlotsRoot Field Value Transform effectSystems protected MythicalEffectController[] effectSystems Field Value MythicalEffectController[] eventHook protected VehicleEventHook eventHook Field Value VehicleEventHook fuel public ushort fuel Field Value ushort hasDefaultCenterOfMass public bool hasDefaultCenterOfMass Field Value bool health public ushort health Field Value ushort id Asset ID. Essentially obsolete at this point. public ushort id Field Value ushort instanceID Precursor to Net ID. Should eventually become obsolete. public uint instanceID Field Value uint isBlimpFloating public bool isBlimpFloating Field Value bool isExploded public bool isExploded Field Value bool isHooked public bool isHooked Field Value bool isUpdated [Obsolete] public bool isUpdated Field Value bool lastSeat public float lastSeat Field Value float mythicID public ushort mythicID Field Value ushort roadIndex Only used by trains. Constrains the train to this path. public ushort roadIndex Field Value ushort roadPosition public float roadPosition Field Value float skinAsset protected SkinAsset skinAsset Field Value SkinAsset skinID public ushort skinID Field Value ushort trunkItems public Items trunkItems Field Value Items updates [Obsolete(\"Replaced by MarkForReplicationUpdate. Will be removed in a future release.\")] public List<VehicleStateUpdate> updates Field Value List<VehicleStateUpdate> Properties AnimatedEngineRpm Animated toward ReplicatedEngineRpm. public float AnimatedEngineRpm { get; } Property Value float AnimatedForwardVelocity Animated toward ReplicatedForwardVelocity. public float AnimatedForwardVelocity { get; } Property Value float AnimatedSteeringAngle Animated towards replicated steering angle. Used for steering wheel and front steering column. Non-simulating wheels (e.g., car driven by remote client) use this as steering angle multiplied by their per-wheel SDG.Unturned.VehicleWheelConfiguration.steeringAngleMultiplier. public float AnimatedSteeringAngle { get; } Property Value float AnimatedVelocityInput Animated toward ReplicatedVelocityInput. public float AnimatedVelocityInput { get; } Property Value float ContainsBatteryItem Doesn't imply the vehicle uses batteries, only that it contains a (potentially uncharged) battery item. public bool ContainsBatteryItem { get; } Property Value bool GearNumber -1 is reverse. 0 is neutral. +1 is index 0 in gear ratios list. public int GearNumber { get; } Property Value int HasBatteryWithCharge Doesn't imply the vehicle uses batteries, only that it contains a battery item with some charge left. public bool HasBatteryWithCharge { get; } Property Value bool IsEligibleForExplosionDamage Used to exclude dead entities from further evaluation. public bool IsEligibleForExplosionDamage { get; } Property Value bool PaintColor public Color32 PaintColor { get; } Property Value Color32 ReplicatedEngineRpm Engine RPM replicated by current simulation owner. public float ReplicatedEngineRpm { get; } Property Value float ReplicatedForwardVelocity Rigidbody velocity along forward axis, replicated by current simulation owner. public float ReplicatedForwardVelocity { get; } Property Value float ReplicatedSpeed Magnitude of rigidbody velocity, replicated by current simulation owner. public float ReplicatedSpeed { get; } Property Value float ReplicatedSteeringInput [-1.0, 1.0] Available on both client and server. public float ReplicatedSteeringInput { get; } Property Value float ReplicatedVelocityInput Replicated by current simulation owner. Target velocity used, e.g., for helicopter engine speed. public float ReplicatedVelocityInput { get; } Property Value float WasNaturallySpawned Nelson 2024-11-13: Adding this primarily to indicate whether a vehicle was spawned by the level versus placed by a player or bought from a vendor. This way if the number of \"naturally\"-spawned vehicles is below a certain threshold the level can spawn more. (e.g., a server where players have hoarded a bunch of vendor-purchased vehicles and no default vehicles are left for new players.) Only available on the server. Defaults to true for old saves to prevent suddenly spawning a bunch more vehicles. public bool WasNaturallySpawned { get; set; } Property Value bool anySeatsOccupied Do any of the passenger seats have a player? public bool anySeatsOccupied { get; } Property Value bool asset public VehicleAsset asset { get; } Property Value VehicleAsset canBeDamaged public bool canBeDamaged { get; } Property Value bool canTurnOnLights public bool canTurnOnLights { get; } Property Value bool canUseHorn public bool canUseHorn { get; } Property Value bool canUseTurret Whether the player can shoot their equipped turret. public bool canUseTurret { get; } Property Value bool factor [Obsolete(\"Replaced by GetReplicatedForwardSpeedPercentageOfTargetSpeed\")] public float factor { get; } Property Value float hasBattery [Obsolete(\"Clarified with HasBatteryWithCharge and ContainsBatteryItem properties.\")] public bool hasBattery { get; } Property Value bool headlights public Transform headlights { get; } Property Value Transform headlightsOn public bool headlightsOn { get; } Property Value bool insideSafezoneNode public SafezoneNode insideSafezoneNode { get; protected set; } Property Value SafezoneNode isAutoClearable When the server saves it doesn't include any cleared vehicles. public bool isAutoClearable { get; } Property Value bool isBatteryFull public bool isBatteryFull { get; } Property Value bool isBatteryReplaceable public bool isBatteryReplaceable { get; } Property Value bool isBoosting public bool isBoosting { get; protected set; } Property Value bool isDead public bool isDead { get; } Property Value bool isDriven public bool isDriven { get; } Property Value bool isDriver public bool isDriver { get; } Property Value bool isDrowned public bool isDrowned { get; } Property Value bool isEmpty public bool isEmpty { get; } Property Value bool isEngineOn Nelson 2024-06-24: This property is confusing, especially with isEnginePowered, but essentially represents starting the engine ignition when a player enters the driver's seat. If true, there's a driver, there was sufficient battery to start (or battery not required), and the engine wasn't underwater. public bool isEngineOn { get; protected set; } Property Value bool isEnginePowered public bool isEnginePowered { get; } Property Value bool isExitable Can a safe exit point currently be found? Called when considering to add a new passenger to prevent players from entering a vehicle that they wouldn't be able to exit properly. public bool isExitable { get; } Property Value bool isGoingToRespawn public bool isGoingToRespawn { get; } Property Value bool isInsideNoDamageZone Should askDamage requests currently be ignored because we are inside a safezone? public bool isInsideNoDamageZone { get; } Property Value bool isInsideSafezone Is this vehicle inside a safezone? public bool isInsideSafezone { get; protected set; } Property Value bool isLocked public bool isLocked { get; } Property Value bool isRefillable public bool isRefillable { get; } Property Value bool isRepaired public bool isRepaired { get; } Property Value bool isSiphonable public bool isSiphonable { get; } Property Value bool isSkinned public bool isSkinned { get; } Property Value bool isTireReplaceable public bool isTireReplaceable { get; } Property Value bool isUnderwater public bool isUnderwater { get; } Property Value bool lastDead public float lastDead { get; } Property Value float lastExploded public float lastExploded { get; } Property Value float lastUnderwater public float lastUnderwater { get; } Property Value float lockedGroup public CSteamID lockedGroup { get; } Property Value CSteamID lockedOwner public CSteamID lockedOwner { get; } Property Value CSteamID passengers public Passenger[] passengers { get; } Property Value Passenger[] physicsSpeed [Obsolete(\"Replaced by ReplicatedForwardVelocity\")] public float physicsSpeed { get; } Property Value float road public Road road { get; protected set; } Property Value Road sirensOn public bool sirensOn { get; } Property Value bool slip public float slip { get; } Property Value float speed [Obsolete(\"Replaced by ReplicatedSpeed\")] public float speed { get; } Property Value float steer [Obsolete(\"Replaced by AnimatedSteeringAngle\")] public float steer { get; } Property Value float taillights public Transform taillights { get; } Property Value Transform taillightsOn public bool taillightsOn { get; } Property Value bool timeInsideSafezone Duration in seconds since this vehicle entered a safezone, or -1 if it's not in a safezone. public float timeInsideSafezone { get; protected set; } Property Value float tireAliveMask public byte tireAliveMask { get; set; } Property Value byte tires public Wheel[] tires { get; } Property Value Wheel[] trainCars public TrainCar[] trainCars { get; protected set; } Property Value TrainCar[] turn [Obsolete(\"Replaced by ReplicatedSteeringInput\")] public int turn { get; } Property Value int turrets public Passenger[] turrets { get; } Property Value Passenger[] usesBattery public bool usesBattery { get; } Property Value bool usesFuel public bool usesFuel { get; } Property Value bool usesHealth public bool usesHealth { get; } Property Value bool vehicleColliders public IEnumerable<Collider> vehicleColliders { get; } Property Value IEnumerable<Collider> Methods ApplyExplosionDamage(in ExplosionParameters, ref ExplosionDamageParameters) public void ApplyExplosionDamage(in ExplosionParameters explosionParameters, ref ExplosionDamageParameters damageParameters) Parameters explosionParameters ExplosionParameters damageParameters ExplosionDamageParameters Equals(IExplosionDamageable) public bool Equals(IExplosionDamageable obj) Parameters obj IExplosionDamageable Returns bool GetAnimatedForwardSpeedPercentageOfTargetSpeed() public float GetAnimatedForwardSpeedPercentageOfTargetSpeed() Returns float GetClosestPointToExplosion(Vector3) Used to sort damage from nearest to furthest. public Vector3 GetClosestPointToExplosion(Vector3 explosionCenter) Parameters explosionCenter Vector3 Returns Vector3 GetDriverClient() public SteamPlayer GetDriverClient() Returns SteamPlayer GetDriverPlayer() public Player GetDriverPlayer() Returns Player GetReplicatedForwardSpeedPercentageOfTargetSpeed() [0, 1] If forward velocity is greater than zero, get normalized by target forward speed. If less than zero, get normalized by target reverse speed. Result is always positive. public float GetReplicatedForwardSpeedPercentageOfTargetSpeed() Returns float GetSentryTargetingPoint() public Vector3 GetSentryTargetingPoint() Returns Vector3 IsFriendlyToSentry(InteractableSentry) If true, sentry ignores this vehicle early in target scanning. Friendly if locked by owner/group of sentry, or driven by owner/group of sentry. public bool IsFriendlyToSentry(InteractableSentry sentry) Parameters sentry InteractableSentry Returns bool MarkForReplicationUpdate() Primarily for backwards compatibility with plugins. Previously, multiple \"updates\" could be queued per vehicle and sent to clients. This list was public, unfortunately, so plugins may rely on submitting vehicle updates. After making it obsolete each vehicle can only be flagged as needing a replication update, and this is reset after each server replication update. public void MarkForReplicationUpdate() ReceivePaintColor(Color32) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceivePaintColor(Color32 newPaintColor) Parameters newPaintColor Color32 ResetDecayTimer() public void ResetDecayTimer() ServerSetPaintColor(Color32) public void ServerSetPaintColor(Color32 newPaintColor) Parameters newPaintColor Color32 addPlayer(byte, CSteamID) public void addPlayer(byte seat, CSteamID steamID) Parameters seat byte steamID CSteamID askBurnBattery(ushort) public void askBurnBattery(ushort amount) Parameters amount ushort askBurnFuel(ushort) public void askBurnFuel(ushort amount) Parameters amount ushort askChargeBattery(ushort) public void askChargeBattery(ushort amount) Parameters amount ushort askDamage(ushort, bool) public void askDamage(ushort amount, bool canRepair) Parameters amount ushort canRepair bool askDamageTire(int) public void askDamageTire(int index) Parameters index int askFillFuel(ushort) public void askFillFuel(ushort amount) Parameters amount ushort askRepair(ushort) public void askRepair(ushort amount) Parameters amount ushort askRepairTire(int) public void askRepairTire(int index) Parameters index int canPlayerRepair(Player) Is player currently allowed to repair this vehicle? public bool canPlayerRepair(Player player) Parameters player Player Returns bool checkDriver(CSteamID) public bool checkDriver(CSteamID steamID) Parameters steamID CSteamID Returns bool checkEnter(Player) Is a given player allowed access to this vehicle? public bool checkEnter(Player player) Parameters player Player Returns bool checkEnter(CSteamID, CSteamID) public bool checkEnter(CSteamID enemyPlayer, CSteamID enemyGroup) Parameters enemyPlayer CSteamID enemyGroup CSteamID Returns bool checkHighlight(out Color) public override bool checkHighlight(out Color color) Parameters color Color Returns bool checkHint(out EPlayerMessage, out string, out Color) public override bool checkHint(out EPlayerMessage message, out string text, out Color color) Parameters message EPlayerMessage text string color Color Returns bool checkUseable() public override bool checkUseable() Returns bool clearHooked() public void clearHooked() dropTrunkItems() public void dropTrunkItems() findGroundForExitPosition(ref Vector3) protected void findGroundForExitPosition(ref Vector3 exitPosition) Parameters exitPosition Vector3 findPlayerSeat(Player, out byte) public bool findPlayerSeat(Player player, out byte seat) Parameters player Player seat byte Returns bool findPlayerSeat(CSteamID, out byte) public bool findPlayerSeat(CSteamID player, out byte seat) Parameters player CSteamID seat byte Returns bool forceGetExit(Player, byte, out Vector3, out byte) Initially use tryGetExit to find a safe exit, but if one isn't available then fallback to getExitSpawnPoint. protected void forceGetExit(Player player, byte seat, out Vector3 point, out byte angle) Parameters player Player seat byte point Vector3 angle byte forceRemoveAllPlayers() Call on the server to empty the vehicle of passengers. public void forceRemoveAllPlayers() forceRemovePlayer(out byte, CSteamID, out Vector3, out byte) Kicks them out even if there isn't a good spot. Used when killing the occupant. public bool forceRemovePlayer(out byte seat, CSteamID player, out Vector3 point, out byte angle) Parameters seat byte player CSteamID point Vector3 angle byte Returns bool True if player is seated, false otherwise. gatherVehicleColliders() Called after initializing vehicle. public void gatherVehicleColliders() getClosestAliveTireIndex(Vector3, bool) Find the index of the wheel collider closest to this position, or -1 if not near any. public int getClosestAliveTireIndex(Vector3 position, bool isAlive) Parameters position Vector3 isAlive bool Returns int getClosestPointOnHull(Vector3) public Vector3 getClosestPointOnHull(Vector3 position) Parameters position Vector3 Returns Vector3 getDisplayFuel(out ushort, out ushort) public void getDisplayFuel(out ushort currentFuel, out ushort maxFuel) Parameters currentFuel ushort maxFuel ushort getExitDistanceInDirection(Vector3, Vector3, float, float) Raycast along a given direction, penetrating through barricades attached to THIS vehicle. Returns point at the end of the ray if unblocked, or a safe (radius) distance away from hit. protected Vector3 getExitDistanceInDirection(Vector3 origin, Vector3 direction, float maxDistance, float extraPadding = 0.1) Parameters origin Vector3 direction Vector3 maxDistance float extraPadding float Returns Vector3 getExitDownwardPoint(out Vector3) protected bool getExitDownwardPoint(out Vector3 exitPosition) Parameters exitPosition Vector3 Returns bool getExitForwardPoint(Vector3, out Vector3) protected bool getExitForwardPoint(Vector3 direction, out Vector3 exitPosition) Parameters direction Vector3 exitPosition Vector3 Returns bool getExitSidePoint(Vector3, out Vector3) protected bool getExitSidePoint(Vector3 direction, out Vector3 exitPosition) Parameters direction Vector3 exitPosition Vector3 Returns bool getExitSpawnPoint(Player, ref Vector3, ref byte) Fallback if there are absolutely no good exit points. Sets point and angle with a normal player spawnpoint. Once vehicle is completely surrounded there is no nice way to pick an exit point. Finding a point upwards is abused to teleport upward into bases, finding an empty capsule nearby is abused to teleport through walls, so if we're sure there isn't a nice exit point we can fallback to teleporting them to a safe spawnpoint. protected void getExitSpawnPoint(Player player, ref Vector3 point, ref byte angle) Parameters player Player point Vector3 angle byte getExitUpwardPoint(out Vector3) protected bool getExitUpwardPoint(out Vector3 exitPosition) Parameters exitPosition Vector3 Returns bool getHitTireIndex(Vector3) Find the index of the wheel collider that contains this position. public int getHitTireIndex(Vector3 position) Parameters position Vector3 Returns int getSafeExitInDirection(Vector3, Vector3, float, out Vector3) protected bool getSafeExitInDirection(Vector3 origin, Vector3 direction, float maxDistance, out Vector3 exitPosition) Parameters origin Vector3 direction Vector3 maxDistance float exitPosition Vector3 Returns bool getSqrDistanceFromHull(Vector3) public float getSqrDistanceFromHull(Vector3 position) Parameters position Vector3 Returns float grantTrunkAccess(Player) public void grantTrunkAccess(Player player) Parameters player Player handleTireAliveChanged(Wheel) protected virtual void handleTireAliveChanged(Wheel wheel) Parameters wheel Wheel ignoreCollisionWith(IEnumerable<Collider>, bool) Makes the collision detection system ignore all collisions between this vehicle and the given colliders. Used to prevent vehicle from colliding with attached items. public void ignoreCollisionWith(IEnumerable<Collider> otherColliders, bool shouldIgnore) Parameters otherColliders IEnumerable<Collider> shouldIgnore bool init() [Obsolete] public void init() isExitPositionEmpty(Vector3) Could a player capsule fit in a given exit position? protected bool isExitPositionEmpty(Vector3 position) Parameters position Vector3 Returns bool isTireCompatible(ushort) Can a tire item be used with this vehicle? public bool isTireCompatible(ushort itemID) Parameters itemID ushort Returns bool raycastIgnoringVehicleAndChildren(Vector3, Vector3, float, out float) protected bool raycastIgnoringVehicleAndChildren(Vector3 origin, Vector3 direction, float maxDistance, out float hitDistance) Parameters origin Vector3 direction Vector3 maxDistance float hitDistance float Returns bool True if anything was hit. removePlayer(byte, Vector3, byte, bool) public void removePlayer(byte seatIndex, Vector3 point, byte angle, bool forceUpdate) Parameters seatIndex byte point Vector3 angle byte forceUpdate bool replaceBattery(Player, byte) [Obsolete(\"This override uses the vanilla battery item rather than the equipped battery item.\")] public void replaceBattery(Player player, byte quality) Parameters player Player quality byte replaceBattery(Player, byte, Guid) public void replaceBattery(Player player, byte quality, Guid newBatteryItemGuid) Parameters player Player quality byte newBatteryItemGuid Guid revokeTrunkAccess(Player) public void revokeTrunkAccess(Player player) Parameters player Player safeInit() [Obsolete] public void safeInit() sendBatteryChargeUpdate() public void sendBatteryChargeUpdate() sendTireAliveMaskUpdate() public void sendTireAliveMaskUpdate() simulate(uint, int, bool, Vector3, Quaternion, float, float, float, float, float) Dedicated server simulate driving input. public void simulate(uint simulation, int recov, bool inputStamina, Vector3 point, Quaternion angle, float newSpeed, float newForwardVelocity, float newSteeringInput, float newVelocityInput, float delta) Parameters simulation uint recov int inputStamina bool point Vector3 angle Quaternion newSpeed float newForwardVelocity float newSteeringInput float newVelocityInput float delta float simulate(uint, int, int, int, float, float, bool, bool, float) Client simulate driving input. public void simulate(uint simulation, int recov, int input_x, int input_y, float look_x, float look_y, bool inputBrake, bool inputStamina, float delta) Parameters simulation uint recov int input_x int input_y int look_x float look_y float inputBrake bool inputStamina bool delta float simulateBurnFuel() Called during simulate at fixed rate. protected void simulateBurnFuel() stealBattery(Player) Give battery item to player and set battery charge to zero. public void stealBattery(Player player) Parameters player Player swapPlayer(byte, byte) public void swapPlayer(byte fromSeatIndex, byte toSeatIndex) Parameters fromSeatIndex byte toSeatIndex byte tellBatteryCharge(ushort) public void tellBatteryCharge(ushort newBatteryCharge) Parameters newBatteryCharge ushort tellBlimp(bool) public void tellBlimp(bool on) Parameters on bool tellExploded() public void tellExploded() tellFuel(ushort) public void tellFuel(ushort newFuel) Parameters newFuel ushort tellHeadlights(bool) public void tellHeadlights(bool on) Parameters on bool tellHealth(ushort) public void tellHealth(ushort newHealth) Parameters newHealth ushort tellHorn() public void tellHorn() tellLocked(CSteamID, CSteamID, bool) public void tellLocked(CSteamID owner, CSteamID group, bool locked) Parameters owner CSteamID group CSteamID locked bool tellRecov(Vector3, int) public void tellRecov(Vector3 newPosition, int newRecov) Parameters newPosition Vector3 newRecov int tellSirens(bool) public void tellSirens(bool on) Parameters on bool tellSkin(ushort, ushort) public void tellSkin(ushort newSkinID, ushort newMythicID) Parameters newSkinID ushort newMythicID ushort tellState(Vector3, byte, byte, byte, byte, byte, byte) [Obsolete] public void tellState(Vector3 newPosition, byte newAngle_X, byte newAngle_Y, byte newAngle_Z, byte newSpeed, byte newPhysicsSpeed, byte newTurn) Parameters newPosition Vector3 newAngle_X byte newAngle_Y byte newAngle_Z byte newSpeed byte newPhysicsSpeed byte newTurn byte tellState(Vector3, Quaternion, float, float, float, float) public void tellState(Vector3 newPosition, Quaternion newRotation, float newSpeed, float newForwardVelocity, float newReplicatedSteeringInput, float newReplicatedVelocityInput) Parameters newPosition Vector3 newRotation Quaternion newSpeed float newForwardVelocity float newReplicatedSteeringInput float newReplicatedVelocityInput float tellTaillights(bool) public void tellTaillights(bool on) Parameters on bool tryAddPlayer(out byte, Player) VehicleManager expects this to only find the seat, not add the player, because it does a LoS check. public bool tryAddPlayer(out byte seat, Player player) Parameters seat byte player Player Returns bool trySwapPlayer(Player, byte, out byte) public bool trySwapPlayer(Player player, byte toSeat, out byte fromSeat) Parameters player Player toSeat byte fromSeat byte Returns bool updateEngine() public void updateEngine() updateFires() public void updateFires() updatePhysics() public void updatePhysics() updateSkin() public void updateSkin() updateVehicle() public void updateVehicle() use() public override void use() useHook() public void useHook() Events OnBatteryLevelChanged_Global public static event Action<InteractableVehicle> OnBatteryLevelChanged_Global Event Type Action<InteractableVehicle> OnFuelChanged_Global public static event Action<InteractableVehicle> OnFuelChanged_Global Event Type Action<InteractableVehicle> OnHealthChanged_Global public static event Action<InteractableVehicle> OnHealthChanged_Global Event Type Action<InteractableVehicle> OnHookVehicleRequested_Global public static event HookVehicleRequestHandler OnHookVehicleRequested_Global Event Type HookVehicleRequestHandler OnIsDrownedChanged public event Action OnIsDrownedChanged Event Type Action OnLockChanged_Global public static event Action<InteractableVehicle> OnLockChanged_Global Event Type Action<InteractableVehicle> OnPassengerAdded_Global public static event Action<InteractableVehicle, int> OnPassengerAdded_Global Event Type Action<InteractableVehicle, int> OnPassengerChangedSeats_Global public static event Action<InteractableVehicle, int, int> OnPassengerChangedSeats_Global Event Type Action<InteractableVehicle, int, int> OnPassengerRemoved_Global public static event Action<InteractableVehicle, int, Player> OnPassengerRemoved_Global Event Type Action<InteractableVehicle, int, Player> batteryChanged public event VehicleBatteryChangedHandler batteryChanged Event Type VehicleBatteryChangedHandler onBlimpUpdated public event VehicleBlimpUpdated onBlimpUpdated Event Type VehicleBlimpUpdated onHeadlightsUpdated public event VehicleHeadlightsUpdated onHeadlightsUpdated Event Type VehicleHeadlightsUpdated onLockUpdated public event VehicleLockUpdated onLockUpdated Event Type VehicleLockUpdated onPassengersUpdated public event VehiclePassengersUpdated onPassengersUpdated Event Type VehiclePassengersUpdated onSirensUpdated public event VehicleSirensUpdated onSirensUpdated Event Type VehicleSirensUpdated onTaillightsUpdated public event VehicleTaillightsUpdated onTaillightsUpdated Event Type VehicleTaillightsUpdated skinChanged public event VehicleSkinChangedHandler skinChanged Event Type VehicleSkinChangedHandler"
  },
  "api/SDG.Unturned.InteractableVehicle_NetMethods.html": {
    "href": "api/SDG.Unturned.InteractableVehicle_NetMethods.html",
    "title": "Class InteractableVehicle_NetMethods | Unturned Analyse Doc",
    "keywords": "Class InteractableVehicle_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(InteractableVehicle))] public static class InteractableVehicle_NetMethods Inheritance object InteractableVehicle_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePaintColor_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePaintColor\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePaintColor_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePaintColor_Write(NetPakWriter, Color32) [NetInvokableGeneratedMethod(\"ReceivePaintColor\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePaintColor_Write(NetPakWriter writer, Color32 newPaintColor) Parameters writer NetPakWriter newPaintColor Color32"
  },
  "api/SDG.Unturned.InventoryAdded.html": {
    "href": "api/SDG.Unturned.InventoryAdded.html",
    "title": "Delegate InventoryAdded | Unturned Analyse Doc",
    "keywords": "Delegate InventoryAdded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InventoryAdded(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar Constructors InventoryAdded(object, IntPtr) public InventoryAdded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, ItemJar, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte index, ItemJar jar, AsyncCallback callback, object @object) Parameters page byte index byte jar ItemJar callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, ItemJar) public virtual void Invoke(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar"
  },
  "api/SDG.Unturned.InventoryRemoved.html": {
    "href": "api/SDG.Unturned.InventoryRemoved.html",
    "title": "Delegate InventoryRemoved | Unturned Analyse Doc",
    "keywords": "Delegate InventoryRemoved Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InventoryRemoved(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar Constructors InventoryRemoved(object, IntPtr) public InventoryRemoved(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, ItemJar, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte index, ItemJar jar, AsyncCallback callback, object @object) Parameters page byte index byte jar ItemJar callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, ItemJar) public virtual void Invoke(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar"
  },
  "api/SDG.Unturned.InventoryResized.html": {
    "href": "api/SDG.Unturned.InventoryResized.html",
    "title": "Delegate InventoryResized | Unturned Analyse Doc",
    "keywords": "Delegate InventoryResized Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InventoryResized(byte page, byte newWidth, byte newHeight) Parameters page byte newWidth byte newHeight byte Constructors InventoryResized(object, IntPtr) public InventoryResized(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte newWidth, byte newHeight, AsyncCallback callback, object @object) Parameters page byte newWidth byte newHeight byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, byte) public virtual void Invoke(byte page, byte newWidth, byte newHeight) Parameters page byte newWidth byte newHeight byte"
  },
  "api/SDG.Unturned.InventorySearch.html": {
    "href": "api/SDG.Unturned.InventorySearch.html",
    "title": "Class InventorySearch | Unturned Analyse Doc",
    "keywords": "Class InventorySearch Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InventorySearch Inheritance object InventorySearch Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InventorySearch(byte, ItemJar) public InventorySearch(byte newPage, ItemJar newJar) Parameters newPage byte newJar ItemJar Properties jar public ItemJar jar { get; } Property Value ItemJar page public byte page { get; } Property Value byte Methods GetAsset() public ItemAsset GetAsset() Returns ItemAsset GetAsset<T>() public T GetAsset<T>() where T : ItemAsset Returns T Type Parameters T deleteAmount(Player, uint) Serverside delete an amount of this item. public uint deleteAmount(Player player, uint desiredAmount) Parameters player Player desiredAmount uint Returns uint Total amount deleted."
  },
  "api/SDG.Unturned.InventorySearchAmountAscendingComparator.html": {
    "href": "api/SDG.Unturned.InventorySearchAmountAscendingComparator.html",
    "title": "Class InventorySearchAmountAscendingComparator | Unturned Analyse Doc",
    "keywords": "Class InventorySearchAmountAscendingComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InventorySearchAmountAscendingComparator : IComparer<InventorySearch> Inheritance object InventorySearchAmountAscendingComparator Implements IComparer<InventorySearch> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InventorySearchAmountAscendingComparator() public InventorySearchAmountAscendingComparator() Methods Compare(InventorySearch, InventorySearch) public int Compare(InventorySearch a, InventorySearch b) Parameters a InventorySearch b InventorySearch Returns int"
  },
  "api/SDG.Unturned.InventorySearchAmountDescendingComparator.html": {
    "href": "api/SDG.Unturned.InventorySearchAmountDescendingComparator.html",
    "title": "Class InventorySearchAmountDescendingComparator | Unturned Analyse Doc",
    "keywords": "Class InventorySearchAmountDescendingComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InventorySearchAmountDescendingComparator : IComparer<InventorySearch> Inheritance object InventorySearchAmountDescendingComparator Implements IComparer<InventorySearch> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InventorySearchAmountDescendingComparator() public InventorySearchAmountDescendingComparator() Methods Compare(InventorySearch, InventorySearch) public int Compare(InventorySearch a, InventorySearch b) Parameters a InventorySearch b InventorySearch Returns int"
  },
  "api/SDG.Unturned.InventorySearchQualityAscendingComparator.html": {
    "href": "api/SDG.Unturned.InventorySearchQualityAscendingComparator.html",
    "title": "Class InventorySearchQualityAscendingComparator | Unturned Analyse Doc",
    "keywords": "Class InventorySearchQualityAscendingComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InventorySearchQualityAscendingComparator : IComparer<InventorySearch> Inheritance object InventorySearchQualityAscendingComparator Implements IComparer<InventorySearch> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InventorySearchQualityAscendingComparator() public InventorySearchQualityAscendingComparator() Methods Compare(InventorySearch, InventorySearch) public int Compare(InventorySearch a, InventorySearch b) Parameters a InventorySearch b InventorySearch Returns int"
  },
  "api/SDG.Unturned.InventorySearchQualityDescendingComparator.html": {
    "href": "api/SDG.Unturned.InventorySearchQualityDescendingComparator.html",
    "title": "Class InventorySearchQualityDescendingComparator | Unturned Analyse Doc",
    "keywords": "Class InventorySearchQualityDescendingComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class InventorySearchQualityDescendingComparator : IComparer<InventorySearch> Inheritance object InventorySearchQualityDescendingComparator Implements IComparer<InventorySearch> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors InventorySearchQualityDescendingComparator() public InventorySearchQualityDescendingComparator() Methods Compare(InventorySearch, InventorySearch) public int Compare(InventorySearch a, InventorySearch b) Parameters a InventorySearch b InventorySearch Returns int"
  },
  "api/SDG.Unturned.InventoryStateUpdated.html": {
    "href": "api/SDG.Unturned.InventoryStateUpdated.html",
    "title": "Delegate InventoryStateUpdated | Unturned Analyse Doc",
    "keywords": "Delegate InventoryStateUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InventoryStateUpdated() Constructors InventoryStateUpdated(object, IntPtr) public InventoryStateUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.InventoryStored.html": {
    "href": "api/SDG.Unturned.InventoryStored.html",
    "title": "Delegate InventoryStored | Unturned Analyse Doc",
    "keywords": "Delegate InventoryStored Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InventoryStored() Constructors InventoryStored(object, IntPtr) public InventoryStored(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.InventoryUpdated.html": {
    "href": "api/SDG.Unturned.InventoryUpdated.html",
    "title": "Delegate InventoryUpdated | Unturned Analyse Doc",
    "keywords": "Delegate InventoryUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void InventoryUpdated(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar Constructors InventoryUpdated(object, IntPtr) public InventoryUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, ItemJar, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte index, ItemJar jar, AsyncCallback callback, object @object) Parameters page byte index byte jar ItemJar callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, ItemJar) public virtual void Invoke(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar"
  },
  "api/SDG.Unturned.IsBlindfoldedChangedHandler.html": {
    "href": "api/SDG.Unturned.IsBlindfoldedChangedHandler.html",
    "title": "Delegate IsBlindfoldedChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate IsBlindfoldedChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void IsBlindfoldedChangedHandler() Constructors IsBlindfoldedChangedHandler(object, IntPtr) public IsBlindfoldedChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Item.html": {
    "href": "api/SDG.Unturned.Item.html",
    "title": "Class Item | Unturned Analyse Doc",
    "keywords": "Class Item Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Item Inheritance object Item Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Item(ItemAsset, EItemOrigin) Ideally in a future rewrite asset overload will become the default rather than the overload taking legacy ID. public Item(ItemAsset asset, EItemOrigin origin) Parameters asset ItemAsset origin EItemOrigin Item(ushort, EItemOrigin) public Item(ushort newID, EItemOrigin origin) Parameters newID ushort origin EItemOrigin Item(ushort, EItemOrigin, byte) public Item(ushort newID, EItemOrigin origin, byte newQuality) Parameters newID ushort origin EItemOrigin newQuality byte Item(ushort, bool) public Item(ushort newID, bool full) Parameters newID ushort full bool Item(ushort, bool, byte) public Item(ushort newID, bool full, byte newQuality) Parameters newID ushort full bool newQuality byte Item(ushort, byte, byte) public Item(ushort newID, byte newAmount, byte newQuality) Parameters newID ushort newAmount byte newQuality byte Item(ushort, byte, byte, byte[]) public Item(ushort newID, byte newAmount, byte newQuality, byte[] newState) Parameters newID ushort newAmount byte newQuality byte newState byte[] Fields amount public byte amount Field Value byte quality public byte quality Field Value byte state public byte[] state Field Value byte[] Properties durability Exposed for Rocket transition to modules backwards compatibility. public byte durability { get; set; } Property Value byte id public ushort id { get; } Property Value ushort metadata Exposed for Rocket transition to modules backwards compatibility. public byte[] metadata { get; set; } Property Value byte[] Methods GetAsset() public ItemAsset GetAsset() Returns ItemAsset GetAsset<T>() public T GetAsset<T>() where T : ItemAsset Returns T Type Parameters T ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.ItemAdded.html": {
    "href": "api/SDG.Unturned.ItemAdded.html",
    "title": "Delegate ItemAdded | Unturned Analyse Doc",
    "keywords": "Delegate ItemAdded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemAdded(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar Constructors ItemAdded(object, IntPtr) public ItemAdded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, ItemJar, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte index, ItemJar jar, AsyncCallback callback, object @object) Parameters page byte index byte jar ItemJar callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, ItemJar) public virtual void Invoke(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar"
  },
  "api/SDG.Unturned.ItemArrestEndAsset.html": {
    "href": "api/SDG.Unturned.ItemArrestEndAsset.html",
    "title": "Class ItemArrestEndAsset | Unturned Analyse Doc",
    "keywords": "Class ItemArrestEndAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemArrestEndAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemArrestEndAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemArrestEndAsset() public ItemArrestEndAsset() Fields _recover protected ushort _recover Field Value ushort _use protected AudioClip _use Field Value AudioClip Properties recover public ushort recover { get; } Property Value ushort use public AudioClip use { get; } Property Value AudioClip Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemArrestStartAsset.html": {
    "href": "api/SDG.Unturned.ItemArrestStartAsset.html",
    "title": "Class ItemArrestStartAsset | Unturned Analyse Doc",
    "keywords": "Class ItemArrestStartAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemArrestStartAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemArrestStartAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemArrestStartAsset() public ItemArrestStartAsset() Fields _strength protected ushort _strength Field Value ushort _use protected AudioClip _use Field Value AudioClip Properties shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool strength public ushort strength { get; } Property Value ushort use public AudioClip use { get; } Property Value AudioClip Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemAsset.html": {
    "href": "api/SDG.Unturned.ItemAsset.html",
    "title": "Class ItemAsset | Unturned Analyse Doc",
    "keywords": "Class ItemAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemAsset : Asset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset Implements IAssetErrorContext ISkinableAsset Derived ItemArrestEndAsset ItemArrestStartAsset ItemBoxAsset ItemCaliberAsset ItemClothingAsset ItemCloudAsset ItemDetonatorAsset ItemFilterAsset ItemFisherAsset ItemFuelAsset ItemGrowerAsset ItemKeyAsset ItemMapAsset ItemOpticAsset ItemPlaceableAsset ItemRefillAsset ItemSupplyAsset ItemToolAsset ItemWeaponAsset Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemAsset() public ItemAsset() Fields DescSort_Beneficial protected const int DescSort_Beneficial = -1 Field Value int DescSort_BuildableCommon Properties common to Barricade and Structure. protected const int DescSort_BuildableCommon = 20000 Field Value int DescSort_ClothingStat protected const int DescSort_ClothingStat = 10000 Field Value int DescSort_ConsumeableStat protected const int DescSort_ConsumeableStat = 10000 Field Value int DescSort_Detrimental protected const int DescSort_Detrimental = 1 Field Value int DescSort_ExplosiveBulletDamage protected const int DescSort_ExplosiveBulletDamage = 30000 Field Value int DescSort_ExplosiveChargeDamage protected const int DescSort_ExplosiveChargeDamage = 30000 Field Value int DescSort_ExplosiveTrapDamage protected const int DescSort_ExplosiveTrapDamage = 30000 Field Value int DescSort_FarmableText protected const int DescSort_FarmableText = 15000 Field Value int DescSort_GunAttachmentStat protected const int DescSort_GunAttachmentStat = 10000 Field Value int DescSort_GunStat protected const int DescSort_GunStat = 10000 Field Value int DescSort_Important protected const int DescSort_Important = 2000 Field Value int DescSort_ItemStat protected const int DescSort_ItemStat = 10000 Field Value int DescSort_LoreText protected const int DescSort_LoreText = 200 Field Value int DescSort_MeleeStat protected const int DescSort_MeleeStat = 10000 Field Value int DescSort_QualityAndAmount protected const int DescSort_QualityAndAmount = 400 Field Value int DescSort_RarityAndType protected const int DescSort_RarityAndType = 0 Field Value int DescSort_RefillStat protected const int DescSort_RefillStat = 10000 Field Value int DescSort_TrapKeyword protected const int DescSort_TrapKeyword = 10001 Field Value int DescSort_TrapStat protected const int DescSort_TrapStat = 10002 Field Value int DescSort_Weapon_Explosive_RangeAndDamage Properties common to Gun, Consumable, and Throwable. protected const int DescSort_Weapon_Explosive_RangeAndDamage = 30000 Field Value int DescSort_Weapon_NonExplosive_AnimalDamage Properties common to Gun and Melee. protected const int DescSort_Weapon_NonExplosive_AnimalDamage = 32000 Field Value int DescSort_Weapon_NonExplosive_Common Properties common to Gun and Melee. protected const int DescSort_Weapon_NonExplosive_Common = 10000 Field Value int DescSort_Weapon_NonExplosive_OtherDamage Properties common to Gun and Melee. protected const int DescSort_Weapon_NonExplosive_OtherDamage = 33000 Field Value int DescSort_Weapon_NonExplosive_PlayerDamage Properties common to Gun and Melee. protected const int DescSort_Weapon_NonExplosive_PlayerDamage = 30000 Field Value int DescSort_Weapon_NonExplosive_ZombieDamage Properties common to Gun and Melee. protected const int DescSort_Weapon_NonExplosive_ZombieDamage = 31000 Field Value int _actions protected List<Action> _actions Field Value List<Action> _albedoBase protected Texture2D _albedoBase Field Value Texture2D _animations protected AnimationClip[] _animations Field Value AnimationClip[] _blueprints protected List<Blueprint> _blueprints Field Value List<Blueprint> _emissionBase protected Texture2D _emissionBase Field Value Texture2D _equip protected AudioClip _equip Field Value AudioClip _item protected GameObject _item Field Value GameObject _itemDescription protected string _itemDescription Field Value string _itemName protected string _itemName Field Value string _metallicBase protected Texture2D _metallicBase Field Value Texture2D _proPath protected string _proPath Field Value string _shouldVerifyHash protected bool _shouldVerifyHash Field Value bool amount public byte amount Field Value byte countMax public byte countMax Field Value byte countMin public byte countMin Field Value byte econIconCameraOrthographicSize Vertical half size of economy icon camera. public float econIconCameraOrthographicSize Field Value float econIconUseId Hack for Kuwait aura icons. public bool econIconUseId Field Value bool equipableMovementSpeedMultiplier Movement speed multiplier while the item is equipped in the hands. public float equipableMovementSpeedMultiplier Field Value float equipablePrefab Optional alternative item prefab specifically for the PlayerEquipment prefab spawned. public GameObject equipablePrefab Field Value GameObject iconCameraOrthographicSize Vertical half size of icon camera. Values less than zero are disabled. public float iconCameraOrthographicSize Field Value float inspectAudio Sound to play when inspecting the equipped item. public AudioReference inspectAudio Field Value AudioReference inventoryAudio Sound to play when moving or rotating the item in the inventory. public AudioReference inventoryAudio Field Value AudioReference isBackward [Obsolete(\"Renamed to ShouldAttachEquippedModelToLeftHand\")] public bool isBackward Field Value bool isEligibleForAutoStatDescriptions If true, stats like damage, accuracy, health, etc. are automatically appended to the description. Defaults to true. public bool isEligibleForAutoStatDescriptions Field Value bool isEligibleForAutomaticIconMeasurements Should the newer automatic placement and orthographic size for axis-aligned icon cameras be used? Enabled by default, but optionally disabled for manual adjustment. public bool isEligibleForAutomaticIconMeasurements Field Value bool isPro public bool isPro Field Value bool qualityMax public byte qualityMax Field Value byte qualityMin public byte qualityMin Field Value byte rarity public EItemRarity rarity Field Value EItemRarity shouldAlwaysLoadItemPrefab Helper for plugins that want item prefabs server-side. e.g. Allows item icons to be captured on dedicated server. public static CommandLineFlag shouldAlwaysLoadItemPrefab Field Value CommandLineFlag shouldLeftHandedCharactersMirrorEquippedItem Defaults to true. If false, the equipped item model is flipped to counteract the flipped character. public bool shouldLeftHandedCharactersMirrorEquippedItem Field Value bool shouldProcedurallyAnimateInertia Whether viewmodel should procedurally animate inertia of equipped item. Useful for low-quality older animations, but modders may wish to disable for high-quality newer animations. public bool shouldProcedurallyAnimateInertia Field Value bool size_x public byte size_x Field Value byte size_y public byte size_y Field Value byte slot public ESlotType slot Field Value ESlotType type public EItemType type Field Value EItemType useable public string useable Field Value string Properties EquipableModelParent Which parent to use when attaching an equipped/useable item to the player. public EEquipableModelParent EquipableModelParent { get; protected set; } Property Value EEquipableModelParent FriendlyName public override string FriendlyName { get; } Property Value string SharedSkinShouldApplyVisuals Defaults to true. If false, skin material and mesh are not applied when sharedSkinLookupID is set. For example, a custom axe can transfer the kill counter and ragdoll effect from a vanilla item's skin without also transferring the material and mesh. public bool SharedSkinShouldApplyVisuals { get; protected set; } Property Value bool ShouldAttachEquippedModelToLeftHand If true, equipable prefab is a child of the left hand rather than the right. Defaults to false. [Obsolete(\"Replaced by EquipableModelParent property's LeftHook option.\")] public bool ShouldAttachEquippedModelToLeftHand { get; } Property Value bool actions public List<Action> actions { get; } Property Value List<Action> albedoBase public Texture albedoBase { get; } Property Value Texture allowManualDrop Can player click the drop button on this item? public bool allowManualDrop { get; protected set; } Property Value bool animations public AnimationClip[] animations { get; } Property Value AnimationClip[] assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType blueprints public List<Blueprint> blueprints { get; } Property Value List<Blueprint> canPlayerEquip Can this useable be equipped by players? True for most items, but allows modders to create sentry-only weapons. public bool canPlayerEquip { get; protected set; } Property Value bool canUseUnderwater Can this useable be equipped while underwater? public bool canUseUnderwater { get; protected set; } Property Value bool count public byte count { get; } Property Value byte doesItemTypeHaveSkins Are there any official skins for this item type? Skips checking for base textures if item cannot have skins. protected virtual bool doesItemTypeHaveSkins { get; } Property Value bool emissionBase public Texture emissionBase { get; } Property Value Texture equip public AudioClip equip { get; } Property Value AudioClip instantiatedItemName Name to use when instantiating item prefab. By default the asset legacy id is used, but it can be overridden because some modders rely on the name for Unity's legacy animation component. For example in Toothy Deerryte's case there were a lot of duplicate animations to work around the id naming, simplified by overriding name. public string instantiatedItemName { get; protected set; } Property Value string isDangerous Kept in case any plugins refer to it. Renamed to shouldFriendlySentryTargetUser. [Obsolete] public virtual bool isDangerous { get; } Property Value bool isUseable [Obsolete(\"Renamed to canPlayerEquip\")] public bool isUseable { get; set; } Property Value bool item Nelson 2024-12-11: This can now be null for cosmetic items (isPro). For those items it wasn't used outside of the main menu 3D item preview, in which case the clothing prefab is typically a better visualization. public GameObject item { get; } Property Value GameObject itemDescription public string itemDescription { get; } Property Value string itemName public string itemName { get; } Property Value string metallicBase public Texture metallicBase { get; } Property Value Texture overrideShowQuality public bool overrideShowQuality { get; protected set; } Property Value bool proPath public string proPath { get; } Property Value string quality public byte quality { get; } Property Value byte sharedSkinLookupID If this item is compatible with skins for another item, lookup that item's ID instead. public ushort sharedSkinLookupID { get; protected set; } Property Value ushort shouldDeleteAtZeroQuality Should this item be deleted when using and quality hits zero? e.g. final melee hit shatters the weapon. public bool shouldDeleteAtZeroQuality { get; protected set; } Property Value bool shouldDestroyItemColliders Should the game destroy all child colliders on the item when requested? Physics items in the world and on character preview don't request destroy, but items attached to the character do. Mods might be using colliders in unexpected ways (e.g., riot shield) so they can disable this default. public bool shouldDestroyItemColliders { get; protected set; } Property Value bool shouldDropOnDeath When a player dies with this item, should an item drop be spawned? public bool shouldDropOnDeath { get; protected set; } Property Value bool shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public virtual bool shouldFriendlySentryTargetUser { get; } Property Value bool shouldVerifyHash public bool shouldVerifyHash { get; } Property Value bool showQuality public virtual bool showQuality { get; } Property Value bool useableType Useable subclass. public Type useableType { get; protected set; } Property Value Type Methods BuildDescription(ItemDescriptionBuilder, Item) public virtual void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item DescSort_HigherIsBeneficial(float) protected int DescSort_HigherIsBeneficial(float value) Parameters value float Returns int DescSort_LowerIsBeneficial(float) protected int DescSort_LowerIsBeneficial(float value) Parameters value float Returns int GetDefaultInventoryAudio() protected virtual AudioReference GetDefaultInventoryAudio() Returns AudioReference GetTypeFriendlyName() Remove \"Asset\" suffix and convert to title case. public override string GetTypeFriendlyName() Returns string PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local applySkinBaseTextures(Material) public void applySkinBaseTextures(Material material) Parameters material Material canBeUsedInSafezone(SafezoneNode) [Obsolete(\"canBeUsedInSafezone now has special cases for admins\")] public virtual bool canBeUsedInSafezone(SafezoneNode safezone) Parameters safezone SafezoneNode Returns bool canBeUsedInSafezone(SafezoneNode, bool) Should players be allowed to start primary/secondary use of this item while inside given safezone? If returns false the primary/secondary inputs are set to false. public virtual bool canBeUsedInSafezone(SafezoneNode safezone, bool byAdmin) Parameters safezone SafezoneNode byAdmin bool Returns bool getState() public byte[] getState() Returns byte[] getState(EItemOrigin) public virtual byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[] getState(bool) public byte[] getState(bool isFull) Parameters isFull bool Returns byte[]"
  },
  "api/SDG.Unturned.ItemBackpackAsset.html": {
    "href": "api/SDG.Unturned.ItemBackpackAsset.html",
    "title": "Class ItemBackpackAsset | Unturned Analyse Doc",
    "keywords": "Class ItemBackpackAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemBackpackAsset : ItemBagAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemBagAsset ItemBackpackAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBagAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemBagAsset.width ItemBagAsset.height ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemBackpackAsset() public ItemBackpackAsset() Fields _backpack protected GameObject _backpack Field Value GameObject Properties backpack public GameObject backpack { get; } Property Value GameObject Methods GetDefaultInventoryAudio() protected override AudioReference GetDefaultInventoryAudio() Returns AudioReference PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemBagAsset.html": {
    "href": "api/SDG.Unturned.ItemBagAsset.html",
    "title": "Class ItemBagAsset | Unturned Analyse Doc",
    "keywords": "Class ItemBagAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemBagAsset : ItemClothingAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemBagAsset Implements IAssetErrorContext ISkinableAsset Derived ItemBackpackAsset ItemPantsAsset ItemShirtAsset ItemVestAsset Inherited Members ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemBagAsset() public ItemBagAsset() Properties height public byte height { get; } Property Value byte width public byte width { get; } Property Value byte Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemBarrelAsset.html": {
    "href": "api/SDG.Unturned.ItemBarrelAsset.html",
    "title": "Class ItemBarrelAsset | Unturned Analyse Doc",
    "keywords": "Class ItemBarrelAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemBarrelAsset : ItemCaliberAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemCaliberAsset ItemBarrelAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemCaliberAsset.aimingRecoilMultiplier ItemCaliberAsset.aimDurationMultiplier ItemCaliberAsset._isPaintable ItemCaliberAsset.aimingMovementSpeedMultiplier ItemCaliberAsset._isBipod ItemCaliberAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemCaliberAsset.GetDefaultInventoryAudio() ItemCaliberAsset.calibers ItemCaliberAsset.recoil_x ItemCaliberAsset.recoil_y ItemCaliberAsset.spread ItemCaliberAsset.sway ItemCaliberAsset.shake ItemCaliberAsset.FirerateOffset ItemCaliberAsset.isPaintable ItemCaliberAsset.ballisticDamageMultiplier ItemCaliberAsset.BallisticGravityMultiplier ItemCaliberAsset.ShouldOnlyAffectAimWhileProne ItemCaliberAsset.CanDamageInvulernableEntities ItemCaliberAsset.shouldDestroyAttachmentColliders ItemCaliberAsset.instantiatedAttachmentName ItemCaliberAsset.doesItemTypeHaveSkins ItemCaliberAsset.firerate ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemBarrelAsset() public ItemBarrelAsset() Fields _barrel protected GameObject _barrel Field Value GameObject _shoot protected AudioClip _shoot Field Value AudioClip Properties ballisticDrop [Obsolete(\"Moved to ItemCaliberAsset.BallisticGravityMultiplier\")] public float ballisticDrop { get; } Property Value float barrel public GameObject barrel { get; } Property Value GameObject durability public byte durability { get; } Property Value byte gunshotRolloffDistanceMultiplier Multiplier for the maximum distance the gunshot can be heard. public float gunshotRolloffDistanceMultiplier { get; protected set; } Property Value float isBraked public bool isBraked { get; } Property Value bool isSilenced public bool isSilenced { get; } Property Value bool shoot public AudioClip shoot { get; } Property Value AudioClip showQuality public override bool showQuality { get; } Property Value bool volume public float volume { get; } Property Value float Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemBarricadeAsset.html": {
    "href": "api/SDG.Unturned.ItemBarricadeAsset.html",
    "title": "Class ItemBarricadeAsset | Unturned Analyse Doc",
    "keywords": "Class ItemBarricadeAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemBarricadeAsset : ItemPlaceableAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset Implements IAssetErrorContext ISkinableAsset Derived ItemBeaconAsset ItemChargeAsset ItemFarmAsset ItemGeneratorAsset ItemLibraryAsset ItemOilPumpAsset ItemStorageAsset ItemTankAsset ItemTrapAsset Inherited Members ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemBarricadeAsset() public ItemBarricadeAsset() Fields _barricade protected GameObject _barricade Field Value GameObject _build protected EBuild _build Field Value EBuild _bypassClaim protected bool _bypassClaim Field Value bool _explosion protected ushort _explosion Field Value ushort _health protected ushort _health Field Value ushort _isLocked protected bool _isLocked Field Value bool _isRepairable protected bool _isRepairable Field Value bool _isSalvageable protected bool _isSalvageable Field Value bool _isSaveable protected bool _isSaveable Field Value bool _isUnpickupable protected bool _isUnpickupable Field Value bool _isVulnerable protected bool _isVulnerable Field Value bool _nav protected GameObject _nav Field Value GameObject _offset protected float _offset Field Value float _proofExplosion protected bool _proofExplosion Field Value bool _radius protected float _radius Field Value float _range protected float _range Field Value float _use protected AudioClip _use Field Value AudioClip canBeDamaged If false this barricade cannot take damage. public bool canBeDamaged Field Value bool eligibleForPooling Modded barricades can disable pooling if they have custom incompatible logic. public bool eligibleForPooling Field Value bool placementPreviewRef Optional alternative barricade prefab specifically for the client preview spawned. public MasterBundleReference<GameObject> placementPreviewRef Field Value MasterBundleReference<GameObject> shouldBypassPickupOwnership Defaults to false, except for explosive charges which bypass claims. Requested by Renaxon for collectible barricades that raiders can steal without destroying. public bool shouldBypassPickupOwnership Field Value bool Properties AllowPlacementInsideClipVolumes Defaults to false, except for explosive charges which bypass claims. If true the item can be placed inside player clip volumes. (out of bounds) public bool AllowPlacementInsideClipVolumes { get; } Property Value bool CanParentVehicleBePickedUp By default, vehicles with \"hooks\" (such as the Skycrane) cannot pick up vehicles with barricades attached. If all barricades on the vehicle set this to true then the vehicle can be picked up. Defaults to false. public bool CanParentVehicleBePickedUp { get; protected set; } Property Value bool VehicleGuid Vehicle to place. Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public Guid VehicleGuid { get; } Property Value Guid VehicleId Legacy ID of vehicle to place. Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public ushort VehicleId { get; } Property Value ushort allowCollisionWhileAnimating Should door colliders remain active while animation is playing? Enabled by modders trying to make stuff like elevators. public bool allowCollisionWhileAnimating { get; protected set; } Property Value bool allowPlacementOnVehicle public bool allowPlacementOnVehicle { get; protected set; } Property Value bool armorTier public EArmorTier armorTier { get; protected set; } Property Value EArmorTier barricade public GameObject barricade { get; } Property Value GameObject build public EBuild build { get; } Property Value EBuild bypassClaim public bool bypassClaim { get; } Property Value bool clip [Obsolete(\"Only one of Barricade.prefab or Clip.prefab are loaded now as _barricade\")] public GameObject clip { get; } Property Value GameObject explosion public ushort explosion { get; } Property Value ushort explosionGuid public Guid explosionGuid { get; } Property Value Guid health public ushort health { get; } Property Value ushort isLocked public bool isLocked { get; } Property Value bool isRepairable public bool isRepairable { get; } Property Value bool isSalvageable public bool isSalvageable { get; } Property Value bool isSaveable public bool isSaveable { get; } Property Value bool isUnpickupable public bool isUnpickupable { get; } Property Value bool isVulnerable public bool isVulnerable { get; } Property Value bool nav public GameObject nav { get; } Property Value GameObject offset public float offset { get; } Property Value float proofExplosion public bool proofExplosion { get; } Property Value bool radius public float radius { get; } Property Value float range public float range { get; } Property Value float salvageDurationMultiplier public float salvageDurationMultiplier { get; protected set; } Property Value float shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool use public AudioClip use { get; } Property Value AudioClip useWaterHeightTransparentSort public bool useWaterHeightTransparentSort { get; protected set; } Property Value bool Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item FindExplosionEffectAsset() public EffectAsset FindExplosionEffectAsset() Returns EffectAsset GetDefaultInventoryAudio() protected override AudioReference GetDefaultInventoryAudio() Returns AudioReference PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local canBeUsedInSafezone(SafezoneNode, bool) Should players be allowed to start primary/secondary use of this item while inside given safezone? If returns false the primary/secondary inputs are set to false. public override bool canBeUsedInSafezone(SafezoneNode safezone, bool byAdmin) Parameters safezone SafezoneNode byAdmin bool Returns bool getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemBeaconAsset.html": {
    "href": "api/SDG.Unturned.ItemBeaconAsset.html",
    "title": "Class ItemBeaconAsset | Unturned Analyse Doc",
    "keywords": "Class ItemBeaconAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemBeaconAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemBeaconAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.getState(EItemOrigin) ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemBeaconAsset() public ItemBeaconAsset() Properties ShouldScaleWithNumberOfParticipants public bool ShouldScaleWithNumberOfParticipants { get; } Property Value bool rewardID public ushort rewardID { get; } Property Value ushort rewards public byte rewards { get; } Property Value byte wave public ushort wave { get; } Property Value ushort Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemBoxAsset.html": {
    "href": "api/SDG.Unturned.ItemBoxAsset.html",
    "title": "Class ItemBoxAsset | Unturned Analyse Doc",
    "keywords": "Class ItemBoxAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemBoxAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemBoxAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemBoxAsset() public ItemBoxAsset() Fields _destroy protected int _destroy Field Value int _drops protected int[] _drops Field Value int[] _generate protected int _generate Field Value int Properties containsBonusItems public bool containsBonusItems { get; protected set; } Property Value bool destroy public int destroy { get; } Property Value int drops public int[] drops { get; } Property Value int[] generate public int generate { get; } Property Value int itemOrigin public EBoxItemOrigin itemOrigin { get; protected set; } Property Value EBoxItemOrigin probabilityModel public EBoxProbabilityModel probabilityModel { get; protected set; } Property Value EBoxProbabilityModel Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemCaliberAsset.html": {
    "href": "api/SDG.Unturned.ItemCaliberAsset.html",
    "title": "Class ItemCaliberAsset | Unturned Analyse Doc",
    "keywords": "Class ItemCaliberAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemCaliberAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemCaliberAsset Implements IAssetErrorContext ISkinableAsset Derived ItemBarrelAsset ItemGripAsset ItemMagazineAsset ItemSightAsset ItemTacticalAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemCaliberAsset() public ItemCaliberAsset() Fields _isBipod protected bool _isBipod Field Value bool _isPaintable protected bool _isPaintable Field Value bool aimDurationMultiplier Multiplier for gun's Aim_In_Duration. public float aimDurationMultiplier Field Value float aimingMovementSpeedMultiplier Movement speed multiplier while the gun is aiming down sights. public float aimingMovementSpeedMultiplier Field Value float aimingRecoilMultiplier Recoil magnitude multiplier while the gun is aiming down sights. public float aimingRecoilMultiplier Field Value float Properties BallisticGravityMultiplier Multiplier for bullet acceleration due to gravity. public float BallisticGravityMultiplier { get; protected set; } Property Value float CanDamageInvulernableEntities If true, gun can damage entities with Invulnerable tag. Defaults to false. public bool CanDamageInvulernableEntities { get; protected set; } Property Value bool FirerateOffset For backwards compatibility this is subtracted from the gun's firerate, so a positive number decreases the time between shots and a negative number increases the time between shots. public int FirerateOffset { get; } Property Value int ShouldOnlyAffectAimWhileProne public bool ShouldOnlyAffectAimWhileProne { get; } Property Value bool ballisticDamageMultiplier Multiplier for normal bullet damage. public float ballisticDamageMultiplier { get; protected set; } Property Value float calibers public ushort[] calibers { get; } Property Value ushort[] doesItemTypeHaveSkins Are there any official skins for this item type? Skips checking for base textures if item cannot have skins. protected override bool doesItemTypeHaveSkins { get; } Property Value bool firerate [Obsolete(\"Changed type to int\")] public byte firerate { get; } Property Value byte instantiatedAttachmentName Name to use when instantiating attachment prefab. By default the asset guid is used, but it can be overridden because some modders rely on the name for Unity's legacy animation component. For example in Toothy Deerryte's case there were a lot of duplicate animations to work around the guid naming, simplified by overriding name. public string instantiatedAttachmentName { get; protected set; } Property Value string isPaintable public bool isPaintable { get; } Property Value bool recoil_x public float recoil_x { get; } Property Value float recoil_y public float recoil_y { get; } Property Value float shake public float shake { get; } Property Value float shouldDestroyAttachmentColliders public bool shouldDestroyAttachmentColliders { get; protected set; } Property Value bool spread public float spread { get; } Property Value float sway public float sway { get; } Property Value float Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item GetDefaultInventoryAudio() protected override AudioReference GetDefaultInventoryAudio() Returns AudioReference PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemChargeAsset.html": {
    "href": "api/SDG.Unturned.ItemChargeAsset.html",
    "title": "Class ItemChargeAsset | Unturned Analyse Doc",
    "keywords": "Class ItemChargeAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemChargeAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemChargeAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.getState(EItemOrigin) ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemChargeAsset() public ItemChargeAsset() Fields _range2 protected float _range2 Field Value float animalDamage public float animalDamage Field Value float barricadeDamage public float barricadeDamage Field Value float explosionLaunchSpeed public float explosionLaunchSpeed Field Value float objectDamage public float objectDamage Field Value float playerDamage public float playerDamage Field Value float resourceDamage public float resourceDamage Field Value float structureDamage public float structureDamage Field Value float vehicleDamage public float vehicleDamage Field Value float zombieDamage public float zombieDamage Field Value float Properties DetonationEffectGuid public Guid DetonationEffectGuid { get; } Property Value Guid explosion2 public ushort explosion2 { get; } Property Value ushort range2 public float range2 { get; } Property Value float Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemClothingAsset.html": {
    "href": "api/SDG.Unturned.ItemClothingAsset.html",
    "title": "Class ItemClothingAsset | Unturned Analyse Doc",
    "keywords": "Class ItemClothingAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemClothingAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset Implements IAssetErrorContext ISkinableAsset Derived ItemBagAsset ItemGearAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemClothingAsset() public ItemClothingAsset() Fields _armor protected float _armor Field Value float _explosionArmor protected float _explosionArmor Field Value float hasPriorityOverCosmeticOverride If true, the value of priorityOverCosmeticOverride is used rather than GetDefaultTakesPriorityOverCosmetic(). Defaults to false. True if priorityOverCosmeticOverride is set. protected bool hasPriorityOverCosmeticOverride Field Value bool movementSpeedMultiplier public float movementSpeedMultiplier Field Value float priorityOverCosmeticOverride Overrides value of TakesPriorityOverCosmetic if hasPriorityOverCosmeticOverride is true. protected bool priorityOverCosmeticOverride Field Value bool wearAudio Sound to play when equipped. public AudioReference wearAudio Field Value AudioReference Properties TakesPriorityOverCosmetic The player can be wearing both a \"real\" in-game item and a cosmetic item in the same clothing slot. If true, the real item is shown rather than the cosmetic item. For example, night vision goggles are shown over any glasses cosmetic because of their gameplay-related green glow. public bool TakesPriorityOverCosmetic { get; } Property Value bool armor Multiplier to incoming damage. Defaults to 1.0. public float armor { get; } Property Value float beardVisible public bool beardVisible { get; protected set; } Property Value bool explosionArmor Multiplier to explosive damage. Defaults to armor value if Armor_Explosion isn't specified. public float explosionArmor { get; } Property Value float fallingDamageMultiplier Armor against falling damage. Defaults to 1.0, i.e., take the normal amount of damage. public float fallingDamageMultiplier { get; protected set; } Property Value float hairVisible public bool hairVisible { get; protected set; } Property Value bool preventsFallingBrokenBones If true on any worn clothing item, bones never break when falling. Defaults to false. public bool preventsFallingBrokenBones { get; protected set; } Property Value bool proofFire public bool proofFire { get; } Property Value bool proofRadiation public bool proofRadiation { get; } Property Value bool proofWater public bool proofWater { get; } Property Value bool shouldDestroyClothingColliders public bool shouldDestroyClothingColliders { get; protected set; } Property Value bool showQuality public override bool showQuality { get; } Property Value bool skinOverride If set, find a child meshrenderer with this name and change its material to the character skin material. public string skinOverride { get; protected set; } Property Value string visibleOnRagdoll public bool visibleOnRagdoll { get; protected set; } Property Value bool Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item GetDefaultInventoryAudio() protected override AudioReference GetDefaultInventoryAudio() Returns AudioReference GetDefaultTakesPriorityOverCosmetic() The player can be wearing both a \"real\" in-game item and a cosmetic item in the same clothing slot. This is called on the real item if priorityOverCosmeticOverride has not been set. If true, the real item is shown rather than the cosmetic item. If false, the cosmetic item can be seen. protected virtual bool GetDefaultTakesPriorityOverCosmetic() Returns bool PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local shouldBeVisible(bool) public bool shouldBeVisible(bool isRagdoll) Parameters isRagdoll bool Returns bool"
  },
  "api/SDG.Unturned.ItemCloudAsset.html": {
    "href": "api/SDG.Unturned.ItemCloudAsset.html",
    "title": "Class ItemCloudAsset | Unturned Analyse Doc",
    "keywords": "Class ItemCloudAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemCloudAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemCloudAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemCloudAsset() public ItemCloudAsset() Properties gravity public float gravity { get; } Property Value float Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemConsumeableAsset.Bleeding.html": {
    "href": "api/SDG.Unturned.ItemConsumeableAsset.Bleeding.html",
    "title": "Enum ItemConsumeableAsset.Bleeding | Unturned Analyse Doc",
    "keywords": "Enum ItemConsumeableAsset.Bleeding Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ItemConsumeableAsset.Bleeding Fields Cut = 2 Heal = 1 None = 0"
  },
  "api/SDG.Unturned.ItemConsumeableAsset.Bones.html": {
    "href": "api/SDG.Unturned.ItemConsumeableAsset.Bones.html",
    "title": "Enum ItemConsumeableAsset.Bones | Unturned Analyse Doc",
    "keywords": "Enum ItemConsumeableAsset.Bones Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ItemConsumeableAsset.Bones Fields Break = 2 Heal = 1 None = 0"
  },
  "api/SDG.Unturned.ItemConsumeableAsset.html": {
    "href": "api/SDG.Unturned.ItemConsumeableAsset.html",
    "title": "Class ItemConsumeableAsset | Unturned Analyse Doc",
    "keywords": "Class ItemConsumeableAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemConsumeableAsset : ItemWeaponAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset ItemConsumeableAsset Implements IAssetErrorContext ISkinableAsset Derived ItemFoodAsset ItemMedicalAsset ItemWaterAsset Inherited Members ItemWeaponAsset.range ItemWeaponAsset.playerDamageMultiplier ItemWeaponAsset.zombieDamageMultiplier ItemWeaponAsset.animalDamageMultiplier ItemWeaponAsset.barricadeDamage ItemWeaponAsset.structureDamage ItemWeaponAsset.vehicleDamage ItemWeaponAsset.resourceDamage ItemWeaponAsset.objectDamage ItemWeaponAsset.durability ItemWeaponAsset.wear ItemWeaponAsset.isInvulnerable ItemWeaponAsset.hasBladeID(byte) ItemWeaponAsset.initPlayerDamageParameters(ref DamagePlayerParameters) ItemWeaponAsset.BuildExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.bladeIDs ItemWeaponAsset.playerDamageBleeding ItemWeaponAsset.playerDamageBones ItemWeaponAsset.playerDamageFood ItemWeaponAsset.playerDamageWater ItemWeaponAsset.playerDamageVirus ItemWeaponAsset.playerDamageHallucination ItemWeaponAsset.zombieStunOverride ItemWeaponAsset.animalOrPlayerDamageMultiplier ItemWeaponAsset.zombieOrPlayerDamageMultiplier ItemWeaponAsset.allowFleshFx ItemWeaponAsset.bypassAllowedToDamagePlayer ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemConsumeableAsset() public ItemConsumeableAsset() Fields _explosion protected ushort _explosion Field Value ushort _use protected AudioClip _use Field Value AudioClip experience Experience to add or subtract when used. Defaults to zero. public int experience Field Value int questRewardsList protected NPCRewardsList questRewardsList Field Value NPCRewardsList Properties ExplosionEffectGuid public Guid ExplosionEffectGuid { get; } Property Value Guid IsExplosive public bool IsExplosive { get; } Property Value bool bleedingModifier public ItemConsumeableAsset.Bleeding bleedingModifier { get; protected set; } Property Value ItemConsumeableAsset.Bleeding bonesModifier public ItemConsumeableAsset.Bones bonesModifier { get; protected set; } Property Value ItemConsumeableAsset.Bones disinfectant public byte disinfectant { get; } Property Value byte doesItemTypeHaveSkins Canned beans have skins from April Fools. protected override bool doesItemTypeHaveSkins { get; } Property Value bool energy public byte energy { get; } Property Value byte explosion public ushort explosion { get; } Property Value ushort food public byte food { get; } Property Value byte foodConstrainsWater public bool foodConstrainsWater { get; protected set; } Property Value bool hasAid public bool hasAid { get; } Property Value bool health public byte health { get; } Property Value byte itemRewards public SpawnTableReward itemRewards { get; protected set; } Property Value SpawnTableReward oxygen public sbyte oxygen { get; protected set; } Property Value sbyte questRewards public INPCReward[] questRewards { get; } Property Value INPCReward[] shouldDeleteAfterUse public bool shouldDeleteAfterUse { get; protected set; } Property Value bool shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool showQuality public override bool showQuality { get; } Property Value bool use public AudioClip use { get; } Property Value AudioClip virus public byte virus { get; } Property Value byte vision public byte vision { get; } Property Value byte warmth public uint warmth { get; } Property Value uint water public byte water { get; } Property Value byte Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item FindExplosionEffectAsset() public EffectAsset FindExplosionEffectAsset() Returns EffectAsset GrantQuestRewards(Player) public void GrantQuestRewards(Player player) Parameters player Player IsExplosionEffectRefNull() public bool IsExplosionEffectRefNull() Returns bool PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local grantQuestRewards(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void grantQuestRewards(Player player, bool shouldSend) Parameters player Player shouldSend bool"
  },
  "api/SDG.Unturned.ItemCurrencyAsset.Entry.html": {
    "href": "api/SDG.Unturned.ItemCurrencyAsset.Entry.html",
    "title": "Struct ItemCurrencyAsset.Entry | Unturned Analyse Doc",
    "keywords": "Struct ItemCurrencyAsset.Entry Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct ItemCurrencyAsset.Entry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields isVisibleInVendorMenu Should this item/value be shown in the list of vendor currency items? Useful to hide modded item stacks e.g. a stack of 100x $20 bills. public bool isVisibleInVendorMenu Field Value bool item public AssetReference<ItemAsset> item Field Value AssetReference<ItemAsset> value public uint value Field Value uint"
  },
  "api/SDG.Unturned.ItemCurrencyAsset.html": {
    "href": "api/SDG.Unturned.ItemCurrencyAsset.html",
    "title": "Class ItemCurrencyAsset | Unturned Analyse Doc",
    "keywords": "Class ItemCurrencyAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Associates items of the same currency, e.g. dollars or bullets. public class ItemCurrencyAsset : Asset, IAssetErrorContext Inheritance object Asset ItemCurrencyAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemCurrencyAsset() public ItemCurrencyAsset() Properties defaultConditionFormat String to format value {0} of total {1} into if not otherwise specified in NPC condition. public string defaultConditionFormat { get; protected set; } Property Value string entries public ItemCurrencyAsset.Entry[] entries { get; protected set; } Property Value Entry[] valueFormat String to format value {0} into. public string valueFormat { get; protected set; } Property Value string Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local canAfford(Player, uint) Does player have access to items covering certain value? public bool canAfford(Player player, uint value) Parameters player Player value uint Returns bool getInventoryValue(Player) Sum up value of each currency item in player's inventory. public uint getInventoryValue(Player player) Parameters player Player Returns uint grantValue(Player, uint) Add items to player's inventory to reward value. public void grantValue(Player player, uint requiredValue) Parameters player Player requiredValue uint spendValue(Player, uint) Remove items from player's inventory to pay required value. public bool spendValue(Player player, uint requiredValue) Parameters player Player requiredValue uint Returns bool"
  },
  "api/SDG.Unturned.ItemData.html": {
    "href": "api/SDG.Unturned.ItemData.html",
    "title": "Class ItemData | Unturned Analyse Doc",
    "keywords": "Class ItemData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemData Inheritance object ItemData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemData(Item, uint, Vector3, bool) public ItemData(Item newItem, uint newInstanceID, Vector3 newPoint, bool newDropped) Parameters newItem Item newInstanceID uint newPoint Vector3 newDropped bool Properties instanceID public uint instanceID { get; } Property Value uint isDropped public bool isDropped { get; } Property Value bool item public Item item { get; } Property Value Item lastDropped public float lastDropped { get; } Property Value float point public Vector3 point { get; } Property Value Vector3"
  },
  "api/SDG.Unturned.ItemDefIconInfo.html": {
    "href": "api/SDG.Unturned.ItemDefIconInfo.html",
    "title": "Class ItemDefIconInfo | Unturned Analyse Doc",
    "keywords": "Class ItemDefIconInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemDefIconInfo Inheritance object ItemDefIconInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemDefIconInfo() public ItemDefIconInfo() Fields extraPath Icon saved for community members in Extras folder. public string extraPath Field Value string Methods onLargeItemIconReady(Texture2D) public void onLargeItemIconReady(Texture2D texture) Parameters texture Texture2D onSmallItemIconReady(Texture2D) public void onSmallItemIconReady(Texture2D texture) Parameters texture Texture2D"
  },
  "api/SDG.Unturned.ItemDescriptionBuilder.html": {
    "href": "api/SDG.Unturned.ItemDescriptionBuilder.html",
    "title": "Struct ItemDescriptionBuilder | Unturned Analyse Doc",
    "keywords": "Struct ItemDescriptionBuilder Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct ItemDescriptionBuilder Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields lines public List<ItemDescriptionLine> lines Field Value List<ItemDescriptionLine> shouldRestrictToLegacyContent If true, description should only be populated with contents from prior to the auto-layout UI changes. public bool shouldRestrictToLegacyContent Field Value bool stringBuilder BuildDescription implementations can use this to concatenate longer strings. public StringBuilder stringBuilder Field Value StringBuilder Methods Append(string, int) public void Append(string text, int sortOrder) Parameters text string sortOrder int"
  },
  "api/SDG.Unturned.ItemDescriptionLine.html": {
    "href": "api/SDG.Unturned.ItemDescriptionLine.html",
    "title": "Struct ItemDescriptionLine | Unturned Analyse Doc",
    "keywords": "Struct ItemDescriptionLine Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct ItemDescriptionLine : IComparable<ItemDescriptionLine> Implements IComparable<ItemDescriptionLine> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields sortOrder public int sortOrder Field Value int text public string text Field Value string Methods CompareTo(ItemDescriptionLine) public int CompareTo(ItemDescriptionLine other) Parameters other ItemDescriptionLine Returns int"
  },
  "api/SDG.Unturned.ItemDetonatorAsset.html": {
    "href": "api/SDG.Unturned.ItemDetonatorAsset.html",
    "title": "Class ItemDetonatorAsset | Unturned Analyse Doc",
    "keywords": "Class ItemDetonatorAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemDetonatorAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemDetonatorAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemDetonatorAsset() public ItemDetonatorAsset() Fields _use protected AudioClip _use Field Value AudioClip Properties use public AudioClip use { get; } Property Value AudioClip Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemDiscarded.html": {
    "href": "api/SDG.Unturned.ItemDiscarded.html",
    "title": "Delegate ItemDiscarded | Unturned Analyse Doc",
    "keywords": "Delegate ItemDiscarded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemDiscarded(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar Constructors ItemDiscarded(object, IntPtr) public ItemDiscarded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, ItemJar, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte index, ItemJar jar, AsyncCallback callback, object @object) Parameters page byte index byte jar ItemJar callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, ItemJar) public virtual void Invoke(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar"
  },
  "api/SDG.Unturned.ItemDrop.html": {
    "href": "api/SDG.Unturned.ItemDrop.html",
    "title": "Class ItemDrop | Unturned Analyse Doc",
    "keywords": "Class ItemDrop Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemDrop Inheritance object ItemDrop Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemDrop(Transform, InteractableItem, uint) public ItemDrop(Transform newModel, InteractableItem newInteractableItem, uint newInstanceID) Parameters newModel Transform newInteractableItem InteractableItem newInstanceID uint Properties instanceID public uint instanceID { get; } Property Value uint interactableItem public InteractableItem interactableItem { get; } Property Value InteractableItem model public Transform model { get; } Property Value Transform"
  },
  "api/SDG.Unturned.ItemDropAdded.html": {
    "href": "api/SDG.Unturned.ItemDropAdded.html",
    "title": "Delegate ItemDropAdded | Unturned Analyse Doc",
    "keywords": "Delegate ItemDropAdded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemDropAdded(Transform model, InteractableItem interactableItem) Parameters model Transform interactableItem InteractableItem Constructors ItemDropAdded(object, IntPtr) public ItemDropAdded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Transform, InteractableItem, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Transform model, InteractableItem interactableItem, AsyncCallback callback, object @object) Parameters model Transform interactableItem InteractableItem callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Transform, InteractableItem) public virtual void Invoke(Transform model, InteractableItem interactableItem) Parameters model Transform interactableItem InteractableItem"
  },
  "api/SDG.Unturned.ItemDropRemoved.html": {
    "href": "api/SDG.Unturned.ItemDropRemoved.html",
    "title": "Delegate ItemDropRemoved | Unturned Analyse Doc",
    "keywords": "Delegate ItemDropRemoved Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemDropRemoved(Transform model, InteractableItem interactableItem) Parameters model Transform interactableItem InteractableItem Constructors ItemDropRemoved(object, IntPtr) public ItemDropRemoved(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Transform, InteractableItem, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Transform model, InteractableItem interactableItem, AsyncCallback callback, object @object) Parameters model Transform interactableItem InteractableItem callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Transform, InteractableItem) public virtual void Invoke(Transform model, InteractableItem interactableItem) Parameters model Transform interactableItem InteractableItem"
  },
  "api/SDG.Unturned.ItemFarmAsset.html": {
    "href": "api/SDG.Unturned.ItemFarmAsset.html",
    "title": "Class ItemFarmAsset | Unturned Analyse Doc",
    "keywords": "Class ItemFarmAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemFarmAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemFarmAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.getState(EItemOrigin) ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemFarmAsset() public ItemFarmAsset() Fields _grow protected ushort _grow Field Value ushort _growth protected uint _growth Field Value uint growSpawnTableGuid public Guid growSpawnTableGuid Field Value Guid harvestRewardExperience Amount of experience to reward harvesting player. public uint harvestRewardExperience Field Value uint Properties canFertilize public bool canFertilize { get; protected set; } Property Value bool grow public ushort grow { get; } Property Value ushort growth public uint growth { get; } Property Value uint ignoreSoilRestrictions public bool ignoreSoilRestrictions { get; protected set; } Property Value bool isAffectedByAgricultureSkill If true, harvesting has a chance to provide a second item. public bool isAffectedByAgricultureSkill { get; protected set; } Property Value bool shouldRainAffectGrowth If true, rain will finish growing the plant. public bool shouldRainAffectGrowth { get; protected set; } Property Value bool Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemFilterAsset.html": {
    "href": "api/SDG.Unturned.ItemFilterAsset.html",
    "title": "Class ItemFilterAsset | Unturned Analyse Doc",
    "keywords": "Class ItemFilterAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemFilterAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemFilterAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemFilterAsset() public ItemFilterAsset() Fields _use protected AudioClip _use Field Value AudioClip Properties use public AudioClip use { get; } Property Value AudioClip Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemFisherAsset.html": {
    "href": "api/SDG.Unturned.ItemFisherAsset.html",
    "title": "Class ItemFisherAsset | Unturned Analyse Doc",
    "keywords": "Class ItemFisherAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemFisherAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemFisherAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemFisherAsset() public ItemFisherAsset() Fields rewardExperienceMax public int rewardExperienceMax Field Value int rewardExperienceMin public int rewardExperienceMin Field Value int Properties cast public AudioClip cast { get; } Property Value AudioClip reel public AudioClip reel { get; } Property Value AudioClip rewardID public ushort rewardID { get; } Property Value ushort tug public AudioClip tug { get; } Property Value AudioClip Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemFoodAsset.html": {
    "href": "api/SDG.Unturned.ItemFoodAsset.html",
    "title": "Class ItemFoodAsset | Unturned Analyse Doc",
    "keywords": "Class ItemFoodAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemFoodAsset : ItemConsumeableAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset ItemConsumeableAsset ItemFoodAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemConsumeableAsset._use ItemConsumeableAsset.experience ItemConsumeableAsset._explosion ItemConsumeableAsset.questRewardsList ItemConsumeableAsset.IsExplosionEffectRefNull() ItemConsumeableAsset.FindExplosionEffectAsset() ItemConsumeableAsset.GrantQuestRewards(Player) ItemConsumeableAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemConsumeableAsset.PopulateAsset(Bundle, DatDictionary, Local) ItemConsumeableAsset.grantQuestRewards(Player, bool) ItemConsumeableAsset.use ItemConsumeableAsset.health ItemConsumeableAsset.food ItemConsumeableAsset.water ItemConsumeableAsset.virus ItemConsumeableAsset.disinfectant ItemConsumeableAsset.energy ItemConsumeableAsset.vision ItemConsumeableAsset.oxygen ItemConsumeableAsset.warmth ItemConsumeableAsset.bleedingModifier ItemConsumeableAsset.bonesModifier ItemConsumeableAsset.hasAid ItemConsumeableAsset.foodConstrainsWater ItemConsumeableAsset.shouldDeleteAfterUse ItemConsumeableAsset.showQuality ItemConsumeableAsset.ExplosionEffectGuid ItemConsumeableAsset.explosion ItemConsumeableAsset.IsExplosive ItemConsumeableAsset.questRewards ItemConsumeableAsset.itemRewards ItemConsumeableAsset.doesItemTypeHaveSkins ItemConsumeableAsset.shouldFriendlySentryTargetUser ItemWeaponAsset.range ItemWeaponAsset.playerDamageMultiplier ItemWeaponAsset.zombieDamageMultiplier ItemWeaponAsset.animalDamageMultiplier ItemWeaponAsset.barricadeDamage ItemWeaponAsset.structureDamage ItemWeaponAsset.vehicleDamage ItemWeaponAsset.resourceDamage ItemWeaponAsset.objectDamage ItemWeaponAsset.durability ItemWeaponAsset.wear ItemWeaponAsset.isInvulnerable ItemWeaponAsset.hasBladeID(byte) ItemWeaponAsset.initPlayerDamageParameters(ref DamagePlayerParameters) ItemWeaponAsset.BuildExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.bladeIDs ItemWeaponAsset.playerDamageBleeding ItemWeaponAsset.playerDamageBones ItemWeaponAsset.playerDamageFood ItemWeaponAsset.playerDamageWater ItemWeaponAsset.playerDamageVirus ItemWeaponAsset.playerDamageHallucination ItemWeaponAsset.zombieStunOverride ItemWeaponAsset.animalOrPlayerDamageMultiplier ItemWeaponAsset.zombieOrPlayerDamageMultiplier ItemWeaponAsset.allowFleshFx ItemWeaponAsset.bypassAllowedToDamagePlayer ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemFoodAsset() public ItemFoodAsset()"
  },
  "api/SDG.Unturned.ItemFuelAsset.html": {
    "href": "api/SDG.Unturned.ItemFuelAsset.html",
    "title": "Class ItemFuelAsset | Unturned Analyse Doc",
    "keywords": "Class ItemFuelAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemFuelAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemFuelAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemFuelAsset() public ItemFuelAsset() Fields _fuel protected ushort _fuel Field Value ushort _use protected AudioClip _use Field Value AudioClip Properties fuel public ushort fuel { get; } Property Value ushort shouldDeleteAfterFillingTarget public bool shouldDeleteAfterFillingTarget { get; protected set; } Property Value bool use public AudioClip use { get; } Property Value AudioClip Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemGearAsset.html": {
    "href": "api/SDG.Unturned.ItemGearAsset.html",
    "title": "Class ItemGearAsset | Unturned Analyse Doc",
    "keywords": "Class ItemGearAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemGearAsset : ItemClothingAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemGearAsset Implements IAssetErrorContext ISkinableAsset Derived ItemGlassesAsset ItemHatAsset ItemMaskAsset Inherited Members ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemGearAsset() public ItemGearAsset() Properties hairOverride If set, find a child meshrenderer with this name and change its material to the character hair material. public string hairOverride { get; protected set; } Property Value string Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemGeneratorAsset.html": {
    "href": "api/SDG.Unturned.ItemGeneratorAsset.html",
    "title": "Class ItemGeneratorAsset | Unturned Analyse Doc",
    "keywords": "Class ItemGeneratorAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemGeneratorAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemGeneratorAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemGeneratorAsset() public ItemGeneratorAsset() Fields _burn protected float _burn Field Value float _capacity protected ushort _capacity Field Value ushort _wirerange protected float _wirerange Field Value float Properties burn Seconds to wait between burning one unit of fuel. public float burn { get; } Property Value float capacity public ushort capacity { get; } Property Value ushort wirerange public float wirerange { get; } Property Value float Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemGlassesAsset.html": {
    "href": "api/SDG.Unturned.ItemGlassesAsset.html",
    "title": "Class ItemGlassesAsset | Unturned Analyse Doc",
    "keywords": "Class ItemGlassesAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemGlassesAsset : ItemGearAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemGearAsset ItemGlassesAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemGearAsset.hairOverride ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemGlassesAsset() public ItemGlassesAsset() Fields _glasses protected GameObject _glasses Field Value GameObject nightvisionColor public Color nightvisionColor Field Value Color nightvisionFogIntensity public float nightvisionFogIntensity Field Value float Properties glasses public GameObject glasses { get; } Property Value GameObject isBlindfold public bool isBlindfold { get; protected set; } Property Value bool isNightvisionAllowedInThirdPerson If true, NVGs work in third-person, not just first-person. Defaults to false. public bool isNightvisionAllowedInThirdPerson { get; protected set; } Property Value bool lightConfig public PlayerSpotLightConfig lightConfig { get; protected set; } Property Value PlayerSpotLightConfig vision public ELightingVision vision { get; } Property Value ELightingVision Methods GetDefaultTakesPriorityOverCosmetic() The player can be wearing both a \"real\" in-game item and a cosmetic item in the same clothing slot. This is called on the real item if priorityOverCosmeticOverride has not been set. If true, the real item is shown rather than the cosmetic item. If false, the cosmetic item can be seen. protected override bool GetDefaultTakesPriorityOverCosmetic() Returns bool PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemGripAsset.html": {
    "href": "api/SDG.Unturned.ItemGripAsset.html",
    "title": "Class ItemGripAsset | Unturned Analyse Doc",
    "keywords": "Class ItemGripAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemGripAsset : ItemCaliberAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemCaliberAsset ItemGripAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemCaliberAsset.aimingRecoilMultiplier ItemCaliberAsset.aimDurationMultiplier ItemCaliberAsset._isPaintable ItemCaliberAsset.aimingMovementSpeedMultiplier ItemCaliberAsset._isBipod ItemCaliberAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemCaliberAsset.GetDefaultInventoryAudio() ItemCaliberAsset.calibers ItemCaliberAsset.recoil_x ItemCaliberAsset.recoil_y ItemCaliberAsset.spread ItemCaliberAsset.sway ItemCaliberAsset.shake ItemCaliberAsset.FirerateOffset ItemCaliberAsset.isPaintable ItemCaliberAsset.ballisticDamageMultiplier ItemCaliberAsset.BallisticGravityMultiplier ItemCaliberAsset.ShouldOnlyAffectAimWhileProne ItemCaliberAsset.CanDamageInvulernableEntities ItemCaliberAsset.shouldDestroyAttachmentColliders ItemCaliberAsset.instantiatedAttachmentName ItemCaliberAsset.doesItemTypeHaveSkins ItemCaliberAsset.firerate ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemGripAsset() public ItemGripAsset() Fields _grip protected GameObject _grip Field Value GameObject Properties grip public GameObject grip { get; } Property Value GameObject isBipod [Obsolete] public bool isBipod { get; } Property Value bool Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemGrowerAsset.html": {
    "href": "api/SDG.Unturned.ItemGrowerAsset.html",
    "title": "Class ItemGrowerAsset | Unturned Analyse Doc",
    "keywords": "Class ItemGrowerAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemGrowerAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemGrowerAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemGrowerAsset() public ItemGrowerAsset() Fields _use protected AudioClip _use Field Value AudioClip Properties use public AudioClip use { get; } Property Value AudioClip Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemGunAsset.html": {
    "href": "api/SDG.Unturned.ItemGunAsset.html",
    "title": "Class ItemGunAsset | Unturned Analyse Doc",
    "keywords": "Class ItemGunAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemGunAsset : ItemWeaponAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset ItemGunAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemWeaponAsset.range ItemWeaponAsset.playerDamageMultiplier ItemWeaponAsset.zombieDamageMultiplier ItemWeaponAsset.animalDamageMultiplier ItemWeaponAsset.barricadeDamage ItemWeaponAsset.structureDamage ItemWeaponAsset.vehicleDamage ItemWeaponAsset.resourceDamage ItemWeaponAsset.objectDamage ItemWeaponAsset.durability ItemWeaponAsset.wear ItemWeaponAsset.isInvulnerable ItemWeaponAsset.hasBladeID(byte) ItemWeaponAsset.initPlayerDamageParameters(ref DamagePlayerParameters) ItemWeaponAsset.BuildExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.bladeIDs ItemWeaponAsset.playerDamageBleeding ItemWeaponAsset.playerDamageBones ItemWeaponAsset.playerDamageFood ItemWeaponAsset.playerDamageWater ItemWeaponAsset.playerDamageVirus ItemWeaponAsset.playerDamageHallucination ItemWeaponAsset.zombieStunOverride ItemWeaponAsset.animalOrPlayerDamageMultiplier ItemWeaponAsset.zombieOrPlayerDamageMultiplier ItemWeaponAsset.allowFleshFx ItemWeaponAsset.bypassAllowedToDamagePlayer ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemGunAsset() public ItemGunAsset() Fields _aim protected AudioClip _aim Field Value AudioClip _chamberJammedSound protected AudioClip _chamberJammedSound Field Value AudioClip _hammer protected AudioClip _hammer Field Value AudioClip _minigun protected AudioClip _minigun Field Value AudioClip _projectile protected GameObject _projectile Field Value GameObject _reload protected AudioClip _reload Field Value AudioClip _shoot protected AudioClip _shoot Field Value AudioClip action public EAction action Field Value EAction aimingMovementSpeedMultiplier Movement speed multiplier while the gun is aiming down sights. public float aimingMovementSpeedMultiplier Field Value float aimingRecoilMultiplier Recoil magnitude multiplier while the gun is aiming down sights. public float aimingRecoilMultiplier Field Value float alertRadius public float alertRadius Field Value float ammoMax public byte ammoMax Field Value byte ammoMin public byte ammoMin Field Value byte ballisticForce public float ballisticForce Field Value float ballisticSteps public byte ballisticSteps Field Value byte ballisticTravel public float ballisticTravel Field Value float bursts public int bursts Field Value int damageFalloffMaxRange [0, 1] percentage of maximum range where damage finishes decreasing toward falloff multiplier. public float damageFalloffMaxRange Field Value float damageFalloffMultiplier [0, 1] percentage of damage to apply at damageFalloffMaxRange. public float damageFalloffMultiplier Field Value float damageFalloffRange [0, 1] percentage of maximum range where damage begins decreasing toward falloff multiplier. public float damageFalloffRange Field Value float explosion public ushort explosion Field Value ushort firerate public byte firerate Field Value byte hammerTime public float hammerTime Field Value float hasAuto public bool hasAuto Field Value bool hasBarrel public bool hasBarrel Field Value bool hasBurst public bool hasBurst Field Value bool hasGrip public bool hasGrip Field Value bool hasSafety public bool hasSafety Field Value bool hasSemi public bool hasSemi Field Value bool hasSight public bool hasSight Field Value bool hasTactical public bool hasTactical Field Value bool isTurret public bool isTurret Field Value bool muzzle [Obsolete] public ushort muzzle Field Value ushort muzzleGuid public Guid muzzleGuid Field Value Guid projectileExplosionEffectGuid public Guid projectileExplosionEffectGuid Field Value Guid projectileExplosionLaunchSpeed public float projectileExplosionLaunchSpeed Field Value float projectileLifespan Seconds before physics projectile is destroyed. public float projectileLifespan Field Value float projectilePenetrateBuildables public bool projectilePenetrateBuildables Field Value bool recoilCrouch Recoil magnitude while crouched. public float recoilCrouch Field Value float recoilMax_x public float recoilMax_x Field Value float recoilMax_y public float recoilMax_y Field Value float recoilMidair Recoil magnitude while not grounded. public float recoilMidair Field Value float recoilMin_x public float recoilMin_x Field Value float recoilMin_y public float recoilMin_y Field Value float recoilProne Recoil magnitude while prone. public float recoilProne Field Value float recoilSprint Recoil magnitude while sprinting. public float recoilSprint Field Value float recoilSwimming Recoil magnitude while swimming. public float recoilSwimming Field Value float recover_x public float recover_x Field Value float recover_y public float recover_y Field Value float reloadTime public float reloadTime Field Value float replace public float replace Field Value float requiresNonZeroAttachmentCaliber Defaults to false. If true, attachments must specify at least one non-zero caliber. Requested by Great Hero J to block vanilla attachments in VGR. public bool requiresNonZeroAttachmentCaliber Field Value bool shakeMax_x public float shakeMax_x Field Value float shakeMax_y public float shakeMax_y Field Value float shakeMax_z public float shakeMax_z Field Value float shakeMin_x public float shakeMin_x Field Value float shakeMin_y public float shakeMin_y Field Value float shakeMin_z public float shakeMin_z Field Value float shell [Obsolete] public ushort shell Field Value ushort shellGuid public Guid shellGuid Field Value Guid shootQuestRewards protected NPCRewardsList shootQuestRewards Field Value NPCRewardsList shouldDeleteEmptyMagazines public bool shouldDeleteEmptyMagazines Field Value bool spreadAim public float spreadAim Field Value float spreadCrouch Spread multiplier while crouched. public float spreadCrouch Field Value float spreadHip [Obsolete(\"Replaced by baseSpreadAngleRadians\")] public float spreadHip Field Value float spreadMidair Spread multiplier while not grounded. public float spreadMidair Field Value float spreadProne Spread multiplier while prone. public float spreadProne Field Value float spreadSprint Spread multiplier while sprinting. public float spreadSprint Field Value float spreadSwimming Spread multiplier while swimming. public float spreadSwimming Field Value float unplace public float unplace Field Value float Properties aim public AudioClip aim { get; } Property Value AudioClip aimInDuration Seconds from pressing \"aim\" to fully aiming down sights. public float aimInDuration { get; protected set; } Property Value float allowMagazineChange Can magazine be changed by player? public bool allowMagazineChange { get; protected set; } Property Value bool ammoPerShot Ammo quantity to consume per shot fired. public byte ammoPerShot { get; protected set; } Property Value byte attachmentCalibers public ushort[] attachmentCalibers { get; } Property Value ushort[] barrelID public ushort barrelID { get; set; } Property Value ushort baseSpreadAngleRadians public float baseSpreadAngleRadians { get; } Property Value float bulletGravityMultiplier public float bulletGravityMultiplier { get; protected set; } Property Value float canAimDuringSprint Can player ADS while sprinting and vice versa? public bool canAimDuringSprint { get; protected set; } Property Value bool canEverJam Is this gun setup to have a change of jamming? public bool canEverJam { get; protected set; } Property Value bool chamberJammedSound public AudioClip chamberJammedSound { get; } Property Value AudioClip doesItemTypeHaveSkins Are there any official skins for this item type? Skips checking for base textures if item cannot have skins. protected override bool doesItemTypeHaveSkins { get; } Property Value bool fireDelay Simulation steps to wait after input before firing. public int fireDelay { get; protected set; } Property Value int fireDelaySound Sound to play when input is pressed but weapon has a fire delay. public AudioClip fireDelaySound { get; protected set; } Property Value AudioClip gripID public ushort gripID { get; set; } Property Value ushort gunshotRolloffDistance Maximum distance the gunshot can be heard. public float gunshotRolloffDistance { get; protected set; } Property Value float hammer public AudioClip hammer { get; } Property Value AudioClip infiniteAmmo Can this weapon be fired without consuming ammo? Some mods use this for turrets. public bool infiniteAmmo { get; protected set; } Property Value bool instakillHeadshots Can this weapon instantly kill players by headshots? Only valid when game config also enables this. public bool instakillHeadshots { get; protected set; } Property Value bool jamMaxChance [0, 1] percentage of the time that shots will jam the gun when at 0% quality. Chance of jamming is blended between 0% at jamQualityThreshold and jamMaxChance% at 0% quality. public float jamMaxChance { get; protected set; } Property Value float jamQualityThreshold [0, 1] quality percentage that jamming will start happening. public float jamQualityThreshold { get; protected set; } Property Value float magazineCalibers public ushort[] magazineCalibers { get; } Property Value ushort[] minigun public AudioClip minigun { get; } Property Value AudioClip muzzleVelocity public float muzzleVelocity { get; protected set; } Property Value float projectile public GameObject projectile { get; } Property Value GameObject rangeRangefinder Override Rangefinder attachment's maximum range. Defaults to range value. public float rangeRangefinder { get; protected set; } Property Value float reload public AudioClip reload { get; } Property Value AudioClip shoot public AudioClip shoot { get; } Property Value AudioClip shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool shouldScaleAimAnimations If true, Aim_Start and Aim_Stop animations are scaled according to actual aim duration. public bool shouldScaleAimAnimations { get; protected set; } Property Value bool showQuality public override bool showQuality { get; } Property Value bool sightID public ushort sightID { get; set; } Property Value ushort tacticalID public ushort tacticalID { get; set; } Property Value ushort unjamChamberAnimName Name of the animation to play when unjamming chamber. public string unjamChamberAnimName { get; protected set; } Property Value string Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item FindMuzzleEffectAsset() public EffectAsset FindMuzzleEffectAsset() Returns EffectAsset FindShellEffectAsset() public EffectAsset FindShellEffectAsset() Returns EffectAsset GetDefaultInventoryAudio() protected override AudioReference GetDefaultInventoryAudio() Returns AudioReference GrantShootQuestRewards(Player) public void GrantShootQuestRewards(Player player) Parameters player Player PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getMagazineID() public ushort getMagazineID() Returns ushort getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[] getState(ushort, ushort, ushort, ushort, ushort, byte) public byte[] getState(ushort sight, ushort tactical, ushort grip, ushort barrel, ushort magazine, byte ammo) Parameters sight ushort tactical ushort grip ushort barrel ushort magazine ushort ammo byte Returns byte[]"
  },
  "api/SDG.Unturned.ItemHatAsset.html": {
    "href": "api/SDG.Unturned.ItemHatAsset.html",
    "title": "Class ItemHatAsset | Unturned Analyse Doc",
    "keywords": "Class ItemHatAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemHatAsset : ItemGearAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemGearAsset ItemHatAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemGearAsset.hairOverride ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemHatAsset() public ItemHatAsset() Fields _hat protected GameObject _hat Field Value GameObject Properties hat public GameObject hat { get; } Property Value GameObject Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemIconInfo.html": {
    "href": "api/SDG.Unturned.ItemIconInfo.html",
    "title": "Class ItemIconInfo | Unturned Analyse Doc",
    "keywords": "Class ItemIconInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemIconInfo Inheritance object ItemIconInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemIconInfo() public ItemIconInfo() Fields callback public ItemIconReady callback Field Value ItemIconReady dynamic_props public string dynamic_props Field Value string id [Obsolete(\"Removed in favor of itemAsset\")] public ushort id Field Value ushort itemAsset public ItemAsset itemAsset Field Value ItemAsset quality public byte quality Field Value byte readableOnCPU public bool readableOnCPU Field Value bool scale public bool scale Field Value bool skin [Obsolete(\"Removed in favor of skinAsset\")] public ushort skin Field Value ushort skinAsset public SkinAsset skinAsset Field Value SkinAsset state public byte[] state Field Value byte[] tags public string tags Field Value string x public int x Field Value int y public int y Field Value int"
  },
  "api/SDG.Unturned.ItemIconReady.html": {
    "href": "api/SDG.Unturned.ItemIconReady.html",
    "title": "Delegate ItemIconReady | Unturned Analyse Doc",
    "keywords": "Delegate ItemIconReady Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemIconReady(Texture2D texture) Parameters texture Texture2D Constructors ItemIconReady(object, IntPtr) public ItemIconReady(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Texture2D, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Texture2D texture, AsyncCallback callback, object @object) Parameters texture Texture2D callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Texture2D) public virtual void Invoke(Texture2D texture) Parameters texture Texture2D"
  },
  "api/SDG.Unturned.ItemJar.html": {
    "href": "api/SDG.Unturned.ItemJar.html",
    "title": "Class ItemJar | Unturned Analyse Doc",
    "keywords": "Class ItemJar Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemJar Inheritance object ItemJar Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemJar(Item) public ItemJar(Item newItem) Parameters newItem Item ItemJar(byte, byte, byte, Item) public ItemJar(byte new_x, byte new_y, byte newRot, Item newItem) Parameters new_x byte new_y byte newRot byte newItem Item Fields interactableItem public InteractableItem interactableItem Field Value InteractableItem rot public byte rot Field Value byte size_x public byte size_x Field Value byte size_y public byte size_y Field Value byte x public byte x Field Value byte y public byte y Field Value byte Properties item public Item item { get; } Property Value Item Methods GetAsset() public ItemAsset GetAsset() Returns ItemAsset GetAsset<T>() public T GetAsset<T>() where T : ItemAsset Returns T Type Parameters T"
  },
  "api/SDG.Unturned.ItemKeyAsset.html": {
    "href": "api/SDG.Unturned.ItemKeyAsset.html",
    "title": "Class ItemKeyAsset | Unturned Analyse Doc",
    "keywords": "Class ItemKeyAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemKeyAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemKeyAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemKeyAsset() public ItemKeyAsset() Fields exchangeWithTargetItem public bool exchangeWithTargetItem Field Value bool Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemLibraryAsset.html": {
    "href": "api/SDG.Unturned.ItemLibraryAsset.html",
    "title": "Class ItemLibraryAsset | Unturned Analyse Doc",
    "keywords": "Class ItemLibraryAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemLibraryAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemLibraryAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemLibraryAsset() public ItemLibraryAsset() Fields _capacity protected uint _capacity Field Value uint _tax protected byte _tax Field Value byte Properties capacity public uint capacity { get; } Property Value uint tax public byte tax { get; } Property Value byte Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemMagazineAsset.html": {
    "href": "api/SDG.Unturned.ItemMagazineAsset.html",
    "title": "Class ItemMagazineAsset | Unturned Analyse Doc",
    "keywords": "Class ItemMagazineAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemMagazineAsset : ItemCaliberAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemCaliberAsset ItemMagazineAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemCaliberAsset.aimingRecoilMultiplier ItemCaliberAsset.aimDurationMultiplier ItemCaliberAsset._isPaintable ItemCaliberAsset.aimingMovementSpeedMultiplier ItemCaliberAsset._isBipod ItemCaliberAsset.GetDefaultInventoryAudio() ItemCaliberAsset.calibers ItemCaliberAsset.recoil_x ItemCaliberAsset.recoil_y ItemCaliberAsset.spread ItemCaliberAsset.sway ItemCaliberAsset.shake ItemCaliberAsset.FirerateOffset ItemCaliberAsset.isPaintable ItemCaliberAsset.ballisticDamageMultiplier ItemCaliberAsset.BallisticGravityMultiplier ItemCaliberAsset.ShouldOnlyAffectAimWhileProne ItemCaliberAsset.CanDamageInvulernableEntities ItemCaliberAsset.shouldDestroyAttachmentColliders ItemCaliberAsset.instantiatedAttachmentName ItemCaliberAsset.doesItemTypeHaveSkins ItemCaliberAsset.firerate ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemMagazineAsset() public ItemMagazineAsset() Fields _isExplosive protected bool _isExplosive Field Value bool _magazine protected GameObject _magazine Field Value GameObject _range protected float _range Field Value float animalDamage public float animalDamage Field Value float barricadeDamage public float barricadeDamage Field Value float explosionEffectGuid public Guid explosionEffectGuid Field Value Guid explosionLaunchSpeed public float explosionLaunchSpeed Field Value float objectDamage public float objectDamage Field Value float playerDamage public float playerDamage Field Value float resourceDamage public float resourceDamage Field Value float structureDamage public float structureDamage Field Value float tracerEffectGuid public Guid tracerEffectGuid Field Value Guid vehicleDamage public float vehicleDamage Field Value float zombieDamage public float zombieDamage Field Value float Properties ImpactEffectGuid public Guid ImpactEffectGuid { get; } Property Value Guid deleteEmpty public bool deleteEmpty { get; } Property Value bool explosion public ushort explosion { get; } Property Value ushort impact public ushort impact { get; } Property Value ushort isExplosive public bool isExplosive { get; } Property Value bool magazine public GameObject magazine { get; } Property Value GameObject pellets public byte pellets { get; } Property Value byte projectileBlastRadiusMultiplier Multiplier for explosive projectile's blast radius. public float projectileBlastRadiusMultiplier { get; protected set; } Property Value float projectileDamageMultiplier Multiplier for explosive projectile damage. public float projectileDamageMultiplier { get; protected set; } Property Value float projectileLaunchForceMultiplier Multiplier for explosive projectile's initial force. public float projectileLaunchForceMultiplier { get; protected set; } Property Value float range public float range { get; } Property Value float shouldFillAfterDetach Should amount be filled to capacity when detached? public bool shouldFillAfterDetach { get; protected set; } Property Value bool showQuality public override bool showQuality { get; } Property Value bool spawnExplosionOnDedicatedServer public bool spawnExplosionOnDedicatedServer { get; protected set; } Property Value bool speed public float speed { get; } Property Value float stuck public byte stuck { get; } Property Value byte tracer public ushort tracer { get; } Property Value ushort Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item FindExplosionEffect() public EffectAsset FindExplosionEffect() Returns EffectAsset FindImpactEffectAsset() public EffectAsset FindImpactEffectAsset() Returns EffectAsset FindTracerEffectAsset() public EffectAsset FindTracerEffectAsset() Returns EffectAsset IsExplosionEffectRefNull() public bool IsExplosionEffectRefNull() Returns bool IsImpactEffectRefNull() public bool IsImpactEffectRefNull() Returns bool PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemManager.html": {
    "href": "api/SDG.Unturned.ItemManager.html",
    "title": "Class ItemManager | Unturned Analyse Doc",
    "keywords": "Class ItemManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemManager : SteamCaller Inheritance object SteamCaller ItemManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors ItemManager() public ItemManager() Fields ITEM_REGIONS public static readonly byte ITEM_REGIONS Field Value byte clampedItems List of all interactable items. Originally only used to clamp their distance from the drop point to ensure clients can always pick them up, but now used to find items within a radius for nearby menu as well. public static List<InteractableItem> clampedItems Field Value List<InteractableItem> onItemDropAdded public static ItemDropAdded onItemDropAdded Field Value ItemDropAdded onItemDropRemoved public static ItemDropRemoved onItemDropRemoved Field Value ItemDropRemoved onServerSpawningItemDrop public static ServerSpawningItemDropHandler onServerSpawningItemDrop Field Value ServerSpawningItemDropHandler onTakeItemRequested public static TakeItemRequestHandler onTakeItemRequested Field Value TakeItemRequestHandler Properties instance Exposed for Rocket transition to modules backwards compatibility. public static ItemManager instance { get; } Property Value ItemManager regions public static ItemRegion[,] regions { get; } Property Value ItemRegion[,] Methods ReceiveClearRegionItems(byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellClearRegionItems\")] public static void ReceiveClearRegionItems(byte x, byte y) Parameters x byte y byte ReceiveDestroyItem(byte, byte, uint, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveDestroyItem(byte x, byte y, uint instanceID, bool shouldPlayEffect) Parameters x byte y byte instanceID uint shouldPlayEffect bool ReceiveItem(byte, byte, ushort, byte, byte, byte[], Vector3, uint, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveItem(byte x, byte y, ushort id, byte amount, byte quality, byte[] state, Vector3 point, uint instanceID, bool shouldPlayEffect) Parameters x byte y byte id ushort amount byte quality byte state byte[] point Vector3 instanceID uint shouldPlayEffect bool ReceiveItems(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveItems(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTakeItemRequest(in ServerInvocationContext, byte, byte, uint, byte, byte, byte, byte) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10, legacyName = \"askTakeItem\")] public static void ReceiveTakeItemRequest(in ServerInvocationContext context, byte x, byte y, uint instanceID, byte to_x, byte to_y, byte to_rot, byte to_page) Parameters context ServerInvocationContext x byte y byte instanceID uint to_x byte to_y byte to_rot byte to_page byte ServerClearItemsInSphere(Vector3, float) public static void ServerClearItemsInSphere(Vector3 center, float radius) Parameters center Vector3 radius float askClearAllItems() public static void askClearAllItems() askClearRegionItems(byte, byte) public static void askClearRegionItems(byte x, byte y) Parameters x byte y byte askItems(CSteamID, byte, byte) [Obsolete] public void askItems(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte askTakeItem(CSteamID, byte, byte, uint, byte, byte, byte, byte) [Obsolete] public void askTakeItem(CSteamID steamID, byte x, byte y, uint instanceID, byte to_x, byte to_y, byte to_rot, byte to_page) Parameters steamID CSteamID x byte y byte instanceID uint to_x byte to_y byte to_rot byte to_page byte dropItem(Item, Vector3, bool, bool, bool) public static void dropItem(Item item, Vector3 point, bool playEffect, bool isDropped, bool wideSpread) Parameters item Item point Vector3 playEffect bool isDropped bool wideSpread bool findSimulatedItemsInRadius(Vector3, float, List<InteractableItem>) Find physically simulated items within radius. public static void findSimulatedItemsInRadius(Vector3 center, float sqrRadius, List<InteractableItem> result) Parameters center Vector3 sqrRadius float result List<InteractableItem> getItemsInRadius(Vector3, float, List<RegionCoordinate>, List<InteractableItem>) Kept for plugin backwards compatibility. This one is problematic because on the client physics can move items between regions. public static void getItemsInRadius(Vector3 center, float sqrRadius, List<RegionCoordinate> search, List<InteractableItem> result) Parameters center Vector3 sqrRadius float search List<RegionCoordinate> result List<InteractableItem> takeItem(Transform, byte, byte, byte, byte) public static void takeItem(Transform item, byte to_x, byte to_y, byte to_rot, byte to_page) Parameters item Transform to_x byte to_y byte to_rot byte to_page byte tellClearRegionItems(CSteamID, byte, byte) [Obsolete] public void tellClearRegionItems(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte tellItem(CSteamID, byte, byte, ushort, byte, byte, byte[], Vector3, uint) [Obsolete] public void tellItem(CSteamID steamID, byte x, byte y, ushort id, byte amount, byte quality, byte[] state, Vector3 point, uint instanceID) Parameters steamID CSteamID x byte y byte id ushort amount byte quality byte state byte[] point Vector3 instanceID uint tellItems(CSteamID) [Obsolete] public void tellItems(CSteamID steamID) Parameters steamID CSteamID tellTakeItem(CSteamID, byte, byte, uint) [Obsolete] public void tellTakeItem(CSteamID steamID, byte x, byte y, uint instanceID) Parameters steamID CSteamID x byte y byte instanceID uint"
  },
  "api/SDG.Unturned.ItemManager_NetMethods.html": {
    "href": "api/SDG.Unturned.ItemManager_NetMethods.html",
    "title": "Class ItemManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class ItemManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(ItemManager))] public static class ItemManager_NetMethods Inheritance object ItemManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveClearRegionItems_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClearRegionItems\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClearRegionItems_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveClearRegionItems_Write(NetPakWriter, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveClearRegionItems\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveClearRegionItems_Write(NetPakWriter writer, byte x, byte y) Parameters writer NetPakWriter x byte y byte ReceiveDestroyItem_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDestroyItem\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDestroyItem_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDestroyItem_Write(NetPakWriter, byte, byte, uint, bool) [NetInvokableGeneratedMethod(\"ReceiveDestroyItem\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDestroyItem_Write(NetPakWriter writer, byte x, byte y, uint instanceID, bool shouldPlayEffect) Parameters writer NetPakWriter x byte y byte instanceID uint shouldPlayEffect bool ReceiveItem_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveItem\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveItem_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveItem_Write(NetPakWriter, byte, byte, ushort, byte, byte, byte[], Vector3, uint, bool) [NetInvokableGeneratedMethod(\"ReceiveItem\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveItem_Write(NetPakWriter writer, byte x, byte y, ushort id, byte amount, byte quality, byte[] state, Vector3 point, uint instanceID, bool shouldPlayEffect) Parameters writer NetPakWriter x byte y byte id ushort amount byte quality byte state byte[] point Vector3 instanceID uint shouldPlayEffect bool ReceiveTakeItemRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTakeItemRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTakeItemRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTakeItemRequest_Write(NetPakWriter, byte, byte, uint, byte, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveTakeItemRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTakeItemRequest_Write(NetPakWriter writer, byte x, byte y, uint instanceID, byte to_x, byte to_y, byte to_rot, byte to_page) Parameters writer NetPakWriter x byte y byte instanceID uint to_x byte to_y byte to_rot byte to_page byte"
  },
  "api/SDG.Unturned.ItemMapAsset.html": {
    "href": "api/SDG.Unturned.ItemMapAsset.html",
    "title": "Class ItemMapAsset | Unturned Analyse Doc",
    "keywords": "Class ItemMapAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemMapAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemMapAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemMapAsset() public ItemMapAsset() Properties enablesChart Does having this item show the chart? public bool enablesChart { get; protected set; } Property Value bool enablesCompass Does having this item show the compass? public bool enablesCompass { get; protected set; } Property Value bool enablesMap Does having this item show the satellite? public bool enablesMap { get; protected set; } Property Value bool Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemMaskAsset.html": {
    "href": "api/SDG.Unturned.ItemMaskAsset.html",
    "title": "Class ItemMaskAsset | Unturned Analyse Doc",
    "keywords": "Class ItemMaskAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemMaskAsset : ItemGearAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemGearAsset ItemMaskAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemGearAsset.hairOverride ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemMaskAsset() public ItemMaskAsset() Fields _mask protected GameObject _mask Field Value GameObject Properties FilterDegradationRateMultiplier Multiplier for how quickly deadzones deplete a gasmask's filter quality. e.g., 2 is faster (2x) and 0.5 is slower. public float FilterDegradationRateMultiplier { get; protected set; } Property Value float isEarpiece public bool isEarpiece { get; } Property Value bool mask public GameObject mask { get; } Property Value GameObject Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemMedicalAsset.html": {
    "href": "api/SDG.Unturned.ItemMedicalAsset.html",
    "title": "Class ItemMedicalAsset | Unturned Analyse Doc",
    "keywords": "Class ItemMedicalAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemMedicalAsset : ItemConsumeableAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset ItemConsumeableAsset ItemMedicalAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemConsumeableAsset._use ItemConsumeableAsset.experience ItemConsumeableAsset._explosion ItemConsumeableAsset.questRewardsList ItemConsumeableAsset.IsExplosionEffectRefNull() ItemConsumeableAsset.FindExplosionEffectAsset() ItemConsumeableAsset.GrantQuestRewards(Player) ItemConsumeableAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemConsumeableAsset.PopulateAsset(Bundle, DatDictionary, Local) ItemConsumeableAsset.grantQuestRewards(Player, bool) ItemConsumeableAsset.use ItemConsumeableAsset.health ItemConsumeableAsset.food ItemConsumeableAsset.water ItemConsumeableAsset.virus ItemConsumeableAsset.disinfectant ItemConsumeableAsset.energy ItemConsumeableAsset.vision ItemConsumeableAsset.oxygen ItemConsumeableAsset.warmth ItemConsumeableAsset.bleedingModifier ItemConsumeableAsset.bonesModifier ItemConsumeableAsset.hasAid ItemConsumeableAsset.foodConstrainsWater ItemConsumeableAsset.shouldDeleteAfterUse ItemConsumeableAsset.showQuality ItemConsumeableAsset.ExplosionEffectGuid ItemConsumeableAsset.explosion ItemConsumeableAsset.IsExplosive ItemConsumeableAsset.questRewards ItemConsumeableAsset.itemRewards ItemConsumeableAsset.doesItemTypeHaveSkins ItemConsumeableAsset.shouldFriendlySentryTargetUser ItemWeaponAsset.range ItemWeaponAsset.playerDamageMultiplier ItemWeaponAsset.zombieDamageMultiplier ItemWeaponAsset.animalDamageMultiplier ItemWeaponAsset.barricadeDamage ItemWeaponAsset.structureDamage ItemWeaponAsset.vehicleDamage ItemWeaponAsset.resourceDamage ItemWeaponAsset.objectDamage ItemWeaponAsset.durability ItemWeaponAsset.wear ItemWeaponAsset.isInvulnerable ItemWeaponAsset.hasBladeID(byte) ItemWeaponAsset.initPlayerDamageParameters(ref DamagePlayerParameters) ItemWeaponAsset.BuildExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.bladeIDs ItemWeaponAsset.playerDamageBleeding ItemWeaponAsset.playerDamageBones ItemWeaponAsset.playerDamageFood ItemWeaponAsset.playerDamageWater ItemWeaponAsset.playerDamageVirus ItemWeaponAsset.playerDamageHallucination ItemWeaponAsset.zombieStunOverride ItemWeaponAsset.animalOrPlayerDamageMultiplier ItemWeaponAsset.zombieOrPlayerDamageMultiplier ItemWeaponAsset.allowFleshFx ItemWeaponAsset.bypassAllowedToDamagePlayer ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemMedicalAsset() public ItemMedicalAsset()"
  },
  "api/SDG.Unturned.ItemMeleeAsset.html": {
    "href": "api/SDG.Unturned.ItemMeleeAsset.html",
    "title": "Class ItemMeleeAsset | Unturned Analyse Doc",
    "keywords": "Class ItemMeleeAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemMeleeAsset : ItemWeaponAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset ItemMeleeAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemWeaponAsset.range ItemWeaponAsset.playerDamageMultiplier ItemWeaponAsset.zombieDamageMultiplier ItemWeaponAsset.animalDamageMultiplier ItemWeaponAsset.barricadeDamage ItemWeaponAsset.structureDamage ItemWeaponAsset.vehicleDamage ItemWeaponAsset.resourceDamage ItemWeaponAsset.objectDamage ItemWeaponAsset.durability ItemWeaponAsset.wear ItemWeaponAsset.isInvulnerable ItemWeaponAsset.hasBladeID(byte) ItemWeaponAsset.initPlayerDamageParameters(ref DamagePlayerParameters) ItemWeaponAsset.BuildExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.bladeIDs ItemWeaponAsset.playerDamageBleeding ItemWeaponAsset.playerDamageBones ItemWeaponAsset.playerDamageFood ItemWeaponAsset.playerDamageWater ItemWeaponAsset.playerDamageVirus ItemWeaponAsset.playerDamageHallucination ItemWeaponAsset.zombieStunOverride ItemWeaponAsset.animalOrPlayerDamageMultiplier ItemWeaponAsset.zombieOrPlayerDamageMultiplier ItemWeaponAsset.allowFleshFx ItemWeaponAsset.bypassAllowedToDamagePlayer ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemMeleeAsset() public ItemMeleeAsset() Fields _use protected AudioClip _use Field Value AudioClip impactAudio public AudioReference impactAudio Field Value AudioReference Properties alertRadius public float alertRadius { get; protected set; } Property Value float doesItemTypeHaveSkins Are there any official skins for this item type? Skips checking for base textures if item cannot have skins. protected override bool doesItemTypeHaveSkins { get; } Property Value bool isLight public bool isLight { get; } Property Value bool isRepair public bool isRepair { get; } Property Value bool isRepeated public bool isRepeated { get; } Property Value bool lightConfig public PlayerSpotLightConfig lightConfig { get; protected set; } Property Value PlayerSpotLightConfig shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool showQuality public override bool showQuality { get; } Property Value bool stamina public byte stamina { get; } Property Value byte strength public float strength { get; } Property Value float strong public float strong { get; } Property Value float use public AudioClip use { get; } Property Value AudioClip weak public float weak { get; } Property Value float Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemOilPumpAsset.html": {
    "href": "api/SDG.Unturned.ItemOilPumpAsset.html",
    "title": "Class ItemOilPumpAsset | Unturned Analyse Doc",
    "keywords": "Class ItemOilPumpAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemOilPumpAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemOilPumpAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.getState(EItemOrigin) ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemOilPumpAsset() public ItemOilPumpAsset() Properties fuelCapacity public ushort fuelCapacity { get; protected set; } Property Value ushort Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemOpticAsset.html": {
    "href": "api/SDG.Unturned.ItemOpticAsset.html",
    "title": "Class ItemOpticAsset | Unturned Analyse Doc",
    "keywords": "Class ItemOpticAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemOpticAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemOpticAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemOpticAsset() public ItemOpticAsset() Properties zoom Factor e.g. 2 is a 2x multiplier. Prior to 2022-04-11 this was the target field of view. (90/fov) public float zoom { get; } Property Value float Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemPantsAsset.html": {
    "href": "api/SDG.Unturned.ItemPantsAsset.html",
    "title": "Class ItemPantsAsset | Unturned Analyse Doc",
    "keywords": "Class ItemPantsAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemPantsAsset : ItemBagAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemBagAsset ItemPantsAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBagAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemBagAsset.width ItemBagAsset.height ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemPantsAsset() public ItemPantsAsset() Fields _emission protected Texture2D _emission Field Value Texture2D _metallic protected Texture2D _metallic Field Value Texture2D _pants protected Texture2D _pants Field Value Texture2D Properties emission public Texture2D emission { get; } Property Value Texture2D metallic public Texture2D metallic { get; } Property Value Texture2D pants public Texture2D pants { get; } Property Value Texture2D Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemPlaceableAsset.html": {
    "href": "api/SDG.Unturned.ItemPlaceableAsset.html",
    "title": "Class ItemPlaceableAsset | Unturned Analyse Doc",
    "keywords": "Class ItemPlaceableAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Common base for barricades and structures. 2023-01-16: not ideal to be adding this so late in development, but at least it is a step in the right direction. public class ItemPlaceableAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset Implements IAssetErrorContext ISkinableAsset Derived ItemBarricadeAsset ItemStructureAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemPlaceableAsset() public ItemPlaceableAsset() Properties CanZombiesTarget If true, this item is eligible for zombies to detect and attack when stuck. Defaults to true. public bool CanZombiesTarget { get; protected set; } Property Value bool itemDroppedOnDestroy Spawn table for items dropped when destroyed. public AssetReference<SpawnAsset> itemDroppedOnDestroy { get; protected set; } Property Value AssetReference<SpawnAsset> maxItemsDroppedOnDestroy Maximum number of items to drop when destroyed. public int maxItemsDroppedOnDestroy { get; protected set; } Property Value int minItemsDroppedOnDestroy Minimum number of items to drop when destroyed. public int minItemsDroppedOnDestroy { get; protected set; } Property Value int salvageItemRef Item recovered when picked up below 100% health. public AssetReference<ItemAsset> salvageItemRef { get; protected set; } Property Value AssetReference<ItemAsset> Methods FindSalvageItemAsset() public ItemAsset FindSalvageItemAsset() Returns ItemAsset PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemRefillAsset.html": {
    "href": "api/SDG.Unturned.ItemRefillAsset.html",
    "title": "Class ItemRefillAsset | Unturned Analyse Doc",
    "keywords": "Class ItemRefillAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemRefillAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemRefillAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemRefillAsset() public ItemRefillAsset() Fields _use protected AudioClip _use Field Value AudioClip Properties cleanFood public float cleanFood { get; protected set; } Property Value float cleanHealth public float cleanHealth { get; protected set; } Property Value float cleanOxygen public float cleanOxygen { get; protected set; } Property Value float cleanStamina public float cleanStamina { get; protected set; } Property Value float cleanVirus public float cleanVirus { get; protected set; } Property Value float cleanWater public float cleanWater { get; protected set; } Property Value float dirtyFood public float dirtyFood { get; protected set; } Property Value float dirtyHealth public float dirtyHealth { get; protected set; } Property Value float dirtyOxygen public float dirtyOxygen { get; protected set; } Property Value float dirtyStamina public float dirtyStamina { get; protected set; } Property Value float dirtyVirus public float dirtyVirus { get; protected set; } Property Value float dirtyWater public float dirtyWater { get; protected set; } Property Value float saltyFood public float saltyFood { get; protected set; } Property Value float saltyHealth public float saltyHealth { get; protected set; } Property Value float saltyOxygen public float saltyOxygen { get; protected set; } Property Value float saltyStamina public float saltyStamina { get; protected set; } Property Value float saltyVirus public float saltyVirus { get; protected set; } Property Value float saltyWater public float saltyWater { get; protected set; } Property Value float use public AudioClip use { get; } Property Value AudioClip water Kept for backwards compatibility with plugins. [Obsolete(\"Replaced by separate stats for each water type\")] public byte water { get; } Property Value byte Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item GetRefillFood(ERefillWaterType) public float GetRefillFood(ERefillWaterType refillWaterType) Parameters refillWaterType ERefillWaterType Returns float GetRefillHealth(ERefillWaterType) public float GetRefillHealth(ERefillWaterType refillWaterType) Parameters refillWaterType ERefillWaterType Returns float GetRefillOxygen(ERefillWaterType) public float GetRefillOxygen(ERefillWaterType refillWaterType) Parameters refillWaterType ERefillWaterType Returns float GetRefillStamina(ERefillWaterType) public float GetRefillStamina(ERefillWaterType refillWaterType) Parameters refillWaterType ERefillWaterType Returns float GetRefillVirus(ERefillWaterType) public float GetRefillVirus(ERefillWaterType refillWaterType) Parameters refillWaterType ERefillWaterType Returns float GetRefillWater(ERefillWaterType) public float GetRefillWater(ERefillWaterType refillWaterType) Parameters refillWaterType ERefillWaterType Returns float PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemRegion.html": {
    "href": "api/SDG.Unturned.ItemRegion.html",
    "title": "Class ItemRegion | Unturned Analyse Doc",
    "keywords": "Class ItemRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemRegion Inheritance object ItemRegion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemRegion() public ItemRegion() Fields despawnItemIndex public ushort despawnItemIndex Field Value ushort isNetworked public bool isNetworked Field Value bool items public List<ItemData> items Field Value List<ItemData> lastRespawn public float lastRespawn Field Value float respawnItemIndex public ushort respawnItemIndex Field Value ushort Properties drops public List<ItemDrop> drops { get; } Property Value List<ItemDrop> Methods DestroyAll() public void DestroyAll() destroy() [Obsolete(\"Renamed to DestroyAll\")] public void destroy()"
  },
  "api/SDG.Unturned.ItemRemoved.html": {
    "href": "api/SDG.Unturned.ItemRemoved.html",
    "title": "Delegate ItemRemoved | Unturned Analyse Doc",
    "keywords": "Delegate ItemRemoved Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemRemoved(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar Constructors ItemRemoved(object, IntPtr) public ItemRemoved(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, ItemJar, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte index, ItemJar jar, AsyncCallback callback, object @object) Parameters page byte index byte jar ItemJar callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, ItemJar) public virtual void Invoke(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar"
  },
  "api/SDG.Unturned.ItemSentryAsset.html": {
    "href": "api/SDG.Unturned.ItemSentryAsset.html",
    "title": "Class ItemSentryAsset | Unturned Analyse Doc",
    "keywords": "Class ItemSentryAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemSentryAsset : ItemStorageAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemStorageAsset ItemSentryAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemStorageAsset._storage_x ItemStorageAsset._storage_y ItemStorageAsset._isDisplay ItemStorageAsset.getState(EItemOrigin) ItemStorageAsset.storage_x ItemStorageAsset.storage_y ItemStorageAsset.isDisplay ItemStorageAsset.shouldCloseWhenOutsideRange ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemSentryAsset() public ItemSentryAsset() Fields _sentryMode protected ESentryMode _sentryMode Field Value ESentryMode detectionRadius Players/zombies within this range are treated as potential targets while scanning. public float detectionRadius Field Value float targetAcquiredEffect public AssetReference<EffectAsset> targetAcquiredEffect Field Value AssetReference<EffectAsset> targetLossRadius Will not lose current target within this range. Prevents target from popping in and out of range. public float targetLossRadius Field Value float targetLostEffect public AssetReference<EffectAsset> targetLostEffect Field Value AssetReference<EffectAsset> Properties AmmoConsumptionProbability [0, 1] percentage whether a shot decreases ammo count. Defaults to 100%. For example, 0.25 means 25% of shots will use a bullet, while the remaining 75% will be free. public float AmmoConsumptionProbability { get; protected set; } Property Value float QualityConsumptionProbability [0, 1] percentage whether a shot decreases quality. Defaults to 100%. Combined with the gun's chance of decreasing quality. public float QualityConsumptionProbability { get; protected set; } Property Value float infiniteAmmo public bool infiniteAmmo { get; protected set; } Property Value bool infiniteQuality public bool infiniteQuality { get; protected set; } Property Value bool requiresPower public bool requiresPower { get; protected set; } Property Value bool sentryMode public ESentryMode sentryMode { get; } Property Value ESentryMode Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemShirtAsset.html": {
    "href": "api/SDG.Unturned.ItemShirtAsset.html",
    "title": "Class ItemShirtAsset | Unturned Analyse Doc",
    "keywords": "Class ItemShirtAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Mesh Replacement Details .dat Flags: Has_1P_Character_Mesh_Override True Bool Character_Mesh_3P_Override_LODs # Int Has_Character_Material_Override True Bool Asset Bundle Objects: Character_Mesh_1P_Override_# GameObject with MeshFilter (mesh set to a skinned mesh) Character_Mesh_3P_Override_# GameObject with MeshFilter (mesh set to a skinned mesh) Character_Material_Override Material public class ItemShirtAsset : ItemBagAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemBagAsset ItemShirtAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBagAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemBagAsset.width ItemBagAsset.height ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemShirtAsset() public ItemShirtAsset() Fields _emission protected Texture2D _emission Field Value Texture2D _ignoreHand protected bool _ignoreHand Field Value bool _metallic protected Texture2D _metallic Field Value Texture2D _shirt protected Texture2D _shirt Field Value Texture2D characterMaterialOverride Replacement for the main character material that typically has clothes and skin color. public Material characterMaterialOverride Field Value Material Properties characterMeshOverride1pLODs Replacements for the main 1st-person character mesh. public Mesh[] characterMeshOverride1pLODs { get; protected set; } Property Value Mesh[] characterMeshOverride3pLODs Replacements for the main 3rd-person character mesh. public Mesh[] characterMeshOverride3pLODs { get; protected set; } Property Value Mesh[] emission public Texture2D emission { get; } Property Value Texture2D ignoreHand public bool ignoreHand { get; } Property Value bool metallic public Texture2D metallic { get; } Property Value Texture2D shirt public Texture2D shirt { get; } Property Value Texture2D Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemSightAsset.DistanceMarker.ESide.html": {
    "href": "api/SDG.Unturned.ItemSightAsset.DistanceMarker.ESide.html",
    "title": "Enum ItemSightAsset.DistanceMarker.ESide | Unturned Analyse Doc",
    "keywords": "Enum ItemSightAsset.DistanceMarker.ESide Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ItemSightAsset.DistanceMarker.ESide Fields Left = 0 Right = 1"
  },
  "api/SDG.Unturned.ItemSightAsset.DistanceMarker.html": {
    "href": "api/SDG.Unturned.ItemSightAsset.DistanceMarker.html",
    "title": "Struct ItemSightAsset.DistanceMarker | Unturned Analyse Doc",
    "keywords": "Struct ItemSightAsset.DistanceMarker Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct ItemSightAsset.DistanceMarker : IDatParseable Implements IDatParseable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields color public Color32 color Field Value Color32 distance public float distance Field Value float hasLabel If true, text label for distance is visible. public bool hasLabel Field Value bool lineOffset [0, 1] local distance from center to start of line. public float lineOffset Field Value float lineWidth [0, 1] local width of horizontal line. public float lineWidth Field Value float side Whether line/number are on left or right side of the center line. public ItemSightAsset.DistanceMarker.ESide side Field Value ItemSightAsset.DistanceMarker.ESide Methods TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool"
  },
  "api/SDG.Unturned.ItemSightAsset.html": {
    "href": "api/SDG.Unturned.ItemSightAsset.html",
    "title": "Class ItemSightAsset | Unturned Analyse Doc",
    "keywords": "Class ItemSightAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemSightAsset : ItemCaliberAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemCaliberAsset ItemSightAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemCaliberAsset.aimingRecoilMultiplier ItemCaliberAsset.aimDurationMultiplier ItemCaliberAsset._isPaintable ItemCaliberAsset.aimingMovementSpeedMultiplier ItemCaliberAsset._isBipod ItemCaliberAsset.GetDefaultInventoryAudio() ItemCaliberAsset.calibers ItemCaliberAsset.recoil_x ItemCaliberAsset.recoil_y ItemCaliberAsset.spread ItemCaliberAsset.sway ItemCaliberAsset.shake ItemCaliberAsset.FirerateOffset ItemCaliberAsset.isPaintable ItemCaliberAsset.ballisticDamageMultiplier ItemCaliberAsset.BallisticGravityMultiplier ItemCaliberAsset.ShouldOnlyAffectAimWhileProne ItemCaliberAsset.CanDamageInvulernableEntities ItemCaliberAsset.shouldDestroyAttachmentColliders ItemCaliberAsset.instantiatedAttachmentName ItemCaliberAsset.doesItemTypeHaveSkins ItemCaliberAsset.firerate ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemSightAsset() public ItemSightAsset() Fields _sight protected GameObject _sight Field Value GameObject distanceMarkers public List<ItemSightAsset.DistanceMarker> distanceMarkers Field Value List<ItemSightAsset.DistanceMarker> nightvisionColor public Color nightvisionColor Field Value Color nightvisionFogIntensity public float nightvisionFogIntensity Field Value float shouldOffsetScopeOverlayByOneTexel If true, scale scope overly by 1 texel to keep \"middle\" pixel centered. public bool shouldOffsetScopeOverlayByOneTexel Field Value bool shouldZoomUsingEyes Whether main camera field of view should zoom without scope camera / scope overlay. public bool shouldZoomUsingEyes Field Value bool Properties isHolographic public bool isHolographic { get; } Property Value bool sight public GameObject sight { get; } Property Value GameObject thirdPersonZoomFactor Zoom factor used in third-person view. public float thirdPersonZoomFactor { get; } Property Value float vision public ELightingVision vision { get; } Property Value ELightingVision zoom Factor e.g. 2 is a 2x multiplier. Prior to 2022-04-11 this was the target field of view. (90/fov) public float zoom { get; } Property Value float Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemSpawn.html": {
    "href": "api/SDG.Unturned.ItemSpawn.html",
    "title": "Class ItemSpawn | Unturned Analyse Doc",
    "keywords": "Class ItemSpawn Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemSpawn Inheritance object ItemSpawn Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemSpawn(ushort) public ItemSpawn(ushort newItem) Parameters newItem ushort Properties item public ushort item { get; } Property Value ushort"
  },
  "api/SDG.Unturned.ItemSpawnpoint.html": {
    "href": "api/SDG.Unturned.ItemSpawnpoint.html",
    "title": "Class ItemSpawnpoint | Unturned Analyse Doc",
    "keywords": "Class ItemSpawnpoint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemSpawnpoint Inheritance object ItemSpawnpoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemSpawnpoint(byte, Vector3) public ItemSpawnpoint(byte newType, Vector3 newPoint) Parameters newType byte newPoint Vector3 Fields type public byte type Field Value byte Properties node public Transform node { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 Methods setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.ItemStorageAsset.html": {
    "href": "api/SDG.Unturned.ItemStorageAsset.html",
    "title": "Class ItemStorageAsset | Unturned Analyse Doc",
    "keywords": "Class ItemStorageAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemStorageAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemStorageAsset Implements IAssetErrorContext ISkinableAsset Derived ItemSentryAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemStorageAsset() public ItemStorageAsset() Fields _isDisplay protected bool _isDisplay Field Value bool _storage_x protected byte _storage_x Field Value byte _storage_y protected byte _storage_y Field Value byte Properties isDisplay public bool isDisplay { get; } Property Value bool shouldCloseWhenOutsideRange public bool shouldCloseWhenOutsideRange { get; protected set; } Property Value bool storage_x public byte storage_x { get; } Property Value byte storage_y public byte storage_y { get; } Property Value byte Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemStoreSavedata.html": {
    "href": "api/SDG.Unturned.ItemStoreSavedata.html",
    "title": "Class ItemStoreSavedata | Unturned Analyse Doc",
    "keywords": "Class ItemStoreSavedata Namespace SDG.Unturned Assembly Assembly-CSharp.dll Tracks whether we should show the \"NEW\" label on listings and item store button. public static class ItemStoreSavedata Inheritance object ItemStoreSavedata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods MarkNewCraftingPageSeen() Track that player has seen the new crafting blueprints. public static void MarkNewCraftingPageSeen() MarkNewListingSeen(int) Track that the player has seen the given listing. public static void MarkNewListingSeen(int itemdefid) Parameters itemdefid int MarkNewListingsPageSeen() Track that player has seen the page with all new listings. public static void MarkNewListingsPageSeen() WasNewCraftingPageSeen() public static bool WasNewCraftingPageSeen() Returns bool WasNewListingSeen(int) Has player seen the given listing? public static bool WasNewListingSeen(int itemdefid) Parameters itemdefid int Returns bool WasNewListingsPageSeen() public static bool WasNewListingsPageSeen() Returns bool"
  },
  "api/SDG.Unturned.ItemStructureAsset.html": {
    "href": "api/SDG.Unturned.ItemStructureAsset.html",
    "title": "Class ItemStructureAsset | Unturned Analyse Doc",
    "keywords": "Class ItemStructureAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemStructureAsset : ItemPlaceableAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemStructureAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemStructureAsset() public ItemStructureAsset() Fields _construct protected EConstruct _construct Field Value EConstruct _explosion protected ushort _explosion Field Value ushort _health protected ushort _health Field Value ushort _isRepairable protected bool _isRepairable Field Value bool _isSalvageable protected bool _isSalvageable Field Value bool _isSaveable protected bool _isSaveable Field Value bool _isUnpickupable protected bool _isUnpickupable Field Value bool _isVulnerable protected bool _isVulnerable Field Value bool _nav protected GameObject _nav Field Value GameObject _proofExplosion protected bool _proofExplosion Field Value bool _range protected float _range Field Value float _structure protected GameObject _structure Field Value GameObject _use protected AudioClip _use Field Value AudioClip canBeDamaged If false this structure cannot take damage. public bool canBeDamaged Field Value bool eligibleForPooling Modded structures can disable pooling if they have custom incompatible logic. public bool eligibleForPooling Field Value bool placementPreviewRef Optional alternative structure prefab specifically for the client preview spawned. public MasterBundleReference<GameObject> placementPreviewRef Field Value MasterBundleReference<GameObject> requiresPillars public bool requiresPillars Field Value bool Properties armorTier public EArmorTier armorTier { get; protected set; } Property Value EArmorTier clip [Obsolete(\"Only one of Structure.prefab or Clip.prefab are loaded now as _structure\")] public GameObject clip { get; } Property Value GameObject construct public EConstruct construct { get; } Property Value EConstruct explosion public ushort explosion { get; } Property Value ushort explosionGuid public Guid explosionGuid { get; } Property Value Guid foliageCutRadius public float foliageCutRadius { get; protected set; } Property Value float health public ushort health { get; } Property Value ushort isRepairable public bool isRepairable { get; } Property Value bool isSalvageable public bool isSalvageable { get; } Property Value bool isSaveable public bool isSaveable { get; } Property Value bool isUnpickupable public bool isUnpickupable { get; } Property Value bool isVulnerable public bool isVulnerable { get; } Property Value bool nav public GameObject nav { get; } Property Value GameObject proofExplosion public bool proofExplosion { get; } Property Value bool range public float range { get; } Property Value float salvageDurationMultiplier public float salvageDurationMultiplier { get; protected set; } Property Value float shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool structure public GameObject structure { get; } Property Value GameObject terrainTestHeight Length of raycast downward from pivot to check floor is above terrain. Vanilla floors can be placed a maximum of 10 meters above terrain. public float terrainTestHeight { get; protected set; } Property Value float use public AudioClip use { get; } Property Value AudioClip Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item FindExplosionEffectAsset() public EffectAsset FindExplosionEffectAsset() Returns EffectAsset GetDefaultInventoryAudio() protected override AudioReference GetDefaultInventoryAudio() Returns AudioReference PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local canBeUsedInSafezone(SafezoneNode, bool) Should players be allowed to start primary/secondary use of this item while inside given safezone? If returns false the primary/secondary inputs are set to false. public override bool canBeUsedInSafezone(SafezoneNode safezone, bool byAdmin) Parameters safezone SafezoneNode byAdmin bool Returns bool"
  },
  "api/SDG.Unturned.ItemSupplyAsset.html": {
    "href": "api/SDG.Unturned.ItemSupplyAsset.html",
    "title": "Class ItemSupplyAsset | Unturned Analyse Doc",
    "keywords": "Class ItemSupplyAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemSupplyAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemSupplyAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.PopulateAsset(Bundle, DatDictionary, Local) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemSupplyAsset() public ItemSupplyAsset()"
  },
  "api/SDG.Unturned.ItemTable.html": {
    "href": "api/SDG.Unturned.ItemTable.html",
    "title": "Class ItemTable | Unturned Analyse Doc",
    "keywords": "Class ItemTable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemTable Inheritance object ItemTable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemTable(List<ItemTier>, Color, string, ushort) public ItemTable(List<ItemTier> newTiers, Color newColor, string newName, ushort newTableID) Parameters newTiers List<ItemTier> newColor Color newName string newTableID ushort ItemTable(string) public ItemTable(string newName) Parameters newName string Fields name public string name Field Value string tableID public ushort tableID Field Value ushort Properties color public Color color { get; set; } Property Value Color tiers public List<ItemTier> tiers { get; } Property Value List<ItemTier> Methods addItem(byte, ushort) public void addItem(byte tierIndex, ushort id) Parameters tierIndex byte id ushort addTier(string) public void addTier(string name) Parameters name string buildTable() public void buildTable() getItem() public ushort getItem() Returns ushort removeItem(byte, byte) public void removeItem(byte tierIndex, byte itemIndex) Parameters tierIndex byte itemIndex byte removeTier(int) public void removeTier(int tierIndex) Parameters tierIndex int updateChance(int, float) public void updateChance(int tierIndex, float chance) Parameters tierIndex int chance float"
  },
  "api/SDG.Unturned.ItemTacticalAsset.html": {
    "href": "api/SDG.Unturned.ItemTacticalAsset.html",
    "title": "Class ItemTacticalAsset | Unturned Analyse Doc",
    "keywords": "Class ItemTacticalAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemTacticalAsset : ItemCaliberAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemCaliberAsset ItemTacticalAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemCaliberAsset.aimingRecoilMultiplier ItemCaliberAsset.aimDurationMultiplier ItemCaliberAsset._isPaintable ItemCaliberAsset.aimingMovementSpeedMultiplier ItemCaliberAsset._isBipod ItemCaliberAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemCaliberAsset.GetDefaultInventoryAudio() ItemCaliberAsset.calibers ItemCaliberAsset.recoil_x ItemCaliberAsset.recoil_y ItemCaliberAsset.spread ItemCaliberAsset.sway ItemCaliberAsset.shake ItemCaliberAsset.FirerateOffset ItemCaliberAsset.isPaintable ItemCaliberAsset.ballisticDamageMultiplier ItemCaliberAsset.BallisticGravityMultiplier ItemCaliberAsset.ShouldOnlyAffectAimWhileProne ItemCaliberAsset.CanDamageInvulernableEntities ItemCaliberAsset.shouldDestroyAttachmentColliders ItemCaliberAsset.instantiatedAttachmentName ItemCaliberAsset.doesItemTypeHaveSkins ItemCaliberAsset.firerate ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemTacticalAsset() public ItemTacticalAsset() Fields _tactical protected GameObject _tactical Field Value GameObject Properties isLaser public bool isLaser { get; } Property Value bool isLight public bool isLight { get; } Property Value bool isMelee public bool isMelee { get; } Property Value bool isRangefinder public bool isRangefinder { get; } Property Value bool laserColor public Color laserColor { get; protected set; } Property Value Color lightConfig public PlayerSpotLightConfig lightConfig { get; protected set; } Property Value PlayerSpotLightConfig tactical public GameObject tactical { get; } Property Value GameObject Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemTankAsset.html": {
    "href": "api/SDG.Unturned.ItemTankAsset.html",
    "title": "Class ItemTankAsset | Unturned Analyse Doc",
    "keywords": "Class ItemTankAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemTankAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemTankAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemTankAsset() public ItemTankAsset() Fields _resource protected ushort _resource Field Value ushort _source protected ETankSource _source Field Value ETankSource Properties resource public ushort resource { get; } Property Value ushort source public ETankSource source { get; } Property Value ETankSource Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getState(EItemOrigin) public override byte[] getState(EItemOrigin origin) Parameters origin EItemOrigin Returns byte[]"
  },
  "api/SDG.Unturned.ItemThrowableAsset.html": {
    "href": "api/SDG.Unturned.ItemThrowableAsset.html",
    "title": "Class ItemThrowableAsset | Unturned Analyse Doc",
    "keywords": "Class ItemThrowableAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemThrowableAsset : ItemWeaponAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset ItemThrowableAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemWeaponAsset.range ItemWeaponAsset.playerDamageMultiplier ItemWeaponAsset.zombieDamageMultiplier ItemWeaponAsset.animalDamageMultiplier ItemWeaponAsset.barricadeDamage ItemWeaponAsset.structureDamage ItemWeaponAsset.vehicleDamage ItemWeaponAsset.resourceDamage ItemWeaponAsset.objectDamage ItemWeaponAsset.durability ItemWeaponAsset.wear ItemWeaponAsset.isInvulnerable ItemWeaponAsset.hasBladeID(byte) ItemWeaponAsset.initPlayerDamageParameters(ref DamagePlayerParameters) ItemWeaponAsset.BuildExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.bladeIDs ItemWeaponAsset.playerDamageBleeding ItemWeaponAsset.playerDamageBones ItemWeaponAsset.playerDamageFood ItemWeaponAsset.playerDamageWater ItemWeaponAsset.playerDamageVirus ItemWeaponAsset.playerDamageHallucination ItemWeaponAsset.zombieStunOverride ItemWeaponAsset.animalOrPlayerDamageMultiplier ItemWeaponAsset.zombieOrPlayerDamageMultiplier ItemWeaponAsset.allowFleshFx ItemWeaponAsset.bypassAllowedToDamagePlayer ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemThrowableAsset() public ItemThrowableAsset() Fields _throwable protected GameObject _throwable Field Value GameObject _use protected AudioClip _use Field Value AudioClip boostForceMultiplier public float boostForceMultiplier Field Value float explosionEffectGuid public Guid explosionEffectGuid Field Value Guid explosionLaunchSpeed public float explosionLaunchSpeed Field Value float strongThrowForce public float strongThrowForce Field Value float weakThrowForce public float weakThrowForce Field Value float Properties explodeOnImpact public bool explodeOnImpact { get; } Property Value bool explosion public ushort explosion { get; } Property Value ushort fuseLength public float fuseLength { get; } Property Value float isExplosive public bool isExplosive { get; } Property Value bool isFlash public bool isFlash { get; } Property Value bool isSticky public bool isSticky { get; } Property Value bool shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool throwable public GameObject throwable { get; } Property Value GameObject use public AudioClip use { get; } Property Value AudioClip Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local canBeUsedInSafezone(SafezoneNode, bool) Should players be allowed to start primary/secondary use of this item while inside given safezone? If returns false the primary/secondary inputs are set to false. public override bool canBeUsedInSafezone(SafezoneNode safezone, bool byAdmin) Parameters safezone SafezoneNode byAdmin bool Returns bool"
  },
  "api/SDG.Unturned.ItemTier.html": {
    "href": "api/SDG.Unturned.ItemTier.html",
    "title": "Class ItemTier | Unturned Analyse Doc",
    "keywords": "Class ItemTier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemTier Inheritance object ItemTier Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemTier(List<ItemSpawn>, string, float) public ItemTier(List<ItemSpawn> newTable, string newName, float newChance) Parameters newTable List<ItemSpawn> newName string newChance float Fields chance public float chance Field Value float name public string name Field Value string Properties table public List<ItemSpawn> table { get; } Property Value List<ItemSpawn> Methods addItem(ushort) public void addItem(ushort id) Parameters id ushort removeItem(byte) public void removeItem(byte index) Parameters index byte"
  },
  "api/SDG.Unturned.ItemTireAsset.html": {
    "href": "api/SDG.Unturned.ItemTireAsset.html",
    "title": "Class ItemTireAsset | Unturned Analyse Doc",
    "keywords": "Class ItemTireAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemTireAsset : ItemVehicleRepairToolAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemToolAsset ItemVehicleRepairToolAsset ItemTireAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemToolAsset._use ItemToolAsset.use ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemTireAsset() public ItemTireAsset() Properties mode public EUseableTireMode mode { get; } Property Value EUseableTireMode shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local canBeUsedInSafezone(SafezoneNode, bool) Tools like carjacks and tires can be used in safezone by admins for maintenance. public override bool canBeUsedInSafezone(SafezoneNode safezone, bool byAdmin) Parameters safezone SafezoneNode byAdmin bool Returns bool"
  },
  "api/SDG.Unturned.ItemTool.html": {
    "href": "api/SDG.Unturned.ItemTool.html",
    "title": "Class ItemTool | Unturned Analyse Doc",
    "keywords": "Class ItemTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemTool : MonoBehaviour Inheritance object ItemTool Constructors ItemTool() public ItemTool() Methods ApplyMythicalEffect(Transform, ushort, EEffectType) public static MythicalEffectController ApplyMythicalEffect(Transform parent, ushort mythicID, EEffectType type) Parameters parent Transform mythicID ushort type EEffectType Returns MythicalEffectController ApplyMythicalEffectToMultipleTransforms(Transform[], MythicalEffectController[], ushort, EEffectType) public static void ApplyMythicalEffectToMultipleTransforms(Transform[] bones, MythicalEffectController[] systems, ushort mythicID, EEffectType type) Parameters bones Transform[] systems MythicalEffectController[] mythicID ushort type EEffectType captureIcon(ushort, ushort, Transform, Transform, int, int, float, bool) public static Texture2D captureIcon(ushort id, ushort skin, Transform model, Transform icon, int width, int height, float orthoSize, bool readableOnCPU) Parameters id ushort skin ushort model Transform icon Transform width int height int orthoSize float readableOnCPU bool Returns Texture2D checkUseable(byte, ushort) public static bool checkUseable(byte page, ushort id) Parameters page byte id ushort Returns bool filterRarityRichText(string) public static string filterRarityRichText(string desc) Parameters desc string Returns string getCard(Transform, Transform, Transform, int, int, float, float) public static Texture2D getCard(Transform item, Transform hook_0, Transform hook_1, int width, int height, float size, float range) Parameters item Transform hook_0 Transform hook_1 Transform width int height int size float range float Returns Texture2D getIcon(ushort, byte, byte[], ItemAsset, ItemIconReady) public static void getIcon(ushort id, byte quality, byte[] state, ItemAsset itemAsset, ItemIconReady callback) Parameters id ushort quality byte state byte[] itemAsset ItemAsset callback ItemIconReady getIcon(ushort, byte, byte[], ItemAsset, int, int, ItemIconReady) public static void getIcon(ushort id, byte quality, byte[] state, ItemAsset itemAsset, int x, int y, ItemIconReady callback) Parameters id ushort quality byte state byte[] itemAsset ItemAsset x int y int callback ItemIconReady getIcon(ushort, byte, byte[], ItemIconReady) public static void getIcon(ushort id, byte quality, byte[] state, ItemIconReady callback) Parameters id ushort quality byte state byte[] callback ItemIconReady getIcon(ushort, ushort, byte, byte[], ItemAsset, SkinAsset, string, string, int, int, bool, bool, ItemIconReady) public static void getIcon(ushort id, ushort skin, byte quality, byte[] state, ItemAsset itemAsset, SkinAsset skinAsset, string tags, string dynamic_props, int x, int y, bool scale, bool readableOnCPU, ItemIconReady callback) Parameters id ushort skin ushort quality byte state byte[] itemAsset ItemAsset skinAsset SkinAsset tags string dynamic_props string x int y int scale bool readableOnCPU bool callback ItemIconReady getItem(ushort, ushort, byte, byte[], bool, GetStatTrackerValueHandler) No longer used in vanilla. Kept in case plugins are using it. public static Transform getItem(ushort id, ushort skin, byte quality, byte[] state, bool viewmodel, GetStatTrackerValueHandler statTrackerCallback) Parameters id ushort skin ushort quality byte state byte[] viewmodel bool statTrackerCallback GetStatTrackerValueHandler Returns Transform getItem(ushort, ushort, byte, byte[], bool, ItemAsset, GetStatTrackerValueHandler) public static Transform getItem(ushort id, ushort skin, byte quality, byte[] state, bool viewmodel, ItemAsset itemAsset, GetStatTrackerValueHandler statTrackerCallback) Parameters id ushort skin ushort quality byte state byte[] viewmodel bool itemAsset ItemAsset statTrackerCallback GetStatTrackerValueHandler Returns Transform getItem(ushort, ushort, byte, byte[], bool, ItemAsset, SkinAsset, GetStatTrackerValueHandler) public static Transform getItem(ushort id, ushort skin, byte quality, byte[] state, bool viewmodel, ItemAsset itemAsset, SkinAsset skinAsset, GetStatTrackerValueHandler statTrackerCallback) Parameters id ushort skin ushort quality byte state byte[] viewmodel bool itemAsset ItemAsset skinAsset SkinAsset statTrackerCallback GetStatTrackerValueHandler Returns Transform getItem(ushort, ushort, byte, byte[], bool, ItemAsset, SkinAsset, List<Mesh>, out Material, GetStatTrackerValueHandler) public static Transform getItem(ushort id, ushort skin, byte quality, byte[] state, bool viewmodel, ItemAsset itemAsset, SkinAsset skinAsset, List<Mesh> outTempMeshes, out Material tempMaterial, GetStatTrackerValueHandler statTrackerCallback) Parameters id ushort skin ushort quality byte state byte[] viewmodel bool itemAsset ItemAsset skinAsset SkinAsset outTempMeshes List<Mesh> tempMaterial Material statTrackerCallback GetStatTrackerValueHandler Returns Transform getItem(ushort, ushort, byte, byte[], bool, ItemAsset, bool, GetStatTrackerValueHandler) public static Transform getItem(ushort id, ushort skin, byte quality, byte[] state, bool viewmodel, ItemAsset itemAsset, bool shouldDestroyColliders, GetStatTrackerValueHandler statTrackerCallback) Parameters id ushort skin ushort quality byte state byte[] viewmodel bool itemAsset ItemAsset shouldDestroyColliders bool statTrackerCallback GetStatTrackerValueHandler Returns Transform getItem(ushort, ushort, byte, byte[], bool, ItemAsset, bool, List<Mesh>, out Material, GetStatTrackerValueHandler) No longer used in vanilla. Kept in case plugins are using it. public static Transform getItem(ushort id, ushort skin, byte quality, byte[] state, bool viewmodel, ItemAsset itemAsset, bool shouldDestroyColliders, List<Mesh> outTempMeshes, out Material tempMaterial, GetStatTrackerValueHandler statTrackerCallback) Parameters id ushort skin ushort quality byte state byte[] viewmodel bool itemAsset ItemAsset shouldDestroyColliders bool outTempMeshes List<Mesh> tempMaterial Material statTrackerCallback GetStatTrackerValueHandler Returns Transform getItem(ushort, ushort, byte, byte[], bool, ItemAsset, List<Mesh>, out Material, GetStatTrackerValueHandler) No longer used in vanilla. Kept in case plugins are using it. public static Transform getItem(ushort id, ushort skin, byte quality, byte[] state, bool viewmodel, ItemAsset itemAsset, List<Mesh> outTempMeshes, out Material tempMaterial, GetStatTrackerValueHandler statTrackerCallback) Parameters id ushort skin ushort quality byte state byte[] viewmodel bool itemAsset ItemAsset outTempMeshes List<Mesh> tempMaterial Material statTrackerCallback GetStatTrackerValueHandler Returns Transform getQualityColor(float) public static Color getQualityColor(float quality) Parameters quality float Returns Color getRarityColorHighlight(EItemRarity) public static Color getRarityColorHighlight(EItemRarity rarity) Parameters rarity EItemRarity Returns Color getRarityColorUI(EItemRarity) public static Color getRarityColorUI(EItemRarity rarity) Parameters rarity EItemRarity Returns Color tryForceGiveItem(Player, ushort, byte) public static bool tryForceGiveItem(Player player, ushort id, byte amount) Parameters player Player id ushort amount byte Returns bool"
  },
  "api/SDG.Unturned.ItemToolAsset.html": {
    "href": "api/SDG.Unturned.ItemToolAsset.html",
    "title": "Class ItemToolAsset | Unturned Analyse Doc",
    "keywords": "Class ItemToolAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemToolAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemToolAsset Implements IAssetErrorContext ISkinableAsset Derived ItemVehiclePaintToolAsset ItemVehicleRepairToolAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemToolAsset() public ItemToolAsset() Fields _use protected AudioClip _use Field Value AudioClip Properties shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool use public AudioClip use { get; } Property Value AudioClip Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local canBeUsedInSafezone(SafezoneNode, bool) Tools like carjacks and tires can be used in safezone by admins for maintenance. public override bool canBeUsedInSafezone(SafezoneNode safezone, bool byAdmin) Parameters safezone SafezoneNode byAdmin bool Returns bool"
  },
  "api/SDG.Unturned.ItemTrapAsset.html": {
    "href": "api/SDG.Unturned.ItemTrapAsset.html",
    "title": "Class ItemTrapAsset | Unturned Analyse Doc",
    "keywords": "Class ItemTrapAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemTrapAsset : ItemBarricadeAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemPlaceableAsset ItemBarricadeAsset ItemTrapAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBarricadeAsset._barricade ItemBarricadeAsset._nav ItemBarricadeAsset._use ItemBarricadeAsset._build ItemBarricadeAsset._health ItemBarricadeAsset._range ItemBarricadeAsset._radius ItemBarricadeAsset._offset ItemBarricadeAsset._explosion ItemBarricadeAsset.canBeDamaged ItemBarricadeAsset.eligibleForPooling ItemBarricadeAsset._isLocked ItemBarricadeAsset._isVulnerable ItemBarricadeAsset._bypassClaim ItemBarricadeAsset._isRepairable ItemBarricadeAsset._proofExplosion ItemBarricadeAsset._isUnpickupable ItemBarricadeAsset.shouldBypassPickupOwnership ItemBarricadeAsset._isSalvageable ItemBarricadeAsset._isSaveable ItemBarricadeAsset.placementPreviewRef ItemBarricadeAsset.getState(EItemOrigin) ItemBarricadeAsset.FindExplosionEffectAsset() ItemBarricadeAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemBarricadeAsset.GetDefaultInventoryAudio() ItemBarricadeAsset.barricade ItemBarricadeAsset.clip ItemBarricadeAsset.nav ItemBarricadeAsset.use ItemBarricadeAsset.build ItemBarricadeAsset.health ItemBarricadeAsset.range ItemBarricadeAsset.radius ItemBarricadeAsset.offset ItemBarricadeAsset.explosionGuid ItemBarricadeAsset.explosion ItemBarricadeAsset.isLocked ItemBarricadeAsset.isVulnerable ItemBarricadeAsset.armorTier ItemBarricadeAsset.bypassClaim ItemBarricadeAsset.allowPlacementOnVehicle ItemBarricadeAsset.isRepairable ItemBarricadeAsset.proofExplosion ItemBarricadeAsset.isUnpickupable ItemBarricadeAsset.AllowPlacementInsideClipVolumes ItemBarricadeAsset.isSalvageable ItemBarricadeAsset.salvageDurationMultiplier ItemBarricadeAsset.isSaveable ItemBarricadeAsset.allowCollisionWhileAnimating ItemBarricadeAsset.shouldFriendlySentryTargetUser ItemBarricadeAsset.useWaterHeightTransparentSort ItemBarricadeAsset.CanParentVehicleBePickedUp ItemBarricadeAsset.VehicleGuid ItemBarricadeAsset.VehicleId ItemPlaceableAsset.FindSalvageItemAsset() ItemPlaceableAsset.CanZombiesTarget ItemPlaceableAsset.salvageItemRef ItemPlaceableAsset.minItemsDroppedOnDestroy ItemPlaceableAsset.maxItemsDroppedOnDestroy ItemPlaceableAsset.itemDroppedOnDestroy ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemTrapAsset() public ItemTrapAsset() Fields _isBroken protected bool _isBroken Field Value bool _isExplosive protected bool _isExplosive Field Value bool _range2 protected float _range2 Field Value float animalDamage public float animalDamage Field Value float barricadeDamage public float barricadeDamage Field Value float damageTires public bool damageTires Field Value bool explosionLaunchSpeed public float explosionLaunchSpeed Field Value float objectDamage public float objectDamage Field Value float playerDamage public float playerDamage Field Value float resourceDamage public float resourceDamage Field Value float structureDamage public float structureDamage Field Value float trapCooldown Seconds interval between damage dealt. i.e., will not cause damage if less than this amount of time passed since the last damage. public float trapCooldown Field Value float trapDetonationEffectGuid public Guid trapDetonationEffectGuid Field Value Guid trapSetupDelay Seconds after placement before damage can be dealt. public float trapSetupDelay Field Value float vehicleDamage public float vehicleDamage Field Value float zombieDamage public float zombieDamage Field Value float Properties explosion2 public ushort explosion2 { get; } Property Value ushort isBroken public bool isBroken { get; } Property Value bool isExplosive public bool isExplosive { get; } Property Value bool range2 public float range2 { get; } Property Value float Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemUpdated.html": {
    "href": "api/SDG.Unturned.ItemUpdated.html",
    "title": "Delegate ItemUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ItemUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemUpdated(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar Constructors ItemUpdated(object, IntPtr) public ItemUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, ItemJar, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte index, ItemJar jar, AsyncCallback callback, object @object) Parameters page byte index byte jar ItemJar callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, ItemJar) public virtual void Invoke(byte page, byte index, ItemJar jar) Parameters page byte index byte jar ItemJar"
  },
  "api/SDG.Unturned.ItemVehiclePaintToolAsset.html": {
    "href": "api/SDG.Unturned.ItemVehiclePaintToolAsset.html",
    "title": "Class ItemVehiclePaintToolAsset | Unturned Analyse Doc",
    "keywords": "Class ItemVehiclePaintToolAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemVehiclePaintToolAsset : ItemToolAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemToolAsset ItemVehiclePaintToolAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemToolAsset._use ItemToolAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemToolAsset.use ItemToolAsset.shouldFriendlySentryTargetUser ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemVehiclePaintToolAsset() public ItemVehiclePaintToolAsset() Properties PaintColor public Color32 PaintColor { get; protected set; } Property Value Color32 Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemVehicleRepairToolAsset.html": {
    "href": "api/SDG.Unturned.ItemVehicleRepairToolAsset.html",
    "title": "Class ItemVehicleRepairToolAsset | Unturned Analyse Doc",
    "keywords": "Class ItemVehicleRepairToolAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemVehicleRepairToolAsset : ItemToolAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemToolAsset ItemVehicleRepairToolAsset Implements IAssetErrorContext ISkinableAsset Derived ItemTireAsset Inherited Members ItemToolAsset._use ItemToolAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemToolAsset.PopulateAsset(Bundle, DatDictionary, Local) ItemToolAsset.use ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemVehicleRepairToolAsset() public ItemVehicleRepairToolAsset() Properties shouldFriendlySentryTargetUser Should friendly-mode sentry guns target a player who has this item equipped? public override bool shouldFriendlySentryTargetUser { get; } Property Value bool"
  },
  "api/SDG.Unturned.ItemVestAsset.html": {
    "href": "api/SDG.Unturned.ItemVestAsset.html",
    "title": "Class ItemVestAsset | Unturned Analyse Doc",
    "keywords": "Class ItemVestAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemVestAsset : ItemBagAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemClothingAsset ItemBagAsset ItemVestAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemBagAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemBagAsset.width ItemBagAsset.height ItemClothingAsset._armor ItemClothingAsset._explosionArmor ItemClothingAsset.movementSpeedMultiplier ItemClothingAsset.wearAudio ItemClothingAsset.priorityOverCosmeticOverride ItemClothingAsset.hasPriorityOverCosmeticOverride ItemClothingAsset.shouldBeVisible(bool) ItemClothingAsset.GetDefaultInventoryAudio() ItemClothingAsset.GetDefaultTakesPriorityOverCosmetic() ItemClothingAsset.armor ItemClothingAsset.explosionArmor ItemClothingAsset.fallingDamageMultiplier ItemClothingAsset.showQuality ItemClothingAsset.proofWater ItemClothingAsset.proofFire ItemClothingAsset.proofRadiation ItemClothingAsset.preventsFallingBrokenBones ItemClothingAsset.visibleOnRagdoll ItemClothingAsset.hairVisible ItemClothingAsset.beardVisible ItemClothingAsset.shouldDestroyClothingColliders ItemClothingAsset.skinOverride ItemClothingAsset.TakesPriorityOverCosmetic ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemVestAsset() public ItemVestAsset() Fields _vest protected GameObject _vest Field Value GameObject Properties vest public GameObject vest { get; } Property Value GameObject Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ItemWaterAsset.html": {
    "href": "api/SDG.Unturned.ItemWaterAsset.html",
    "title": "Class ItemWaterAsset | Unturned Analyse Doc",
    "keywords": "Class ItemWaterAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemWaterAsset : ItemConsumeableAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset ItemConsumeableAsset ItemWaterAsset Implements IAssetErrorContext ISkinableAsset Inherited Members ItemConsumeableAsset._use ItemConsumeableAsset.experience ItemConsumeableAsset._explosion ItemConsumeableAsset.questRewardsList ItemConsumeableAsset.IsExplosionEffectRefNull() ItemConsumeableAsset.FindExplosionEffectAsset() ItemConsumeableAsset.GrantQuestRewards(Player) ItemConsumeableAsset.BuildDescription(ItemDescriptionBuilder, Item) ItemConsumeableAsset.PopulateAsset(Bundle, DatDictionary, Local) ItemConsumeableAsset.grantQuestRewards(Player, bool) ItemConsumeableAsset.use ItemConsumeableAsset.health ItemConsumeableAsset.food ItemConsumeableAsset.water ItemConsumeableAsset.virus ItemConsumeableAsset.disinfectant ItemConsumeableAsset.energy ItemConsumeableAsset.vision ItemConsumeableAsset.oxygen ItemConsumeableAsset.warmth ItemConsumeableAsset.bleedingModifier ItemConsumeableAsset.bonesModifier ItemConsumeableAsset.hasAid ItemConsumeableAsset.foodConstrainsWater ItemConsumeableAsset.shouldDeleteAfterUse ItemConsumeableAsset.showQuality ItemConsumeableAsset.ExplosionEffectGuid ItemConsumeableAsset.explosion ItemConsumeableAsset.IsExplosive ItemConsumeableAsset.questRewards ItemConsumeableAsset.itemRewards ItemConsumeableAsset.doesItemTypeHaveSkins ItemConsumeableAsset.shouldFriendlySentryTargetUser ItemWeaponAsset.range ItemWeaponAsset.playerDamageMultiplier ItemWeaponAsset.zombieDamageMultiplier ItemWeaponAsset.animalDamageMultiplier ItemWeaponAsset.barricadeDamage ItemWeaponAsset.structureDamage ItemWeaponAsset.vehicleDamage ItemWeaponAsset.resourceDamage ItemWeaponAsset.objectDamage ItemWeaponAsset.durability ItemWeaponAsset.wear ItemWeaponAsset.isInvulnerable ItemWeaponAsset.hasBladeID(byte) ItemWeaponAsset.initPlayerDamageParameters(ref DamagePlayerParameters) ItemWeaponAsset.BuildExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) ItemWeaponAsset.bladeIDs ItemWeaponAsset.playerDamageBleeding ItemWeaponAsset.playerDamageBones ItemWeaponAsset.playerDamageFood ItemWeaponAsset.playerDamageWater ItemWeaponAsset.playerDamageVirus ItemWeaponAsset.playerDamageHallucination ItemWeaponAsset.zombieStunOverride ItemWeaponAsset.animalOrPlayerDamageMultiplier ItemWeaponAsset.zombieOrPlayerDamageMultiplier ItemWeaponAsset.allowFleshFx ItemWeaponAsset.bypassAllowedToDamagePlayer ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemWaterAsset() public ItemWaterAsset()"
  },
  "api/SDG.Unturned.ItemWeaponAsset.html": {
    "href": "api/SDG.Unturned.ItemWeaponAsset.html",
    "title": "Class ItemWeaponAsset | Unturned Analyse Doc",
    "keywords": "Class ItemWeaponAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemWeaponAsset : ItemAsset, IAssetErrorContext, ISkinableAsset Inheritance object Asset ItemAsset ItemWeaponAsset Implements IAssetErrorContext ISkinableAsset Derived ItemConsumeableAsset ItemGunAsset ItemMeleeAsset ItemThrowableAsset Inherited Members ItemAsset.shouldAlwaysLoadItemPrefab ItemAsset._shouldVerifyHash ItemAsset._itemName ItemAsset._itemDescription ItemAsset.type ItemAsset.rarity ItemAsset._proPath ItemAsset.econIconUseId ItemAsset.isPro ItemAsset.useable ItemAsset.slot ItemAsset.size_x ItemAsset.size_y ItemAsset.iconCameraOrthographicSize ItemAsset.econIconCameraOrthographicSize ItemAsset.isEligibleForAutomaticIconMeasurements ItemAsset.amount ItemAsset.countMin ItemAsset.countMax ItemAsset.qualityMin ItemAsset.qualityMax ItemAsset.isBackward ItemAsset.shouldProcedurallyAnimateInertia ItemAsset.shouldLeftHandedCharactersMirrorEquippedItem ItemAsset.isEligibleForAutoStatDescriptions ItemAsset._item ItemAsset.equipablePrefab ItemAsset.equipableMovementSpeedMultiplier ItemAsset._equip ItemAsset._animations ItemAsset.inspectAudio ItemAsset.inventoryAudio ItemAsset._blueprints ItemAsset._actions ItemAsset._albedoBase ItemAsset._metallicBase ItemAsset._emissionBase ItemAsset.DescSort_RarityAndType ItemAsset.DescSort_LoreText ItemAsset.DescSort_QualityAndAmount ItemAsset.DescSort_Important ItemAsset.DescSort_ItemStat ItemAsset.DescSort_ClothingStat ItemAsset.DescSort_ConsumeableStat ItemAsset.DescSort_GunStat ItemAsset.DescSort_GunAttachmentStat ItemAsset.DescSort_MeleeStat ItemAsset.DescSort_RefillStat ItemAsset.DescSort_Weapon_NonExplosive_Common ItemAsset.DescSort_TrapKeyword ItemAsset.DescSort_TrapStat ItemAsset.DescSort_FarmableText ItemAsset.DescSort_BuildableCommon ItemAsset.DescSort_ExplosiveBulletDamage ItemAsset.DescSort_ExplosiveChargeDamage ItemAsset.DescSort_ExplosiveTrapDamage ItemAsset.DescSort_Weapon_Explosive_RangeAndDamage ItemAsset.DescSort_Weapon_NonExplosive_PlayerDamage ItemAsset.DescSort_Weapon_NonExplosive_ZombieDamage ItemAsset.DescSort_Weapon_NonExplosive_AnimalDamage ItemAsset.DescSort_Weapon_NonExplosive_OtherDamage ItemAsset.DescSort_Beneficial ItemAsset.DescSort_Detrimental ItemAsset.getState() ItemAsset.getState(bool) ItemAsset.getState(EItemOrigin) ItemAsset.GetTypeFriendlyName() ItemAsset.applySkinBaseTextures(Material) ItemAsset.canBeUsedInSafezone(SafezoneNode) ItemAsset.canBeUsedInSafezone(SafezoneNode, bool) ItemAsset.GetDefaultInventoryAudio() ItemAsset.DescSort_HigherIsBeneficial(float) ItemAsset.DescSort_LowerIsBeneficial(float) ItemAsset.shouldVerifyHash ItemAsset.FriendlyName ItemAsset.itemName ItemAsset.itemDescription ItemAsset.proPath ItemAsset.useableType ItemAsset.canPlayerEquip ItemAsset.isUseable ItemAsset.canUseUnderwater ItemAsset.count ItemAsset.quality ItemAsset.EquipableModelParent ItemAsset.ShouldAttachEquippedModelToLeftHand ItemAsset.item ItemAsset.instantiatedItemName ItemAsset.equip ItemAsset.animations ItemAsset.blueprints ItemAsset.actions ItemAsset.overrideShowQuality ItemAsset.showQuality ItemAsset.shouldDropOnDeath ItemAsset.allowManualDrop ItemAsset.albedoBase ItemAsset.metallicBase ItemAsset.emissionBase ItemAsset.sharedSkinLookupID ItemAsset.SharedSkinShouldApplyVisuals ItemAsset.shouldFriendlySentryTargetUser ItemAsset.isDangerous ItemAsset.shouldDeleteAtZeroQuality ItemAsset.shouldDestroyItemColliders ItemAsset.assetCategory ItemAsset.doesItemTypeHaveSkins Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemWeaponAsset() public ItemWeaponAsset() Fields animalDamageMultiplier public AnimalDamageMultiplier animalDamageMultiplier Field Value AnimalDamageMultiplier barricadeDamage public float barricadeDamage Field Value float durability public float durability Field Value float isInvulnerable public bool isInvulnerable Field Value bool objectDamage public float objectDamage Field Value float playerDamageMultiplier public PlayerDamageMultiplier playerDamageMultiplier Field Value PlayerDamageMultiplier range public float range Field Value float resourceDamage public float resourceDamage Field Value float structureDamage public float structureDamage Field Value float vehicleDamage public float vehicleDamage Field Value float wear public byte wear Field Value byte zombieDamageMultiplier public ZombieDamageMultiplier zombieDamageMultiplier Field Value ZombieDamageMultiplier Properties allowFleshFx Should player/animal/zombie surface be nulled on hit? Requested by spyjack for a chainsaw-style shield that was overboard with the blood. public bool allowFleshFx { get; protected set; } Property Value bool animalOrPlayerDamageMultiplier Get animal or player damage based on game mode config. public IDamageMultiplier animalOrPlayerDamageMultiplier { get; } Property Value IDamageMultiplier bladeIDs public byte[] bladeIDs { get; protected set; } Property Value byte[] bypassAllowedToDamagePlayer Should this weapon bypass the DamageTool.allowedToDamagePlayer test? Used by weapons that heal players in PvE. public bool bypassAllowedToDamagePlayer { get; protected set; } Property Value bool playerDamageBleeding public DamagePlayerParameters.Bleeding playerDamageBleeding { get; protected set; } Property Value DamagePlayerParameters.Bleeding playerDamageBones public DamagePlayerParameters.Bones playerDamageBones { get; protected set; } Property Value DamagePlayerParameters.Bones playerDamageFood Added to player's food value. public float playerDamageFood { get; protected set; } Property Value float playerDamageHallucination Added to player's hallucination value. public float playerDamageHallucination { get; protected set; } Property Value float playerDamageVirus Added to player's virus value. public float playerDamageVirus { get; protected set; } Property Value float playerDamageWater Added to player's water value. public float playerDamageWater { get; protected set; } Property Value float zombieOrPlayerDamageMultiplier Get zombie or player damage based on game mode config. public IDamageMultiplier zombieOrPlayerDamageMultiplier { get; } Property Value IDamageMultiplier zombieStunOverride public EZombieStunOverride zombieStunOverride { get; protected set; } Property Value EZombieStunOverride Methods BuildDescription(ItemDescriptionBuilder, Item) public override void BuildDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item BuildExplosiveDescription(ItemDescriptionBuilder, Item) Please refer to ItemWeaponAsset.BuildDescription for an explanation of why this is necessary. protected void BuildExplosiveDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item BuildNonExplosiveDescription(ItemDescriptionBuilder, Item) Please refer to ItemWeaponAsset.BuildDescription for an explanation of why this is necessary. protected void BuildNonExplosiveDescription(ItemDescriptionBuilder builder, Item itemInstance) Parameters builder ItemDescriptionBuilder itemInstance Item PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local hasBladeID(byte) public bool hasBladeID(byte bladeID) Parameters bladeID byte Returns bool initPlayerDamageParameters(ref DamagePlayerParameters) public void initPlayerDamageParameters(ref DamagePlayerParameters parameters) Parameters parameters DamagePlayerParameters"
  },
  "api/SDG.Unturned.Items.html": {
    "href": "api/SDG.Unturned.Items.html",
    "title": "Class Items | Unturned Analyse Doc",
    "keywords": "Class Items Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Items Inheritance object Items Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Items(byte) public Items(byte newPage) Parameters newPage byte Fields onItemAdded public ItemAdded onItemAdded Field Value ItemAdded onItemDiscarded public ItemDiscarded onItemDiscarded Field Value ItemDiscarded onItemRemoved public ItemRemoved onItemRemoved Field Value ItemRemoved onItemUpdated public ItemUpdated onItemUpdated Field Value ItemUpdated onItemsResized public ItemsResized onItemsResized Field Value ItemsResized onStateUpdated public StateUpdated onStateUpdated Field Value StateUpdated Properties height public byte height { get; } Property Value byte items public List<ItemJar> items { get; protected set; } Property Value List<ItemJar> page public byte page { get; } Property Value byte width public byte width { get; } Property Value byte Methods addItem(byte, byte, byte, Item) public void addItem(byte x, byte y, byte rot, Item item) Parameters x byte y byte rot byte item Item checkSpaceDrag(byte, byte, byte, byte, byte, byte, byte, byte, bool) public bool checkSpaceDrag(byte old_x, byte old_y, byte oldRot, byte new_x, byte new_y, byte newRot, byte size_x, byte size_y, bool checkSame) Parameters old_x byte old_y byte oldRot byte new_x byte new_y byte newRot byte size_x byte size_y byte checkSame bool Returns bool checkSpaceEmpty(byte, byte, byte, byte, byte) public bool checkSpaceEmpty(byte pos_x, byte pos_y, byte size_x, byte size_y, byte rot) Parameters pos_x byte pos_y byte size_x byte size_y byte rot byte Returns bool checkSpaceSwap(byte, byte, byte, byte, byte, byte, byte, byte) checks whether the spot currently used by the old item is big enough to fit the new item public bool checkSpaceSwap(byte x, byte y, byte oldSize_X, byte oldSize_Y, byte oldRot, byte newSize_X, byte newSize_Y, byte newRot) Parameters x byte y byte oldSize_X byte oldSize_Y byte oldRot byte newSize_X byte newSize_Y byte newRot byte Returns bool clear() public void clear() containsItem(ItemJar) public bool containsItem(ItemJar jar) Parameters jar ItemJar Returns bool findIndex(byte, byte, out byte, out byte) public byte findIndex(byte x, byte y, out byte find_x, out byte find_y) Parameters x byte y byte find_x byte find_y byte Returns byte getIndex(byte, byte) public byte getIndex(byte x, byte y) Parameters x byte y byte Returns byte getItem(byte) public ItemJar getItem(byte index) Parameters index byte Returns ItemJar getItemCount() public byte getItemCount() Returns byte has(ushort) public InventorySearch has(ushort id) Parameters id ushort Returns InventorySearch loadItem(byte, byte, byte, Item) public void loadItem(byte x, byte y, byte rot, Item item) Parameters x byte y byte rot byte item Item loadSize(byte, byte) public void loadSize(byte newWidth, byte newHeight) Parameters newWidth byte newHeight byte removeItem(byte) public void removeItem(byte index) Parameters index byte resize(byte, byte) public void resize(byte newWidth, byte newHeight) Parameters newWidth byte newHeight byte search(List<InventorySearch>, EItemType) public List<InventorySearch> search(List<InventorySearch> search, EItemType type) Parameters search List<InventorySearch> type EItemType Returns List<InventorySearch> search(List<InventorySearch>, EItemType, ushort) [Obsolete] public List<InventorySearch> search(List<InventorySearch> search, EItemType type, ushort caliber) Parameters search List<InventorySearch> type EItemType caliber ushort Returns List<InventorySearch> search(List<InventorySearch>, EItemType, ushort, bool) public List<InventorySearch> search(List<InventorySearch> search, EItemType type, ushort caliber, bool allowZeroCaliber) Parameters search List<InventorySearch> type EItemType caliber ushort allowZeroCaliber bool Returns List<InventorySearch> search(List<InventorySearch>, ushort, bool, bool) public List<InventorySearch> search(List<InventorySearch> search, ushort id, bool findEmpty, bool findHealthy) Parameters search List<InventorySearch> id ushort findEmpty bool findHealthy bool Returns List<InventorySearch> tryAddItem(Item) public bool tryAddItem(Item item) Parameters item Item Returns bool tryAddItem(Item, bool) public bool tryAddItem(Item item, bool isStateUpdatable) Parameters item Item isStateUpdatable bool Returns bool tryFindSpace(byte, byte, out byte, out byte, out byte) public bool tryFindSpace(byte size_x, byte size_y, out byte x, out byte y, out byte rot) Parameters size_x byte size_y byte x byte y byte rot byte Returns bool updateAmount(byte, byte) public void updateAmount(byte index, byte newAmount) Parameters index byte newAmount byte updateQuality(byte, byte) public void updateQuality(byte index, byte newQuality) Parameters index byte newQuality byte updateState(byte, byte[]) public void updateState(byte index, byte[] newState) Parameters index byte newState byte[]"
  },
  "api/SDG.Unturned.ItemsConfigData.html": {
    "href": "api/SDG.Unturned.ItemsConfigData.html",
    "title": "Class ItemsConfigData | Unturned Analyse Doc",
    "keywords": "Class ItemsConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ItemsConfigData Inheritance object ItemsConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ItemsConfigData(EGameMode) public ItemsConfigData(EGameMode mode) Parameters mode EGameMode Fields Clothing_Has_Durability Clothing-specific replacement for Has_Durability. Defaults to true. If false, clothing quality doesn't decrease when damaged. public bool Clothing_Has_Durability Field Value bool Clothing_Spawns_At_Full_Quality Clothing-specific replacement for Has_Durability. Defaults to false. If true, clothing spawns at 100% quality. public bool Clothing_Spawns_At_Full_Quality Field Value bool Crate_Bullets_Full_Chance public float Crate_Bullets_Full_Chance Field Value float Crate_Bullets_Multiplier public float Crate_Bullets_Multiplier Field Value float Default_Spawns_At_Full_Quality Fallback used when spawning an item that doesn't fit into one of the other quality/durability settings. Defaults to false. If true, items spawn at 100% quality. public bool Default_Spawns_At_Full_Quality Field Value bool Despawn_Dropped_Time public float Despawn_Dropped_Time Field Value float Despawn_Natural_Time public float Despawn_Natural_Time Field Value float Food_Spawns_At_Full_Quality Food-specific replacement for Has_Durability. Defaults to false. If true, food spawns at 100% quality. public bool Food_Spawns_At_Full_Quality Field Value bool Gun_Bullets_Full_Chance public float Gun_Bullets_Full_Chance Field Value float Gun_Bullets_Multiplier public float Gun_Bullets_Multiplier Field Value float Has_Durability Original option for disabling item quality. Defaults to true. If false, items spawn at 100% quality and their quality doesn't decrease. For backwards compatibility, the newer per-item-type durability options are ignored if this is off. public bool Has_Durability Field Value bool Magazine_Bullets_Full_Chance public float Magazine_Bullets_Full_Chance Field Value float Magazine_Bullets_Multiplier public float Magazine_Bullets_Multiplier Field Value float Quality_Full_Chance public float Quality_Full_Chance Field Value float Quality_Multiplier public float Quality_Multiplier Field Value float Respawn_Time public float Respawn_Time Field Value float Spawn_Chance public float Spawn_Chance Field Value float Water_Spawns_At_Full_Quality Water-specific replacement for Has_Durability. Defaults to false. If true, water spawns at 100% quality. public bool Water_Spawns_At_Full_Quality Field Value bool Weapons_Have_Durability Melee and gun replacement for Has_Durability. Defaults to true. If false, weapons quality doesn't decrease when used. public bool Weapons_Have_Durability Field Value bool Weapons_Spawn_At_Full_Quality Weapon-specific replacement for Has_Durability. Defaults to false. If true, weapons spawns at 100% quality. public bool Weapons_Spawn_At_Full_Quality Field Value bool"
  },
  "api/SDG.Unturned.ItemsResized.html": {
    "href": "api/SDG.Unturned.ItemsResized.html",
    "title": "Delegate ItemsResized | Unturned Analyse Doc",
    "keywords": "Delegate ItemsResized Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ItemsResized(byte page, byte newWidth, byte newHeight) Parameters page byte newWidth byte newHeight byte Constructors ItemsResized(object, IntPtr) public ItemsResized(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte newWidth, byte newHeight, AsyncCallback callback, object @object) Parameters page byte newWidth byte newHeight byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, byte) public virtual void Invoke(byte page, byte newWidth, byte newHeight) Parameters page byte newWidth byte newHeight byte"
  },
  "api/SDG.Unturned.LODGroupAdditionalData.ELODBiasOverride.html": {
    "href": "api/SDG.Unturned.LODGroupAdditionalData.ELODBiasOverride.html",
    "title": "Enum LODGroupAdditionalData.ELODBiasOverride | Unturned Analyse Doc",
    "keywords": "Enum LODGroupAdditionalData.ELODBiasOverride Namespace SDG.Unturned Assembly Assembly-CSharp.dll Could be extended, e.g. to clamp cull size separately from the per-LOD sizes. public enum LODGroupAdditionalData.ELODBiasOverride Fields IgnoreLODBias = 1 Unturned will adjust per-LOD sizes to counteract LOD bias. Elver has carefully tuned LOD sizes for the interior of the mall, so LOD bias affecting them is undesirable. Note that due to a Unity bug only LOD0 can be greater than 100%. None = 0"
  },
  "api/SDG.Unturned.LODGroupAdditionalData.html": {
    "href": "api/SDG.Unturned.LODGroupAdditionalData.html",
    "title": "Class LODGroupAdditionalData | Unturned Analyse Doc",
    "keywords": "Class LODGroupAdditionalData Namespace SDG.Unturned Assembly Assembly-CSharp.dll Optional Unturned extensions to the LOD Group component. public class LODGroupAdditionalData : MonoBehaviour Inheritance object LODGroupAdditionalData Constructors LODGroupAdditionalData() public LODGroupAdditionalData() Fields LODBiasOverride public LODGroupAdditionalData.ELODBiasOverride LODBiasOverride Field Value LODGroupAdditionalData.ELODBiasOverride"
  },
  "api/SDG.Unturned.Landed.html": {
    "href": "api/SDG.Unturned.Landed.html",
    "title": "Delegate Landed | Unturned Analyse Doc",
    "keywords": "Delegate Landed Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Landed(float velocity) Parameters velocity float Constructors Landed(object, IntPtr) public Landed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(float velocity, AsyncCallback callback, object @object) Parameters velocity float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(float) public virtual void Invoke(float velocity) Parameters velocity float"
  },
  "api/SDG.Unturned.LandscapeMaterialAsset.html": {
    "href": "api/SDG.Unturned.LandscapeMaterialAsset.html",
    "title": "Class LandscapeMaterialAsset | Unturned Analyse Doc",
    "keywords": "Class LandscapeMaterialAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LandscapeMaterialAsset : Asset, IAssetErrorContext Inheritance object Asset LandscapeMaterialAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LandscapeMaterialAsset() public LandscapeMaterialAsset() Fields aprilFoolsRedirect Material to use during the April Fools event instead. public AssetReference<LandscapeMaterialAsset> aprilFoolsRedirect Field Value AssetReference<LandscapeMaterialAsset> autoMaxAngleBegin public float autoMaxAngleBegin Field Value float autoMaxAngleEnd public float autoMaxAngleEnd Field Value float autoMinAngleBegin public float autoMinAngleBegin Field Value float autoMinAngleEnd public float autoMinAngleEnd Field Value float autoRayLength public float autoRayLength Field Value float autoRayMask public ERayMask autoRayMask Field Value ERayMask autoRayRadius public float autoRayRadius Field Value float christmasRedirect Material to use during the Christmas event instead. public AssetReference<LandscapeMaterialAsset> christmasRedirect Field Value AssetReference<LandscapeMaterialAsset> foliage public AssetReference<FoliageInfoCollectionAsset> foliage Field Value AssetReference<FoliageInfoCollectionAsset> halloweenRedirect Material to use during the Halloween event instead. public AssetReference<LandscapeMaterialAsset> halloweenRedirect Field Value AssetReference<LandscapeMaterialAsset> mask public ContentReference<Texture2D> mask Field Value ContentReference<Texture2D> physicsMaterial [Obsolete] public EPhysicsMaterial physicsMaterial Field Value EPhysicsMaterial physicsMaterialName public string physicsMaterialName Field Value string texture public ContentReference<Texture2D> texture Field Value ContentReference<Texture2D> useAutoFoundation public bool useAutoFoundation Field Value bool useAutoSlope public bool useAutoSlope Field Value bool Properties FriendlyName public override string FriendlyName { get; } Property Value string assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getHolidayRedirect() public AssetReference<LandscapeMaterialAsset> getHolidayRedirect() Returns AssetReference<LandscapeMaterialAsset> getOrCreateLayer() public TerrainLayer getOrCreateLayer() Returns TerrainLayer"
  },
  "api/SDG.Unturned.LayerMasks.html": {
    "href": "api/SDG.Unturned.LayerMasks.html",
    "title": "Class LayerMasks | Unturned Analyse Doc",
    "keywords": "Class LayerMasks Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LayerMasks Inheritance object LayerMasks Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LayerMasks() public LayerMasks() Fields AGENT public const int AGENT = 24 Field Value int BARRICADE public const int BARRICADE = 27 Field Value int CLIP public const int CLIP = 21 Field Value int DEBRIS public const int DEBRIS = 12 Field Value int DEFAULT public const int DEFAULT = 0 Field Value int ENEMY public const int ENEMY = 10 Field Value int ENTITY public const int ENTITY = 23 Field Value int ENVIRONMENT public const int ENVIRONMENT = 19 Field Value int GROUND public const int GROUND = 20 Field Value int GROUND2 public const int GROUND2 = 31 Field Value int IGNORE_RAYCAST public const int IGNORE_RAYCAST = 2 Field Value int ITEM public const int ITEM = 13 Field Value int LADDER public const int LADDER = 25 Field Value int LARGE public const int LARGE = 15 Field Value int LOGIC public const int LOGIC = 8 Field Value int MEDIUM public const int MEDIUM = 16 Field Value int NAVMESH public const int NAVMESH = 22 Field Value int PLAYER public const int PLAYER = 9 Field Value int RESOURCE public const int RESOURCE = 14 Field Value int SKY public const int SKY = 18 Field Value int SMALL public const int SMALL = 17 Field Value int STRUCTURE public const int STRUCTURE = 28 Field Value int TIRE public const int TIRE = 29 Field Value int TRANSPARENT_FX public const int TRANSPARENT_FX = 1 Field Value int TRAP public const int TRAP = 30 Field Value int UI public const int UI = 5 Field Value int VEHICLE public const int VEHICLE = 26 Field Value int VIEWMODEL public const int VIEWMODEL = 11 Field Value int WATER public const int WATER = 4 Field Value int"
  },
  "api/SDG.Unturned.Layerer.html": {
    "href": "api/SDG.Unturned.Layerer.html",
    "title": "Class Layerer | Unturned Analyse Doc",
    "keywords": "Class Layerer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Layerer Inheritance object Layerer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Layerer() public Layerer() Methods enemy(Transform) public static void enemy(Transform target) Parameters target Transform relayer(Transform, int) public static void relayer(Transform target, int layer) Parameters target Transform layer int viewmodel(Transform) public static void viewmodel(Transform target) Parameters target Transform"
  },
  "api/SDG.Unturned.LegacyInputOutput.html": {
    "href": "api/SDG.Unturned.LegacyInputOutput.html",
    "title": "Class LegacyInputOutput | Unturned Analyse Doc",
    "keywords": "Class LegacyInputOutput Namespace SDG.Unturned Assembly Assembly-CSharp.dll Matches the console behavior prior to command IO refactor. public class LegacyInputOutput : ICommandInputOutput Inheritance object LegacyInputOutput Implements ICommandInputOutput Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LegacyInputOutput() public LegacyInputOutput() Methods initialize(CommandWindow) Called when this implementation is setup by command window. public virtual void initialize(CommandWindow commandWindow) Parameters commandWindow CommandWindow outputError(string) Print red message. public virtual void outputError(string error) Parameters error string outputInformation(string) Print white message. public virtual void outputInformation(string information) Parameters information string outputToConsole(string, ConsoleColor) protected virtual void outputToConsole(string value, ConsoleColor color) Parameters value string color ConsoleColor outputWarning(string) Print yellow message. public virtual void outputWarning(string warning) Parameters warning string shutdown(CommandWindow) Called when this implementation is deleted or application quits. public virtual void shutdown(CommandWindow commandWindow) Parameters commandWindow CommandWindow update() Called each Unity update. public virtual void update() Events inputCommitted Broadcasts when the enter key is pressed. public event CommandInputHandler inputCommitted Event Type CommandInputHandler"
  },
  "api/SDG.Unturned.LegacyRainComponent.html": {
    "href": "api/SDG.Unturned.LegacyRainComponent.html",
    "title": "Class LegacyRainComponent | Unturned Analyse Doc",
    "keywords": "Class LegacyRainComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LegacyRainComponent : CustomWeatherComponent Inheritance object WeatherComponentBase CustomWeatherComponent LegacyRainComponent Inherited Members CustomWeatherComponent.customAsset CustomWeatherComponent.InitializeWeather() CustomWeatherComponent.UpdateWeather() CustomWeatherComponent.UpdateLightingTime(int, int, float) CustomWeatherComponent.PreDestroyWeather() WeatherComponentBase.asset WeatherComponentBase.globalBlendAlpha WeatherComponentBase.localVolumeBlendAlpha WeatherComponentBase.isWeatherActive WeatherComponentBase.hasTickedBlending WeatherComponentBase.isFullyTransitionedIn WeatherComponentBase.fogColor WeatherComponentBase.fogDensity WeatherComponentBase.overrideFog WeatherComponentBase.overrideAtmosphericFog WeatherComponentBase.overrideCloudColors WeatherComponentBase.cloudColor WeatherComponentBase.cloudRimColor WeatherComponentBase.puddleWaterLevel WeatherComponentBase.puddleIntensity WeatherComponentBase.brightnessMultiplier WeatherComponentBase.shadowStrengthMultiplier WeatherComponentBase.fogBlendExponent WeatherComponentBase.cloudBlendExponent WeatherComponentBase.windMain WeatherComponentBase.ambientAudioSource WeatherComponentBase.GetNetId() WeatherComponentBase.EnumerateMaskedPlayers() WeatherComponentBase.EffectBlendAlpha Constructors LegacyRainComponent() public LegacyRainComponent() Methods OnBeginTransitionIn() public override void OnBeginTransitionIn() OnBeginTransitionOut() public override void OnBeginTransitionOut() OnEndTransitionIn() public override void OnEndTransitionIn() OnEndTransitionOut() public override void OnEndTransitionOut()"
  },
  "api/SDG.Unturned.LegacySnowComponent.html": {
    "href": "api/SDG.Unturned.LegacySnowComponent.html",
    "title": "Class LegacySnowComponent | Unturned Analyse Doc",
    "keywords": "Class LegacySnowComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LegacySnowComponent : CustomWeatherComponent Inheritance object WeatherComponentBase CustomWeatherComponent LegacySnowComponent Inherited Members CustomWeatherComponent.customAsset CustomWeatherComponent.InitializeWeather() CustomWeatherComponent.UpdateWeather() CustomWeatherComponent.UpdateLightingTime(int, int, float) CustomWeatherComponent.PreDestroyWeather() WeatherComponentBase.asset WeatherComponentBase.globalBlendAlpha WeatherComponentBase.localVolumeBlendAlpha WeatherComponentBase.isWeatherActive WeatherComponentBase.hasTickedBlending WeatherComponentBase.isFullyTransitionedIn WeatherComponentBase.fogColor WeatherComponentBase.fogDensity WeatherComponentBase.overrideFog WeatherComponentBase.overrideAtmosphericFog WeatherComponentBase.overrideCloudColors WeatherComponentBase.cloudColor WeatherComponentBase.cloudRimColor WeatherComponentBase.puddleWaterLevel WeatherComponentBase.puddleIntensity WeatherComponentBase.brightnessMultiplier WeatherComponentBase.shadowStrengthMultiplier WeatherComponentBase.fogBlendExponent WeatherComponentBase.cloudBlendExponent WeatherComponentBase.windMain WeatherComponentBase.ambientAudioSource WeatherComponentBase.GetNetId() WeatherComponentBase.EnumerateMaskedPlayers() WeatherComponentBase.EffectBlendAlpha Constructors LegacySnowComponent() public LegacySnowComponent() Methods OnBeginTransitionIn() public override void OnBeginTransitionIn() OnBeginTransitionOut() public override void OnBeginTransitionOut() OnEndTransitionIn() public override void OnEndTransitionIn() OnEndTransitionOut() public override void OnEndTransitionOut()"
  },
  "api/SDG.Unturned.Level.SatelliteCaptureDelegate.html": {
    "href": "api/SDG.Unturned.Level.SatelliteCaptureDelegate.html",
    "title": "Delegate Level.SatelliteCaptureDelegate | Unturned Analyse Doc",
    "keywords": "Delegate Level.SatelliteCaptureDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Level.SatelliteCaptureDelegate() Constructors SatelliteCaptureDelegate(object, IntPtr) public SatelliteCaptureDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Level.html": {
    "href": "api/SDG.Unturned.Level.html",
    "title": "Class Level | Unturned Analyse Doc",
    "keywords": "Class Level Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Level : MonoBehaviour Inheritance object Level Constructors Level() public Level() Fields BUILD_INDEX_GAME public static readonly int BUILD_INDEX_GAME Field Value int BUILD_INDEX_LOADING public static readonly int BUILD_INDEX_LOADING Field Value int BUILD_INDEX_MENU public static readonly int BUILD_INDEX_MENU Field Value int BUILD_INDEX_SETUP public static readonly int BUILD_INDEX_SETUP Field Value int CLIP public static readonly ushort CLIP Field Value ushort HEIGHT public static readonly float HEIGHT Field Value float INSANE_BORDER public static readonly ushort INSANE_BORDER Field Value ushort INSANE_SIZE public static readonly ushort INSANE_SIZE Field Value ushort LARGE_BORDER public static readonly ushort LARGE_BORDER Field Value ushort LARGE_SIZE public static readonly ushort LARGE_SIZE Field Value ushort MEDIUM_BORDER public static readonly ushort MEDIUM_BORDER Field Value ushort MEDIUM_SIZE public static readonly ushort MEDIUM_SIZE Field Value ushort SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SMALL_BORDER public static readonly ushort SMALL_BORDER Field Value ushort SMALL_SIZE public static readonly ushort SMALL_SIZE Field Value ushort TERRAIN public static readonly float TERRAIN Field Value float TINY_BORDER public static readonly ushort TINY_BORDER Field Value ushort TINY_SIZE public static readonly ushort TINY_SIZE Field Value ushort isLoadingArea public static bool isLoadingArea Field Value bool isLoadingBarricades public static bool isLoadingBarricades Field Value bool isLoadingContent public static bool isLoadingContent Field Value bool isLoadingLighting public static bool isLoadingLighting Field Value bool isLoadingStructures public static bool isLoadingStructures Field Value bool isLoadingVehicles public static bool isLoadingVehicles Field Value bool onLevelExited public static LevelExited onLevelExited Field Value LevelExited onLevelLoaded public static LevelLoaded onLevelLoaded Field Value LevelLoaded onLevelsRefreshed public static LevelsRefreshed onLevelsRefreshed Field Value LevelsRefreshed onPostLevelLoaded public static PostLevelLoaded onPostLevelLoaded Field Value PostLevelLoaded onPreLevelLoaded public static PreLevelLoaded onPreLevelLoaded Field Value PreLevelLoaded onPrePreLevelLoaded public static PrePreLevelLoaded onPrePreLevelLoaded Field Value PrePreLevelLoaded Properties border public static ushort border { get; } Property Value ushort clips public static Transform clips { get; } Property Value Transform editing public static Transform editing { get; } Property Value Transform effects [Obsolete(\"Was the parent of all effects in the past, but now empty for TransformHierarchy performance.\")] public static Transform effects { get; } Property Value Transform hash public static byte[] hash { get; } Property Value byte[] info public static LevelInfo info { get; } Property Value LevelInfo isEditor public static bool isEditor { get; } Property Value bool isExiting public static bool isExiting { get; protected set; } Property Value bool isInitialized public static bool isInitialized { get; } Property Value bool isLoaded public static bool isLoaded { get; } Property Value bool isLoading public static bool isLoading { get; } Property Value bool isVR public static bool isVR { get; } Property Value bool level public static Transform level { get; } Property Value Transform packedVersion Version string of the currently loaded level packed into an integer. public static uint packedVersion { get; } Property Value uint roots public static Transform roots { get; } Property Value Transform shouldUseHolidayRedirects Should loading code proceed with redirects? Disabled by level and when in the editor. public static bool shouldUseHolidayRedirects { get; } Property Value bool shouldUseLevelBatching public static bool shouldUseLevelBatching { get; } Property Value bool size public static ushort size { get; } Property Value ushort spawns [Obsolete(\"Was the parent of gameplay objects in the past, but now empty for TransformHierarchy performance.\")] public static Transform spawns { get; } Property Value Transform version Display version string of the currently loaded level. public static string version { get; } Property Value string Methods CaptureChartImage() public static void CaptureChartImage() CaptureSatelliteImage() public static void CaptureSatelliteImage() FindLevelForServerFilterExact(string) New map filter uses lowercase map name and doesn't need startswith. public static LevelInfo FindLevelForServerFilterExact(string filter) Parameters filter string Returns LevelInfo add(string, ELevelSize, ELevelType) public static void add(string name, ELevelSize size, ELevelType type) Parameters name string size ELevelSize type ELevelType bindSatelliteCaptureInEditor(SatelliteCaptureDelegate, SatelliteCaptureDelegate) public static void bindSatelliteCaptureInEditor(Level.SatelliteCaptureDelegate preCapture, Level.SatelliteCaptureDelegate postCapture) Parameters preCapture Level.SatelliteCaptureDelegate postCapture Level.SatelliteCaptureDelegate broadcastLevelsRefreshed() Notify menus that levels list has changed. Used when creating/deleting levels, as well as following workshop changes. public static void broadcastLevelsRefreshed() checkLevel(Vector3) [Obsolete(\"Replaced by checkSafeIncludingClipVolumes or the newer isPointWithinValidHeight\")] public static bool checkLevel(Vector3 point) Parameters point Vector3 Returns bool checkSafeIncludingClipVolumes(Vector3) Is a point safely within the level bounds? Also checks player clip volumes if legacy borders are disabled. public static bool checkSafeIncludingClipVolumes(Vector3 point) Parameters point Vector3 Returns bool edit(LevelInfo) public static void edit(LevelInfo newInfo) Parameters newInfo LevelInfo exists(string) [Obsolete(\"Was unused in vanilla, so simplified to just use the find level by name method.\")] public static bool exists(string name) Parameters name string Returns bool exit() public static void exit() findLevelForServerFilter(string) Server list allows player to enter a map name when searching, so we try to find a local copy of the level for version number comparison. (Server map version might differ.) public static LevelInfo findLevelForServerFilter(string filter) Parameters filter string Returns LevelInfo getAsset() Get level's cached asset, if any. public static LevelAsset getAsset() Returns LevelAsset getLevel(string) public static LevelInfo getLevel(string name) Parameters name string Returns LevelInfo getLevelHash(string) [Obsolete(\"Replaced by LevelInfo.hash\")] public static byte[] getLevelHash(string path) Parameters path string Returns byte[] getLevels(ESingleplayerMapCategory) public static LevelInfo[] getLevels(ESingleplayerMapCategory categoryFilter) Parameters categoryFilter ESingleplayerMapCategory Returns LevelInfo[] includeHash(string, byte[]) public static void includeHash(string id, byte[] pendingHash) Parameters id string pendingHash byte[] init(int) public IEnumerator init(int id) Parameters id int Returns IEnumerator isPointWithinValidHeight(float) Is given Y (vertical) coordinate within level's height range? Maps using landscapes have a larger range than older maps. public static bool isPointWithinValidHeight(float y) Parameters y float Returns bool load(LevelInfo, bool) public static void load(LevelInfo newInfo, bool hasAuthority) Parameters newInfo LevelInfo hasAuthority bool loading() public static void loading() remove(string) public static void remove(string name) Parameters name string save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool unbindSatelliteCapture(SatelliteCaptureDelegate, SatelliteCaptureDelegate) public static void unbindSatelliteCapture(Level.SatelliteCaptureDelegate preCapture, Level.SatelliteCaptureDelegate postCapture) Parameters preCapture Level.SatelliteCaptureDelegate postCapture Level.SatelliteCaptureDelegate Events loadingSteps public static event LevelLoadingStepHandler loadingSteps Event Type LevelLoadingStepHandler onSatellitePostCapture public static event Level.SatelliteCaptureDelegate onSatellitePostCapture Event Type Level.SatelliteCaptureDelegate onSatellitePreCapture public static event Level.SatelliteCaptureDelegate onSatellitePreCapture Event Type Level.SatelliteCaptureDelegate"
  },
  "api/SDG.Unturned.LevelAnimals.html": {
    "href": "api/SDG.Unturned.LevelAnimals.html",
    "title": "Class LevelAnimals | Unturned Analyse Doc",
    "keywords": "Class LevelAnimals Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelAnimals Inheritance object LevelAnimals Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelAnimals() public LevelAnimals() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties models [Obsolete(\"Was the parent of all animals in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform spawns public static List<AnimalSpawnpoint> spawns { get; } Property Value List<AnimalSpawnpoint> tables public static List<AnimalTable> tables { get; } Property Value List<AnimalTable> Methods addSpawn(Vector3) public static void addSpawn(Vector3 point) Parameters point Vector3 addTable(string) public static void addTable(string name) Parameters name string getAnimal(AnimalSpawnpoint) public static ushort getAnimal(AnimalSpawnpoint spawn) Parameters spawn AnimalSpawnpoint Returns ushort getAnimal(byte) public static ushort getAnimal(byte type) Parameters type byte Returns ushort load() public static void load() removeSpawn(Vector3, float) public static void removeSpawn(Vector3 point, float radius) Parameters point Vector3 radius float removeTable() public static void removeTable() save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.LevelAsset.LoadingScreenMusic.html": {
    "href": "api/SDG.Unturned.LevelAsset.LoadingScreenMusic.html",
    "title": "Struct LevelAsset.LoadingScreenMusic | Unturned Analyse Doc",
    "keywords": "Struct LevelAsset.LoadingScreenMusic Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct LevelAsset.LoadingScreenMusic Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields loopRef public MasterBundleReference<AudioClip> loopRef Field Value MasterBundleReference<AudioClip> loopVolume public float loopVolume Field Value float outroRef public MasterBundleReference<AudioClip> outroRef Field Value MasterBundleReference<AudioClip> outroVolume public float outroVolume Field Value float"
  },
  "api/SDG.Unturned.LevelAsset.SchedulableWeather.html": {
    "href": "api/SDG.Unturned.LevelAsset.SchedulableWeather.html",
    "title": "Struct LevelAsset.SchedulableWeather | Unturned Analyse Doc",
    "keywords": "Struct LevelAsset.SchedulableWeather Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct LevelAsset.SchedulableWeather Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields assetRef public AssetReference<WeatherAssetBase> assetRef Field Value AssetReference<WeatherAssetBase> maxDuration public float maxDuration Field Value float maxFrequency public float maxFrequency Field Value float minDuration public float minDuration Field Value float minFrequency public float minFrequency Field Value float"
  },
  "api/SDG.Unturned.LevelAsset.SkillRule.html": {
    "href": "api/SDG.Unturned.LevelAsset.SkillRule.html",
    "title": "Class LevelAsset.SkillRule | Unturned Analyse Doc",
    "keywords": "Class LevelAsset.SkillRule Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelAsset.SkillRule Inheritance object LevelAsset.SkillRule Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SkillRule() public SkillRule() Fields costMultiplier public float costMultiplier Field Value float defaultLevel public int defaultLevel Field Value int maxUnlockableLevel public int maxUnlockableLevel Field Value int"
  },
  "api/SDG.Unturned.LevelAsset.html": {
    "href": "api/SDG.Unturned.LevelAsset.html",
    "title": "Class LevelAsset | Unturned Analyse Doc",
    "keywords": "Class LevelAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelAsset : Asset, IAssetErrorContext Inheritance object Asset LevelAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelAsset() public LevelAsset() Fields airdropRef public AssetReference<AirdropAsset> airdropRef Field Value AssetReference<AirdropAsset> craftingBlacklists public List<AssetReference<CraftingBlacklistAsset>> craftingBlacklists Field Value List<AssetReference<CraftingBlacklistAsset>> defaultGameMode public TypeReference<GameMode> defaultGameMode Field Value TypeReference<GameMode> defaultLevel public static AssetReference<LevelAsset> defaultLevel Field Value AssetReference<LevelAsset> dropshipPrefab public MasterBundleReference<GameObject> dropshipPrefab Field Value MasterBundleReference<GameObject> enableAdminFasterSalvageDuration By default players in singleplayer and admins in multiplayer have a faster salvage time. This option was requested for maps with entirely custom balanced salvage times. public bool enableAdminFasterSalvageDuration Field Value bool fallDamageSpeedThreshold Deal damage and break legs if speed is greater than this value. public float fallDamageSpeedThreshold Field Value float globalWeatherMask Volume weather mask used while not inside an ambience volume. public uint globalWeatherMask Field Value uint hasClouds If false, clouds are removed from the skybox. public bool hasClouds Field Value bool loadingScreenMusic public LevelAsset.LoadingScreenMusic[] loadingScreenMusic Field Value LoadingScreenMusic[] minStealthRadius Player stealth radius cannot go below this value. public float minStealthRadius Field Value float perpetualWeatherRef If set, this weather will always be active and scheduled weather is disabled. public AssetReference<WeatherAssetBase> perpetualWeatherRef Field Value AssetReference<WeatherAssetBase> schedulableWeathers Determines which weather can naturally occur in this level. Null if empty. public LevelAsset.SchedulableWeather[] schedulableWeathers Field Value SchedulableWeather[] shouldAnimateBackgroundImage Defaults to false because some servers have rules and info on the loading screen. public bool shouldAnimateBackgroundImage Field Value bool skillRules Allows level to override skill max levels. Null if empty, otherwise matches 1:1 with PlayerSkills._skills. public LevelAsset.SkillRule[][] skillRules Field Value SkillRule[][] supportedGameModes public List<TypeReference<GameMode>> supportedGameModes Field Value List<TypeReference<GameMode>> Properties DeathMusicRef Audio clip to play in 2D when a player dies. public MasterBundleReference<AudioClip> DeathMusicRef { get; } Property Value MasterBundleReference<AudioClip> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local isBlueprintBlacklisted(Blueprint) public bool isBlueprintBlacklisted(Blueprint blueprint) Parameters blueprint Blueprint Returns bool"
  },
  "api/SDG.Unturned.LevelBarricades.html": {
    "href": "api/SDG.Unturned.LevelBarricades.html",
    "title": "Class LevelBarricades | Unturned Analyse Doc",
    "keywords": "Class LevelBarricades Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelBarricades Inheritance object LevelBarricades Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelBarricades() public LevelBarricades() Properties models [Obsolete(\"Was the parent of all barricades in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform"
  },
  "api/SDG.Unturned.LevelBuildableObject.html": {
    "href": "api/SDG.Unturned.LevelBuildableObject.html",
    "title": "Class LevelBuildableObject | Unturned Analyse Doc",
    "keywords": "Class LevelBuildableObject Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelBuildableObject Inheritance object LevelBuildableObject Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelBuildableObject(Vector3, Quaternion, ushort) public LevelBuildableObject(Vector3 newPoint, Quaternion newRotation, ushort newID) Parameters newPoint Vector3 newRotation Quaternion newID ushort Fields point public Vector3 point Field Value Vector3 rotation public Quaternion rotation Field Value Quaternion Properties asset public ItemAsset asset { get; } Property Value ItemAsset id public ushort id { get; } Property Value ushort isEnabled public bool isEnabled { get; } Property Value bool transform public Transform transform { get; } Property Value Transform Methods destroy() public void destroy() disable() public void disable() enable() public void enable()"
  },
  "api/SDG.Unturned.LevelExited.html": {
    "href": "api/SDG.Unturned.LevelExited.html",
    "title": "Delegate LevelExited | Unturned Analyse Doc",
    "keywords": "Delegate LevelExited Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LevelExited() Constructors LevelExited(object, IntPtr) public LevelExited(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.LevelGround.html": {
    "href": "api/SDG.Unturned.LevelGround.html",
    "title": "Class LevelGround | Unturned Analyse Doc",
    "keywords": "Class LevelGround Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelGround : MonoBehaviour Inheritance object LevelGround Constructors LevelGround() public LevelGround() Fields ALPHAMAPS public static readonly byte ALPHAMAPS Field Value byte RESOURCE_REGIONS public static readonly byte RESOURCE_REGIONS Field Value byte SAVEDATA_TREES_VERSION public static readonly byte SAVEDATA_TREES_VERSION Field Value byte doesLegacyDataIncludeSplatmapWeights If true, splatmap conversion should use weights as-is. public static bool doesLegacyDataIncludeSplatmapWeights Field Value bool hasLegacyDataForConversion If true then level should convert old terrain. public static bool hasLegacyDataForConversion Field Value bool legacyMaterialGuids Material guids converted by legacy asset bundle hash or texture names. public static AssetReference<LandscapeMaterialAsset>[] legacyMaterialGuids Field Value AssetReference<LandscapeMaterialAsset>[] Properties data public static TerrainData data { get; } Property Value TerrainData data2 public static TerrainData data2 { get; } Property Value TerrainData models [Obsolete(\"Legacy terrain game object only exists for auto-conversion\")] public static Transform models { get; } Property Value Transform models2 [Obsolete(\"Legacy terrain game object only exists for auto-conversion\")] public static Transform models2 { get; } Property Value Transform regions public static bool[,] regions { get; } Property Value bool[,] shouldInstantlyLoad public static bool shouldInstantlyLoad { get; } Property Value bool terrain [Obsolete(\"Legacy terrain only exists for auto-conversion\")] public static Terrain terrain { get; } Property Value Terrain terrain2 [Obsolete(\"Legacy terrain only exists for auto-conversion\")] public static Terrain terrain2 { get; } Property Value Terrain total public static int total { get; } Property Value int trees public static List<ResourceSpawnpoint>[,] trees { get; } Property Value List<ResourceSpawnpoint>[,] treesHash Hash of Trees.dat, or zeroed if any assets were missing locally. Should only be used if level is configured to, as many mod maps are typically missing assets. public static byte[] treesHash { get; } Property Value byte[] triplanarPrimarySize public static float triplanarPrimarySize { get; set; } Property Value float triplanarPrimaryWeight public static float triplanarPrimaryWeight { get; set; } Property Value float triplanarSecondarySize public static float triplanarSecondarySize { get; set; } Property Value float triplanarSecondaryWeight public static float triplanarSecondaryWeight { get; set; } Property Value float triplanarTertiarySize public static float triplanarTertiarySize { get; set; } Property Value float triplanarTertiaryWeight public static float triplanarTertiaryWeight { get; set; } Property Value float Methods addSpawn(Vector3, byte, bool) [Obsolete(\"Replaced by overload which takes ID rather than index.\")] public static void addSpawn(Vector3 point, byte index, bool isGenerated = false) Parameters point Vector3 index byte isGenerated bool addSpawn(Vector3, Guid, bool) public static void addSpawn(Vector3 point, Guid guid, bool isGenerated = false) Parameters point Vector3 guid Guid isGenerated bool addSpawn(Vector3, ushort, bool) [Obsolete(\"Replaced by overload which takes GUID rather than legacy ID\")] public static void addSpawn(Vector3 point, ushort id, bool isGenerated = false) Parameters point Vector3 id ushort isGenerated bool checkSafe(Vector3) [Obsolete] public static Vector3 checkSafe(Vector3 point) Parameters point Vector3 Returns Vector3 cutFoliage(Vector3, float) [Obsolete] public static void cutFoliage(Vector3 point, float radius = 6) Parameters point Vector3 radius float getAlphamap2_X(Vector3) public static int getAlphamap2_X(Vector3 point) Parameters point Vector3 Returns int getAlphamap2_Y(Vector3) public static int getAlphamap2_Y(Vector3 point) Parameters point Vector3 Returns int getAlphamap_X(Vector3) public static int getAlphamap_X(Vector3 point) Parameters point Vector3 Returns int getAlphamap_Y(Vector3) public static int getAlphamap_Y(Vector3 point) Parameters point Vector3 Returns int getConversionHeight(Vector3) public static float getConversionHeight(Vector3 point) Parameters point Vector3 Returns float getConversionWeight(Vector3, int) public static float getConversionWeight(Vector3 point, int layer) Parameters point Vector3 layer int Returns float getHeight(Vector3) public static float getHeight(Vector3 point) Parameters point Vector3 Returns float getHeightmap2_X(Vector3) public static int getHeightmap2_X(Vector3 point) Parameters point Vector3 Returns int getHeightmap2_Y(Vector3) public static int getHeightmap2_Y(Vector3 point) Parameters point Vector3 Returns int getHeightmap_X(Vector3) public static int getHeightmap_X(Vector3 point) Parameters point Vector3 Returns int getHeightmap_Y(Vector3) public static int getHeightmap_Y(Vector3 point) Parameters point Vector3 Returns int getMaterialIndex(Vector3) [Obsolete] public static int getMaterialIndex(Vector3 point) Parameters point Vector3 Returns int getNormal(Vector3) public static Vector3 getNormal(Vector3 point) Parameters point Vector3 Returns Vector3 handlePostBake() protected static void handlePostBake() handlePreBakeTile(FoliageBakeSettings, FoliageTile) protected static void handlePreBakeTile(FoliageBakeSettings bakeSettings, FoliageTile foliageTile) Parameters bakeSettings FoliageBakeSettings foliageTile FoliageTile load(ushort) public static void load(ushort size) Parameters size ushort loadSplatPrototypes() protected static void loadSplatPrototypes() loadTrees() protected static void loadTrees() removeSpawn(Vector3, float) public static void removeSpawn(Vector3 point, float radius) Parameters point Vector3 radius float save() public static void save() saveTrees() protected static void saveTrees()"
  },
  "api/SDG.Unturned.LevelIconCache.html": {
    "href": "api/SDG.Unturned.LevelIconCache.html",
    "title": "Class LevelIconCache | Unturned Analyse Doc",
    "keywords": "Class LevelIconCache Namespace SDG.Unturned Assembly Assembly-CSharp.dll Each level should have a 380x80 Icon.png file. This class caches them so that the server list can show them quickly. public static class LevelIconCache Inheritance object LevelIconCache Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetOrLoadIcon(LevelInfo) public static Texture2D GetOrLoadIcon(LevelInfo levelInfo) Parameters levelInfo LevelInfo Returns Texture2D GetOrLoadIcon(string) public static Texture2D GetOrLoadIcon(string name) Parameters name string Returns Texture2D"
  },
  "api/SDG.Unturned.LevelInfo.html": {
    "href": "api/SDG.Unturned.LevelInfo.html",
    "title": "Class LevelInfo | Unturned Analyse Doc",
    "keywords": "Class LevelInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelInfo Inheritance object LevelInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelInfo(string, string, ELevelSize, ELevelType, bool, LevelInfoConfigData, ulong, byte[]) public LevelInfo(string newPath, string newName, ELevelSize newSize, ELevelType newType, bool newEditable, LevelInfoConfigData newConfigData, ulong publishedFileId, byte[] hash) Parameters newPath string newName string newSize ELevelSize newType ELevelType newEditable bool newConfigData LevelInfoConfigData publishedFileId ulong hash byte[] Properties canAnalyticsTrack Whether unity analytics should track this map's name. Don't want to burn all the analysis points! public bool canAnalyticsTrack { get; } Property Value bool configData public LevelInfoConfigData configData { get; } Property Value LevelInfoConfigData feedbackUrl Web URL to map feedback discussions. public string feedbackUrl { get; } Property Value string hash SHA1 hash of the Level.dat file. public byte[] hash { get; protected set; } Property Value byte[] isCurated Test whether this map's workshop file ID is in the curated maps list. public bool isCurated { get; } Property Value bool isEditable public bool isEditable { get; } Property Value bool isFromWorkshop Only used for play menu categories at the moment. public bool isFromWorkshop { get; protected set; } Property Value bool isSpecial Maps included with the game only, separate from category because arena maps are misc. Category is set as part of the config file. This is only mainly used to enable unity analytics tracking for map name. public bool isSpecial { get; } Property Value bool name public string name { get; } Property Value string path Absolute path to the map folder. public string path { get; protected set; } Property Value string publishedFileId public ulong publishedFileId { get; protected set; } Property Value ulong size public ELevelSize size { get; } Property Value ELevelSize type public ELevelType type { get; } Property Value ELevelType Methods GetLoadingScreenImagePath() Get a random file path in the /Screenshots folder, or fallback to Level.png if it exists. public string GetLoadingScreenImagePath() Returns string GetPreviewImageFilePath() Preview.png should be 320x180 public string GetPreviewImageFilePath() Returns string getLocalization() public Local getLocalization() Returns Local getLocalizedName() public string getLocalizedName() Returns string resolveAsset() [Obsolete(\"Please use Level.getAsset instead. LevelInfo persists between loads now. (public issue #4273)\")] public LevelAsset resolveAsset() Returns LevelAsset"
  },
  "api/SDG.Unturned.LevelInfoConfigData.html": {
    "href": "api/SDG.Unturned.LevelInfoConfigData.html",
    "title": "Class LevelInfoConfigData | Unturned Analyse Doc",
    "keywords": "Class LevelInfoConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelInfoConfigData Inheritance object LevelInfoConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelInfoConfigData() public LevelInfoConfigData() Fields Allow_Crafting public bool Allow_Crafting Field Value bool Allow_Holiday_Redirects If true, certain objects redirect to load others in-game. public bool Allow_Holiday_Redirects Field Value bool Allow_Information public bool Allow_Information Field Value bool Allow_Skills public bool Allow_Skills Field Value bool Allow_Underwater_Features public bool Allow_Underwater_Features Field Value bool Arena_Loadouts public List<ArenaLoadout> Arena_Loadouts Field Value List<ArenaLoadout> Asset public AssetReference<LevelAsset> Asset Field Value AssetReference<LevelAsset> Associated_Stockpile_Items public int[] Associated_Stockpile_Items Field Value int[] Batching_Version LevelBatching is currently only enabled if map creator has verified it works properly. public int Batching_Version Field Value int Blimp_Altitude public float Blimp_Altitude Field Value float Category public ESingleplayerMapCategory Category Field Value ESingleplayerMapCategory Collaborators public string[] Collaborators Field Value string[] Creators public string[] Creators Field Value string[] Feedback public string Feedback Field Value string Gravity public float Gravity Field Value float Has_Atmosphere public bool Has_Atmosphere Field Value bool Has_Global_Electricity If true, electric objects are always powered, and generators have no effect. public bool Has_Global_Electricity Field Value bool Hash public byte[] Hash Field Value byte[] Is_Aurora_Borealis_Visible public bool Is_Aurora_Borealis_Visible Field Value bool Item public int Item Field Value int Max_Walkable_Slope public float Max_Walkable_Slope Field Value float Mode_Config_Overrides public Dictionary<string, object> Mode_Config_Overrides Field Value Dictionary<string, object> PackedVersion Version string packed into integer. public uint PackedVersion Field Value uint PlayerUI_FoodVisible public bool PlayerUI_FoodVisible Field Value bool PlayerUI_GunVisible public bool PlayerUI_GunVisible Field Value bool PlayerUI_HealthVisible public bool PlayerUI_HealthVisible Field Value bool PlayerUI_OxygenVisible public bool PlayerUI_OxygenVisible Field Value bool PlayerUI_StaminaVisible public bool PlayerUI_StaminaVisible Field Value bool PlayerUI_VirusVisible public bool PlayerUI_VirusVisible Field Value bool PlayerUI_WaterVisible public bool PlayerUI_WaterVisible Field Value bool Prevent_Building_Near_Spawnpoint_Radius public float Prevent_Building_Near_Spawnpoint_Radius Field Value float Snow_Affects_Temperature public bool Snow_Affects_Temperature Field Value bool Spawn_Loadouts public List<ArenaLoadout> Spawn_Loadouts Field Value List<ArenaLoadout> Terrain_Snow_Sparkle public bool Terrain_Snow_Sparkle Field Value bool Thanks public string[] Thanks Field Value string[] Tips Number of custom tips defined in per-level localization file. Tip keys are read as Tip_# public int Tips Field Value int Trains public List<LevelTrainAssociation> Trains Field Value List<LevelTrainAssociation> Use_Arena_Compactor public bool Use_Arena_Compactor Field Value bool Use_Legacy_Clip_Borders public bool Use_Legacy_Clip_Borders Field Value bool Use_Legacy_Fog_Height public bool Use_Legacy_Fog_Height Field Value bool Use_Legacy_Ground public bool Use_Legacy_Ground Field Value bool Use_Legacy_Oxygen_Height public bool Use_Legacy_Oxygen_Height Field Value bool Use_Legacy_Snow_Height public bool Use_Legacy_Snow_Height Field Value bool Use_Legacy_Water public bool Use_Legacy_Water Field Value bool Use_Rain_Volumes public bool Use_Rain_Volumes Field Value bool Use_Snow_Volumes public bool Use_Snow_Volumes Field Value bool Use_Underground_Whitelist Should positions underground be clamped above ground? Underground volumes are used to whitelist valid positions. public bool Use_Underground_Whitelist Field Value bool Use_Vanilla_Bubbles Should underwater bubble particles be activated? public bool Use_Vanilla_Bubbles Field Value bool Version Display version in the format \"a.b.c.d\". public string Version Field Value string Weather_Override public ELevelWeatherOverride Weather_Override Field Value ELevelWeatherOverride"
  },
  "api/SDG.Unturned.LevelItems.html": {
    "href": "api/SDG.Unturned.LevelItems.html",
    "title": "Class LevelItems | Unturned Analyse Doc",
    "keywords": "Class LevelItems Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelItems Inheritance object LevelItems Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelItems() public LevelItems() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties models [Obsolete(\"Was the parent of all items in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform spawns public static List<ItemSpawnpoint>[,] spawns { get; } Property Value List<ItemSpawnpoint>[,] tables public static List<ItemTable> tables { get; } Property Value List<ItemTable> Methods addSpawn(Vector3) public static void addSpawn(Vector3 point) Parameters point Vector3 addTable(string) public static void addTable(string name) Parameters name string getItem(ItemSpawnpoint) public static ushort getItem(ItemSpawnpoint spawn) Parameters spawn ItemSpawnpoint Returns ushort getItem(byte) public static ushort getItem(byte type) Parameters type byte Returns ushort load() public static void load() removeSpawn(Vector3, float) public static void removeSpawn(Vector3 point, float radius) Parameters point Vector3 radius float removeTable() public static void removeTable() save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.LevelLighting.IsSeaChangedHandler.html": {
    "href": "api/SDG.Unturned.LevelLighting.IsSeaChangedHandler.html",
    "title": "Delegate LevelLighting.IsSeaChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate LevelLighting.IsSeaChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LevelLighting.IsSeaChangedHandler(bool isSea) Parameters isSea bool Constructors IsSeaChangedHandler(object, IntPtr) public IsSeaChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isSea, AsyncCallback callback, object @object) Parameters isSea bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isSea) Parameters isSea bool"
  },
  "api/SDG.Unturned.LevelLighting.html": {
    "href": "api/SDG.Unturned.LevelLighting.html",
    "title": "Class LevelLighting | Unturned Analyse Doc",
    "keywords": "Class LevelLighting Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelLighting Inheritance object LevelLighting Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelLighting() public LevelLighting() Fields AUDIO_MAX public static readonly float AUDIO_MAX Field Value float AUDIO_MIN public static readonly float AUDIO_MIN Field Value float CLOUDS [Obsolete(\"Never used?\")] public static readonly float CLOUDS Field Value float MOON_CYCLES public static readonly byte MOON_CYCLES Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte _isSea protected static bool _isSea Field Value bool canRain public static bool canRain Field Value bool canSnow public static bool canSnow Field Value bool nightvisionColor public static Color nightvisionColor Field Value Color nightvisionFogIntensity public static float nightvisionFogIntensity Field Value float rainDur public static float rainDur Field Value float rainFreq public static float rainFreq Field Value float rainyness Kept for backwards compatibility with mod hooks, plugins, and events. public static ELightingRain rainyness Field Value ELightingRain snowDur public static float snowDur Field Value float snowFreq public static float snowFreq Field Value float snowyness Kept for backwards compatibility with mod hooks, plugins, and events. public static ELightingSnow snowyness Field Value ELightingSnow sun public static Transform sun Field Value Transform Properties EditorWantsUnderwaterEffects public static bool EditorWantsUnderwaterEffects { get; set; } Property Value bool EditorWantsWaterSurface public static bool EditorWantsWaterSurface { get; set; } Property Value bool azimuth public static float azimuth { get; set; } Property Value float belowAudio public static AudioSource belowAudio { get; } Property Value AudioSource bias public static float bias { get; set; } Property Value float blizzardyness [Obsolete] public static float blizzardyness { get; } Property Value float bubbles public static Transform bubbles { get; } Property Value Transform christmasyness [Obsolete] public static float christmasyness { get; } Property Value float dayAudio public static AudioSource dayAudio { get; } Property Value AudioSource drizzlyness [Obsolete] public static float drizzlyness { get; } Property Value float effectAudio public static AudioSource effectAudio { get; } Property Value AudioSource enableUnderwaterEffects public static bool enableUnderwaterEffects { get; } Property Value bool fade public static float fade { get; set; } Property Value float hash Hash of lighting config. Prevents using the level editor to make night time look like day. public static byte[] hash { get; } Property Value byte[] isSea public static bool isSea { get; protected set; } Property Value bool isSkyboxReflectionEnabled public static bool isSkyboxReflectionEnabled { get; set; } Property Value bool mistyness [Obsolete] public static float mistyness { get; } Property Value float moon public static byte moon { get; set; } Property Value byte nightAudio public static AudioSource nightAudio { get; } Property Value AudioSource seaLevel public static float seaLevel { get; set; } Property Value float skyboxEquator public static Color skyboxEquator { get; } Property Value Color skyboxSky public static Color skyboxSky { get; } Property Value Color snowLevel public static float snowLevel { get; set; } Property Value float time public static float time { get; set; } Property Value float times public static LightingInfo[] times { get; } Property Value LightingInfo[] transition public static float transition { get; } Property Value float vision public static ELightingVision vision { get; set; } Property Value ELightingVision waterAudio public static AudioSource waterAudio { get; } Property Value AudioSource wind public static float wind { get; set; } Property Value float windAudio public static AudioSource windAudio { get; } Property Value AudioSource windZone public static WindZone windZone { get; } Property Value WindZone Methods GetActiveWeatherAsset() public static WeatherAssetBase GetActiveWeatherAsset() Returns WeatherAssetBase GetActiveWeatherGlobalBlendAlpha() public static float GetActiveWeatherGlobalBlendAlpha() Returns float GetActiveWeatherNetState(out WeatherAssetBase, out float, out NetId) public static bool GetActiveWeatherNetState(out WeatherAssetBase asset, out float blendAlpha, out NetId netId) Parameters asset WeatherAssetBase blendAlpha float netId NetId Returns bool GetWeatherGlobalBlendAlpha(WeatherAssetBase) public static float GetWeatherGlobalBlendAlpha(WeatherAssetBase asset) Parameters asset WeatherAssetBase Returns float IsWeatherActive(WeatherAssetBase) public static bool IsWeatherActive(WeatherAssetBase asset) Parameters asset WeatherAssetBase Returns bool IsWeatherFullyTransitionedIn(WeatherAssetBase) public static bool IsWeatherFullyTransitionedIn(WeatherAssetBase asset) Parameters asset WeatherAssetBase Returns bool IsWeatherFullyTransitionedOut(WeatherAssetBase) public static bool IsWeatherFullyTransitionedOut(WeatherAssetBase asset) Parameters asset WeatherAssetBase Returns bool IsWeatherTransitioning(WeatherAssetBase) public static bool IsWeatherTransitioning(WeatherAssetBase asset) Parameters asset WeatherAssetBase Returns bool IsWeatherTransitioningIn(WeatherAssetBase) public static bool IsWeatherTransitioningIn(WeatherAssetBase asset) Parameters asset WeatherAssetBase Returns bool IsWeatherTransitioningOut(WeatherAssetBase) public static bool IsWeatherTransitioningOut(WeatherAssetBase asset) Parameters asset WeatherAssetBase Returns bool getCustomWeather() [Obsolete(\"Renamed to GetActiveWeatherAsset\")] public static WeatherAssetBase getCustomWeather() Returns WeatherAssetBase getSeaColor(string) public static Color getSeaColor(string name) Parameters name string Returns Color getSeaFloat(string) public static float getSeaFloat(string name) Parameters name string Returns float getWaterSurfaceElevation(float) If global ocean plane is enabled then return the worldspace height, otherwise return the optional default value. Default for volume based water is -1024, but atmosphere measure uses a default of zero. public static float getWaterSurfaceElevation(float defaultValue = -1024) Parameters defaultValue float Returns float isPositionSnowy(Vector3) public static bool isPositionSnowy(Vector3 position) Parameters position Vector3 Returns bool isPositionUnderwater(Vector3) [Obsolete(\"Replaced by WaterUtility\")] public static bool isPositionUnderwater(Vector3 position) Parameters position Vector3 Returns bool load(ushort) public static void load(ushort size) Parameters size ushort resetForMainMenu() Reset any global shader properties that may affect the main menu. public static void resetForMainMenu() save() public static void save() setCustomWeather(WeatherAssetBase) [Obsolete] public static void setCustomWeather(WeatherAssetBase asset) Parameters asset WeatherAssetBase setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool setSeaColor(string, Color) public static void setSeaColor(string name, Color color) Parameters name string color Color setSeaFloat(string, float) public static void setSeaFloat(string name, float value) Parameters name string value float setSeaVector(string, Vector4) public static void setSeaVector(string name, Vector4 vector) Parameters name string vector Vector4 tickCustomWeatherBlending(uint) Ticked on dedicated server as well as client so that server can listen for weather events. public static void tickCustomWeatherBlending(uint localVolumeMask) Parameters localVolumeMask uint On dedicated server this is always 0xFFFFFFFF. updateLighting() public static void updateLighting() updateLocal() public static void updateLocal() updateLocal(Vector3, float, IAmbianceNode) public static void updateLocal(Vector3 point, float windOverride, IAmbianceNode effectNode) Parameters point Vector3 windOverride float effectNode IAmbianceNode updateSkyboxReflections() public static void updateSkyboxReflections() Events isSeaChanged public static event LevelLighting.IsSeaChangedHandler isSeaChanged Event Type LevelLighting.IsSeaChangedHandler"
  },
  "api/SDG.Unturned.LevelLoaded.html": {
    "href": "api/SDG.Unturned.LevelLoaded.html",
    "title": "Delegate LevelLoaded | Unturned Analyse Doc",
    "keywords": "Delegate LevelLoaded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LevelLoaded(int level) Parameters level int Constructors LevelLoaded(object, IntPtr) public LevelLoaded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int level, AsyncCallback callback, object @object) Parameters level int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int) public virtual void Invoke(int level) Parameters level int"
  },
  "api/SDG.Unturned.LevelLoadingStepHandler.html": {
    "href": "api/SDG.Unturned.LevelLoadingStepHandler.html",
    "title": "Delegate LevelLoadingStepHandler | Unturned Analyse Doc",
    "keywords": "Delegate LevelLoadingStepHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LevelLoadingStepHandler() Constructors LevelLoadingStepHandler(object, IntPtr) public LevelLoadingStepHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.LevelManager.html": {
    "href": "api/SDG.Unturned.LevelManager.html",
    "title": "Class LevelManager | Unturned Analyse Doc",
    "keywords": "Class LevelManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelManager : SteamCaller Inheritance object SteamCaller LevelManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors LevelManager() public LevelManager() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte airdropFrequency public static uint airdropFrequency Field Value uint arenaGroups public static List<CSteamID> arenaGroups Field Value List<CSteamID> arenaMessage public static EArenaMessage arenaMessage Field Value EArenaMessage arenaPlayers public static List<ArenaPlayer> arenaPlayers Field Value List<ArenaPlayer> arenaState public static EArenaState arenaState Field Value EArenaState onArenaMessageUpdated public static ArenaMessageUpdated onArenaMessageUpdated Field Value ArenaMessageUpdated onArenaPlayerUpdated public static ArenaPlayerUpdated onArenaPlayerUpdated Field Value ArenaPlayerUpdated onLevelNumberUpdated public static LevelNumberUpdated onLevelNumberUpdated Field Value LevelNumberUpdated Properties arenaCompactorSpeed public static float arenaCompactorSpeed { get; } Property Value float arenaCurrentCenter public static Vector3 arenaCurrentCenter { get; } Property Value Vector3 arenaCurrentRadius public static float arenaCurrentRadius { get; } Property Value float arenaOriginCenter public static Vector3 arenaOriginCenter { get; } Property Value Vector3 arenaOriginRadius public static float arenaOriginRadius { get; } Property Value float arenaTargetCenter public static Vector3 arenaTargetCenter { get; } Property Value Vector3 arenaTargetRadius public static float arenaTargetRadius { get; } Property Value float compactorSpeed public static float compactorSpeed { get; } Property Value float hasAirdrop public static bool hasAirdrop { get; } Property Value bool instance Exposed for Rocket transition to modules backwards compatibility. public static LevelManager instance { get; } Property Value LevelManager isArenaMode Is the active level an Arena mode map? public static bool isArenaMode { get; } Property Value bool levelType public static ELevelType levelType { get; } Property Value ELevelType Methods ReceiveAirdropState(ushort, Vector3, Vector3, float, float, float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellAirdropState\")] public static void ReceiveAirdropState(ushort id, Vector3 state, Vector3 direction, float speed, float force, float delay) Parameters id ushort state Vector3 direction Vector3 speed float force float delay float ReceiveArenaMessage(EArenaMessage) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellArenaMessage\")] public static void ReceiveArenaMessage(EArenaMessage newArenaMessage) Parameters newArenaMessage EArenaMessage ReceiveArenaOrigin(Vector3, float, Vector3, float, Vector3, float, float, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellArenaOrigin\")] public static void ReceiveArenaOrigin(Vector3 newArenaCurrentCenter, float newArenaCurrentRadius, Vector3 newArenaOriginCenter, float newArenaOriginRadius, Vector3 newArenaTargetCenter, float newArenaTargetRadius, float newArenaCompactorSpeed, byte delay) Parameters newArenaCurrentCenter Vector3 newArenaCurrentRadius float newArenaOriginCenter Vector3 newArenaOriginRadius float newArenaTargetCenter Vector3 newArenaTargetRadius float newArenaCompactorSpeed float delay byte ReceiveArenaPlayer(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveArenaPlayer(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLevelNumber(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLevelNumber\")] public static void ReceiveLevelNumber(byte newLevelNumber) Parameters newLevelNumber byte ReceiveLevelTimer(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLevelTimer\")] public static void ReceiveLevelTimer(byte newTimerCount) Parameters newTimerCount byte airdrop(Vector3, ushort, float) public static void airdrop(Vector3 point, ushort id, float speed) Parameters point Vector3 id ushort speed float askAirdropState(CSteamID) [Obsolete] public void askAirdropState(CSteamID steamID) Parameters steamID CSteamID askArenaState(CSteamID) [Obsolete] public void askArenaState(CSteamID steamID) Parameters steamID CSteamID isPlayerInArena(Player) public static bool isPlayerInArena(Player player) Parameters player Player Returns bool load() public static void load() save() public static void save() tellAirdropState(CSteamID, Vector3, Vector3, float, float, float) [Obsolete] public void tellAirdropState(CSteamID steamID, Vector3 state, Vector3 direction, float speed, float force, float delay) Parameters steamID CSteamID state Vector3 direction Vector3 speed float force float delay float tellArenaMessage(CSteamID, byte) [Obsolete] public void tellArenaMessage(CSteamID steamID, byte newArenaMessage) Parameters steamID CSteamID newArenaMessage byte tellArenaOrigin(CSteamID, Vector3, float, Vector3, float, Vector3, float, float, byte) [Obsolete] public void tellArenaOrigin(CSteamID steamID, Vector3 newArenaCurrentCenter, float newArenaCurrentRadius, Vector3 newArenaOriginCenter, float newArenaOriginRadius, Vector3 newArenaTargetCenter, float newArenaTargetRadius, float newArenaCompactorSpeed, byte delay) Parameters steamID CSteamID newArenaCurrentCenter Vector3 newArenaCurrentRadius float newArenaOriginCenter Vector3 newArenaOriginRadius float newArenaTargetCenter Vector3 newArenaTargetRadius float newArenaCompactorSpeed float delay byte tellArenaPlayer(CSteamID, ulong[], byte) [Obsolete] public void tellArenaPlayer(CSteamID steamID, ulong[] newPlayerIDs, byte newArenaMessage) Parameters steamID CSteamID newPlayerIDs ulong[] newArenaMessage byte tellLevelNumber(CSteamID, byte) [Obsolete] public void tellLevelNumber(CSteamID steamID, byte newLevelNumber) Parameters steamID CSteamID newLevelNumber byte tellLevelTimer(CSteamID, byte) [Obsolete] public void tellLevelTimer(CSteamID steamID, byte newTimerCount) Parameters steamID CSteamID newTimerCount byte"
  },
  "api/SDG.Unturned.LevelManager_NetMethods.html": {
    "href": "api/SDG.Unturned.LevelManager_NetMethods.html",
    "title": "Class LevelManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class LevelManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(LevelManager))] public static class LevelManager_NetMethods Inheritance object LevelManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAirdropState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAirdropState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAirdropState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAirdropState_Write(NetPakWriter, ushort, Vector3, Vector3, float, float, float) [NetInvokableGeneratedMethod(\"ReceiveAirdropState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAirdropState_Write(NetPakWriter writer, ushort id, Vector3 state, Vector3 direction, float speed, float force, float delay) Parameters writer NetPakWriter id ushort state Vector3 direction Vector3 speed float force float delay float ReceiveArenaMessage_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveArenaMessage\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveArenaMessage_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveArenaMessage_Write(NetPakWriter, EArenaMessage) [NetInvokableGeneratedMethod(\"ReceiveArenaMessage\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveArenaMessage_Write(NetPakWriter writer, EArenaMessage newArenaMessage) Parameters writer NetPakWriter newArenaMessage EArenaMessage ReceiveArenaOrigin_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveArenaOrigin\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveArenaOrigin_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveArenaOrigin_Write(NetPakWriter, Vector3, float, Vector3, float, Vector3, float, float, byte) [NetInvokableGeneratedMethod(\"ReceiveArenaOrigin\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveArenaOrigin_Write(NetPakWriter writer, Vector3 newArenaCurrentCenter, float newArenaCurrentRadius, Vector3 newArenaOriginCenter, float newArenaOriginRadius, Vector3 newArenaTargetCenter, float newArenaTargetRadius, float newArenaCompactorSpeed, byte delay) Parameters writer NetPakWriter newArenaCurrentCenter Vector3 newArenaCurrentRadius float newArenaOriginCenter Vector3 newArenaOriginRadius float newArenaTargetCenter Vector3 newArenaTargetRadius float newArenaCompactorSpeed float delay byte ReceiveLevelNumber_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLevelNumber\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLevelNumber_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLevelNumber_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveLevelNumber\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLevelNumber_Write(NetPakWriter writer, byte newLevelNumber) Parameters writer NetPakWriter newLevelNumber byte ReceiveLevelTimer_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLevelTimer\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLevelTimer_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLevelTimer_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveLevelTimer\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLevelTimer_Write(NetPakWriter writer, byte newTimerCount) Parameters writer NetPakWriter newTimerCount byte"
  },
  "api/SDG.Unturned.LevelNavigation.html": {
    "href": "api/SDG.Unturned.LevelNavigation.html",
    "title": "Class LevelNavigation | Unturned Analyse Doc",
    "keywords": "Class LevelNavigation Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelNavigation Inheritance object LevelNavigation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelNavigation() public LevelNavigation() Fields BOUNDS_SIZE public static readonly Vector3 BOUNDS_SIZE Field Value Vector3 SAVEDATA_BOUNDS_VERSION public static readonly byte SAVEDATA_BOUNDS_VERSION Field Value byte SAVEDATA_FLAGS_VERSION public static readonly byte SAVEDATA_FLAGS_VERSION Field Value byte SAVEDATA_FLAG_DATA_VERSION public static readonly byte SAVEDATA_FLAG_DATA_VERSION Field Value byte SAVEDATA_NAVIGATION_VERSION public static readonly byte SAVEDATA_NAVIGATION_VERSION Field Value byte Properties bounds public static List<Bounds> bounds { get; } Property Value List<Bounds> flagData public static List<FlagData> flagData { get; } Property Value List<FlagData> models [Obsolete(\"Was the parent of misc objects in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform Methods addFlag(Vector3) public static Transform addFlag(Vector3 point) Parameters point Vector3 Returns Transform addGraph() public static RecastGraph addGraph() Returns RecastGraph checkNavigation(Vector3) public static bool checkNavigation(Vector3 point) Parameters point Vector3 Returns bool checkSafe(byte) public static bool checkSafe(byte bound) Parameters bound byte Returns bool checkSafe(Vector3) public static bool checkSafe(Vector3 point) Parameters point Vector3 Returns bool checkSafeFakeNav(Vector3) public static bool checkSafeFakeNav(Vector3 point) Parameters point Vector3 Returns bool getFlag(Transform) public static Flag getFlag(Transform select) Parameters select Transform Returns Flag load() public static void load() removeFlag(Transform) public static void removeFlag(Transform select) Parameters select Transform save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool tryGetBounds(Vector3, out byte) public static bool tryGetBounds(Vector3 point, out byte bound) Parameters point Vector3 bound byte Returns bool tryGetNavigation(Vector3, out byte) public static bool tryGetNavigation(Vector3 point, out byte nav) Parameters point Vector3 nav byte Returns bool updateBounds() public static void updateBounds()"
  },
  "api/SDG.Unturned.LevelNodes.html": {
    "href": "api/SDG.Unturned.LevelNodes.html",
    "title": "Class LevelNodes | Unturned Analyse Doc",
    "keywords": "Class LevelNodes Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelNodes Inheritance object LevelNodes Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelNodes() public LevelNodes() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties hash Hash of nodes file. Prevents using the level editor to make noLight nodes visible. public static byte[] hash { get; } Property Value byte[] models [Obsolete(\"Was the parent of all editor nodes in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform nodes [Obsolete(\"All legacy node types have been converted to subclasses of IDevkitHierarchyItem\")] public static List<Node> nodes { get; } Property Value List<Node> Methods addNode(Vector3, ENodeType) public static Transform addNode(Vector3 point, ENodeType type) Parameters point Vector3 type ENodeType Returns Transform getNode(Transform) public static Node getNode(Transform select) Parameters select Transform Returns Node isPointInsideSafezone(Vector3, out SafezoneNode) public static bool isPointInsideSafezone(Vector3 point, out SafezoneNode outSafezoneNode) Parameters point Vector3 outSafezoneNode SafezoneNode Returns bool load() public static void load() removeNode(Transform) public static void removeNode(Transform select) Parameters select Transform save() public static void save()"
  },
  "api/SDG.Unturned.LevelNumberUpdated.html": {
    "href": "api/SDG.Unturned.LevelNumberUpdated.html",
    "title": "Delegate LevelNumberUpdated | Unturned Analyse Doc",
    "keywords": "Delegate LevelNumberUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LevelNumberUpdated(int newLevelNumber) Parameters newLevelNumber int Constructors LevelNumberUpdated(object, IntPtr) public LevelNumberUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int newLevelNumber, AsyncCallback callback, object @object) Parameters newLevelNumber int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int) public virtual void Invoke(int newLevelNumber) Parameters newLevelNumber int"
  },
  "api/SDG.Unturned.LevelObject.html": {
    "href": "api/SDG.Unturned.LevelObject.html",
    "title": "Class LevelObject | Unturned Analyse Doc",
    "keywords": "Class LevelObject Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelObject Inheritance object LevelObject Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelObject(Vector3, Quaternion, Vector3, ushort, string, Guid, ELevelObjectPlacementOrigin, uint) [Obsolete] public LevelObject(Vector3 newPoint, Quaternion newRotation, Vector3 newScale, ushort newID, string newName, Guid newGUID, ELevelObjectPlacementOrigin newPlacementOrigin, uint newInstanceID) Parameters newPoint Vector3 newRotation Quaternion newScale Vector3 newID ushort newName string newGUID Guid newPlacementOrigin ELevelObjectPlacementOrigin newInstanceID uint LevelObject(Vector3, Quaternion, Vector3, ushort, string, Guid, ELevelObjectPlacementOrigin, uint, AssetReference<MaterialPaletteAsset>, int, bool) [Obsolete] public LevelObject(Vector3 newPoint, Quaternion newRotation, Vector3 newScale, ushort newID, string newName, Guid newGUID, ELevelObjectPlacementOrigin newPlacementOrigin, uint newInstanceID, AssetReference<MaterialPaletteAsset> customMaterialOverride, int materialIndexOverride, bool newIsHierarchyItem) Parameters newPoint Vector3 newRotation Quaternion newScale Vector3 newID ushort newName string newGUID Guid newPlacementOrigin ELevelObjectPlacementOrigin newInstanceID uint customMaterialOverride AssetReference<MaterialPaletteAsset> materialIndexOverride int newIsHierarchyItem bool Fields isSpeciallyCulled If true, object is within a culling volume. Name is old and not very specific, but not changing because it's public. public bool isSpeciallyCulled Field Value bool state public byte[] state Field Value byte[] Properties GUID public Guid GUID { get; } Property Value Guid asset public ObjectAsset asset { get; } Property Value ObjectAsset canDamageRubble Can this object's rubble be damaged? Allows holiday restrictions to be taken into account. (Otherwise holiday presents could be destroyed out of season.) public bool canDamageRubble { get; } Property Value bool id public ushort id { get; } Property Value ushort instanceID public uint instanceID { get; } Property Value uint interactable public InteractableObject interactable { get; } Property Value InteractableObject isCollisionEnabled [Obsolete] public bool isCollisionEnabled { get; } Property Value bool isLandmarkQualityMet public bool isLandmarkQualityMet { get; } Property Value bool isSkyboxEnabled [Obsolete] public bool isSkyboxEnabled { get; } Property Value bool isVisualEnabled [Obsolete] public bool isVisualEnabled { get; } Property Value bool name [Obsolete] public string name { get; } Property Value string placeholderTransform Transform created to preserve objects whose assets failed to load. Separate from default transform to avoid messing with old behavior when transform is null. public Transform placeholderTransform { get; protected set; } Property Value Transform placementOrigin public ELevelObjectPlacementOrigin placementOrigin { get; protected set; } Property Value ELevelObjectPlacementOrigin rubble public InteractableObjectRubble rubble { get; } Property Value InteractableObjectRubble skybox public Transform skybox { get; } Property Value Transform transform public Transform transform { get; } Property Value Transform Methods destroy() public void destroy() disableCollision() [Obsolete(\"Replaced by SetIsActiveInRegion(false)\")] public void disableCollision() disableSkybox() [Obsolete(\"Replaced by SetIsActiveInRegion(true)\")] public void disableSkybox() disableVisual() [Obsolete(\"Replaced by SetIsActiveInRegion(false)\")] public void disableVisual() enableCollision() [Obsolete(\"Replaced by SetIsActiveInRegion(true)\")] public void enableCollision() enableSkybox() [Obsolete(\"Replaced by SetIsActiveInRegion(false)\")] public void enableSkybox() enableVisual() [Obsolete(\"Replaced by SetIsActiveInRegion(true)\")] public void enableVisual()"
  },
  "api/SDG.Unturned.LevelObjects.html": {
    "href": "api/SDG.Unturned.LevelObjects.html",
    "title": "Class LevelObjects | Unturned Analyse Doc",
    "keywords": "Class LevelObjects Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelObjects : MonoBehaviour Inheritance object LevelObjects Constructors LevelObjects() public LevelObjects() Fields OBJECT_REGIONS public static readonly byte OBJECT_REGIONS Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte onRegionActivated public static RegionActivated onRegionActivated Field Value RegionActivated preserveMissingAssets Should objects that failed to load due to missing assets be saved? If true, a placeholder transform is created and used to save. If false, objects without assets are zeroed during save. (old default) public static CommandLineFlag preserveMissingAssets Field Value CommandLineFlag step public static int step Field Value int Properties buildables public static List<LevelBuildableObject>[,] buildables { get; } Property Value List<LevelBuildableObject>[,] hash Hash of Objects.dat public static byte[] hash { get; } Property Value byte[] loads public static int[,] loads { get; } Property Value int[,] models [Obsolete(\"Was the parent of all objects in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform objects public static List<LevelObject>[,] objects { get; } Property Value List<LevelObject>[,] regions public static bool[,] regions { get; } Property Value bool[,] shouldInstantlyLoad public static bool shouldInstantlyLoad { get; } Property Value bool total public static int total { get; } Property Value int Methods Start() public void Start() addBuildable(Vector3, Quaternion, ushort) public static Transform addBuildable(Vector3 position, Quaternion rotation, ushort id) Parameters position Vector3 rotation Quaternion id ushort Returns Transform addDevkitObject(Guid, Vector3, Quaternion, Vector3, ELevelObjectPlacementOrigin) [Obsolete] public static DevkitHierarchyWorldObject addDevkitObject(Guid GUID, Vector3 position, Quaternion rotation, Vector3 scale, ELevelObjectPlacementOrigin placementOrigin) Parameters GUID Guid position Vector3 rotation Quaternion scale Vector3 placementOrigin ELevelObjectPlacementOrigin Returns DevkitHierarchyWorldObject addObject(Vector3, Quaternion, Vector3, ushort, string, Guid, ELevelObjectPlacementOrigin) [Obsolete] public static Transform addObject(Vector3 position, Quaternion rotation, Vector3 scale, ushort id, string name, Guid GUID, ELevelObjectPlacementOrigin placementOrigin) Parameters position Vector3 rotation Quaternion scale Vector3 id ushort name string GUID Guid placementOrigin ELevelObjectPlacementOrigin Returns Transform getAsset(Transform) public static ObjectAsset getAsset(Transform select) Parameters select Transform Returns ObjectAsset getAssetEditor(Transform, out ObjectAsset, out ItemAsset) public static void getAssetEditor(Transform select, out ObjectAsset objectAsset, out ItemAsset itemAsset) Parameters select Transform objectAsset ObjectAsset itemAsset ItemAsset load() public static void load() moveDevkitObject(LevelObject, byte, byte, byte, byte) [Obsolete] public static void moveDevkitObject(LevelObject levelObject, byte old_x, byte old_y, byte new_x, byte new_y) Parameters levelObject LevelObject old_x byte old_y byte new_x byte new_y byte redo() public static void redo() register(IReun) public static Transform register(IReun newReun) Parameters newReun IReun Returns Transform registerAddObject(Vector3, Quaternion, Vector3, ObjectAsset, ItemAsset) public static Transform registerAddObject(Vector3 position, Quaternion rotation, Vector3 scale, ObjectAsset objectAsset, ItemAsset itemAsset) Parameters position Vector3 rotation Quaternion scale Vector3 objectAsset ObjectAsset itemAsset ItemAsset Returns Transform registerDevkitObject(LevelObject, out byte, out byte) [Obsolete] public static void registerDevkitObject(LevelObject levelObject, out byte x, out byte y) Parameters levelObject LevelObject x byte y byte registerRemoveObject(Transform) public static void registerRemoveObject(Transform select) Parameters select Transform registerTransformObject(Transform, Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3) public static void registerTransformObject(Transform select, Vector3 toPosition, Quaternion toRotation, Vector3 toScale, Vector3 fromPosition, Quaternion fromRotation, Vector3 fromScale) Parameters select Transform toPosition Vector3 toRotation Quaternion toScale Vector3 fromPosition Vector3 fromRotation Quaternion fromScale Vector3 removeBuildable(Transform) public static void removeBuildable(Transform select) Parameters select Transform removeObject(Transform) public static void removeObject(Transform select) Parameters select Transform save() public static void save() transformObject(Transform, Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3) public static void transformObject(Transform select, Vector3 toPosition, Quaternion toRotation, Vector3 toScale, Vector3 fromPosition, Quaternion fromRotation, Vector3 fromScale) Parameters select Transform toPosition Vector3 toRotation Quaternion toScale Vector3 fromPosition Vector3 fromRotation Quaternion fromScale Vector3 undo() public static void undo() unregisterDevkitObject(LevelObject, byte, byte) [Obsolete] public static void unregisterDevkitObject(LevelObject levelObject, byte x, byte y) Parameters levelObject LevelObject x byte y byte"
  },
  "api/SDG.Unturned.LevelPlayers.html": {
    "href": "api/SDG.Unturned.LevelPlayers.html",
    "title": "Class LevelPlayers | Unturned Analyse Doc",
    "keywords": "Class LevelPlayers Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelPlayers Inheritance object LevelPlayers Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelPlayers() public LevelPlayers() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties models [Obsolete(\"Was the parent of all players in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform spawns public static List<PlayerSpawnpoint> spawns { get; } Property Value List<PlayerSpawnpoint> Methods addSpawn(Vector3, float, bool) public static void addSpawn(Vector3 point, float angle, bool isAlt) Parameters point Vector3 angle float isAlt bool checkCanBuild(Vector3) public static bool checkCanBuild(Vector3 point) Parameters point Vector3 Returns bool getAltSpawns() public static List<PlayerSpawnpoint> getAltSpawns() Returns List<PlayerSpawnpoint> getRegSpawns() public static List<PlayerSpawnpoint> getRegSpawns() Returns List<PlayerSpawnpoint> getSpawn(bool) public static PlayerSpawnpoint getSpawn(bool isAlt) Parameters isAlt bool Returns PlayerSpawnpoint load() public static void load() removeSpawn(Vector3, float) public static void removeSpawn(Vector3 point, float radius) Parameters point Vector3 radius float save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.LevelRoads.html": {
    "href": "api/SDG.Unturned.LevelRoads.html",
    "title": "Class LevelRoads | Unturned Analyse Doc",
    "keywords": "Class LevelRoads Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelRoads Inheritance object LevelRoads Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelRoads() public LevelRoads() Fields SAVEDATA_PATHS_VERSION public static readonly byte SAVEDATA_PATHS_VERSION Field Value byte SAVEDATA_ROADS_VERSION public static readonly byte SAVEDATA_ROADS_VERSION Field Value byte Properties materials public static RoadMaterial[] materials { get; } Property Value RoadMaterial[] models [Obsolete(\"Was the parent of all roads in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform Methods addRoad(Vector3) public static Transform addRoad(Vector3 point) Parameters point Vector3 Returns Transform bakeRoads() public static void bakeRoads() getRoad(int) public static Road getRoad(int index) Parameters index int Returns Road getRoad(Transform, out int, out int) public static Road getRoad(Transform target, out int vertexIndex, out int tangentIndex) Parameters target Transform vertexIndex int tangentIndex int Returns Road getRoadIndex(Road) public static int getRoadIndex(Road road) Parameters road Road Returns int getRoadMaterial(Transform) public static RoadMaterial getRoadMaterial(Transform road) Parameters road Transform Returns RoadMaterial load() public static void load() removeRoad(Road) public static void removeRoad(Road road) Parameters road Road removeRoad(Transform) [Obsolete] public static void removeRoad(Transform select) Parameters select Transform save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.LevelSavedata.html": {
    "href": "api/SDG.Unturned.LevelSavedata.html",
    "title": "Class LevelSavedata | Unturned Analyse Doc",
    "keywords": "Class LevelSavedata Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelSavedata Inheritance object LevelSavedata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelSavedata() public LevelSavedata() Methods deleteFile(string) public static void deleteFile(string path) Parameters path string fileExists(string) public static bool fileExists(string path) Parameters path string Returns bool openRiver(string, bool) public static River openRiver(string path, bool isReading) Parameters path string isReading bool Returns River readBlock(string, byte) public static Block readBlock(string path, byte prefix) Parameters path string prefix byte Returns Block readData(string) public static Data readData(string path) Parameters path string Returns Data transformName(string) public static string transformName(string name) Parameters name string Returns string writeBlock(string, Block) public static void writeBlock(string path, Block block) Parameters path string block Block writeData(string, Data) public static void writeData(string path, Data data) Parameters path string data Data"
  },
  "api/SDG.Unturned.LevelStructures.html": {
    "href": "api/SDG.Unturned.LevelStructures.html",
    "title": "Class LevelStructures | Unturned Analyse Doc",
    "keywords": "Class LevelStructures Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelStructures Inheritance object LevelStructures Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelStructures() public LevelStructures() Properties models [Obsolete(\"Was the parent of all structures in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform"
  },
  "api/SDG.Unturned.LevelTrainAssociation.html": {
    "href": "api/SDG.Unturned.LevelTrainAssociation.html",
    "title": "Class LevelTrainAssociation | Unturned Analyse Doc",
    "keywords": "Class LevelTrainAssociation Namespace SDG.Unturned Assembly Assembly-CSharp.dll Associates a train vehicle ID with the index of a road path to spawn it on. The level only spawns the train if this vehicle ID isn't present in the map yet, so every train on the map has to be different. public class LevelTrainAssociation Inheritance object LevelTrainAssociation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelTrainAssociation() public LevelTrainAssociation() Fields Max_Spawn_Placement public float Max_Spawn_Placement Field Value float Min_Spawn_Placement public float Min_Spawn_Placement Field Value float RoadIndex public ushort RoadIndex Field Value ushort VehicleID public ushort VehicleID Field Value ushort"
  },
  "api/SDG.Unturned.LevelVehicles.html": {
    "href": "api/SDG.Unturned.LevelVehicles.html",
    "title": "Class LevelVehicles | Unturned Analyse Doc",
    "keywords": "Class LevelVehicles Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelVehicles Inheritance object LevelVehicles Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelVehicles() public LevelVehicles() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties models [Obsolete(\"Was the parent of all vehicles in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform spawns public static List<VehicleSpawnpoint> spawns { get; } Property Value List<VehicleSpawnpoint> tables public static List<VehicleTable> tables { get; } Property Value List<VehicleTable> Methods GetRandomAssetForSpawnpoint(VehicleSpawnpoint) Returned asset is not necessarily a vehicle asset yet: It can also be a VehicleRedirectorAsset which the vehicle spawner requires to properly set paint color. public static Asset GetRandomAssetForSpawnpoint(VehicleSpawnpoint spawnpoint) Parameters spawnpoint VehicleSpawnpoint Returns Asset addSpawn(Vector3, float) public static void addSpawn(Vector3 point, float angle) Parameters point Vector3 angle float addTable(string) public static void addTable(string name) Parameters name string getVehicle(VehicleSpawnpoint) [Obsolete(\"GetRandomAssetForSpawnpoint should be used instead because it properly supports guids in spawn assets.\")] public static ushort getVehicle(VehicleSpawnpoint spawn) Parameters spawn VehicleSpawnpoint Returns ushort getVehicle(byte) [Obsolete(\"GetRandomAssetForSpawnpoint should be used instead because it properly supports guids in spawn assets.\")] public static ushort getVehicle(byte type) Parameters type byte Returns ushort load() public static void load() removeSpawn(Vector3, float) public static void removeSpawn(Vector3 point, float radius) Parameters point Vector3 radius float removeTable() public static void removeTable() save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.LevelVisibility.html": {
    "href": "api/SDG.Unturned.LevelVisibility.html",
    "title": "Class LevelVisibility | Unturned Analyse Doc",
    "keywords": "Class LevelVisibility Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelVisibility Inheritance object LevelVisibility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelVisibility() public LevelVisibility() Fields OBJECT_REGIONS public static readonly byte OBJECT_REGIONS Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties animalsVisible public static bool animalsVisible { get; set; } Property Value bool borderVisible public static bool borderVisible { get; set; } Property Value bool itemsVisible public static bool itemsVisible { get; set; } Property Value bool navigationVisible public static bool navigationVisible { get; set; } Property Value bool nodesVisible public static bool nodesVisible { get; set; } Property Value bool playersVisible public static bool playersVisible { get; set; } Property Value bool roadsVisible public static bool roadsVisible { get; set; } Property Value bool vehiclesVisible public static bool vehiclesVisible { get; set; } Property Value bool zombiesVisible public static bool zombiesVisible { get; set; } Property Value bool Methods load() public static void load() save() public static void save()"
  },
  "api/SDG.Unturned.LevelVolume-2.html": {
    "href": "api/SDG.Unturned.LevelVolume-2.html",
    "title": "Class LevelVolume<TVolume, TManager> | Unturned Analyse Doc",
    "keywords": "Class LevelVolume<TVolume, TManager> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelVolume<TVolume, TManager> : VolumeBase, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler where TVolume : LevelVolume<TVolume, TManager> where TManager : VolumeManager<TVolume, TManager> Type Parameters TVolume TManager Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<TVolume, TManager> Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Derived AmbianceVolume DeadzoneVolume EffectVolume KillVolume NPCRewardVolume NavClipVolume PlayerClipVolume TeleporterEntranceVolume TeleporterExitVolume UndergroundWhitelistVolume FoliageVolume LandscapeHoleVolume WaterVolume ArenaCompactorVolume CartographyVolume CullingVolume HordePurchaseVolume OxygenVolume SafezoneVolume Inherited Members DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors LevelVolume() public LevelVolume() Fields editorGameObject Editor-only solid/opaque child mesh renderer object. protected GameObject editorGameObject Field Value GameObject editorMeshFilter protected MeshFilter editorMeshFilter Field Value MeshFilter editorMeshRenderer protected MeshRenderer editorMeshRenderer Field Value MeshRenderer falloffDistance Distance inward from edge before intensity reaches 100%. public float falloffDistance Field Value float forceShouldAddCollider If true during Awake the collider component will be added. Otherwise only in the level editor. Some volume types like water use the collider in gameplay, whereas most only need the collider for general-purpose selection in the level editor. protected bool forceShouldAddCollider Field Value bool supportsBoxShape protected bool supportsBoxShape Field Value bool supportsFalloff protected bool supportsFalloff Field Value bool supportsSphereShape protected bool supportsSphereShape Field Value bool Properties Shape public virtual ELevelVolumeShape Shape { get; set; } Property Value ELevelVolumeShape Methods AppendBaseMenu(ISleekElement) protected void AppendBaseMenu(ISleekElement childMenu) Parameters childMenu ISleekElement Awake() protected virtual void Awake() CalculateLocalBounds() public Bounds CalculateLocalBounds() Returns Bounds CalculateWorldBounds() Useful for code which previously depended on creating the Unity collider to calculate bounding box. public Bounds CalculateWorldBounds() Returns Bounds CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement GetBoxExtents() Half the world space size of the box. public Vector3 GetBoxExtents() Returns Vector3 GetBoxSize() World space size of the box. public Vector3 GetBoxSize() Returns Vector3 GetInnerBoxExtents() World space extents of inner falloff box when falloffDistance is non-zero. public Vector3 GetInnerBoxExtents() Returns Vector3 GetInnerBoxSize() World space size of inner falloff box when falloffDistance is non-zero. For example a 24x12x6 box with a falloff of 4 has an inner box sized 16x4x0. public Vector3 GetInnerBoxSize() Returns Vector3 GetLocalInnerBoxExtents() Local space extents of inner falloff box when falloffDistance is non-zero. public Vector3 GetLocalInnerBoxExtents() Returns Vector3 GetLocalInnerBoxSize() Local space size of inner falloff box when falloffDistance is non-zero. public Vector3 GetLocalInnerBoxSize() Returns Vector3 GetLocalInnerSphereRadius() Local space radius of inner falloff sphere when falloffDistance is non-zero. public float GetLocalInnerSphereRadius() Returns float GetLocalSphereRadius() Local space radius of the sphere. public float GetLocalSphereRadius() Returns float GetSphereRadius() World space radius of the sphere. public float GetSphereRadius() Returns float GetWorldSpaceInnerSphereRadius() World space radius of inner falloff sphere when falloffDistance is non-zero. public float GetWorldSpaceInnerSphereRadius() Returns float IsPositionInsideVolume(Vector3) public bool IsPositionInsideVolume(Vector3 position) Parameters position Vector3 Returns bool IsPositionInsideVolumeWithAlpha(Vector3, out float) Alpha is 0.0 outside volume and 1.0 inside inner volume. public bool IsPositionInsideVolumeWithAlpha(Vector3 position, out float alpha) Parameters position Vector3 alpha float Returns bool OnDestroy() protected virtual void OnDestroy() OnDisable() protected virtual void OnDisable() OnEnable() protected virtual void OnEnable() OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) public void OnTransformed(Vector3 oldPosition, Quaternion oldRotation, Vector3 oldLocalScale, Vector3 newPosition, Quaternion newRotation, Vector3 newLocalScale, bool modifyRotation, bool modifyScale) Parameters oldPosition Vector3 oldRotation Quaternion oldLocalScale Vector3 newPosition Vector3 newRotation Quaternion newLocalScale Vector3 modifyRotation bool modifyScale bool SetSphereRadius(float) public void SetSphereRadius(float radius) Parameters radius float Start() protected virtual void Start() UpdateEditorVisibility(ELevelVolumeVisibility) Called in the level editor during registraion and when visibility is changed. public virtual void UpdateEditorVisibility(ELevelVolumeVisibility visibility) Parameters visibility ELevelVolumeVisibility beginSelection(InteractionData) public virtual void beginSelection(InteractionData data) Parameters data InteractionData endSelection(InteractionData) public virtual void endSelection(InteractionData data) Parameters data InteractionData readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.LevelZombies.html": {
    "href": "api/SDG.Unturned.LevelZombies.html",
    "title": "Class LevelZombies | Unturned Analyse Doc",
    "keywords": "Class LevelZombies Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LevelZombies Inheritance object LevelZombies Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LevelZombies() public LevelZombies() Fields SAVEDATA_SPAWN_VERSION public static readonly byte SAVEDATA_SPAWN_VERSION Field Value byte SAVEDATA_TABLE_VERSION public static readonly byte SAVEDATA_TABLE_VERSION Field Value byte SAVEDATA_TABLE_VERSION_ADDED_UNIQUE_ID public const byte SAVEDATA_TABLE_VERSION_ADDED_UNIQUE_ID = 10 Field Value byte SAVEDATA_TABLE_VERSION_OLDER public const byte SAVEDATA_TABLE_VERSION_OLDER = 9 Field Value byte tables public static List<ZombieTable> tables Field Value List<ZombieTable> Properties models [Obsolete(\"Was the parent of all zombies in the past, but now empty for TransformHierarchy performance.\")] public static Transform models { get; } Property Value Transform spawns public static List<ZombieSpawnpoint>[,] spawns { get; } Property Value List<ZombieSpawnpoint>[,] zombies public static List<ZombieSpawnpoint>[] zombies { get; } Property Value List<ZombieSpawnpoint>[] Methods FindTableIndexByUniqueId(int) public static int FindTableIndexByUniqueId(int uniqueId) Parameters uniqueId int Returns int -1 if table was not found. addSpawn(Vector3) public static void addSpawn(Vector3 point) Parameters point Vector3 addTable(string) public static void addTable(string name) Parameters name string load() public static void load() removeSpawn(Vector3, float) public static void removeSpawn(Vector3 point, float radius) Parameters point Vector3 radius float removeTable() public static void removeTable() save() public static void save() setEnabled(bool) public static void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.LevelsRefreshed.html": {
    "href": "api/SDG.Unturned.LevelsRefreshed.html",
    "title": "Delegate LevelsRefreshed | Unturned Analyse Doc",
    "keywords": "Delegate LevelsRefreshed Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LevelsRefreshed() Constructors LevelsRefreshed(object, IntPtr) public LevelsRefreshed(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.LifeUpdated.html": {
    "href": "api/SDG.Unturned.LifeUpdated.html",
    "title": "Delegate LifeUpdated | Unturned Analyse Doc",
    "keywords": "Delegate LifeUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LifeUpdated(bool isDead) Parameters isDead bool Constructors LifeUpdated(object, IntPtr) public LifeUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isDead, AsyncCallback callback, object @object) Parameters isDead bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isDead) Parameters isDead bool"
  },
  "api/SDG.Unturned.LightLOD.html": {
    "href": "api/SDG.Unturned.LightLOD.html",
    "title": "Class LightLOD | Unturned Analyse Doc",
    "keywords": "Class LightLOD Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LightLOD : MonoBehaviour Inheritance object LightLOD Constructors LightLOD() public LightLOD() Fields targetLight public Light targetLight Field Value Light"
  },
  "api/SDG.Unturned.LightLODTool.html": {
    "href": "api/SDG.Unturned.LightLODTool.html",
    "title": "Class LightLODTool | Unturned Analyse Doc",
    "keywords": "Class LightLODTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LightLODTool Inheritance object LightLODTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LightLODTool() public LightLODTool() Methods applyLightLOD(Transform) public static void applyLightLOD(Transform transform) Parameters transform Transform"
  },
  "api/SDG.Unturned.LightingInfo.html": {
    "href": "api/SDG.Unturned.LightingInfo.html",
    "title": "Class LightingInfo | Unturned Analyse Doc",
    "keywords": "Class LightingInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LightingInfo Inheritance object LightingInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LightingInfo(Color[], float[]) public LightingInfo(Color[] newColors, float[] newSingles) Parameters newColors Color[] newSingles float[] Properties colors public Color[] colors { get; } Property Value Color[] singles public float[] singles { get; } Property Value float[]"
  },
  "api/SDG.Unturned.LightingManager.html": {
    "href": "api/SDG.Unturned.LightingManager.html",
    "title": "Class LightingManager | Unturned Analyse Doc",
    "keywords": "Class LightingManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LightingManager : SteamCaller Inheritance object SteamCaller LightingManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors LightingManager() public LightingManager() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_ADDED_DATE_COUNTER public const byte SAVEDATA_VERSION_ADDED_DATE_COUNTER = 7 Field Value byte SAVEDATA_VERSION_INITIAL Version before named version constants were introduced. (2023-11-07) public const byte SAVEDATA_VERSION_INITIAL = 6 Field Value byte onDayNightUpdated public static DayNightUpdated onDayNightUpdated Field Value DayNightUpdated onDayNightUpdated_ModHook Delegate not reset when level reset. public static DayNightUpdated onDayNightUpdated_ModHook Field Value DayNightUpdated onMoonUpdated public static MoonUpdated onMoonUpdated Field Value MoonUpdated onMoonUpdated_ModHook Delegate not reset when level reset. public static MoonUpdated onMoonUpdated_ModHook Field Value MoonUpdated onRainUpdated public static RainUpdated onRainUpdated Field Value RainUpdated onRainUpdated_ModHook Delegate not reset when level reset. public static RainUpdated onRainUpdated_ModHook Field Value RainUpdated onSnowUpdated public static SnowUpdated onSnowUpdated Field Value SnowUpdated onSnowUpdated_ModHook Delegate not reset when level reset. public static SnowUpdated onSnowUpdated_ModHook Field Value SnowUpdated onTimeOfDayChanged public static TimeOfDayChanged onTimeOfDayChanged Field Value TimeOfDayChanged rainDuration [Obsolete] public static uint rainDuration Field Value uint rainFrequency [Obsolete] public static uint rainFrequency Field Value uint snowDuration [Obsolete] public static uint snowDuration Field Value uint snowFrequency [Obsolete] public static uint snowFrequency Field Value uint Properties DateCounter Number of in-game days this world has run. Incremented each time night ends. Saved between sessions. public static long DateCounter { get; } Property Value long cycle public static uint cycle { get; set; } Property Value uint day public static float day { get; } Property Value float hasRain [Obsolete] public static bool hasRain { get; } Property Value bool hasSnow [Obsolete] public static bool hasSnow { get; } Property Value bool isDaytime public static bool isDaytime { get; } Property Value bool isFullMoon public static bool isFullMoon { get; set; } Property Value bool isNighttime public static bool isNighttime { get; } Property Value bool levelWeatherOverride Get weather override for the currently loaded level. Warning: this is kept for backwards compatibility, whereas newer maps will set LevelAsset.perpetualWeather. public static ELevelWeatherOverride levelWeatherOverride { get; } Property Value ELevelWeatherOverride offset public static uint offset { get; } Property Value uint time public static uint time { get; set; } Property Value uint Methods ActivatePerpetualWeather(WeatherAssetBase) Set weather active and disable scheduling. public static void ActivatePerpetualWeather(WeatherAssetBase asset) Parameters asset WeatherAssetBase DisableWeather() Cancel active weather and prevent next weather from being scheduled. public static void DisableWeather() ForecastWeatherImmediately(WeatherAssetBase) public static bool ForecastWeatherImmediately(WeatherAssetBase weatherAsset) Parameters weatherAsset WeatherAssetBase Returns bool True if given weather has config. IsWeatherActive(WeatherAssetBase) public static bool IsWeatherActive(WeatherAssetBase weatherAsset) Parameters weatherAsset WeatherAssetBase Returns bool ReceiveDateCounter(long) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveDateCounter(long newValue) Parameters newValue long ReceiveInitialLightingState(uint, uint, uint, byte, byte, Guid, float, NetId, int) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLighting\")] public static void ReceiveInitialLightingState(uint serverTime, uint newCycle, uint newOffset, byte moon, byte wind, Guid activeWeatherGuid, float activeWeatherBlendAlpha, NetId activeWeatherNetId, int newDateCounter) Parameters serverTime uint newCycle uint newOffset uint moon byte wind byte activeWeatherGuid Guid activeWeatherBlendAlpha float activeWeatherNetId NetId newDateCounter int ReceiveLightingActiveWeather(Guid, float, NetId) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLightingActiveWeather\")] public static void ReceiveLightingActiveWeather(Guid assetGuid, float blendAlpha, NetId netId) Parameters assetGuid Guid blendAlpha float netId NetId ReceiveLightingCycle(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLightingCycle\")] public static void ReceiveLightingCycle(uint newScale) Parameters newScale uint ReceiveLightingOffset(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLightingOffset\")] public static void ReceiveLightingOffset(uint newOffset) Parameters newOffset uint ReceiveLightingWind(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLightingWind\")] public static void ReceiveLightingWind(byte newWind) Parameters newWind byte ResetScheduledWeather() Cancel scheduled weather and re-evaluate on next update. public static void ResetScheduledWeather() SetScheduledWeather(WeatherAssetBase, float, float) public static void SetScheduledWeather(WeatherAssetBase weatherAsset, float forecastDuration, float activeDuration) Parameters weatherAsset WeatherAssetBase forecastDuration float activeDuration float askLighting(CSteamID) [Obsolete] public void askLighting(CSteamID steamID) Parameters steamID CSteamID getCustomWeather() [Obsolete(\"Replaced by LevelLighting.GetActiveWeatherAsset\")] public static WeatherAssetBase getCustomWeather() Returns WeatherAssetBase load() public static void load() save() public static void save() tellLighting(CSteamID, uint, uint, uint, byte, byte, byte, byte, Guid) [Obsolete] public void tellLighting(CSteamID steamID, uint serverTime, uint newCycle, uint newOffset, byte moon, byte wind, byte rain, byte snow, Guid activeWeatherGuid) Parameters steamID CSteamID serverTime uint newCycle uint newOffset uint moon byte wind byte rain byte snow byte activeWeatherGuid Guid tellLighting(CSteamID, uint, uint, uint, byte, byte, Guid, float) [Obsolete] public void tellLighting(CSteamID steamID, uint serverTime, uint newCycle, uint newOffset, byte moon, byte wind, Guid activeWeatherGuid, float activeWeatherBlendAlpha) Parameters steamID CSteamID serverTime uint newCycle uint newOffset uint moon byte wind byte activeWeatherGuid Guid activeWeatherBlendAlpha float tellLightingActiveWeather(CSteamID, Guid, float) [Obsolete] public void tellLightingActiveWeather(CSteamID steamID, Guid assetGuid, float blendAlpha) Parameters steamID CSteamID assetGuid Guid blendAlpha float tellLightingCycle(CSteamID, uint) [Obsolete] public void tellLightingCycle(CSteamID steamID, uint newScale) Parameters steamID CSteamID newScale uint tellLightingOffset(CSteamID, uint) [Obsolete] public void tellLightingOffset(CSteamID steamID, uint newOffset) Parameters steamID CSteamID newOffset uint tellLightingRain(CSteamID, byte) [Obsolete] public void tellLightingRain(CSteamID steamID, byte newRain) Parameters steamID CSteamID newRain byte tellLightingSnow(CSteamID, byte) [Obsolete] public void tellLightingSnow(CSteamID steamID, byte newSnow) Parameters steamID CSteamID newSnow byte tellLightingWind(CSteamID, byte) [Obsolete] public void tellLightingWind(CSteamID steamID, byte newWind) Parameters steamID CSteamID newWind byte"
  },
  "api/SDG.Unturned.LightingManager_NetMethods.html": {
    "href": "api/SDG.Unturned.LightingManager_NetMethods.html",
    "title": "Class LightingManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class LightingManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(LightingManager))] public static class LightingManager_NetMethods Inheritance object LightingManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveDateCounter_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDateCounter\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDateCounter_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDateCounter_Write(NetPakWriter, long) [NetInvokableGeneratedMethod(\"ReceiveDateCounter\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDateCounter_Write(NetPakWriter writer, long newValue) Parameters writer NetPakWriter newValue long ReceiveInitialLightingState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveInitialLightingState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveInitialLightingState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveInitialLightingState_Write(NetPakWriter, uint, uint, uint, byte, byte, Guid, float, NetId, int) [NetInvokableGeneratedMethod(\"ReceiveInitialLightingState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveInitialLightingState_Write(NetPakWriter writer, uint serverTime, uint newCycle, uint newOffset, byte moon, byte wind, Guid activeWeatherGuid, float activeWeatherBlendAlpha, NetId activeWeatherNetId, int newDateCounter) Parameters writer NetPakWriter serverTime uint newCycle uint newOffset uint moon byte wind byte activeWeatherGuid Guid activeWeatherBlendAlpha float activeWeatherNetId NetId newDateCounter int ReceiveLightingActiveWeather_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLightingActiveWeather\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLightingActiveWeather_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLightingActiveWeather_Write(NetPakWriter, Guid, float, NetId) [NetInvokableGeneratedMethod(\"ReceiveLightingActiveWeather\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLightingActiveWeather_Write(NetPakWriter writer, Guid assetGuid, float blendAlpha, NetId netId) Parameters writer NetPakWriter assetGuid Guid blendAlpha float netId NetId ReceiveLightingCycle_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLightingCycle\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLightingCycle_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLightingCycle_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveLightingCycle\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLightingCycle_Write(NetPakWriter writer, uint newScale) Parameters writer NetPakWriter newScale uint ReceiveLightingOffset_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLightingOffset\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLightingOffset_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLightingOffset_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveLightingOffset\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLightingOffset_Write(NetPakWriter writer, uint newOffset) Parameters writer NetPakWriter newOffset uint ReceiveLightingWind_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLightingWind\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLightingWind_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLightingWind_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveLightingWind\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLightingWind_Write(NetPakWriter writer, byte newWind) Parameters writer NetPakWriter newWind byte"
  },
  "api/SDG.Unturned.LightningWeatherComponent.html": {
    "href": "api/SDG.Unturned.LightningWeatherComponent.html",
    "title": "Class LightningWeatherComponent | Unturned Analyse Doc",
    "keywords": "Class LightningWeatherComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LightningWeatherComponent : MonoBehaviour Inheritance object LightningWeatherComponent Constructors LightningWeatherComponent() public LightningWeatherComponent() Fields weatherComponent public WeatherComponentBase weatherComponent Field Value WeatherComponentBase Methods GetNetId() public NetId GetNetId() Returns NetId ReceiveLightningStrike(Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveLightningStrike(Vector3 hitPosition) Parameters hitPosition Vector3"
  },
  "api/SDG.Unturned.LightningWeatherComponent_NetMethods.html": {
    "href": "api/SDG.Unturned.LightningWeatherComponent_NetMethods.html",
    "title": "Class LightningWeatherComponent_NetMethods | Unturned Analyse Doc",
    "keywords": "Class LightningWeatherComponent_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(LightningWeatherComponent))] public static class LightningWeatherComponent_NetMethods Inheritance object LightningWeatherComponent_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveLightningStrike_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLightningStrike\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLightningStrike_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLightningStrike_Write(NetPakWriter, Vector3) [NetInvokableGeneratedMethod(\"ReceiveLightningStrike\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLightningStrike_Write(NetPakWriter writer, Vector3 hitPosition) Parameters writer NetPakWriter hitPosition Vector3"
  },
  "api/SDG.Unturned.ListExtension.html": {
    "href": "api/SDG.Unturned.ListExtension.html",
    "title": "Class ListExtension | Unturned Analyse Doc",
    "keywords": "Class ListExtension Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ListExtension Inheritance object ListExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AddDefaulted<T>(List<T>) Add a new item using its default constructor. public static T AddDefaulted<T>(this List<T> list) where T : class, new() Parameters list List<T> Returns T Type Parameters T GetAndRemoveTail<T>(List<T>) public static T GetAndRemoveTail<T>(this List<T> list) Parameters list List<T> Returns T Type Parameters T GetRandomIndex<T>(List<T>) Get index within bounds assuming list is not empty. public static int GetRandomIndex<T>(this List<T> list) Parameters list List<T> Returns int Type Parameters T GetTail<T>(List<T>) public static T GetTail<T>(this List<T> list) Parameters list List<T> Returns T Type Parameters T HeadOrDefault<T>(List<T>) public static T HeadOrDefault<T>(this List<T> list) Parameters list List<T> Returns T Type Parameters T IsEmpty<T>(List<T>) public static bool IsEmpty<T>(this List<T> list) Parameters list List<T> Returns bool Type Parameters T RandomOrDefault<T>(List<T>) public static T RandomOrDefault<T>(this List<T> list) Parameters list List<T> Returns T Type Parameters T RemoveTail<T>(List<T>) public static void RemoveTail<T>(this List<T> list) Parameters list List<T> Type Parameters T TailOrDefault<T>(List<T>) public static T TailOrDefault<T>(this List<T> list) Parameters list List<T> Returns T Type Parameters T"
  },
  "api/SDG.Unturned.LiveConfig.html": {
    "href": "api/SDG.Unturned.LiveConfig.html",
    "title": "Class LiveConfig | Unturned Analyse Doc",
    "keywords": "Class LiveConfig Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class LiveConfig Inheritance object LiveConfig Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties WasPopulated public static bool WasPopulated { get; } Property Value bool Methods Get() Result is never null, but may be empty or out-of-date. public static LiveConfigData Get() Returns LiveConfigData Refresh() Called during startup and when returning to the main menu. public static void Refresh() Events OnRefreshed public static event Action OnRefreshed Event Type Action"
  },
  "api/SDG.Unturned.LiveConfigEx.html": {
    "href": "api/SDG.Unturned.LiveConfigEx.html",
    "title": "Class LiveConfigEx | Unturned Analyse Doc",
    "keywords": "Class LiveConfigEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class LiveConfigEx Inheritance object LiveConfigEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsNowFeaturedTimeOrBypassed(MainMenuWorkshopFeaturedLiveConfig) public static bool IsNowFeaturedTimeOrBypassed(this MainMenuWorkshopFeaturedLiveConfig config) Parameters config MainMenuWorkshopFeaturedLiveConfig Returns bool"
  },
  "api/SDG.Unturned.LoadedAssetDeferredCallback-1.html": {
    "href": "api/SDG.Unturned.LoadedAssetDeferredCallback-1.html",
    "title": "Delegate LoadedAssetDeferredCallback<T> | Unturned Analyse Doc",
    "keywords": "Delegate LoadedAssetDeferredCallback<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LoadedAssetDeferredCallback<T>(T asset) Parameters asset T Type Parameters T Constructors LoadedAssetDeferredCallback(object, IntPtr) public LoadedAssetDeferredCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T asset, AsyncCallback callback, object @object) Parameters asset T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T) public virtual void Invoke(T asset) Parameters asset T"
  },
  "api/SDG.Unturned.LoadedBound.html": {
    "href": "api/SDG.Unturned.LoadedBound.html",
    "title": "Class LoadedBound | Unturned Analyse Doc",
    "keywords": "Class LoadedBound Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LoadedBound Inheritance object LoadedBound Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LoadedBound() public LoadedBound() Fields isZombiesLoaded public bool isZombiesLoaded Field Value bool"
  },
  "api/SDG.Unturned.LoadedRegion.html": {
    "href": "api/SDG.Unturned.LoadedRegion.html",
    "title": "Class LoadedRegion | Unturned Analyse Doc",
    "keywords": "Class LoadedRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LoadedRegion Inheritance object LoadedRegion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LoadedRegion() public LoadedRegion() Fields isBarricadesLoaded public bool isBarricadesLoaded Field Value bool isItemsLoaded public bool isItemsLoaded Field Value bool isObjectsLoaded public bool isObjectsLoaded Field Value bool isResourcesLoaded public bool isResourcesLoaded Field Value bool isStructuresLoaded public bool isStructuresLoaded Field Value bool"
  },
  "api/SDG.Unturned.LoadingUI.html": {
    "href": "api/SDG.Unturned.LoadingUI.html",
    "title": "Class LoadingUI | Unturned Analyse Doc",
    "keywords": "Class LoadingUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LoadingUI : MonoBehaviour Inheritance object LoadingUI Constructors LoadingUI() public LoadingUI() Fields placeholderCamera Camera used while transitioning between scenes to prevent the \"no cameras rendering\" warning. public Camera placeholderCamera Field Value Camera window public static SleekWindow window Field Value SleekWindow Properties isBlocked public static bool isBlocked { get; } Property Value bool isInitialized public static bool isInitialized { get; } Property Value bool loader public static GameObject loader { get; } Property Value GameObject Methods NotifyDownloadProgress(float) public static void NotifyDownloadProgress(float progress) Parameters progress float NotifyLevelLoadingProgress(float) public static void NotifyLevelLoadingProgress(float progress) Parameters progress float SetDownloadFileName(string) public static void SetDownloadFileName(string name) Parameters name string SetIsDownloading(bool) public static void SetIsDownloading(bool isDownloading) Parameters isDownloading bool SetLoadingText(string) public static void SetLoadingText(string key) Parameters key string updateScene() public static void updateScene()"
  },
  "api/SDG.Unturned.Lobbies.html": {
    "href": "api/SDG.Unturned.Lobbies.html",
    "title": "Class Lobbies | Unturned Analyse Doc",
    "keywords": "Class Lobbies Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class Lobbies Inheritance object Lobbies Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties canOpenInvitations public static bool canOpenInvitations { get; } Property Value bool currentLobby public static CSteamID currentLobby { get; } Property Value CSteamID inLobby public static bool inLobby { get; } Property Value bool isHost public static bool isHost { get; } Property Value bool Methods LinkLobby(uint, ushort) public static void LinkLobby(uint ip, ushort queryPort) Parameters ip uint queryPort ushort createLobby() public static void createLobby() getLobbyMemberByIndex(int) public static CSteamID getLobbyMemberByIndex(int index) Parameters index int Returns CSteamID getLobbyMemberCount() public static int getLobbyMemberCount() Returns int joinLobby(CSteamID) public static void joinLobby(CSteamID newLobby) Parameters newLobby CSteamID leaveLobby() public static void leaveLobby() openInvitations() public static void openInvitations() Events lobbiesEntered public static event LobbiesEnteredHandler lobbiesEntered Event Type LobbiesEnteredHandler lobbiesRefreshed public static event LobbiesRefreshedHandler lobbiesRefreshed Event Type LobbiesRefreshedHandler"
  },
  "api/SDG.Unturned.LobbiesEnteredHandler.html": {
    "href": "api/SDG.Unturned.LobbiesEnteredHandler.html",
    "title": "Delegate LobbiesEnteredHandler | Unturned Analyse Doc",
    "keywords": "Delegate LobbiesEnteredHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LobbiesEnteredHandler() Constructors LobbiesEnteredHandler(object, IntPtr) public LobbiesEnteredHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.LobbiesRefreshedHandler.html": {
    "href": "api/SDG.Unturned.LobbiesRefreshedHandler.html",
    "title": "Delegate LobbiesRefreshedHandler | Unturned Analyse Doc",
    "keywords": "Delegate LobbiesRefreshedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void LobbiesRefreshedHandler() Constructors LobbiesRefreshedHandler(object, IntPtr) public LobbiesRefreshedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Local.html": {
    "href": "api/SDG.Unturned.Local.html",
    "title": "Class Local | Unturned Analyse Doc",
    "keywords": "Class Local Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Local Inheritance object Local Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Local() public Local() Local(DatDictionary) public Local(DatDictionary newData) Parameters newData DatDictionary Local(DatDictionary, DatDictionary) public Local(DatDictionary data, DatDictionary fallbackData) Parameters data DatDictionary fallbackData DatDictionary Methods FormatText(string, object, object, object) public static string FormatText(string text, object arg0, object arg1, object arg2) Parameters text string arg0 object arg1 object arg2 object Returns string format(string) public string format(string key) Parameters key string Returns string format(string, object) public string format(string key, object arg0) Parameters key string arg0 object Returns string format(string, object, object) public string format(string key, object arg0, object arg1) Parameters key string arg0 object arg1 object Returns string format(string, object, object, object) public string format(string key, object arg0, object arg1, object arg2) Parameters key string arg0 object arg1 object arg2 object Returns string format(string, params object[]) public string format(string key, params object[] args) Parameters key string args object[] Returns string has(string) public bool has(string key) Parameters key string Returns bool read(string) public string read(string key) Parameters key string Returns string"
  },
  "api/SDG.Unturned.LocalHwid.html": {
    "href": "api/SDG.Unturned.LocalHwid.html",
    "title": "Class LocalHwid | Unturned Analyse Doc",
    "keywords": "Class LocalHwid Namespace SDG.Unturned Assembly Assembly-CSharp.dll Utility for getting local hardware ID. One option for future improvement would be using Windows Management Infrastructure (WMI) API: https://github.com/SmartlyDressedGames/Unturned-3.x/issues/1593 public static class LocalHwid Inheritance object LocalHwid Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetHwids() Get the local hardware ID(s). public static byte[][] GetHwids() Returns byte[][]"
  },
  "api/SDG.Unturned.LocalNews.html": {
    "href": "api/SDG.Unturned.LocalNews.html",
    "title": "Class LocalNews | Unturned Analyse Doc",
    "keywords": "Class LocalNews Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class LocalNews Inheritance object LocalNews Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods dismissWorkshopItem(ulong) Track that the player has dismissed the given workshop item. public static void dismissWorkshopItem(ulong id) Parameters id ulong hasAutoSubscribedToWorkshopItem(ulong) Has player already auto-subscribed to the given workshop item? public static bool hasAutoSubscribedToWorkshopItem(ulong id) Parameters id ulong Returns bool markAutoSubscribedToWorkshopItem(ulong) Track that the player has auto-subscribed to the given workshop item. public static void markAutoSubscribedToWorkshopItem(ulong id) Parameters id ulong wasWorkshopItemDismissed(ulong) Has player dismissed the given workshop item? public static bool wasWorkshopItemDismissed(ulong id) Parameters id ulong Returns bool"
  },
  "api/SDG.Unturned.LocalWorkshopSettings.html": {
    "href": "api/SDG.Unturned.LocalWorkshopSettings.html",
    "title": "Class LocalWorkshopSettings | Unturned Analyse Doc",
    "keywords": "Class LocalWorkshopSettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LocalWorkshopSettings Inheritance object LocalWorkshopSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LocalWorkshopSettings() public LocalWorkshopSettings() Methods get() public static ILocalWorkshopSettings get() Returns ILocalWorkshopSettings"
  },
  "api/SDG.Unturned.Localization.html": {
    "href": "api/SDG.Unturned.Localization.html",
    "title": "Class Localization | Unturned Analyse Doc",
    "keywords": "Class Localization Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Localization Inheritance object Localization Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Localization() public Localization() Properties messages public static List<string> messages { get; } Property Value List<string> Methods read(string) public static Local read(string path) Parameters path string Returns Local refresh() public static void refresh() tryRead(string) [Obsolete] public static Local tryRead(string path) Parameters path string Returns Local tryRead(string, bool) Load {Language}.dat and/or English.dat from folder path. public static Local tryRead(string path, bool usePath) Parameters path string usePath bool Returns Local"
  },
  "api/SDG.Unturned.LocationDevkitNode.html": {
    "href": "api/SDG.Unturned.LocationDevkitNode.html",
    "title": "Class LocationDevkitNode | Unturned Analyse Doc",
    "keywords": "Class LocationDevkitNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LocationDevkitNode : TempNodeBase, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem TempNodeBase LocationDevkitNode Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler Inherited Members TempNodeBase.isSelected TempNodeBase.beginSelection(InteractionData) TempNodeBase.endSelection(InteractionData) DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors LocationDevkitNode() public LocationDevkitNode() Fields isVisibleOnMap If true, visible in chart and satellite UIs. public bool isVisibleOnMap Field Value bool locationName public string locationName Field Value string Methods readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.LocationDevkitNodeSystem.html": {
    "href": "api/SDG.Unturned.LocationDevkitNodeSystem.html",
    "title": "Class LocationDevkitNodeSystem | Unturned Analyse Doc",
    "keywords": "Class LocationDevkitNodeSystem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LocationDevkitNodeSystem : TempNodeSystemBase Inheritance object TempNodeSystemBase LocationDevkitNodeSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindByName(string) public LocationDevkitNode FindByName(string id) Parameters id string Returns LocationDevkitNode Get() public static LocationDevkitNodeSystem Get() Returns LocationDevkitNodeSystem GetAllNodes() public IReadOnlyList<LocationDevkitNode> GetAllNodes() Returns IReadOnlyList<LocationDevkitNode>"
  },
  "api/SDG.Unturned.LocationNode.html": {
    "href": "api/SDG.Unturned.LocationNode.html",
    "title": "Class LocationNode | Unturned Analyse Doc",
    "keywords": "Class LocationNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LocationNode : Node Inheritance object Node LocationNode Inherited Members Node._point Node._type Node._model Node.move(Vector3) Node.setEnabled(bool) Node.remove() Node.point Node.type Node.model object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LocationNode(Vector3) public LocationNode(Vector3 newPoint) Parameters newPoint Vector3 LocationNode(Vector3, string) public LocationNode(Vector3 newPoint, string newName) Parameters newPoint Vector3 newName string Fields name public string name Field Value string"
  },
  "api/SDG.Unturned.LodGroupEnumerator.html": {
    "href": "api/SDG.Unturned.LodGroupEnumerator.html",
    "title": "Struct LodGroupEnumerator | Unturned Analyse Doc",
    "keywords": "Struct LodGroupEnumerator Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows foreach loop to iterate renderers defined in lod group. public struct LodGroupEnumerator : IEnumerator<Renderer>, IEnumerator, IDisposable, IEnumerable<Renderer>, IEnumerable Implements IEnumerator<Renderer> IEnumerator IDisposable IEnumerable<Renderer> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors LodGroupEnumerator(LODGroup) public LodGroupEnumerator(LODGroup lodGroup) Parameters lodGroup LODGroup Properties Current public Renderer Current { get; } Property Value Renderer Methods Dispose() public void Dispose() MoveNext() public bool MoveNext() Returns bool Reset() public void Reset()"
  },
  "api/SDG.Unturned.LodGroupExtension.html": {
    "href": "api/SDG.Unturned.LodGroupExtension.html",
    "title": "Class LodGroupExtension | Unturned Analyse Doc",
    "keywords": "Class LodGroupExtension Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class LodGroupExtension Inheritance object LodGroupExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ClampCulling(LODGroup, float) Clamp the culling screen percentage to be less than or equal to a maximum value. public static void ClampCulling(this LODGroup lodGroup, float max) Parameters lodGroup LODGroup max float DisableCulling(LODGroup) Prevent the lowest LOD from being culled. public static void DisableCulling(this LODGroup lodGroup) Parameters lodGroup LODGroup GetCullingScreenSize(LODGroup) Lod group will be culled when screen size is smaller than this value. public static float GetCullingScreenSize(this LODGroup lodGroup) Parameters lodGroup LODGroup Returns float"
  },
  "api/SDG.Unturned.LogFile.html": {
    "href": "api/SDG.Unturned.LogFile.html",
    "title": "Class LogFile | Unturned Analyse Doc",
    "keywords": "Class LogFile Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LogFile Inheritance object LogFile Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors LogFile(string) public LogFile(string path) Parameters path string Properties path Absolute path to *.log file. public string path { get; } Property Value string Methods close() public void close() writeLine(string) public void writeLine(string line) Parameters line string"
  },
  "api/SDG.Unturned.LogMessengerComponent.html": {
    "href": "api/SDG.Unturned.LogMessengerComponent.html",
    "title": "Class LogMessengerComponent | Unturned Analyse Doc",
    "keywords": "Class LogMessengerComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows Unity events to print messages to the log file for debugging. public class LogMessengerComponent : MonoBehaviour Inheritance object LogMessengerComponent Constructors LogMessengerComponent() public LogMessengerComponent() Fields DefaultText Text to use when PrintInfo is invoked. public string DefaultText Field Value string Methods PrintDefaultInfo() public void PrintDefaultInfo() PrintInfo(string) public void PrintInfo(string text) Parameters text string"
  },
  "api/SDG.Unturned.Logs.html": {
    "href": "api/SDG.Unturned.Logs.html",
    "title": "Class Logs | Unturned Analyse Doc",
    "keywords": "Class Logs Namespace SDG.Unturned Assembly Assembly-CSharp.dll Responsible for the per-process .log file in the Logs directory. Kept multiple log files in the past, but now consolidates all information into a single file named Client.log or Server_{Identifier}.log. public class Logs : MonoBehaviour Inheritance object Logs Constructors Logs() public Logs() Fields noDefaultLog Should setup of the default *.log file be disabled? public static CommandLineFlag noDefaultLog Field Value CommandLineFlag Properties RedactionReplacement Text to replace with if SDG.Unturned.Logs.shouldRedactLogs is enabled. public static string RedactionReplacement { get; set; } Property Value string ShouldRedactLogs If true, information like IP addresses and login tokens should be censored in vanilla logs. Nelson 2024-11-11: Special thanks to Jdance and asineth0 in public issue #4740! public static bool ShouldRedactLogs { get; } Property Value bool Methods RedactIPv4Addresses(ref string) ATTEMPTS to replace IPv4 address(es) with RedactionReplacement. Should only be called if ShouldRedactLogs is enabled. Case-by-case redaction should be preferred for performance reasons over using this function. This function is intended for third-party messages (e.g., BattlEye) that we don't have control over. public static bool RedactIPv4Addresses(ref string message) Parameters message string Returns bool True if message was modified. awake() public void awake() closeLogFile() Close current log file. public static void closeLogFile() getLogFilePath() Get logging to path. public static string getLogFilePath() Returns string printLine(string) public static void printLine(string message) Parameters message string setLogFilePath(string) Set path to log to. public static void setLogFilePath(string logFilePath) Parameters logFilePath string"
  },
  "api/SDG.Unturned.LookAtLocalPlayer.html": {
    "href": "api/SDG.Unturned.LookAtLocalPlayer.html",
    "title": "Class LookAtLocalPlayer | Unturned Analyse Doc",
    "keywords": "Class LookAtLocalPlayer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class LookAtLocalPlayer : MonoBehaviour Inheritance object LookAtLocalPlayer Constructors LookAtLocalPlayer() public LookAtLocalPlayer()"
  },
  "api/SDG.Unturned.MagazineReplacement.html": {
    "href": "api/SDG.Unturned.MagazineReplacement.html",
    "title": "Struct MagazineReplacement | Unturned Analyse Doc",
    "keywords": "Struct MagazineReplacement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct MagazineReplacement Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields id public ushort id Field Value ushort map public string map Field Value string"
  },
  "api/SDG.Unturned.MainCamera.html": {
    "href": "api/SDG.Unturned.MainCamera.html",
    "title": "Class MainCamera | Unturned Analyse Doc",
    "keywords": "Class MainCamera Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MainCamera : MonoBehaviour Inheritance object MainCamera Constructors MainCamera() public MainCamera() Fields _instance protected static Camera _instance Field Value Camera _isAvailable protected static bool _isAvailable Field Value bool Properties instance public static Camera instance { get; protected set; } Property Value Camera isAvailable public static bool isAvailable { get; protected set; } Property Value bool Methods Awake() public void Awake() activate() public IEnumerator activate() Returns IEnumerator triggerAvailabilityChanged() protected static void triggerAvailabilityChanged() triggerInstanceChanged() protected static void triggerInstanceChanged() Events availabilityChanged public static event MainCameraAvailabilityChangedHandler availabilityChanged Event Type MainCameraAvailabilityChangedHandler instanceChanged public static event MainCameraInstanceChangedHandler instanceChanged Event Type MainCameraInstanceChangedHandler"
  },
  "api/SDG.Unturned.MainCameraAvailabilityChangedHandler.html": {
    "href": "api/SDG.Unturned.MainCameraAvailabilityChangedHandler.html",
    "title": "Delegate MainCameraAvailabilityChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate MainCameraAvailabilityChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void MainCameraAvailabilityChangedHandler() Constructors MainCameraAvailabilityChangedHandler(object, IntPtr) public MainCameraAvailabilityChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.MainCameraInstanceChangedHandler.html": {
    "href": "api/SDG.Unturned.MainCameraInstanceChangedHandler.html",
    "title": "Delegate MainCameraInstanceChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate MainCameraInstanceChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void MainCameraInstanceChangedHandler() Constructors MainCameraInstanceChangedHandler(object, IntPtr) public MainCameraInstanceChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Managers.html": {
    "href": "api/SDG.Unturned.Managers.html",
    "title": "Class Managers | Unturned Analyse Doc",
    "keywords": "Class Managers Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Managers : MonoBehaviour Inheritance object Managers Constructors Managers() public Managers() Properties isInitialized public static bool isInitialized { get; } Property Value bool"
  },
  "api/SDG.Unturned.MapsStatusData.html": {
    "href": "api/SDG.Unturned.MapsStatusData.html",
    "title": "Class MapsStatusData | Unturned Analyse Doc",
    "keywords": "Class MapsStatusData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MapsStatusData Inheritance object MapsStatusData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MapsStatusData() public MapsStatusData() Fields Auto_Subscribe Maps to install to automatically. Used early in startup to hopefully install before reaching main menu. public List<AutoSubscribeMap> Auto_Subscribe Field Value List<AutoSubscribeMap> Curated_Map_Links Maps not installed by default, but recommended from maps list. public List<CuratedMapLink> Curated_Map_Links Field Value List<CuratedMapLink>"
  },
  "api/SDG.Unturned.MaskUpdated.html": {
    "href": "api/SDG.Unturned.MaskUpdated.html",
    "title": "Delegate MaskUpdated | Unturned Analyse Doc",
    "keywords": "Delegate MaskUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void MaskUpdated(ushort newMask, byte newMaskQuality, byte[] newMaskState) Parameters newMask ushort newMaskQuality byte newMaskState byte[] Constructors MaskUpdated(object, IntPtr) public MaskUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, byte, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort newMask, byte newMaskQuality, byte[] newMaskState, AsyncCallback callback, object @object) Parameters newMask ushort newMaskQuality byte newMaskState byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort, byte, byte[]) public virtual void Invoke(ushort newMask, byte newMaskQuality, byte[] newMaskState) Parameters newMask ushort newMaskQuality byte newMaskState byte[]"
  },
  "api/SDG.Unturned.MasterBundle.html": {
    "href": "api/SDG.Unturned.MasterBundle.html",
    "title": "Class MasterBundle | Unturned Analyse Doc",
    "keywords": "Class MasterBundle Namespace SDG.Unturned Assembly Assembly-CSharp.dll Remaps asset load requests into a large asset bundle rather than small individual asset bundles. public class MasterBundle : Bundle Inheritance object Bundle MasterBundle Inherited Members Bundle.convertShadersToStandard Bundle.consolidateShaders Bundle.fixupMaterialForRenderer(Transform, Renderer, Material) Bundle.processLoadedGameObject(GameObject) Bundle.processLoadedMaterial(Material) Bundle.processLoadedObject<T>(T) Bundle.loadAll<T>() Bundle.unload() Bundle.load() Bundle.load(Type) Bundle.asset Bundle.resource Bundle.name Bundle.hasResource object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MasterBundle(MasterBundleConfig, string, string) public MasterBundle(MasterBundleConfig cfg, string relativePath, string name) Parameters cfg MasterBundleConfig relativePath string name string Properties cfg Config that contains the actual large AssetBundle. public MasterBundleConfig cfg { get; protected set; } Property Value MasterBundleConfig relativePath Asset path relative to the master AssetBundle. public string relativePath { get; protected set; } Property Value string willBeUnloadedDuringUse protected override bool willBeUnloadedDuringUse { get; } Property Value bool Methods WhereLoadLookedToString(string) public override string WhereLoadLookedToString(string name) Parameters name string Returns string loadDeferred<T>(string, out IDeferredAsset<T>, LoadedAssetDeferredCallback<T>) Save a reference to an object in the asset bundle, but defer loading it until requested by game code. public override void loadDeferred<T>(string name, out IDeferredAsset<T> asset, LoadedAssetDeferredCallback<T> callback) where T : Object Parameters name string asset IDeferredAsset<T> callback LoadedAssetDeferredCallback<T> Type Parameters T load<T>(string) public override T load<T>(string name) where T : Object Parameters name string Returns T Type Parameters T"
  },
  "api/SDG.Unturned.MasterBundleConfig.html": {
    "href": "api/SDG.Unturned.MasterBundleConfig.html",
    "title": "Class MasterBundleConfig | Unturned Analyse Doc",
    "keywords": "Class MasterBundleConfig Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MasterBundleConfig Inheritance object MasterBundleConfig Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MasterBundleConfig(string, DatDictionary, AssetOrigin) public MasterBundleConfig(string absoluteDirectory, DatDictionary data, AssetOrigin origin) Parameters absoluteDirectory string data DatDictionary origin AssetOrigin Properties assetBundle Loaded asset bundle. public AssetBundle assetBundle { get; protected set; } Property Value AssetBundle assetBundleName Name of the actual asset bundle file, e.g. Hawaii.unity3d Asset bundle should be next to this config file. public string assetBundleName { get; protected set; } Property Value string assetBundleNameWithoutExtension assetBundleName without final .* extension. public string assetBundleNameWithoutExtension { get; protected set; } Property Value string assetPrefix Prefixed to all asset paths loaded from asset bundle. Final path is built from assetPrefix + pathRelativeToBundlesFolder + assetName, e.g. Assets/Hawaii/Bundles + /Objects/Large/House/ + Object.prefab public string assetPrefix { get; protected set; } Property Value string directoryPath Absolute path to directory containing bundle and .dat file. public string directoryPath { get; protected set; } Property Value string hash Hash of loaded asset bundle file. This is per-platform, so the server loads a hash file with all platform hashes. public byte[] hash { get; protected set; } Property Value byte[] version Custom asset bundle version used by Unturned to detect whether imports need fixing up because they were exported from an older version of Unity. public int version { get; protected set; } Property Value int Methods FinishLoad() public void FinishLoad() LoadAssetAsync<T>(string) public AssetBundleRequest LoadAssetAsync<T>(string name) where T : Object Parameters name string Returns AssetBundleRequest Type Parameters T StartLoad(byte[], byte[]) Load the underlying asset bundle. public void StartLoad(byte[] inputData, byte[] inputHash) Parameters inputData byte[] inputHash byte[] ToString() public override string ToString() Returns string formatAssetPath(string) Insert path prefix if set. public string formatAssetPath(string assetPath) Parameters assetPath string Returns string getAssetBundlePath() Get absolute path to asset bundle file. public string getAssetBundlePath() Returns string getHashFilePath() Get absolute path to file with per-platform hashes. public string getHashFilePath() Returns string unload() public void unload()"
  },
  "api/SDG.Unturned.MasterBundleHelper.html": {
    "href": "api/SDG.Unturned.MasterBundleHelper.html",
    "title": "Class MasterBundleHelper | Unturned Analyse Doc",
    "keywords": "Class MasterBundleHelper Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class MasterBundleHelper Inheritance object MasterBundleHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods containsMasterBundle(string) public static bool containsMasterBundle(string absoluteDirectory) Parameters absoluteDirectory string Returns bool getConfigPath(string) public static string getConfigPath(string absoluteDirectory) Parameters absoluteDirectory string Returns string getHashFileName(string) public static string getHashFileName(string name) Parameters name string Returns string getLinuxAssetBundleName(string) public static string getLinuxAssetBundleName(string name) Parameters name string Returns string getMacAssetBundleName(string) public static string getMacAssetBundleName(string name) Parameters name string Returns string insertAssetBundleNameSuffix(string, string) Append suffix to name, or if name contains a '.' insert it before. public static string insertAssetBundleNameSuffix(string name, string suffix) Parameters name string suffix string Returns string"
  },
  "api/SDG.Unturned.MasterBundleReference-1.html": {
    "href": "api/SDG.Unturned.MasterBundleReference-1.html",
    "title": "Struct MasterBundleReference<T> | Unturned Analyse Doc",
    "keywords": "Struct MasterBundleReference<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll Essentially identical to ContentReference, but MasterBundle is more convenient. Perhaps in the future all asset/content systems will be consolidated. public struct MasterBundleReference<T> : IFormattedFileReadable, IFormattedFileWritable, IDatParseable where T : Object Type Parameters T Implements IFormattedFileReadable IFormattedFileWritable IDatParseable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors MasterBundleReference(string, string) public MasterBundleReference(string name, string path) Parameters name string path string Fields invalid public static MasterBundleReference<T> invalid Field Value MasterBundleReference<T> name Name of master bundle file. public string name Field Value string path Path to Unity asset within asset bundle. public string path Field Value string Properties isNull Are name or path null or empty? public bool isNull { get; } Property Value bool isValid Are both name and path non-null and non-empty? public bool isValid { get; } Property Value bool Methods LoadAssetAsync(bool) public AssetBundleRequest LoadAssetAsync(bool logWarnings = true) Parameters logWarnings bool Returns AssetBundleRequest ToString() public override string ToString() Returns string TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool loadAsset(bool) public T loadAsset(bool logWarnings = true) Parameters logWarnings bool Returns T read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.MasterBundleSearchFilter.html": {
    "href": "api/SDG.Unturned.MasterBundleSearchFilter.html",
    "title": "Struct MasterBundleSearchFilter | Unturned Analyse Doc",
    "keywords": "Struct MasterBundleSearchFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll Parses mb:X from input string and filters assets using X master bundle. public struct MasterBundleSearchFilter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors MasterBundleSearchFilter(MasterBundleConfig) public MasterBundleSearchFilter(MasterBundleConfig masterBundle) Parameters masterBundle MasterBundleConfig Methods ignores(Asset) public bool ignores(Asset asset) Parameters asset Asset Returns bool matches(Asset) public bool matches(Asset asset) Parameters asset Asset Returns bool parse(string) public static MasterBundleSearchFilter? parse(string filter) Parameters filter string Returns MasterBundleSearchFilter?"
  },
  "api/SDG.Unturned.MaterialPaletteAsset.html": {
    "href": "api/SDG.Unturned.MaterialPaletteAsset.html",
    "title": "Class MaterialPaletteAsset | Unturned Analyse Doc",
    "keywords": "Class MaterialPaletteAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MaterialPaletteAsset : Asset, IAssetErrorContext Inheritance object Asset MaterialPaletteAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MaterialPaletteAsset() public MaterialPaletteAsset() Fields materials public List<ContentReference<Material>> materials Field Value List<ContentReference<Material>> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.MeasurementTool.html": {
    "href": "api/SDG.Unturned.MeasurementTool.html",
    "title": "Class MeasurementTool | Unturned Analyse Doc",
    "keywords": "Class MeasurementTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MeasurementTool Inheritance object MeasurementTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MeasurementTool() public MeasurementTool() Methods FormatLengthString(float) public static string FormatLengthString(float length) Parameters length float Returns string KPHToMPH(float) public static float KPHToMPH(float kph) Parameters kph float Returns float KtoM(float) public static float KtoM(float k) Parameters k float Returns float MtoYd(int) public static int MtoYd(int m) Parameters m int Returns int MtoYd(long) public static long MtoYd(long m) Parameters m long Returns long MtoYd(float) public static float MtoYd(float m) Parameters m float Returns float angleToByte(float) public static byte angleToByte(float angle) Parameters angle float Returns byte angleToByte2(float) [Obsolete(\"Newer code should not be using this, instead NetPak should handle it.\")] public static byte angleToByte2(float angle) Parameters angle float Returns byte byteToAngle(byte) public static float byteToAngle(byte angle) Parameters angle byte Returns float byteToAngle2(byte) [Obsolete(\"Newer code should not be using this, instead NetPak should handle it.\")] public static float byteToAngle2(byte angle) Parameters angle byte Returns float speedToKPH(float) public static float speedToKPH(float speed) Parameters speed float Returns float"
  },
  "api/SDG.Unturned.MenuConfigurationAudioUI.html": {
    "href": "api/SDG.Unturned.MenuConfigurationAudioUI.html",
    "title": "Class MenuConfigurationAudioUI | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationAudioUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationAudioUI : SleekFullscreenBox Inheritance object SleekFullscreenBox MenuConfigurationAudioUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) SleekFullscreenBox.OnUpdate() Constructors MenuConfigurationAudioUI() public MenuConfigurationAudioUI() Fields active public bool active Field Value bool localization public Local localization Field Value Local Methods close() public void close() open() public void open()"
  },
  "api/SDG.Unturned.MenuConfigurationControls.html": {
    "href": "api/SDG.Unturned.MenuConfigurationControls.html",
    "title": "Class MenuConfigurationControls | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationControls Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationControls : MonoBehaviour Inheritance object MenuConfigurationControls Constructors MenuConfigurationControls() public MenuConfigurationControls() Properties binding public static byte binding { get; set; } Property Value byte"
  },
  "api/SDG.Unturned.MenuConfigurationControlsUI.html": {
    "href": "api/SDG.Unturned.MenuConfigurationControlsUI.html",
    "title": "Class MenuConfigurationControlsUI | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationControlsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationControlsUI Inheritance object MenuConfigurationControlsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuConfigurationControlsUI() public MenuConfigurationControlsUI() Fields active public static bool active Field Value bool binding public static byte binding Field Value byte Methods bind(KeyCode) public static void bind(KeyCode key) Parameters key KeyCode bindOnGUI() public static void bindOnGUI() bindUpdate() public static void bindUpdate() cancel() public static void cancel() close() public static void close() getKeyCodeText(KeyCode) public static string getKeyCodeText(KeyCode key) Parameters key KeyCode Returns string open() public static void open() updateButton(byte) public static void updateButton(byte index) Parameters index byte"
  },
  "api/SDG.Unturned.MenuConfigurationDisplayUI.html": {
    "href": "api/SDG.Unturned.MenuConfigurationDisplayUI.html",
    "title": "Class MenuConfigurationDisplayUI | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationDisplayUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationDisplayUI Inheritance object MenuConfigurationDisplayUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuConfigurationDisplayUI() public MenuConfigurationDisplayUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuConfigurationGraphicsUI.html": {
    "href": "api/SDG.Unturned.MenuConfigurationGraphicsUI.html",
    "title": "Class MenuConfigurationGraphicsUI | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationGraphicsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationGraphicsUI Inheritance object MenuConfigurationGraphicsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuConfigurationGraphicsUI() public MenuConfigurationGraphicsUI() Fields active public static bool active Field Value bool anisotropicFilteringButton public static SleekButtonState anisotropicFilteringButton Field Value SleekButtonState antiAliasingButton public static SleekButtonState antiAliasingButton Field Value SleekButtonState Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuConfigurationOptions.html": {
    "href": "api/SDG.Unturned.MenuConfigurationOptions.html",
    "title": "Class MenuConfigurationOptions | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationOptions Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationOptions : MonoBehaviour Inheritance object MenuConfigurationOptions Constructors MenuConfigurationOptions() public MenuConfigurationOptions() Methods apply() public static void apply()"
  },
  "api/SDG.Unturned.MenuConfigurationOptionsUI.html": {
    "href": "api/SDG.Unturned.MenuConfigurationOptionsUI.html",
    "title": "Class MenuConfigurationOptionsUI | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationOptionsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationOptionsUI Inheritance object MenuConfigurationOptionsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuConfigurationOptionsUI() public MenuConfigurationOptionsUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuConfigurationUI.html": {
    "href": "api/SDG.Unturned.MenuConfigurationUI.html",
    "title": "Class MenuConfigurationUI | Unturned Analyse Doc",
    "keywords": "Class MenuConfigurationUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuConfigurationUI Inheritance object MenuConfigurationUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuConfigurationUI() public MenuConfigurationUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuCreditsUI.html": {
    "href": "api/SDG.Unturned.MenuCreditsUI.html",
    "title": "Class MenuCreditsUI | Unturned Analyse Doc",
    "keywords": "Class MenuCreditsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuCreditsUI Inheritance object MenuCreditsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuCreditsUI() public MenuCreditsUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuDashboardUI.html": {
    "href": "api/SDG.Unturned.MenuDashboardUI.html",
    "title": "Class MenuDashboardUI | Unturned Analyse Doc",
    "keywords": "Class MenuDashboardUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuDashboardUI Inheritance object MenuDashboardUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuDashboardUI() public MenuDashboardUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open() queryFeaturedItem(PublishedFileId_t) protected static void queryFeaturedItem(PublishedFileId_t publishedFileID) Parameters publishedFileID PublishedFileId_t"
  },
  "api/SDG.Unturned.MenuMapVisibility.html": {
    "href": "api/SDG.Unturned.MenuMapVisibility.html",
    "title": "Class MenuMapVisibility | Unturned Analyse Doc",
    "keywords": "Class MenuMapVisibility Namespace SDG.Unturned Assembly Assembly-CSharp.dll Component in the root Menu scene. Additively loads decoration levels without modifying main scene. public class MenuMapVisibility : MonoBehaviour Inheritance object MenuMapVisibility Constructors MenuMapVisibility() public MenuMapVisibility() Methods Awake() public void Awake()"
  },
  "api/SDG.Unturned.MenuPauseUI.html": {
    "href": "api/SDG.Unturned.MenuPauseUI.html",
    "title": "Class MenuPauseUI | Unturned Analyse Doc",
    "keywords": "Class MenuPauseUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPauseUI Inheritance object MenuPauseUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuPauseUI() public MenuPauseUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuPlayConfigUI.html": {
    "href": "api/SDG.Unturned.MenuPlayConfigUI.html",
    "title": "Class MenuPlayConfigUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayConfigUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayConfigUI Inheritance object MenuPlayConfigUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuPlayConfigUI() public MenuPlayConfigUI() Fields active public static bool active Field Value bool localization public static Local localization Field Value Local Methods close() public static void close() open() public static void open() sanitizeName(string) public static string sanitizeName(string fieldName) Parameters fieldName string Returns string"
  },
  "api/SDG.Unturned.MenuPlayConnectUI.html": {
    "href": "api/SDG.Unturned.MenuPlayConnectUI.html",
    "title": "Class MenuPlayConnectUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayConnectUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayConnectUI Inheritance object MenuPlayConnectUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuPlayConnectUI() public MenuPlayConnectUI() Fields active public static bool active Field Value bool hasPendingServerRelay These server relay variables redirect the client to another server when the menu opens similar to how Steam sets the +connect string on game startup. Allows plugin to redirect player to another server on the same network. public static bool hasPendingServerRelay Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local serverRelayIP public static uint serverRelayIP Field Value uint serverRelayPassword public static string serverRelayPassword Field Value string serverRelayPort public static ushort serverRelayPort Field Value ushort serverRelayServerCode public static CSteamID serverRelayServerCode Field Value CSteamID serverRelayWaitOnMenu public static bool serverRelayWaitOnMenu Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() connect(SteamConnectionInfo, bool, EServerInfoOpenContext) public static void connect(SteamConnectionInfo info, bool shouldAutoJoin, MenuPlayServerInfoUI.EServerInfoOpenContext openContext) Parameters info SteamConnectionInfo shouldAutoJoin bool If true the server is immediately joined, otherwise show server details beforehand. openContext MenuPlayServerInfoUI.EServerInfoOpenContext open() public static void open()"
  },
  "api/SDG.Unturned.MenuPlayLobbiesUI.SleekLobbyPlayerButton.html": {
    "href": "api/SDG.Unturned.MenuPlayLobbiesUI.SleekLobbyPlayerButton.html",
    "title": "Class MenuPlayLobbiesUI.SleekLobbyPlayerButton | Unturned Analyse Doc",
    "keywords": "Class MenuPlayLobbiesUI.SleekLobbyPlayerButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayLobbiesUI.SleekLobbyPlayerButton : SleekWrapper Inheritance object MenuPlayLobbiesUI.SleekLobbyPlayerButton Constructors SleekLobbyPlayerButton(CSteamID) public SleekLobbyPlayerButton(CSteamID newSteamID) Parameters newSteamID CSteamID"
  },
  "api/SDG.Unturned.MenuPlayLobbiesUI.html": {
    "href": "api/SDG.Unturned.MenuPlayLobbiesUI.html",
    "title": "Class MenuPlayLobbiesUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayLobbiesUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayLobbiesUI Inheritance object MenuPlayLobbiesUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuPlayLobbiesUI() public MenuPlayLobbiesUI() Fields active public static bool active Field Value bool localization public static Local localization Field Value Local Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuPlayMapFiltersUI.html": {
    "href": "api/SDG.Unturned.MenuPlayMapFiltersUI.html",
    "title": "Class MenuPlayMapFiltersUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayMapFiltersUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayMapFiltersUI : SleekFullscreenBox Inheritance object SleekFullscreenBox MenuPlayMapFiltersUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) SleekFullscreenBox.OnUpdate() Constructors MenuPlayMapFiltersUI(MenuPlayServersUI) public MenuPlayMapFiltersUI(MenuPlayServersUI serverListUI) Parameters serverListUI MenuPlayServersUI Fields active public bool active Field Value bool icons public Bundle icons Field Value Bundle localization public Local localization Field Value Local Methods OnDestroy() public override void OnDestroy() OpenPreviousMenu() public void OpenPreviousMenu() close() public void close() open(EMenuPlayMapFiltersUIOpenContext) public void open(EMenuPlayMapFiltersUIOpenContext openContext) Parameters openContext EMenuPlayMapFiltersUIOpenContext"
  },
  "api/SDG.Unturned.MenuPlayOnlineSafetyUI.html": {
    "href": "api/SDG.Unturned.MenuPlayOnlineSafetyUI.html",
    "title": "Class MenuPlayOnlineSafetyUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayOnlineSafetyUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayOnlineSafetyUI : SleekFullscreenBox Inheritance object SleekFullscreenBox MenuPlayOnlineSafetyUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) SleekFullscreenBox.OnUpdate() Constructors MenuPlayOnlineSafetyUI() public MenuPlayOnlineSafetyUI() Fields active public bool active Field Value bool icons public Bundle icons Field Value Bundle localization public Local localization Field Value Local Methods OpenIfNecessary(EOnlineSafetyDestination) public void OpenIfNecessary(EOnlineSafetyDestination destination) Parameters destination EOnlineSafetyDestination close() public void close() open(EOnlineSafetyDestination) public void open(EOnlineSafetyDestination destination) Parameters destination EOnlineSafetyDestination"
  },
  "api/SDG.Unturned.MenuPlayServerBookmarksUI.html": {
    "href": "api/SDG.Unturned.MenuPlayServerBookmarksUI.html",
    "title": "Class MenuPlayServerBookmarksUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayServerBookmarksUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayServerBookmarksUI : SleekFullscreenBox Inheritance object SleekFullscreenBox MenuPlayServerBookmarksUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) SleekFullscreenBox.OnUpdate() Constructors MenuPlayServerBookmarksUI() public MenuPlayServerBookmarksUI() Fields active public bool active Field Value bool Methods close() public void close() open() public void open()"
  },
  "api/SDG.Unturned.MenuPlayServerCurationUI.html": {
    "href": "api/SDG.Unturned.MenuPlayServerCurationUI.html",
    "title": "Class MenuPlayServerCurationUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayServerCurationUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayServerCurationUI : SleekFullscreenBox Inheritance object SleekFullscreenBox MenuPlayServerCurationUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) SleekFullscreenBox.OnUpdate() Constructors MenuPlayServerCurationUI(MenuPlayServersUI) public MenuPlayServerCurationUI(MenuPlayServersUI serverListUI) Parameters serverListUI MenuPlayServersUI Fields active public bool active Field Value bool icons public Bundle icons Field Value Bundle localization public Local localization Field Value Local Methods close() public void close() open() public void open()"
  },
  "api/SDG.Unturned.MenuPlayServerInfoUI.EServerInfoOpenContext.html": {
    "href": "api/SDG.Unturned.MenuPlayServerInfoUI.EServerInfoOpenContext.html",
    "title": "Enum MenuPlayServerInfoUI.EServerInfoOpenContext | Unturned Analyse Doc",
    "keywords": "Enum MenuPlayServerInfoUI.EServerInfoOpenContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum MenuPlayServerInfoUI.EServerInfoOpenContext Fields BOOKMARKS = 2 CONNECT = 0 SERVERS = 1"
  },
  "api/SDG.Unturned.MenuPlayServerInfoUI.html": {
    "href": "api/SDG.Unturned.MenuPlayServerInfoUI.html",
    "title": "Class MenuPlayServerInfoUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayServerInfoUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayServerInfoUI Inheritance object MenuPlayServerInfoUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuPlayServerInfoUI() public MenuPlayServerInfoUI() Fields active public static bool active Field Value bool Properties openContext public static MenuPlayServerInfoUI.EServerInfoOpenContext openContext { get; } Property Value MenuPlayServerInfoUI.EServerInfoOpenContext Methods GetClipboardData() public static string GetClipboardData() Returns string OnDestroy() public void OnDestroy() OpenWithoutRefresh() public static void OpenWithoutRefresh() close() public static void close() open(SteamServerAdvertisement, string, EServerInfoOpenContext) public static void open(SteamServerAdvertisement newServerInfo, string newServerPassword, MenuPlayServerInfoUI.EServerInfoOpenContext newOpenContext) Parameters newServerInfo SteamServerAdvertisement newServerPassword string newOpenContext MenuPlayServerInfoUI.EServerInfoOpenContext"
  },
  "api/SDG.Unturned.MenuPlayServerListFiltersUI.html": {
    "href": "api/SDG.Unturned.MenuPlayServerListFiltersUI.html",
    "title": "Class MenuPlayServerListFiltersUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayServerListFiltersUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayServerListFiltersUI : SleekFullscreenBox Inheritance object SleekFullscreenBox MenuPlayServerListFiltersUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) SleekFullscreenBox.OnUpdate() Constructors MenuPlayServerListFiltersUI(MenuPlayServersUI) public MenuPlayServerListFiltersUI(MenuPlayServersUI serverListUI) Parameters serverListUI MenuPlayServersUI Fields active public bool active Field Value bool icons public Bundle icons Field Value Bundle localization public Local localization Field Value Local Methods OnDestroy() public override void OnDestroy() OpenForMap(string) public void OpenForMap(string map) Parameters map string close() public void close() open() public void open()"
  },
  "api/SDG.Unturned.MenuPlayServersUI.html": {
    "href": "api/SDG.Unturned.MenuPlayServersUI.html",
    "title": "Class MenuPlayServersUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayServersUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayServersUI : SleekFullscreenBox Inheritance object SleekFullscreenBox MenuPlayServersUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) Constructors MenuPlayServersUI() public MenuPlayServersUI() Fields active public bool active Field Value bool icons public Bundle icons Field Value Bundle localization public Local localization Field Value Local mapFiltersUI public static MenuPlayMapFiltersUI mapFiltersUI Field Value MenuPlayMapFiltersUI serverCurationUI public static MenuPlayServerCurationUI serverCurationUI Field Value MenuPlayServerCurationUI serverListFiltersUI public static MenuPlayServerListFiltersUI serverListFiltersUI Field Value MenuPlayServerListFiltersUI Methods OnDestroy() public override void OnDestroy() OnUpdate() public override void OnUpdate() close() public void close() open(bool) public void open(bool shouldRefresh) Parameters shouldRefresh bool"
  },
  "api/SDG.Unturned.MenuPlaySingleplayerUI.html": {
    "href": "api/SDG.Unturned.MenuPlaySingleplayerUI.html",
    "title": "Class MenuPlaySingleplayerUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlaySingleplayerUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlaySingleplayerUI Inheritance object MenuPlaySingleplayerUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuPlaySingleplayerUI() public MenuPlaySingleplayerUI() Fields active public static bool active Field Value bool localization public static Local localization Field Value Local Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuPlayUI.html": {
    "href": "api/SDG.Unturned.MenuPlayUI.html",
    "title": "Class MenuPlayUI | Unturned Analyse Doc",
    "keywords": "Class MenuPlayUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuPlayUI Inheritance object MenuPlayUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuPlayUI() public MenuPlayUI() Fields active public static bool active Field Value bool onlineSafetyUI public static MenuPlayOnlineSafetyUI onlineSafetyUI Field Value MenuPlayOnlineSafetyUI serverBookmarksUI public static MenuPlayServerBookmarksUI serverBookmarksUI Field Value MenuPlayServerBookmarksUI serverListUI public static MenuPlayServersUI serverListUI Field Value MenuPlayServersUI Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuServerPasswordUI.html": {
    "href": "api/SDG.Unturned.MenuServerPasswordUI.html",
    "title": "Class MenuServerPasswordUI | Unturned Analyse Doc",
    "keywords": "Class MenuServerPasswordUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuServerPasswordUI Inheritance object MenuServerPasswordUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuServerPasswordUI() public MenuServerPasswordUI() Fields isActive public static bool isActive Field Value bool Methods close() public static void close() open(SteamServerAdvertisement, List<PublishedFileId_t>) public static void open(SteamServerAdvertisement newServerInfo, List<PublishedFileId_t> newExpectedWorkshopItems) Parameters newServerInfo SteamServerAdvertisement newExpectedWorkshopItems List<PublishedFileId_t>"
  },
  "api/SDG.Unturned.MenuSettings.html": {
    "href": "api/SDG.Unturned.MenuSettings.html",
    "title": "Class MenuSettings | Unturned Analyse Doc",
    "keywords": "Class MenuSettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSettings Inheritance object MenuSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSettings() public MenuSettings() Methods SaveControlsIfLoaded() public static void SaveControlsIfLoaded() SaveGraphicsIfLoaded() public static void SaveGraphicsIfLoaded() SaveOptionsIfLoaded() public static void SaveOptionsIfLoaded() load() public static void load() save() public static void save()"
  },
  "api/SDG.Unturned.MenuStatusData.html": {
    "href": "api/SDG.Unturned.MenuStatusData.html",
    "title": "Class MenuStatusData | Unturned Analyse Doc",
    "keywords": "Class MenuStatusData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuStatusData Inheritance object MenuStatusData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuStatusData() public MenuStatusData() Fields PromoEnd UTC when to stop loading promo level. public DateTime PromoEnd Field Value DateTime PromoLevel Name of promo level to additively load. public string PromoLevel Field Value string PromoStart UTC when to begin load promo level. public DateTime PromoStart Field Value DateTime"
  },
  "api/SDG.Unturned.MenuSurvivorsAppearanceUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsAppearanceUI.html",
    "title": "Class MenuSurvivorsAppearanceUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsAppearanceUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsAppearanceUI Inheritance object MenuSurvivorsAppearanceUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsAppearanceUI() public MenuSurvivorsAppearanceUI() Fields active public static bool active Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuSurvivorsCharacterUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsCharacterUI.html",
    "title": "Class MenuSurvivorsCharacterUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsCharacterUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsCharacterUI Inheritance object MenuSurvivorsCharacterUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsCharacterUI() public MenuSurvivorsCharacterUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuSurvivorsClothing.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsClothing.html",
    "title": "Class MenuSurvivorsClothing | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsClothing Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsClothing : MonoBehaviour Inheritance object MenuSurvivorsClothing Constructors MenuSurvivorsClothing() public MenuSurvivorsClothing()"
  },
  "api/SDG.Unturned.MenuSurvivorsClothingBoxUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsClothingBoxUI.html",
    "title": "Class MenuSurvivorsClothingBoxUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsClothingBoxUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsClothingBoxUI Inheritance object MenuSurvivorsClothingBoxUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsClothingBoxUI() public MenuSurvivorsClothingBoxUI() Fields active public static bool active Field Value bool isUnboxing public static bool isUnboxing Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open() skipAnimation() Skip unboxing animation. Initial call rotates to just before the item, next call skips entirely. public static void skipAnimation() update() public static void update() viewItem(int, ushort, ulong) public static void viewItem(int newItem, ushort newQuantity, ulong newInstance) Parameters newItem int newQuantity ushort newInstance ulong"
  },
  "api/SDG.Unturned.MenuSurvivorsClothingDeleteUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsClothingDeleteUI.html",
    "title": "Class MenuSurvivorsClothingDeleteUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsClothingDeleteUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsClothingDeleteUI Inheritance object MenuSurvivorsClothingDeleteUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsClothingDeleteUI() public MenuSurvivorsClothingDeleteUI() Fields active public static bool active Field Value bool Methods applyTagTool(int, ulong, ulong) public static void applyTagTool(int itemID, ulong targetID, ulong toolID) Parameters itemID int targetID ulong toolID ulong close() public static void close() open() public static void open() salvageItem(int, ulong) Note: inventory service does not support exchanging multiple items simultaneously. public static void salvageItem(int itemID, ulong instanceID) Parameters itemID int instanceID ulong viewItem(int, ulong, ushort, EDeleteMode, ulong) public static void viewItem(int newItem, ulong newInstance, ushort newQuantity, EDeleteMode newMode, ulong newInstigator) Parameters newItem int newInstance ulong newQuantity ushort newMode EDeleteMode newInstigator ulong"
  },
  "api/SDG.Unturned.MenuSurvivorsClothingInspectUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsClothingInspectUI.html",
    "title": "Class MenuSurvivorsClothingInspectUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsClothingInspectUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsClothingInspectUI Inheritance object MenuSurvivorsClothingInspectUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsClothingInspectUI() public MenuSurvivorsClothingInspectUI() Fields active public static bool active Field Value bool Methods OpenPreviousMenu() public static void OpenPreviousMenu() close() public static void close() open(EMenuSurvivorsClothingInspectUIOpenContext) public static void open(EMenuSurvivorsClothingInspectUIOpenContext openContext) Parameters openContext EMenuSurvivorsClothingInspectUIOpenContext viewItem(int, ulong) public static void viewItem(int newItem, ulong newInstance) Parameters newItem int newInstance ulong"
  },
  "api/SDG.Unturned.MenuSurvivorsClothingItemUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsClothingItemUI.html",
    "title": "Class MenuSurvivorsClothingItemUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsClothingItemUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsClothingItemUI Inheritance object MenuSurvivorsClothingItemUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsClothingItemUI() public MenuSurvivorsClothingItemUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open() viewItem() public static void viewItem() viewItem(int, ushort, ulong) public static void viewItem(int newItem, ushort newQuantity, ulong newInstance) Parameters newItem int newQuantity ushort newInstance ulong"
  },
  "api/SDG.Unturned.MenuSurvivorsClothingUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsClothingUI.html",
    "title": "Class MenuSurvivorsClothingUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsClothingUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsClothingUI Inheritance object MenuSurvivorsClothingUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsClothingUI() public MenuSurvivorsClothingUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle isCrafting public static bool isCrafting Field Value bool localization public static Local localization Field Value Local Methods OnDestroy() public void OnDestroy() close() public static void close() onInventoryDropped(int, ushort, ulong) public static void onInventoryDropped(int item, ushort quantity, ulong instance) Parameters item int quantity ushort instance ulong open() public static void open() prepareForCraftResult() public static void prepareForCraftResult() setFilter(EEconFilterMode, ulong) public static void setFilter(EEconFilterMode newFilterMode, ulong newFilterInstigator) Parameters newFilterMode EEconFilterMode newFilterInstigator ulong updatePage() public static void updatePage() viewPage(int) public static void viewPage(int newPage) Parameters newPage int"
  },
  "api/SDG.Unturned.MenuSurvivorsGroupUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsGroupUI.html",
    "title": "Class MenuSurvivorsGroupUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsGroupUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsGroupUI Inheritance object MenuSurvivorsGroupUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsGroupUI() public MenuSurvivorsGroupUI() Fields active public static bool active Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuSurvivorsUI.html": {
    "href": "api/SDG.Unturned.MenuSurvivorsUI.html",
    "title": "Class MenuSurvivorsUI | Unturned Analyse Doc",
    "keywords": "Class MenuSurvivorsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuSurvivorsUI Inheritance object MenuSurvivorsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuSurvivorsUI() public MenuSurvivorsUI() Fields active public static bool active Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuTitleUI.html": {
    "href": "api/SDG.Unturned.MenuTitleUI.html",
    "title": "Class MenuTitleUI | Unturned Analyse Doc",
    "keywords": "Class MenuTitleUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuTitleUI Inheritance object MenuTitleUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuTitleUI() public MenuTitleUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuUI.html": {
    "href": "api/SDG.Unturned.MenuUI.html",
    "title": "Class MenuUI | Unturned Analyse Doc",
    "keywords": "Class MenuUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuUI : MonoBehaviour Inheritance object MenuUI Constructors MenuUI() public MenuUI() Fields container public static SleekFullscreenBox container Field Value SleekFullscreenBox window public static SleekWindow window Field Value SleekWindow Methods alert(string) public static void alert(string message) Parameters message string alert(string, ulong, int, ushort) public static void alert(string origin, ulong instanceId, int itemDefId, ushort quantity) Parameters origin string instanceId ulong itemDefId int quantity ushort alertNewItems(string, List<SteamItemDetails_t>) Open fullscreen alert showcasing newly granted items. Uses first item for title color, so items should be sorted by priority. public static void alertNewItems(string origin, List<SteamItemDetails_t> grantedItems) Parameters origin string grantedItems List<SteamItemDetails_t> alertPurchasedItems(string, List<SteamItemDetails_t>) Open fullscreen alert showcasing newly granted items. public static void alertPurchasedItems(string origin, List<SteamItemDetails_t> grantedItems) Parameters origin string grantedItems List<SteamItemDetails_t> closeAlert() public static void closeAlert() closeAll() public static void closeAll() openAlert(string, bool) public static void openAlert(string message, bool canBeDismissed = true) Parameters message string canBeDismissed bool"
  },
  "api/SDG.Unturned.MenuWorkshopEditorUI.html": {
    "href": "api/SDG.Unturned.MenuWorkshopEditorUI.html",
    "title": "Class MenuWorkshopEditorUI | Unturned Analyse Doc",
    "keywords": "Class MenuWorkshopEditorUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuWorkshopEditorUI Inheritance object MenuWorkshopEditorUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuWorkshopEditorUI() public MenuWorkshopEditorUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle Methods OnClickedBrowseFilesButton(ISleekElement) protected void OnClickedBrowseFilesButton(ISleekElement button) Parameters button ISleekElement OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuWorkshopErrorUI.html": {
    "href": "api/SDG.Unturned.MenuWorkshopErrorUI.html",
    "title": "Class MenuWorkshopErrorUI | Unturned Analyse Doc",
    "keywords": "Class MenuWorkshopErrorUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuWorkshopErrorUI Inheritance object MenuWorkshopErrorUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuWorkshopErrorUI() public MenuWorkshopErrorUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuWorkshopLocalizationUI.html": {
    "href": "api/SDG.Unturned.MenuWorkshopLocalizationUI.html",
    "title": "Class MenuWorkshopLocalizationUI | Unturned Analyse Doc",
    "keywords": "Class MenuWorkshopLocalizationUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuWorkshopLocalizationUI Inheritance object MenuWorkshopLocalizationUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuWorkshopLocalizationUI() public MenuWorkshopLocalizationUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuWorkshopSpawnsUI.html": {
    "href": "api/SDG.Unturned.MenuWorkshopSpawnsUI.html",
    "title": "Class MenuWorkshopSpawnsUI | Unturned Analyse Doc",
    "keywords": "Class MenuWorkshopSpawnsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuWorkshopSpawnsUI Inheritance object MenuWorkshopSpawnsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuWorkshopSpawnsUI() public MenuWorkshopSpawnsUI() Fields active public static bool active Field Value bool Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuWorkshopSubmitUI.html": {
    "href": "api/SDG.Unturned.MenuWorkshopSubmitUI.html",
    "title": "Class MenuWorkshopSubmitUI | Unturned Analyse Doc",
    "keywords": "Class MenuWorkshopSubmitUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuWorkshopSubmitUI Inheritance object MenuWorkshopSubmitUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuWorkshopSubmitUI() public MenuWorkshopSubmitUI() Fields active public static bool active Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.MenuWorkshopSubscriptionsUI.html": {
    "href": "api/SDG.Unturned.MenuWorkshopSubscriptionsUI.html",
    "title": "Class MenuWorkshopSubscriptionsUI | Unturned Analyse Doc",
    "keywords": "Class MenuWorkshopSubscriptionsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll Repurposed from the Modules UI because it was unused. public class MenuWorkshopSubscriptionsUI Inheritance object MenuWorkshopSubscriptionsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuWorkshopSubscriptionsUI() public MenuWorkshopSubscriptionsUI() Fields active public static bool active Field Value bool Properties instance public static MenuWorkshopSubscriptionsUI instance { get; } Property Value MenuWorkshopSubscriptionsUI localization public static Local localization { get; } Property Value Local Methods close() public void close() open() public void open()"
  },
  "api/SDG.Unturned.MenuWorkshopUI.html": {
    "href": "api/SDG.Unturned.MenuWorkshopUI.html",
    "title": "Class MenuWorkshopUI | Unturned Analyse Doc",
    "keywords": "Class MenuWorkshopUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MenuWorkshopUI Inheritance object MenuWorkshopUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MenuWorkshopUI() public MenuWorkshopUI() Fields active public static bool active Field Value bool Methods OnDestroy() public void OnDestroy() close() public static void close() open() public static void open() toggleIconTools() public static void toggleIconTools()"
  },
  "api/SDG.Unturned.Messager.html": {
    "href": "api/SDG.Unturned.Messager.html",
    "title": "Class Messager | Unturned Analyse Doc",
    "keywords": "Class Messager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Messager : MonoBehaviour Inheritance object Messager Constructors Messager() public Messager() Fields message public EPlayerMessage message Field Value EPlayerMessage"
  },
  "api/SDG.Unturned.ModeConfigData.html": {
    "href": "api/SDG.Unturned.ModeConfigData.html",
    "title": "Class ModeConfigData | Unturned Analyse Doc",
    "keywords": "Class ModeConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ModeConfigData Inheritance object ModeConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ModeConfigData(EGameMode) public ModeConfigData(EGameMode mode) Parameters mode EGameMode Fields Animals public AnimalsConfigData Animals Field Value AnimalsConfigData Barricades public BarricadesConfigData Barricades Field Value BarricadesConfigData Events public EventsConfigData Events Field Value EventsConfigData Gameplay public GameplayConfigData Gameplay Field Value GameplayConfigData Items public ItemsConfigData Items Field Value ItemsConfigData Objects public ObjectConfigData Objects Field Value ObjectConfigData Players public PlayersConfigData Players Field Value PlayersConfigData Structures public StructuresConfigData Structures Field Value StructuresConfigData Vehicles public VehiclesConfigData Vehicles Field Value VehiclesConfigData Zombies public ZombiesConfigData Zombies Field Value ZombiesConfigData Methods InitSingleplayerDefaults() public void InitSingleplayerDefaults()"
  },
  "api/SDG.Unturned.ModifySignRequestHandler.html": {
    "href": "api/SDG.Unturned.ModifySignRequestHandler.html",
    "title": "Delegate ModifySignRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate ModifySignRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ModifySignRequestHandler(CSteamID instigator, InteractableSign sign, ref string text, ref bool shouldAllow) Parameters instigator CSteamID sign InteractableSign text string shouldAllow bool Constructors ModifySignRequestHandler(object, IntPtr) public ModifySignRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, InteractableSign, ref string, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigator, InteractableSign sign, ref string text, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigator CSteamID sign InteractableSign text string shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref string, ref bool, IAsyncResult) public virtual void EndInvoke(ref string text, ref bool shouldAllow, IAsyncResult result) Parameters text string shouldAllow bool result IAsyncResult Invoke(CSteamID, InteractableSign, ref string, ref bool) public virtual void Invoke(CSteamID instigator, InteractableSign sign, ref string text, ref bool shouldAllow) Parameters instigator CSteamID sign InteractableSign text string shouldAllow bool"
  },
  "api/SDG.Unturned.MoonUpdated.html": {
    "href": "api/SDG.Unturned.MoonUpdated.html",
    "title": "Delegate MoonUpdated | Unturned Analyse Doc",
    "keywords": "Delegate MoonUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void MoonUpdated(bool isFullMoon) Parameters isFullMoon bool Constructors MoonUpdated(object, IntPtr) public MoonUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isFullMoon, AsyncCallback callback, object @object) Parameters isFullMoon bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isFullMoon) Parameters isFullMoon bool"
  },
  "api/SDG.Unturned.MythicAsset.html": {
    "href": "api/SDG.Unturned.MythicAsset.html",
    "title": "Class MythicAsset | Unturned Analyse Doc",
    "keywords": "Class MythicAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class MythicAsset : Asset, IAssetErrorContext Inheritance object Asset MythicAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MythicAsset() public MythicAsset() Fields _systemArea protected GameObject _systemArea Field Value GameObject _systemFirst protected GameObject _systemFirst Field Value GameObject _systemHook protected GameObject _systemHook Field Value GameObject _systemThird protected GameObject _systemThird Field Value GameObject Properties assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType particleTagName public string particleTagName { get; protected set; } Property Value string systemArea public GameObject systemArea { get; } Property Value GameObject systemFirst public GameObject systemFirst { get; } Property Value GameObject systemHook public GameObject systemHook { get; } Property Value GameObject systemThird public GameObject systemThird { get; } Property Value GameObject Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.MythicalEffectController.html": {
    "href": "api/SDG.Unturned.MythicalEffectController.html",
    "title": "Class MythicalEffectController | Unturned Analyse Doc",
    "keywords": "Class MythicalEffectController Namespace SDG.Unturned Assembly Assembly-CSharp.dll Manages lifetime and attachment of a mythical effect. Added by ApplyMythicalEffect(Transform, ushort, EEffectType). Was called MythicLocker with a paired MythicLockee prior to 2024-06-11. public class MythicalEffectController : MonoBehaviour Inheritance object MythicalEffectController Constructors MythicalEffectController() public MythicalEffectController() Fields systemPrefab public GameObject systemPrefab Field Value GameObject systemTransform public Transform systemTransform Field Value Transform Properties IsMythicalEffectEnabled public bool IsMythicalEffectEnabled { get; set; } Property Value bool"
  },
  "api/SDG.Unturned.NPCAchievementReward.html": {
    "href": "api/SDG.Unturned.NPCAchievementReward.html",
    "title": "Class NPCAchievementReward | Unturned Analyse Doc",
    "keywords": "Class NPCAchievementReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCAchievementReward : INPCReward Inheritance object INPCReward NPCAchievementReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCAchievementReward(string, string) public NPCAchievementReward(string newID, string newText) Parameters newID string newText string Properties id public string id { get; protected set; } Property Value string Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCAnimalKillsCondition.html": {
    "href": "api/SDG.Unturned.NPCAnimalKillsCondition.html",
    "title": "Class NPCAnimalKillsCondition | Unturned Analyse Doc",
    "keywords": "Class NPCAnimalKillsCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCAnimalKillsCondition : INPCCondition Inheritance object INPCCondition NPCAnimalKillsCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCAnimalKillsCondition(ushort, short, ushort, string, bool) public NPCAnimalKillsCondition(ushort newID, short newValue, ushort newAnimal, string newText, bool newShouldReset) Parameters newID ushort newValue short newAnimal ushort newText string newShouldReset bool Properties animal public ushort animal { get; protected set; } Property Value ushort id public ushort id { get; protected set; } Property Value ushort value public short value { get; protected set; } Property Value short Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCAssetOutfit.html": {
    "href": "api/SDG.Unturned.NPCAssetOutfit.html",
    "title": "Class NPCAssetOutfit | Unturned Analyse Doc",
    "keywords": "Class NPCAssetOutfit Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCAssetOutfit Inheritance object NPCAssetOutfit Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCAssetOutfit(DatDictionary, ENPCHoliday) public NPCAssetOutfit(DatDictionary data, ENPCHoliday holiday) Parameters data DatDictionary holiday ENPCHoliday Fields backpackGuid public Guid backpackGuid Field Value Guid glassesGuid public Guid glassesGuid Field Value Guid hatGuid public Guid hatGuid Field Value Guid maskGuid public Guid maskGuid Field Value Guid pantsGuid public Guid pantsGuid Field Value Guid shirtGuid public Guid shirtGuid Field Value Guid vestGuid public Guid vestGuid Field Value Guid Properties backpack [Obsolete] public ushort backpack { get; protected set; } Property Value ushort glasses [Obsolete] public ushort glasses { get; protected set; } Property Value ushort hat [Obsolete] public ushort hat { get; protected set; } Property Value ushort mask [Obsolete] public ushort mask { get; protected set; } Property Value ushort pants [Obsolete] public ushort pants { get; protected set; } Property Value ushort shirt [Obsolete] public ushort shirt { get; protected set; } Property Value ushort vest [Obsolete] public ushort vest { get; protected set; } Property Value ushort"
  },
  "api/SDG.Unturned.NPCBoolFlagCondition.html": {
    "href": "api/SDG.Unturned.NPCBoolFlagCondition.html",
    "title": "Class NPCBoolFlagCondition | Unturned Analyse Doc",
    "keywords": "Class NPCBoolFlagCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCBoolFlagCondition : NPCFlagCondition Inheritance object INPCCondition NPCLogicCondition NPCFlagCondition NPCBoolFlagCondition Inherited Members NPCFlagCondition.isAssociatedWithFlag(ushort) NPCFlagCondition.id NPCFlagCondition.allowUnset NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCBoolFlagCondition(ushort, bool, bool, ENPCLogicType, string, bool) public NPCBoolFlagCondition(ushort newID, bool newValue, bool newAllowUnset, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newID ushort newValue bool newAllowUnset bool newLogicType ENPCLogicType newText string newShouldReset bool Properties value public bool value { get; protected set; } Property Value bool Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCBoolFlagReward.html": {
    "href": "api/SDG.Unturned.NPCBoolFlagReward.html",
    "title": "Class NPCBoolFlagReward | Unturned Analyse Doc",
    "keywords": "Class NPCBoolFlagReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCBoolFlagReward : INPCReward Inheritance object INPCReward NPCBoolFlagReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCBoolFlagReward(ushort, bool, string) public NPCBoolFlagReward(ushort newID, bool newValue, string newText) Parameters newID ushort newValue bool newText string Properties id public ushort id { get; protected set; } Property Value ushort value public bool value { get; protected set; } Property Value bool Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCCompareFlagsCondition.html": {
    "href": "api/SDG.Unturned.NPCCompareFlagsCondition.html",
    "title": "Class NPCCompareFlagsCondition | Unturned Analyse Doc",
    "keywords": "Class NPCCompareFlagsCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCCompareFlagsCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCCompareFlagsCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCCompareFlagsCondition(ushort, ushort, bool, bool, ENPCLogicType, string, bool) public NPCCompareFlagsCondition(ushort newFlag_A_ID, ushort newFlag_B_ID, bool newAllowFlag_A_Unset, bool newAllowFlag_B_Unset, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newFlag_A_ID ushort newFlag_B_ID ushort newAllowFlag_A_Unset bool newAllowFlag_B_Unset bool newLogicType ENPCLogicType newText string newShouldReset bool Fields flag_B_ID public ushort flag_B_ID Field Value ushort Properties allowFlag_A_Unset public bool allowFlag_A_Unset { get; protected set; } Property Value bool allowFlag_B_Unset public bool allowFlag_B_Unset { get; protected set; } Property Value bool flag_A_ID public ushort flag_A_ID { get; protected set; } Property Value ushort Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCCurrencyCondition.html": {
    "href": "api/SDG.Unturned.NPCCurrencyCondition.html",
    "title": "Class NPCCurrencyCondition | Unturned Analyse Doc",
    "keywords": "Class NPCCurrencyCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCCurrencyCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCCurrencyCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCCurrencyCondition(AssetReference<ItemCurrencyAsset>, uint, ENPCLogicType, string, bool) public NPCCurrencyCondition(AssetReference<ItemCurrencyAsset> newCurrency, uint newValue, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newCurrency AssetReference<ItemCurrencyAsset> newValue uint newLogicType ENPCLogicType newText string newShouldReset bool Properties currency public AssetReference<ItemCurrencyAsset> currency { get; protected set; } Property Value AssetReference<ItemCurrencyAsset> value public uint value { get; protected set; } Property Value uint Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCCurrencyReward.html": {
    "href": "api/SDG.Unturned.NPCCurrencyReward.html",
    "title": "Class NPCCurrencyReward | Unturned Analyse Doc",
    "keywords": "Class NPCCurrencyReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCCurrencyReward : INPCReward Inheritance object INPCReward NPCCurrencyReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCCurrencyReward(AssetReference<ItemCurrencyAsset>, uint, string) public NPCCurrencyReward(AssetReference<ItemCurrencyAsset> newCurrency, uint newValue, string newText) Parameters newCurrency AssetReference<ItemCurrencyAsset> newValue uint newText string Properties currency public AssetReference<ItemCurrencyAsset> currency { get; protected set; } Property Value AssetReference<ItemCurrencyAsset> value public uint value { get; protected set; } Property Value uint Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCCutsceneModeReward.html": {
    "href": "api/SDG.Unturned.NPCCutsceneModeReward.html",
    "title": "Class NPCCutsceneModeReward | Unturned Analyse Doc",
    "keywords": "Class NPCCutsceneModeReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCCutsceneModeReward : INPCReward Inheritance object INPCReward NPCCutsceneModeReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCCutsceneModeReward(bool, string) public NPCCutsceneModeReward(bool newValue, string newText) Parameters newValue bool newText string Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCDateCounterCondition.html": {
    "href": "api/SDG.Unturned.NPCDateCounterCondition.html",
    "title": "Class NPCDateCounterCondition | Unturned Analyse Doc",
    "keywords": "Class NPCDateCounterCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCDateCounterCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCDateCounterCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCDateCounterCondition(long, long, ENPCLogicType, string, bool) public NPCDateCounterCondition(long newValue, long newDivisor, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newValue long newDivisor long newLogicType ENPCLogicType newText string newShouldReset bool Fields divisor protected long divisor Field Value long value protected long value Field Value long Methods isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCEffectReward.html": {
    "href": "api/SDG.Unturned.NPCEffectReward.html",
    "title": "Class NPCEffectReward | Unturned Analyse Doc",
    "keywords": "Class NPCEffectReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCEffectReward : INPCReward Inheritance object INPCReward NPCEffectReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCEffectReward(AssetReference<EffectAsset>, string, bool, float, string) public NPCEffectReward(AssetReference<EffectAsset> newAssetRef, string newSpawnpoint, bool newIsReliable, float newRelevantDistance, string newText) Parameters newAssetRef AssetReference<EffectAsset> newSpawnpoint string newIsReliable bool newRelevantDistance float newText string Fields IsReliable Should the RPC be called in reliable mode? Unreliable effects might not be received. public bool IsReliable Field Value bool OverrideRelevantDistance Applied if greater than zero. Defaults to 128. public float OverrideRelevantDistance Field Value float Properties AssetRef public AssetReference<EffectAsset> AssetRef { get; protected set; } Property Value AssetReference<EffectAsset> Spawnpoint public string Spawnpoint { get; protected set; } Property Value string Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCEventHandler.html": {
    "href": "api/SDG.Unturned.NPCEventHandler.html",
    "title": "Delegate NPCEventHandler | Unturned Analyse Doc",
    "keywords": "Delegate NPCEventHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void NPCEventHandler(Player instigatingPlayer, string eventId) Parameters instigatingPlayer Player eventId string Constructors NPCEventHandler(object, IntPtr) public NPCEventHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player instigatingPlayer, string eventId, AsyncCallback callback, object @object) Parameters instigatingPlayer Player eventId string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, string) public virtual void Invoke(Player instigatingPlayer, string eventId) Parameters instigatingPlayer Player eventId string"
  },
  "api/SDG.Unturned.NPCEventManager.html": {
    "href": "api/SDG.Unturned.NPCEventManager.html",
    "title": "Class NPCEventManager | Unturned Analyse Doc",
    "keywords": "Class NPCEventManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows NPCs to trigger plugin or script events. public class NPCEventManager Inheritance object NPCEventManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCEventManager() public NPCEventManager() Methods ReceiveBroadcast(byte, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveBroadcast(byte channelId, string eventId) Parameters channelId byte eventId string broadcastEvent(Player, string) public static void broadcastEvent(Player instigatingPlayer, string eventId) Parameters instigatingPlayer Player eventId string broadcastEvent(Player, string, bool) public static void broadcastEvent(Player instigatingPlayer, string eventId, bool shouldReplicate = false) Parameters instigatingPlayer Player eventId string shouldReplicate bool triggerEventTriggered(string) [Obsolete(\"broadcastEvent provides the instigating player.\")] public static void triggerEventTriggered(string id) Parameters id string Events eventTriggered [Obsolete(\"onEvent provides the instigating player.\")] public static event NPCEventTriggeredHandler eventTriggered Event Type NPCEventTriggeredHandler onEvent instigatingPlayer can be null. For example, if instigated by NpcGlobalEventMessenger. public static event NPCEventHandler onEvent Event Type NPCEventHandler"
  },
  "api/SDG.Unturned.NPCEventManager_NetMethods.html": {
    "href": "api/SDG.Unturned.NPCEventManager_NetMethods.html",
    "title": "Class NPCEventManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class NPCEventManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(NPCEventManager))] public static class NPCEventManager_NetMethods Inheritance object NPCEventManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveBroadcast_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBroadcast\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBroadcast_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveBroadcast_Write(NetPakWriter, byte, string) [NetInvokableGeneratedMethod(\"ReceiveBroadcast\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBroadcast_Write(NetPakWriter writer, byte channelId, string eventId) Parameters writer NetPakWriter channelId byte eventId string"
  },
  "api/SDG.Unturned.NPCEventReward.html": {
    "href": "api/SDG.Unturned.NPCEventReward.html",
    "title": "Class NPCEventReward | Unturned Analyse Doc",
    "keywords": "Class NPCEventReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCEventReward : INPCReward Inheritance object INPCReward NPCEventReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCEventReward(string, string) public NPCEventReward(string newID, string newText) Parameters newID string newText string Properties id public string id { get; protected set; } Property Value string Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCEventTriggeredHandler.html": {
    "href": "api/SDG.Unturned.NPCEventTriggeredHandler.html",
    "title": "Delegate NPCEventTriggeredHandler | Unturned Analyse Doc",
    "keywords": "Delegate NPCEventTriggeredHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete(\"NPCEventHandler provides the instigating player.\")] public delegate void NPCEventTriggeredHandler(string id) Parameters id string Constructors NPCEventTriggeredHandler(object, IntPtr) public NPCEventTriggeredHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(string id, AsyncCallback callback, object @object) Parameters id string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(string) public virtual void Invoke(string id) Parameters id string"
  },
  "api/SDG.Unturned.NPCExperienceCondition.html": {
    "href": "api/SDG.Unturned.NPCExperienceCondition.html",
    "title": "Class NPCExperienceCondition | Unturned Analyse Doc",
    "keywords": "Class NPCExperienceCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCExperienceCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCExperienceCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCExperienceCondition(uint, ENPCLogicType, string, bool) public NPCExperienceCondition(uint newExperience, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newExperience uint newLogicType ENPCLogicType newText string newShouldReset bool Properties experience public uint experience { get; protected set; } Property Value uint Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCExperienceReward.html": {
    "href": "api/SDG.Unturned.NPCExperienceReward.html",
    "title": "Class NPCExperienceReward | Unturned Analyse Doc",
    "keywords": "Class NPCExperienceReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCExperienceReward : INPCReward Inheritance object INPCReward NPCExperienceReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCExperienceReward(uint, string) public NPCExperienceReward(uint newValue, string newText) Parameters newValue uint newText string Properties value public uint value { get; protected set; } Property Value uint Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCFlagCondition.html": {
    "href": "api/SDG.Unturned.NPCFlagCondition.html",
    "title": "Class NPCFlagCondition | Unturned Analyse Doc",
    "keywords": "Class NPCFlagCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCFlagCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCFlagCondition Derived NPCBoolFlagCondition NPCShortFlagCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.isConditionMet(Player) INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCFlagCondition(ushort, bool, ENPCLogicType, string, bool) public NPCFlagCondition(ushort newID, bool newAllowUnset, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newID ushort newAllowUnset bool newLogicType ENPCLogicType newText string newShouldReset bool Properties allowUnset public bool allowUnset { get; protected set; } Property Value bool id public ushort id { get; protected set; } Property Value ushort Methods isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool"
  },
  "api/SDG.Unturned.NPCFlagMathReward.html": {
    "href": "api/SDG.Unturned.NPCFlagMathReward.html",
    "title": "Class NPCFlagMathReward | Unturned Analyse Doc",
    "keywords": "Class NPCFlagMathReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCFlagMathReward : INPCReward Inheritance object INPCReward NPCFlagMathReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCFlagMathReward(ushort, ushort, short, ENPCOperationType, string) public NPCFlagMathReward(ushort newFlag_A_ID, ushort newFlag_B_ID, short newFlag_B_Value, ENPCOperationType newOperationType, string newText) Parameters newFlag_A_ID ushort newFlag_B_ID ushort newFlag_B_Value short newOperationType ENPCOperationType newText string Properties flag_A_ID public ushort flag_A_ID { get; protected set; } Property Value ushort flag_B_ID public ushort flag_B_ID { get; protected set; } Property Value ushort operationType public ENPCOperationType operationType { get; protected set; } Property Value ENPCOperationType Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCHintReward.html": {
    "href": "api/SDG.Unturned.NPCHintReward.html",
    "title": "Class NPCHintReward | Unturned Analyse Doc",
    "keywords": "Class NPCHintReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCHintReward : INPCReward Inheritance object INPCReward NPCHintReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCHintReward(float, string) public NPCHintReward(float newDuration, string newText) Parameters newDuration float newText string Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCHolidayCondition.html": {
    "href": "api/SDG.Unturned.NPCHolidayCondition.html",
    "title": "Class NPCHolidayCondition | Unturned Analyse Doc",
    "keywords": "Class NPCHolidayCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCHolidayCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCHolidayCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCHolidayCondition(ENPCHoliday, ENPCLogicType) public NPCHolidayCondition(ENPCHoliday newHoliday, ENPCLogicType newLogicType) Parameters newHoliday ENPCHoliday newLogicType ENPCLogicType Properties holiday public ENPCHoliday holiday { get; protected set; } Property Value ENPCHoliday Methods isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCHordeKillsCondition.html": {
    "href": "api/SDG.Unturned.NPCHordeKillsCondition.html",
    "title": "Class NPCHordeKillsCondition | Unturned Analyse Doc",
    "keywords": "Class NPCHordeKillsCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCHordeKillsCondition : INPCCondition Inheritance object INPCCondition NPCHordeKillsCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCHordeKillsCondition(ushort, short, byte, string, bool) public NPCHordeKillsCondition(ushort newID, short newValue, byte newNav, string newText, bool newShouldReset) Parameters newID ushort newValue short newNav byte newText string newShouldReset bool Properties id public ushort id { get; protected set; } Property Value ushort nav public byte nav { get; protected set; } Property Value byte value public short value { get; protected set; } Property Value short Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCIsFullMoonCondition.html": {
    "href": "api/SDG.Unturned.NPCIsFullMoonCondition.html",
    "title": "Class NPCIsFullMoonCondition | Unturned Analyse Doc",
    "keywords": "Class NPCIsFullMoonCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCIsFullMoonCondition : INPCCondition Inheritance object INPCCondition NPCIsFullMoonCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCIsFullMoonCondition(bool, string) public NPCIsFullMoonCondition(bool newValue, string newText) Parameters newValue bool newText string Properties value public bool value { get; protected set; } Property Value bool Methods isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCItemCondition.html": {
    "href": "api/SDG.Unturned.NPCItemCondition.html",
    "title": "Class NPCItemCondition | Unturned Analyse Doc",
    "keywords": "Class NPCItemCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCItemCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCItemCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCItemCondition(Guid, ushort, ushort, ENPCLogicType, string, bool) public NPCItemCondition(Guid newItemGuid, ushort newID, ushort newAmount, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newItemGuid Guid newID ushort newAmount ushort newLogicType ENPCLogicType newText string newShouldReset bool Fields itemGuid public Guid itemGuid Field Value Guid Properties amount public ushort amount { get; protected set; } Property Value ushort id [Obsolete] public ushort id { get; protected set; } Property Value ushort Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player GetItemAsset() public ItemAsset GetItemAsset() Returns ItemAsset createUI(Player, Texture2D) public override ISleekElement createUI(Player player, Texture2D icon) Parameters player Player icon Texture2D Returns ISleekElement formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCItemReward.html": {
    "href": "api/SDG.Unturned.NPCItemReward.html",
    "title": "Class NPCItemReward | Unturned Analyse Doc",
    "keywords": "Class NPCItemReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCItemReward : INPCReward Inheritance object INPCReward NPCItemReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCItemReward(Guid, ushort, byte, bool, int, int, int, int, int, int, EItemOrigin, string) public NPCItemReward(Guid newItemGuid, ushort newID, byte newAmount, bool newShouldAutoEquip, int newSight, int newTactical, int newGrip, int newBarrel, int newMagazine, int newAmmo, EItemOrigin origin, string newText) Parameters newItemGuid Guid newID ushort newAmount byte newShouldAutoEquip bool newSight int newTactical int newGrip int newBarrel int newMagazine int newAmmo int origin EItemOrigin newText string Fields itemGuid public Guid itemGuid Field Value Guid Properties ammo public int ammo { get; protected set; } Property Value int amount public byte amount { get; protected set; } Property Value byte barrel public int barrel { get; protected set; } Property Value int grip public int grip { get; protected set; } Property Value int id [Obsolete] public ushort id { get; protected set; } Property Value ushort magazine public int magazine { get; protected set; } Property Value int origin public EItemOrigin origin { get; protected set; } Property Value EItemOrigin shouldAutoEquip public bool shouldAutoEquip { get; protected set; } Property Value bool sight public int sight { get; protected set; } Property Value int tactical public int tactical { get; protected set; } Property Value int Methods GetItemAsset() public ItemAsset GetItemAsset() Returns ItemAsset GrantReward(Player) public override void GrantReward(Player player) Parameters player Player createUI(Player) public override ISleekElement createUI(Player player) Parameters player Player Returns ISleekElement formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCLogicCondition.html": {
    "href": "api/SDG.Unturned.NPCLogicCondition.html",
    "title": "Class NPCLogicCondition | Unturned Analyse Doc",
    "keywords": "Class NPCLogicCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCLogicCondition : INPCCondition Inheritance object INPCCondition NPCLogicCondition Derived NPCCompareFlagsCondition NPCCurrencyCondition NPCDateCounterCondition NPCExperienceCondition NPCFlagCondition NPCHolidayCondition NPCItemCondition NPCPlayerLifeFoodCondition NPCPlayerLifeHealthCondition NPCPlayerLifeStaminaCondition NPCPlayerLifeVirusCondition NPCPlayerLifeWaterCondition NPCQuestCondition NPCReputationCondition NPCSkillsetCondition NPCTimeOfDayCondition NPCWeatherBlendAlphaCondition NPCWeatherStatusCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.isConditionMet(Player) INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCLogicCondition(ENPCLogicType, string, bool) public NPCLogicCondition(ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newLogicType ENPCLogicType newText string newShouldReset bool Properties logicType public ENPCLogicType logicType { get; protected set; } Property Value ENPCLogicType Methods doesLogicPass<T>(T, T) protected bool doesLogicPass<T>(T a, T b) where T : IComparable Parameters a T b T Returns bool Type Parameters T"
  },
  "api/SDG.Unturned.NPCObjectKillsCondition.html": {
    "href": "api/SDG.Unturned.NPCObjectKillsCondition.html",
    "title": "Class NPCObjectKillsCondition | Unturned Analyse Doc",
    "keywords": "Class NPCObjectKillsCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCObjectKillsCondition : INPCCondition Inheritance object INPCCondition NPCObjectKillsCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCObjectKillsCondition(ushort, short, Guid, byte, string, bool) public NPCObjectKillsCondition(ushort newID, short newValue, Guid newObjectGuid, byte newNav, string newText, bool newShouldReset) Parameters newID ushort newValue short newObjectGuid Guid newNav byte newText string newShouldReset bool Properties id public ushort id { get; protected set; } Property Value ushort nav public byte nav { get; protected set; } Property Value byte objectGuid public Guid objectGuid { get; protected set; } Property Value Guid value public short value { get; protected set; } Property Value short Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCPlayerKillsCondition.html": {
    "href": "api/SDG.Unturned.NPCPlayerKillsCondition.html",
    "title": "Class NPCPlayerKillsCondition | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerKillsCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerKillsCondition : INPCCondition Inheritance object INPCCondition NPCPlayerKillsCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerKillsCondition(ushort, short, string, bool) public NPCPlayerKillsCondition(ushort newID, short newValue, string newText, bool newShouldReset) Parameters newID ushort newValue short newText string newShouldReset bool Properties id public ushort id { get; protected set; } Property Value ushort value public short value { get; protected set; } Property Value short Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCPlayerLifeFoodCondition.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeFoodCondition.html",
    "title": "Class NPCPlayerLifeFoodCondition | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeFoodCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeFoodCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCPlayerLifeFoodCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeFoodCondition(int, ENPCLogicType, string) public NPCPlayerLifeFoodCondition(int newFood, ENPCLogicType newLogicType, string newText) Parameters newFood int newLogicType ENPCLogicType newText string Properties food public int food { get; protected set; } Property Value int Methods formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCPlayerLifeFoodReward.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeFoodReward.html",
    "title": "Class NPCPlayerLifeFoodReward | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeFoodReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeFoodReward : INPCReward Inheritance object INPCReward NPCPlayerLifeFoodReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeFoodReward(int, string) public NPCPlayerLifeFoodReward(int newValue, string newText) Parameters newValue int newText string Properties value public int value { get; protected set; } Property Value int Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCPlayerLifeHealthCondition.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeHealthCondition.html",
    "title": "Class NPCPlayerLifeHealthCondition | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeHealthCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeHealthCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCPlayerLifeHealthCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeHealthCondition(int, ENPCLogicType, string) public NPCPlayerLifeHealthCondition(int newHealth, ENPCLogicType newLogicType, string newText) Parameters newHealth int newLogicType ENPCLogicType newText string Properties health public int health { get; protected set; } Property Value int Methods formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCPlayerLifeHealthReward.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeHealthReward.html",
    "title": "Class NPCPlayerLifeHealthReward | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeHealthReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeHealthReward : INPCReward Inheritance object INPCReward NPCPlayerLifeHealthReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeHealthReward(int, string) public NPCPlayerLifeHealthReward(int newValue, string newText) Parameters newValue int newText string Properties value public int value { get; protected set; } Property Value int Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCPlayerLifeStaminaCondition.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeStaminaCondition.html",
    "title": "Class NPCPlayerLifeStaminaCondition | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeStaminaCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeStaminaCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCPlayerLifeStaminaCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeStaminaCondition(int, ENPCLogicType, string) public NPCPlayerLifeStaminaCondition(int newStamina, ENPCLogicType newLogicType, string newText) Parameters newStamina int newLogicType ENPCLogicType newText string Properties stamina public int stamina { get; protected set; } Property Value int Methods formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCPlayerLifeStaminaReward.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeStaminaReward.html",
    "title": "Class NPCPlayerLifeStaminaReward | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeStaminaReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeStaminaReward : INPCReward Inheritance object INPCReward NPCPlayerLifeStaminaReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeStaminaReward(int, string) public NPCPlayerLifeStaminaReward(int newValue, string newText) Parameters newValue int newText string Properties value public int value { get; protected set; } Property Value int Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCPlayerLifeVirusCondition.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeVirusCondition.html",
    "title": "Class NPCPlayerLifeVirusCondition | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeVirusCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeVirusCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCPlayerLifeVirusCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeVirusCondition(int, ENPCLogicType, string) public NPCPlayerLifeVirusCondition(int newVirus, ENPCLogicType newLogicType, string newText) Parameters newVirus int newLogicType ENPCLogicType newText string Properties virus public int virus { get; protected set; } Property Value int Methods formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCPlayerLifeVirusReward.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeVirusReward.html",
    "title": "Class NPCPlayerLifeVirusReward | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeVirusReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeVirusReward : INPCReward Inheritance object INPCReward NPCPlayerLifeVirusReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeVirusReward(int, string) public NPCPlayerLifeVirusReward(int newValue, string newText) Parameters newValue int newText string Properties value public int value { get; protected set; } Property Value int Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCPlayerLifeWaterCondition.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeWaterCondition.html",
    "title": "Class NPCPlayerLifeWaterCondition | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeWaterCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeWaterCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCPlayerLifeWaterCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeWaterCondition(int, ENPCLogicType, string) public NPCPlayerLifeWaterCondition(int newWater, ENPCLogicType newLogicType, string newText) Parameters newWater int newLogicType ENPCLogicType newText string Properties water public int water { get; protected set; } Property Value int Methods formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCPlayerLifeWaterReward.html": {
    "href": "api/SDG.Unturned.NPCPlayerLifeWaterReward.html",
    "title": "Class NPCPlayerLifeWaterReward | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerLifeWaterReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerLifeWaterReward : INPCReward Inheritance object INPCReward NPCPlayerLifeWaterReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerLifeWaterReward(int, string) public NPCPlayerLifeWaterReward(int newValue, string newText) Parameters newValue int newText string Properties value public int value { get; protected set; } Property Value int Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCPlayerSpawnpointReward.html": {
    "href": "api/SDG.Unturned.NPCPlayerSpawnpointReward.html",
    "title": "Class NPCPlayerSpawnpointReward | Unturned Analyse Doc",
    "keywords": "Class NPCPlayerSpawnpointReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCPlayerSpawnpointReward : INPCReward Inheritance object INPCReward NPCPlayerSpawnpointReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCPlayerSpawnpointReward(string, string) public NPCPlayerSpawnpointReward(string newID, string newText) Parameters newID string newText string Properties id public string id { get; protected set; } Property Value string Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCQuestCondition.html": {
    "href": "api/SDG.Unturned.NPCQuestCondition.html",
    "title": "Class NPCQuestCondition | Unturned Analyse Doc",
    "keywords": "Class NPCQuestCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCQuestCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCQuestCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCQuestCondition(Guid, ushort, ENPCQuestStatus, bool, ENPCLogicType, string, bool) public NPCQuestCondition(Guid newQuestGuid, ushort newID, ENPCQuestStatus newStatus, bool newIgnoreNPC, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newQuestGuid Guid newID ushort newStatus ENPCQuestStatus newIgnoreNPC bool newLogicType ENPCLogicType newText string newShouldReset bool Properties id [Obsolete] public ushort id { get; protected set; } Property Value ushort ignoreNPC public bool ignoreNPC { get; protected set; } Property Value bool questGuid public Guid questGuid { get; } Property Value Guid status public ENPCQuestStatus status { get; protected set; } Property Value ENPCQuestStatus Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player GetQuestAsset() public QuestAsset GetQuestAsset() Returns QuestAsset isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCQuestReward.html": {
    "href": "api/SDG.Unturned.NPCQuestReward.html",
    "title": "Class NPCQuestReward | Unturned Analyse Doc",
    "keywords": "Class NPCQuestReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCQuestReward : INPCReward Inheritance object INPCReward NPCQuestReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCQuestReward(Guid, ushort, string) public NPCQuestReward(Guid newQuestGuid, ushort newID, string newText) Parameters newQuestGuid Guid newID ushort newText string Properties id [Obsolete] public ushort id { get; protected set; } Property Value ushort questGuid public Guid questGuid { get; } Property Value Guid Methods GetQuestAsset() public QuestAsset GetQuestAsset() Returns QuestAsset GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCRandomItemReward.html": {
    "href": "api/SDG.Unturned.NPCRandomItemReward.html",
    "title": "Class NPCRandomItemReward | Unturned Analyse Doc",
    "keywords": "Class NPCRandomItemReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCRandomItemReward : INPCReward Inheritance object INPCReward NPCRandomItemReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCRandomItemReward(ushort, byte, bool, EItemOrigin, string) public NPCRandomItemReward(ushort newID, byte newAmount, bool newShouldAutoEquip, EItemOrigin origin, string newText) Parameters newID ushort newAmount byte newShouldAutoEquip bool origin EItemOrigin newText string Properties amount public byte amount { get; protected set; } Property Value byte id public ushort id { get; protected set; } Property Value ushort origin public EItemOrigin origin { get; protected set; } Property Value EItemOrigin shouldAutoEquip public bool shouldAutoEquip { get; protected set; } Property Value bool Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCRandomShortFlagReward.html": {
    "href": "api/SDG.Unturned.NPCRandomShortFlagReward.html",
    "title": "Class NPCRandomShortFlagReward | Unturned Analyse Doc",
    "keywords": "Class NPCRandomShortFlagReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCRandomShortFlagReward : NPCShortFlagReward Inheritance object INPCReward NPCShortFlagReward NPCRandomShortFlagReward Inherited Members NPCShortFlagReward.GrantReward(Player) NPCShortFlagReward.id NPCShortFlagReward.modificationType INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCRandomShortFlagReward(ushort, short, short, ENPCModificationType, string) public NPCRandomShortFlagReward(ushort newID, short newMinValue, short newMaxValue, ENPCModificationType newModificationType, string newText) Parameters newID ushort newMinValue short newMaxValue short newModificationType ENPCModificationType newText string Properties maxValue public short maxValue { get; protected set; } Property Value short minValue public short minValue { get; protected set; } Property Value short value public override short value { get; protected set; } Property Value short"
  },
  "api/SDG.Unturned.NPCReputationCondition.html": {
    "href": "api/SDG.Unturned.NPCReputationCondition.html",
    "title": "Class NPCReputationCondition | Unturned Analyse Doc",
    "keywords": "Class NPCReputationCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCReputationCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCReputationCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCReputationCondition(int, ENPCLogicType, string) public NPCReputationCondition(int newReputation, ENPCLogicType newLogicType, string newText) Parameters newReputation int newLogicType ENPCLogicType newText string Properties reputation public int reputation { get; protected set; } Property Value int Methods formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCReputationReward.html": {
    "href": "api/SDG.Unturned.NPCReputationReward.html",
    "title": "Class NPCReputationReward | Unturned Analyse Doc",
    "keywords": "Class NPCReputationReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCReputationReward : INPCReward Inheritance object INPCReward NPCReputationReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCReputationReward(int, string) public NPCReputationReward(int newValue, string newText) Parameters newValue int newText string Properties value public int value { get; protected set; } Property Value int Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCRewardsAsset.html": {
    "href": "api/SDG.Unturned.NPCRewardsAsset.html",
    "title": "Class NPCRewardsAsset | Unturned Analyse Doc",
    "keywords": "Class NPCRewardsAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCRewardsAsset : Asset, IAssetErrorContext Inheritance object Asset NPCRewardsAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCRewardsAsset() public NPCRewardsAsset() Properties conditions public INPCCondition[] conditions { get; } Property Value INPCCondition[] Methods ApplyConditions(Player) public void ApplyConditions(Player player) Parameters player Player AreConditionsMet(Player) public bool AreConditionsMet(Player player) Parameters player Player Returns bool GetTypeFriendlyName() Remove \"Asset\" suffix and convert to title case. public override string GetTypeFriendlyName() Returns string GrantRewards(Player) public void GrantRewards(Player player) Parameters player Player PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.NPCRewardsList.html": {
    "href": "api/SDG.Unturned.NPCRewardsList.html",
    "title": "Struct NPCRewardsList | Unturned Analyse Doc",
    "keywords": "Struct NPCRewardsList Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct NPCRewardsList Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Methods DebugDumpToString() public string DebugDumpToString() Returns string DebugDumpToStringBuilder(StringBuilder) public void DebugDumpToStringBuilder(StringBuilder output) Parameters output StringBuilder Grant(Player) public void Grant(Player player) Parameters player Player Grant(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void Grant(Player player, bool shouldSend = true) Parameters player Player shouldSend bool Parse(DatDictionary, Local, Asset, string, string) public void Parse(DatDictionary data, Local localization, Asset assetContext, string countKey, string prefixKey) Parameters data DatDictionary localization Local assetContext Asset countKey string prefixKey string"
  },
  "api/SDG.Unturned.NPCRewardsListAssetReward.html": {
    "href": "api/SDG.Unturned.NPCRewardsListAssetReward.html",
    "title": "Class NPCRewardsListAssetReward | Unturned Analyse Doc",
    "keywords": "Class NPCRewardsListAssetReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCRewardsListAssetReward : INPCReward Inheritance object INPCReward NPCRewardsListAssetReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCRewardsListAssetReward(AssetReference<Asset>, string) public NPCRewardsListAssetReward(AssetReference<Asset> newAssetRef, string newText) Parameters newAssetRef AssetReference<Asset> newText string Properties assetRef public AssetReference<Asset> assetRef { get; protected set; } Property Value AssetReference<Asset> Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCShortFlagCondition.html": {
    "href": "api/SDG.Unturned.NPCShortFlagCondition.html",
    "title": "Class NPCShortFlagCondition | Unturned Analyse Doc",
    "keywords": "Class NPCShortFlagCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCShortFlagCondition : NPCFlagCondition Inheritance object INPCCondition NPCLogicCondition NPCFlagCondition NPCShortFlagCondition Inherited Members NPCFlagCondition.isAssociatedWithFlag(ushort) NPCFlagCondition.id NPCFlagCondition.allowUnset NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCShortFlagCondition(ushort, short, bool, ENPCLogicType, string, bool) public NPCShortFlagCondition(ushort newID, short newValue, bool newAllowUnset, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newID ushort newValue short newAllowUnset bool newLogicType ENPCLogicType newText string newShouldReset bool Properties value public short value { get; protected set; } Property Value short Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCShortFlagReward.html": {
    "href": "api/SDG.Unturned.NPCShortFlagReward.html",
    "title": "Class NPCShortFlagReward | Unturned Analyse Doc",
    "keywords": "Class NPCShortFlagReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCShortFlagReward : INPCReward Inheritance object INPCReward NPCShortFlagReward Derived NPCRandomShortFlagReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCShortFlagReward(ushort, short, ENPCModificationType, string) public NPCShortFlagReward(ushort newID, short newValue, ENPCModificationType newModificationType, string newText) Parameters newID ushort newValue short newModificationType ENPCModificationType newText string Properties id public ushort id { get; protected set; } Property Value ushort modificationType public ENPCModificationType modificationType { get; protected set; } Property Value ENPCModificationType value public virtual short value { get; protected set; } Property Value short Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.NPCSkillsetCondition.html": {
    "href": "api/SDG.Unturned.NPCSkillsetCondition.html",
    "title": "Class NPCSkillsetCondition | Unturned Analyse Doc",
    "keywords": "Class NPCSkillsetCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCSkillsetCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCSkillsetCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCSkillsetCondition(EPlayerSkillset, ENPCLogicType, string) public NPCSkillsetCondition(EPlayerSkillset newSkillset, ENPCLogicType newLogicType, string newText) Parameters newSkillset EPlayerSkillset newLogicType ENPCLogicType newText string Properties skillset public EPlayerSkillset skillset { get; protected set; } Property Value EPlayerSkillset Methods isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCTeleportReward.html": {
    "href": "api/SDG.Unturned.NPCTeleportReward.html",
    "title": "Class NPCTeleportReward | Unturned Analyse Doc",
    "keywords": "Class NPCTeleportReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCTeleportReward : INPCReward Inheritance object INPCReward NPCTeleportReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.formatReward(Player) INPCReward.createUI(Player) INPCReward.grantReward(Player, bool) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCTeleportReward(string, string) public NPCTeleportReward(string newSpawnpoint, string newText) Parameters newSpawnpoint string newText string Properties spawnpoint public string spawnpoint { get; protected set; } Property Value string Methods GrantReward(Player) public override void GrantReward(Player player) Parameters player Player ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.NPCTimeOfDayCondition.html": {
    "href": "api/SDG.Unturned.NPCTimeOfDayCondition.html",
    "title": "Class NPCTimeOfDayCondition | Unturned Analyse Doc",
    "keywords": "Class NPCTimeOfDayCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCTimeOfDayCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCTimeOfDayCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCTimeOfDayCondition(int, ENPCLogicType, string, bool) public NPCTimeOfDayCondition(int newSecond, ENPCLogicType newLogicType, string newText, bool newShouldReset) Parameters newSecond int newLogicType ENPCLogicType newText string newShouldReset bool Properties second public int second { get; protected set; } Property Value int Methods formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCTool.html": {
    "href": "api/SDG.Unturned.NPCTool.html",
    "title": "Class NPCTool | Unturned Analyse Doc",
    "keywords": "Class NPCTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCTool Inheritance object NPCTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCTool() public NPCTool() Methods doesLogicPass<T>(ENPCLogicType, T, T) public static bool doesLogicPass<T>(ENPCLogicType logicType, T a, T b) where T : IComparable Parameters logicType ENPCLogicType a T b T Returns bool Type Parameters T getActiveHoliday() Was redirected to HolidayUtil but kept for plugin backwards compatibility. Refer to HolidayUtil for explanation of this weird situation. public static ENPCHoliday getActiveHoliday() Returns ENPCHoliday isHolidayActive(ENPCHoliday) Was redirected to HolidayUtil but kept for plugin backwards compatibility. Refer to HolidayUtil for explanation of this weird situation. public static bool isHolidayActive(ENPCHoliday holiday) Parameters holiday ENPCHoliday Returns bool readConditions(DatDictionary, Local, string, INPCCondition[], Asset) public static void readConditions(DatDictionary data, Local localization, string prefix, INPCCondition[] conditions, Asset assetContext) Parameters data DatDictionary localization Local prefix string conditions INPCCondition[] assetContext Asset readRewards(DatDictionary, Local, string, INPCReward[], Asset) public static void readRewards(DatDictionary data, Local localization, string prefix, INPCReward[] rewards, Asset assetContext) Parameters data DatDictionary localization Local prefix string rewards INPCReward[] assetContext Asset"
  },
  "api/SDG.Unturned.NPCTreeKillsCondition.html": {
    "href": "api/SDG.Unturned.NPCTreeKillsCondition.html",
    "title": "Class NPCTreeKillsCondition | Unturned Analyse Doc",
    "keywords": "Class NPCTreeKillsCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCTreeKillsCondition : INPCCondition Inheritance object INPCCondition NPCTreeKillsCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCTreeKillsCondition(ushort, short, Guid, string, bool) public NPCTreeKillsCondition(ushort newID, short newValue, Guid newTreeGuid, string newText, bool newShouldReset) Parameters newID ushort newValue short newTreeGuid Guid newText string newShouldReset bool Properties id public ushort id { get; protected set; } Property Value ushort treeGuid public Guid treeGuid { get; protected set; } Property Value Guid value public short value { get; protected set; } Property Value short Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCVehicleReward.html": {
    "href": "api/SDG.Unturned.NPCVehicleReward.html",
    "title": "Class NPCVehicleReward | Unturned Analyse Doc",
    "keywords": "Class NPCVehicleReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCVehicleReward : INPCReward Inheritance object INPCReward NPCVehicleReward Inherited Members INPCReward.grantDelaySeconds INPCReward.grantDelayApplyWhenInterrupted INPCReward.text INPCReward.grantReward(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCVehicleReward(Guid, ushort, string, Color32?, string) public NPCVehicleReward(Guid newVehicleGuid, ushort newID, string newSpawnpoint, Color32? newPaintColor, string newText) Parameters newVehicleGuid Guid newID ushort newSpawnpoint string newPaintColor Color32? newText string Properties VehicleGuid public Guid VehicleGuid { get; protected set; } Property Value Guid id [Obsolete] public ushort id { get; protected set; } Property Value ushort paintColor If set, takes priority over VehicleRedirectorAsset's paint color and over VehicleAsset's default paint color. public Color32? paintColor { get; protected set; } Property Value Color32? spawnpoint public string spawnpoint { get; protected set; } Property Value string Methods FindAsset() Returned asset is not necessarily a vehicle asset yet: It can also be a VehicleRedirectorAsset which the vehicle spawner requires to properly set paint color. public Asset FindAsset() Returns Asset FindVehicleAssetAndHandleRedirects() public VehicleAsset FindVehicleAssetAndHandleRedirects() Returns VehicleAsset GrantReward(Player) public override void GrantReward(Player player) Parameters player Player createUI(Player) public override ISleekElement createUI(Player player) Parameters player Player Returns ISleekElement formatReward(Player) public override string formatReward(Player player) Parameters player Player Returns string"
  },
  "api/SDG.Unturned.NPCWeatherBlendAlphaCondition.html": {
    "href": "api/SDG.Unturned.NPCWeatherBlendAlphaCondition.html",
    "title": "Class NPCWeatherBlendAlphaCondition | Unturned Analyse Doc",
    "keywords": "Class NPCWeatherBlendAlphaCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll Compares weather intensity to value. public class NPCWeatherBlendAlphaCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCWeatherBlendAlphaCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCWeatherBlendAlphaCondition(AssetReference<WeatherAssetBase>, float, ENPCLogicType, string) public NPCWeatherBlendAlphaCondition(AssetReference<WeatherAssetBase> newWeather, float newValue, ENPCLogicType newLogicType, string newText) Parameters newWeather AssetReference<WeatherAssetBase> newValue float newLogicType ENPCLogicType newText string Properties value public float value { get; } Property Value float weather public AssetReference<WeatherAssetBase> weather { get; } Property Value AssetReference<WeatherAssetBase> Methods isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCWeatherStatusCondition.html": {
    "href": "api/SDG.Unturned.NPCWeatherStatusCondition.html",
    "title": "Class NPCWeatherStatusCondition | Unturned Analyse Doc",
    "keywords": "Class NPCWeatherStatusCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCWeatherStatusCondition : NPCLogicCondition Inheritance object INPCCondition NPCLogicCondition NPCWeatherStatusCondition Inherited Members NPCLogicCondition.doesLogicPass<T>(T, T) NPCLogicCondition.logicType INPCCondition.text INPCCondition.shouldReset INPCCondition.ApplyCondition(Player) INPCCondition.formatCondition(Player) INPCCondition.createUI(Player, Texture2D) INPCCondition.isAssociatedWithFlag(ushort) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCWeatherStatusCondition(AssetReference<WeatherAssetBase>, ENPCWeatherStatus, ENPCLogicType, string) public NPCWeatherStatusCondition(AssetReference<WeatherAssetBase> newWeather, ENPCWeatherStatus newValue, ENPCLogicType newLogicType, string newText) Parameters newWeather AssetReference<WeatherAssetBase> newValue ENPCWeatherStatus newLogicType ENPCLogicType newText string Properties value public ENPCWeatherStatus value { get; } Property Value ENPCWeatherStatus weather public AssetReference<WeatherAssetBase> weather { get; } Property Value AssetReference<WeatherAssetBase> Methods isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NPCZombieKillsCondition.html": {
    "href": "api/SDG.Unturned.NPCZombieKillsCondition.html",
    "title": "Class NPCZombieKillsCondition | Unturned Analyse Doc",
    "keywords": "Class NPCZombieKillsCondition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NPCZombieKillsCondition : INPCCondition Inheritance object INPCCondition NPCZombieKillsCondition Inherited Members INPCCondition.text INPCCondition.shouldReset INPCCondition.createUI(Player, Texture2D) INPCCondition.AreUIRequirementsMet(List<bool>) INPCCondition.applyCondition(Player, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NPCZombieKillsCondition(ushort, short, EZombieSpeciality, bool, int, byte, float, float, int, string, bool) public NPCZombieKillsCondition(ushort newID, short newValue, EZombieSpeciality newZombie, bool newSpawn, int newSpawnQuantity, byte newNav, float newRadius, float newMinRadius, int newLevelTableUniqueId, string newText, bool newShouldReset) Parameters newID ushort newValue short newZombie EZombieSpeciality newSpawn bool newSpawnQuantity int newNav byte newRadius float newMinRadius float newLevelTableUniqueId int newText string newShouldReset bool Fields sqrMinRadius Only kills outside this radius around the player are tracked. NSTM requested this for a sniping zombies quest. public float sqrMinRadius Field Value float Properties LevelTableUniqueId If greater than zero, find this zombie type configured in the level editor. For example, if the level editor lists \"0 Fire (4)\", then 4 is the unique ID, and if assigned to this condition a zombie from the \"Fire\" table will spawn. public int LevelTableUniqueId { get; } Property Value int id public ushort id { get; protected set; } Property Value ushort nav Navmesh index player must be within. If set to byte.MaxValue then anywhere on the map is eligible. public byte nav { get; protected set; } Property Value byte spawn Should zombie(s) of the required type be spawned when player enters the area? public bool spawn { get; protected set; } Property Value bool spawnQuantity How many to spawn if spawning spawn is enabled. public int spawnQuantity { get; protected set; } Property Value int sqrRadius Only kills within this radius around the player are tracked. public float sqrRadius { get; protected set; } Property Value float usesBossInterval If spawning is enabled, whether to use the timer between spawns. public bool usesBossInterval { get; protected set; } Property Value bool value public short value { get; protected set; } Property Value short zombie public EZombieSpeciality zombie { get; protected set; } Property Value EZombieSpeciality Methods ApplyCondition(Player) public override void ApplyCondition(Player player) Parameters player Player formatCondition(Player) public override string formatCondition(Player player) Parameters player Player Returns string isAssociatedWithFlag(ushort) Is this condition influenced by a given quest flag? Used by level objects to determine if local player's flag change may affect visibility. public override bool isAssociatedWithFlag(ushort flagID) Parameters flagID ushort Returns bool isConditionMet(Player) public override bool isConditionMet(Player player) Parameters player Player Returns bool"
  },
  "api/SDG.Unturned.NameTool.html": {
    "href": "api/SDG.Unturned.NameTool.html",
    "title": "Class NameTool | Unturned Analyse Doc",
    "keywords": "Class NameTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NameTool Inheritance object NameTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NameTool() public NameTool() Methods checkNames(string, string) public static bool checkNames(string input, string name) Parameters input string name string Returns bool containsRichText(string) Does name contain rich text tags? Some players were abusing rich text enabled servers by inserting admin colors into their steam name. public static bool containsRichText(string name) Parameters name string Returns bool isValid(string) If updating this method please remember to update the support article: https://support.smartlydressedgames.com/hc/en-us/articles/13452208765716 public static bool isValid(string name) Parameters name string Returns bool"
  },
  "api/SDG.Unturned.NetId.html": {
    "href": "api/SDG.Unturned.NetId.html",
    "title": "Struct NetId | Unturned Analyse Doc",
    "keywords": "Struct NetId Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct NetId : IEquatable<NetId> Implements IEquatable<NetId> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NetId(uint) public NetId(uint id) Parameters id uint Fields INVALID public static readonly NetId INVALID Field Value NetId id public uint id Field Value uint Methods Clear() public void Clear() Equals(NetId) public bool Equals(NetId other) Parameters other NetId Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int IsNull() Zero is treated as unset. public bool IsNull() Returns bool ToString() public override string ToString() Returns string Operators operator +(NetId, uint) public static NetId operator +(NetId lhs, uint rhs) Parameters lhs NetId rhs uint Returns NetId operator ==(NetId, NetId) public static bool operator ==(NetId lhs, NetId rhs) Parameters lhs NetId rhs NetId Returns bool operator ++(NetId) public static NetId operator ++(NetId value) Parameters value NetId Returns NetId operator !=(NetId, NetId) public static bool operator !=(NetId lhs, NetId rhs) Parameters lhs NetId rhs NetId Returns bool"
  },
  "api/SDG.Unturned.NetIdPakEx.html": {
    "href": "api/SDG.Unturned.NetIdPakEx.html",
    "title": "Class NetIdPakEx | Unturned Analyse Doc",
    "keywords": "Class NetIdPakEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class NetIdPakEx Inheritance object NetIdPakEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadNetId(NetPakReader, out NetId) public static bool ReadNetId(this NetPakReader reader, out NetId value) Parameters reader NetPakReader value NetId Returns bool ReadTransform(NetPakReader, out Transform) public static bool ReadTransform(this NetPakReader reader, out Transform value) Parameters reader NetPakReader value Transform Returns bool WriteNetId(NetPakWriter, NetId) public static bool WriteNetId(this NetPakWriter writer, NetId value) Parameters writer NetPakWriter value NetId Returns bool WriteTransform(NetPakWriter, Transform) public static bool WriteTransform(this NetPakWriter writer, Transform value) Parameters writer NetPakWriter value Transform Returns bool"
  },
  "api/SDG.Unturned.NetIdRegistry.html": {
    "href": "api/SDG.Unturned.NetIdRegistry.html",
    "title": "Class NetIdRegistry | Unturned Analyse Doc",
    "keywords": "Class NetIdRegistry Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class NetIdRegistry Inheritance object NetIdRegistry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Assign(NetId, object) public static void Assign(NetId key, object value) Parameters key NetId value object AssignTransform(NetId, Transform) public static void AssignTransform(NetId key, Transform value) Parameters key NetId value Transform Claim() public static NetId Claim() Returns NetId ClaimBlock(uint) public static NetId ClaimBlock(uint size) Parameters size uint Returns NetId Clear() Called before loading level. public static void Clear() Dump() Log every registered pairing. public static void Dump() Get(NetId) public static object Get(NetId key) Parameters key NetId Returns object GetTransform(NetId, string) public static Transform GetTransform(NetId netId, string path) Parameters netId NetId path string Returns Transform GetTransformNetId(Transform) Get net ID only if transform is directly registered, not if transform is the child of a registered transform. public static NetId GetTransformNetId(Transform transform) Parameters transform Transform Returns NetId GetTransformNetId(Transform, out NetId, out string) public static bool GetTransformNetId(Transform transform, out NetId netId, out string path) Parameters transform Transform netId NetId path string Returns bool Get<T>(NetId) public static T Get<T>(NetId key) where T : class Parameters key NetId Returns T Type Parameters T Release(NetId) public static bool Release(NetId key) Parameters key NetId Returns bool ReleaseTransform(NetId, Transform) public static void ReleaseTransform(NetId key, Transform value) Parameters key NetId value Transform"
  },
  "api/SDG.Unturned.NetInvocationDeferralRegistry.html": {
    "href": "api/SDG.Unturned.NetInvocationDeferralRegistry.html",
    "title": "Class NetInvocationDeferralRegistry | Unturned Analyse Doc",
    "keywords": "Class NetInvocationDeferralRegistry Namespace SDG.Unturned Assembly Assembly-CSharp.dll When a client method is called on a target object that does not exist yet this class is responsible for deferring the invocation until the instance does exist. For example until finished async loading. public static class NetInvocationDeferralRegistry Inheritance object NetInvocationDeferralRegistry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Cancel(NetId, uint) Remove pending invocations. public static void Cancel(NetId key, uint blockSize = 1) Parameters key NetId blockSize uint Defer(NetId, in ClientInvocationContext, NetInvokeDeferred) Called by generated methods when target object does not exist. If target object has been marked deferred then the method will be invoked after it exists. public static void Defer(NetId key, in ClientInvocationContext context, NetInvokeDeferred callback) Parameters key NetId context ClientInvocationContext callback NetInvokeDeferred Invoke(NetId, uint) Invoke all deferred calls. public static void Invoke(NetId key, uint blockSize = 1) Parameters key NetId blockSize uint MarkDeferred(NetId, uint) Add list of deferred invocations for key. Otherwise messages will be discarded assuming it was canceled. public static void MarkDeferred(NetId key, uint blockSize = 1) Parameters key NetId blockSize uint"
  },
  "api/SDG.Unturned.NetInvokableGeneratedClassAttribute.html": {
    "href": "api/SDG.Unturned.NetInvokableGeneratedClassAttribute.html",
    "title": "Class NetInvokableGeneratedClassAttribute | Unturned Analyse Doc",
    "keywords": "Class NetInvokableGeneratedClassAttribute Namespace SDG.Unturned Assembly Assembly-CSharp.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class NetInvokableGeneratedClassAttribute : Attribute, _Attribute Inheritance object Attribute NetInvokableGeneratedClassAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NetInvokableGeneratedClassAttribute(Type) public NetInvokableGeneratedClassAttribute(Type targetType) Parameters targetType Type Fields targetType Type the annotated class was generated for. public readonly Type targetType Field Value Type"
  },
  "api/SDG.Unturned.NetInvokableGeneratedMethodAttribute.html": {
    "href": "api/SDG.Unturned.NetInvokableGeneratedMethodAttribute.html",
    "title": "Class NetInvokableGeneratedMethodAttribute | Unturned Analyse Doc",
    "keywords": "Class NetInvokableGeneratedMethodAttribute Namespace SDG.Unturned Assembly Assembly-CSharp.dll [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class NetInvokableGeneratedMethodAttribute : Attribute, _Attribute Inheritance object Attribute NetInvokableGeneratedMethodAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NetInvokableGeneratedMethodAttribute(string, ENetInvokableGeneratedMethodPurpose) public NetInvokableGeneratedMethodAttribute(string targetMethodName, ENetInvokableGeneratedMethodPurpose purpose) Parameters targetMethodName string purpose ENetInvokableGeneratedMethodPurpose Fields purpose public readonly ENetInvokableGeneratedMethodPurpose purpose Field Value ENetInvokableGeneratedMethodPurpose targetMethodName Method the annotated method was generated for. public readonly string targetMethodName Field Value string"
  },
  "api/SDG.Unturned.NetInvokeDeferred.html": {
    "href": "api/SDG.Unturned.NetInvokeDeferred.html",
    "title": "Delegate NetInvokeDeferred | Unturned Analyse Doc",
    "keywords": "Delegate NetInvokeDeferred Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void NetInvokeDeferred(object voidNetObj, in ClientInvocationContext context) Parameters voidNetObj object context ClientInvocationContext Constructors NetInvokeDeferred(object, IntPtr) public NetInvokeDeferred(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(object, in ClientInvocationContext, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(object voidNetObj, in ClientInvocationContext context, AsyncCallback callback, object @object) Parameters voidNetObj object context ClientInvocationContext callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ClientInvocationContext, IAsyncResult) public virtual void EndInvoke(in ClientInvocationContext context, IAsyncResult result) Parameters context ClientInvocationContext result IAsyncResult Invoke(object, in ClientInvocationContext) public virtual void Invoke(object voidNetObj, in ClientInvocationContext context) Parameters voidNetObj object context ClientInvocationContext"
  },
  "api/SDG.Unturned.NetPakColor32Attribute.html": {
    "href": "api/SDG.Unturned.NetPakColor32Attribute.html",
    "title": "Class NetPakColor32Attribute | Unturned Analyse Doc",
    "keywords": "Class NetPakColor32Attribute Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Parameter)] public class NetPakColor32Attribute : Attribute, _Attribute Inheritance object Attribute NetPakColor32Attribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NetPakColor32Attribute(bool) public NetPakColor32Attribute(bool withAlpha) Parameters withAlpha bool Fields withAlpha public bool withAlpha Field Value bool"
  },
  "api/SDG.Unturned.NetPakNormalAttribute.html": {
    "href": "api/SDG.Unturned.NetPakNormalAttribute.html",
    "title": "Class NetPakNormalAttribute | Unturned Analyse Doc",
    "keywords": "Class NetPakNormalAttribute Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Parameter)] public class NetPakNormalAttribute : Attribute, _Attribute Inheritance object Attribute NetPakNormalAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NetPakNormalAttribute(int) public NetPakNormalAttribute(int bitsPerComponent = 9) Parameters bitsPerComponent int Fields bitsPerComponent public readonly int bitsPerComponent Field Value int"
  },
  "api/SDG.Unturned.NetPakSpecialQuaternionAttribute.html": {
    "href": "api/SDG.Unturned.NetPakSpecialQuaternionAttribute.html",
    "title": "Class NetPakSpecialQuaternionAttribute | Unturned Analyse Doc",
    "keywords": "Class NetPakSpecialQuaternionAttribute Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Parameter)] public class NetPakSpecialQuaternionAttribute : Attribute, _Attribute Inheritance object Attribute NetPakSpecialQuaternionAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NetPakSpecialQuaternionAttribute(int) public NetPakSpecialQuaternionAttribute(int yawBitCount = 9) Parameters yawBitCount int Fields yawBitCount public readonly int yawBitCount Field Value int"
  },
  "api/SDG.Unturned.NetPakVector3Attribute.html": {
    "href": "api/SDG.Unturned.NetPakVector3Attribute.html",
    "title": "Class NetPakVector3Attribute | Unturned Analyse Doc",
    "keywords": "Class NetPakVector3Attribute Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Parameter)] public class NetPakVector3Attribute : Attribute, _Attribute Inheritance object Attribute NetPakVector3Attribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors NetPakVector3Attribute(int, int) public NetPakVector3Attribute(int intBitCount = 13, int fracBitCount = 9) Parameters intBitCount int fracBitCount int Fields fracBitCount public readonly int fracBitCount Field Value int intBitCount public readonly int intBitCount Field Value int"
  },
  "api/SDG.Unturned.NetReflection.html": {
    "href": "api/SDG.Unturned.NetReflection.html",
    "title": "Class NetReflection | Unturned Analyse Doc",
    "keywords": "Class NetReflection Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class NetReflection Inheritance object NetReflection Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Dump() Log all known net methods. public static void Dump() RegisterFromAssembly(Assembly) Not really supported but might probably work. Adding for public discussion #4176. public static void RegisterFromAssembly(Assembly assembly) Parameters assembly Assembly SetLogCallback(Action<string>) public static void SetLogCallback(Action<string> logCallback) Parameters logCallback Action<string>"
  },
  "api/SDG.Unturned.NetworkSnapshot-1.html": {
    "href": "api/SDG.Unturned.NetworkSnapshot-1.html",
    "title": "Struct NetworkSnapshot<T> | Unturned Analyse Doc",
    "keywords": "Struct NetworkSnapshot<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct NetworkSnapshot<T> where T : ISnapshotInfo<T> Type Parameters T Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields info public T info Field Value T timestamp public float timestamp Field Value float"
  },
  "api/SDG.Unturned.NetworkSnapshotBuffer-1.html": {
    "href": "api/SDG.Unturned.NetworkSnapshotBuffer-1.html",
    "title": "Class NetworkSnapshotBuffer<T> | Unturned Analyse Doc",
    "keywords": "Class NetworkSnapshotBuffer<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NetworkSnapshotBuffer<T> where T : ISnapshotInfo<T> Type Parameters T Inheritance object NetworkSnapshotBuffer<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NetworkSnapshotBuffer(float, float) public NetworkSnapshotBuffer(float newDuration, float newDelay) Parameters newDuration float newDelay float Properties snapshots public NetworkSnapshot<T>[] snapshots { get; } Property Value NetworkSnapshot<T>[] Methods addNewSnapshot(T) public void addNewSnapshot(T info) Parameters info T getCurrentSnapshot() public T getCurrentSnapshot() Returns T updateLastSnapshot(T) Sets the point to lerp from, should be called after resetting position or things like that. public void updateLastSnapshot(T info) Parameters info T"
  },
  "api/SDG.Unturned.NewsItem.html": {
    "href": "api/SDG.Unturned.NewsItem.html",
    "title": "Class NewsItem | Unturned Analyse Doc",
    "keywords": "Class NewsItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NewsItem Inheritance object NewsItem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NewsItem() public NewsItem() Properties Author public string Author { get; set; } Property Value string Contents public string Contents { get; set; } Property Value string Date public long Date { get; set; } Property Value long Title public string Title { get; set; } Property Value string URL public string URL { get; set; } Property Value string"
  },
  "api/SDG.Unturned.NewsResponse.html": {
    "href": "api/SDG.Unturned.NewsResponse.html",
    "title": "Class NewsResponse | Unturned Analyse Doc",
    "keywords": "Class NewsResponse Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NewsResponse Inheritance object NewsResponse Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NewsResponse() public NewsResponse() Properties AppNews public AppNews AppNews { get; set; } Property Value AppNews"
  },
  "api/SDG.Unturned.NewsStatusData.html": {
    "href": "api/SDG.Unturned.NewsStatusData.html",
    "title": "Class NewsStatusData | Unturned Analyse Doc",
    "keywords": "Class NewsStatusData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NewsStatusData Inheritance object NewsStatusData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NewsStatusData() public NewsStatusData() Fields Announcements_Count public int Announcements_Count Field Value int"
  },
  "api/SDG.Unturned.NightLight.html": {
    "href": "api/SDG.Unturned.NightLight.html",
    "title": "Class NightLight | Unturned Analyse Doc",
    "keywords": "Class NightLight Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NightLight : MonoBehaviour Inheritance object NightLight Constructors NightLight() public NightLight() Fields target public Light target Field Value Light"
  },
  "api/SDG.Unturned.Node.html": {
    "href": "api/SDG.Unturned.Node.html",
    "title": "Class Node | Unturned Analyse Doc",
    "keywords": "Class Node Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Node Inheritance object Node Derived AirdropNode ArenaNode DeadzoneNode EffectNode LocationNode PurchaseNode SafezoneNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Node() public Node() Fields _model protected Transform _model Field Value Transform _point protected Vector3 _point Field Value Vector3 _type protected ENodeType _type Field Value ENodeType Properties model public Transform model { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 type public ENodeType type { get; } Property Value ENodeType Methods move(Vector3) public void move(Vector3 newPoint) Parameters newPoint Vector3 remove() public void remove() setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.NodesEditor.html": {
    "href": "api/SDG.Unturned.NodesEditor.html",
    "title": "Class NodesEditor | Unturned Analyse Doc",
    "keywords": "Class NodesEditor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class NodesEditor : SelectionTool, IDevkitTool Inheritance object SelectionTool NodesEditor Implements IDevkitTool Inherited Members SelectionTool.copyBuffer SelectionTool.copySelectionDelay SelectionTool.pendingClickSelection SelectionTool.handlePosition SelectionTool.handleRotation SelectionTool.referencePosition SelectionTool.referenceRotation SelectionTool.referenceScale SelectionTool.hasReferenceRotation SelectionTool.hasReferenceScale SelectionTool.beginAreaSelect SelectionTool.beginAreaSelectTime SelectionTool.isAreaSelecting SelectionTool.isDragging SelectionTool.areaSelection SelectionTool.transformSelection() SelectionTool.moveHandle(Vector3, Quaternion, Vector3, bool, bool) SelectionTool.update() SelectionTool.equip() SelectionTool.dequip() SelectionTool.handleGLRender() SelectionTool.mode object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NodesEditor() public NodesEditor() Properties activeNodeSystem public TempNodeSystemBase activeNodeSystem { get; set; } Property Value TempNodeSystemBase Methods EnumerateBoxSelectableObjects() protected override IEnumerable<GameObject> EnumerateBoxSelectableObjects() Returns IEnumerable<GameObject> HasBoxSelectableObjects() protected override bool HasBoxSelectableObjects() Returns bool RaycastSelectableObjects(Ray, out RaycastHit) protected override bool RaycastSelectableObjects(Ray ray, out RaycastHit hitInfo) Parameters ray Ray hitInfo RaycastHit Returns bool RequestInstantiation(Vector3) protected override void RequestInstantiation(Vector3 position) Parameters position Vector3"
  },
  "api/SDG.Unturned.NonDeferredAsset-1.html": {
    "href": "api/SDG.Unturned.NonDeferredAsset-1.html",
    "title": "Struct NonDeferredAsset<T> | Unturned Analyse Doc",
    "keywords": "Struct NonDeferredAsset<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll Legacy implementation that preloads assets. public struct NonDeferredAsset<T> : IDeferredAsset<T> where T : Object Type Parameters T Implements IDeferredAsset<T> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors NonDeferredAsset(T) public NonDeferredAsset(T loadedObject) Parameters loadedObject T Fields loadedObject public T loadedObject Field Value T Methods getOrLoad() public T getOrLoad() Returns T"
  },
  "api/SDG.Unturned.NpcGlobalEventHook.html": {
    "href": "api/SDG.Unturned.NpcGlobalEventHook.html",
    "title": "Class NpcGlobalEventHook | Unturned Analyse Doc",
    "keywords": "Class NpcGlobalEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to any GameObject to listen for the Event NPC reward type. public class NpcGlobalEventHook : MonoBehaviour Inheritance object NpcGlobalEventHook Constructors NpcGlobalEventHook() public NpcGlobalEventHook() Fields AuthorityOnly If true the event will only be invoked in offline mode and on the server. public bool AuthorityOnly Field Value bool EventId *_ID configured in NPC rewards list. public string EventId Field Value string OnTriggered Invoked when NPC global event matching EventId is processed. public UnityEvent OnTriggered Field Value UnityEvent"
  },
  "api/SDG.Unturned.NpcGlobalEventMessenger.html": {
    "href": "api/SDG.Unturned.NpcGlobalEventMessenger.html",
    "title": "Class NpcGlobalEventMessenger | Unturned Analyse Doc",
    "keywords": "Class NpcGlobalEventMessenger Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows Unity events to broadcast Event NPC rewards. public class NpcGlobalEventMessenger : MonoBehaviour Inheritance object NpcGlobalEventMessenger Constructors NpcGlobalEventMessenger() public NpcGlobalEventMessenger() Fields DefaultEventId Event ID to use when SendDefaultEventId is invoked. public string DefaultEventId Field Value string ShouldReplicate The event messenger can only be triggered on the authority (server). If true, the server will replicate the event to clients. public bool ShouldReplicate Field Value bool Methods SendDefaultEventId() public void SendDefaultEventId() SendEventId(string) public void SendEventId(string eventId) Parameters eventId string"
  },
  "api/SDG.Unturned.NsbLog.html": {
    "href": "api/SDG.Unturned.NsbLog.html",
    "title": "Class NsbLog | Unturned Analyse Doc",
    "keywords": "Class NsbLog Namespace SDG.Unturned Assembly Assembly-CSharp.dll Logs enabled when WITH_NSB_LOGGING is defined. Tracking down an issue where snapshot buffer stops working for groups of networked objects. public static class NsbLog Inheritance object NsbLog Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ConditionalWarning(bool, object) [Conditional(\"WITH_NSB_LOGGING\")] public static void ConditionalWarning(bool condition, object message) Parameters condition bool message object ConditionalWarningFormat(bool, string, params object[]) [Conditional(\"WITH_NSB_LOGGING\")] public static void ConditionalWarningFormat(bool condition, string format, params object[] args) Parameters condition bool format string args object[] Warning(object) [Conditional(\"WITH_NSB_LOGGING\")] public static void Warning(object message) Parameters message object WarningFormat(string, params object[]) [Conditional(\"WITH_NSB_LOGGING\")] public static void WarningFormat(string format, params object[] args) Parameters format string args object[]"
  },
  "api/SDG.Unturned.ObjectAsset.html": {
    "href": "api/SDG.Unturned.ObjectAsset.html",
    "title": "Class ObjectAsset | Unturned Analyse Doc",
    "keywords": "Class ObjectAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ObjectAsset : Asset, IAssetErrorContext Inheritance object Asset ObjectAsset Implements IAssetErrorContext Derived ObjectNPCAsset Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ObjectAsset() public ObjectAsset() Fields _objectName protected string _objectName Field Value string allowStructures public bool allowStructures Field Value bool causesFallDamage Should landing on this object inflict fall damage? public bool causesFallDamage Field Value bool chart public EObjectChart chart Field Value EObjectChart christmasRedirect Object to use during the Christmas event instead. public AssetReference<ObjectAsset> christmasRedirect Field Value AssetReference<ObjectAsset> conditions public INPCCondition[] conditions Field Value INPCCondition[] cullingVolumeLocalPositionOffset public Vector3 cullingVolumeLocalPositionOffset Field Value Vector3 cullingVolumeSizeOffset public Vector3 cullingVolumeSizeOffset Field Value Vector3 foliage public AssetReference<FoliageInfoCollectionAsset> foliage Field Value AssetReference<FoliageInfoCollectionAsset> halloweenRedirect Object to use during the Halloween event instead. public AssetReference<ObjectAsset> halloweenRedirect Field Value AssetReference<ObjectAsset> interactability public EObjectInteractability interactability Field Value EObjectInteractability interactabilityConditions public INPCCondition[] interactabilityConditions Field Value INPCCondition[] interactabilityDelay public float interactabilityDelay Field Value float interactabilityDrops public ushort[] interactabilityDrops Field Value ushort[] interactabilityEditor public EObjectInteractabilityEditor interactabilityEditor Field Value EObjectInteractabilityEditor interactabilityEffect [Obsolete] public ushort interactabilityEffect Field Value ushort interactabilityEffectGuid public Guid interactabilityEffectGuid Field Value Guid interactabilityHint public EObjectInteractabilityHint interactabilityHint Field Value EObjectInteractabilityHint interactabilityNav public EObjectInteractabilityNav interactabilityNav Field Value EObjectInteractabilityNav interactabilityPower public EObjectInteractabilityPower interactabilityPower Field Value EObjectInteractabilityPower interactabilityRemote public bool interactabilityRemote Field Value bool interactabilityReset public float interactabilityReset Field Value float interactabilityResource public ushort interactabilityResource Field Value ushort interactabilityRewardID public ushort interactabilityRewardID Field Value ushort interactabilityRewards protected NPCRewardsList interactabilityRewards Field Value NPCRewardsList interactabilityText public string interactabilityText Field Value string isCollisionImportant public bool isCollisionImportant Field Value bool isFuel public bool isFuel Field Value bool isGore Should this object only be visible if gore is enabled? Allows pre-placed blood splatters to be hidden for younger players. public bool isGore Field Value bool isRefill public bool isRefill Field Value bool isSnowshoe public bool isSnowshoe Field Value bool isSoft public bool isSoft Field Value bool landmarkQuality public EGraphicQuality landmarkQuality Field Value EGraphicQuality lod public EObjectLOD lod Field Value EObjectLOD lodBias public float lodBias Field Value float materialPalette public AssetReference<MaterialPaletteAsset> materialPalette Field Value AssetReference<MaterialPaletteAsset> navGameObject public IDeferredAsset<GameObject> navGameObject Field Value IDeferredAsset<GameObject> rubble public EObjectRubble rubble Field Value EObjectRubble rubbleBladeID Weapon must have matching blade ID to damage object. Both weapons and objects default to zero so they can be damaged by default. public byte rubbleBladeID Field Value byte rubbleEditor public EObjectRubbleEditor rubbleEditor Field Value EObjectRubbleEditor rubbleEffect [Obsolete] public ushort rubbleEffect Field Value ushort rubbleEffectGuid Effect played when single segment is destroyed. public Guid rubbleEffectGuid Field Value Guid rubbleFinale [Obsolete] public ushort rubbleFinale Field Value ushort rubbleFinaleGuid Effect played when all segments are destroyed. public Guid rubbleFinaleGuid Field Value Guid rubbleHealth public ushort rubbleHealth Field Value ushort rubbleIsVulnerable public bool rubbleIsVulnerable Field Value bool rubbleProofExplosion public bool rubbleProofExplosion Field Value bool rubbleReset public float rubbleReset Field Value float rubbleRewardID public ushort rubbleRewardID Field Value ushort rubbleRewardProbability [0, 1] probability of dropping any rewards. public float rubbleRewardProbability Field Value float rubbleRewardXP public uint rubbleRewardXP Field Value uint rubbleRewardsMax public byte rubbleRewardsMax Field Value byte rubbleRewardsMin public byte rubbleRewardsMin Field Value byte shouldAddKillTriggers Should colliders in the Triggers GameObject with \"Kill\" name kill players? If Triggers GameObject is not set, searches Object instead. public bool shouldAddKillTriggers Field Value bool shouldAddNightLightScript public bool shouldAddNightLightScript Field Value bool shouldExcludeFromCullingVolumes public bool shouldExcludeFromCullingVolumes Field Value bool shouldExcludeFromLevelBatching public bool shouldExcludeFromLevelBatching Field Value bool skyboxGameObject public IDeferredAsset<GameObject> skyboxGameObject Field Value IDeferredAsset<GameObject> slotsGameObject public IDeferredAsset<GameObject> slotsGameObject Field Value IDeferredAsset<GameObject> triggersGameObject public IDeferredAsset<GameObject> triggersGameObject Field Value IDeferredAsset<GameObject> type public EObjectType type Field Value EObjectType useScale public bool useScale Field Value bool useWaterHeightTransparentSort public bool useWaterHeightTransparentSort Field Value bool Properties FriendlyName public override string FriendlyName { get; } Property Value string RubbleCanZombiesDamage If true, zombies can attack this object if it's blocking them. Defaults to false. public bool RubbleCanZombiesDamage { get; protected set; } Property Value bool RubbleNavMode Controls how rubble affects Nav game object. public EObjectRubbleNavMode RubbleNavMode { get; protected set; } Property Value EObjectRubbleNavMode RubbleZombieDamageMultiplier Multiplier for damage from zombies if RubbleCanZombiesDamage is true. public float RubbleZombieDamageMultiplier { get; protected set; } Property Value float ShouldExcludeFromSatelliteCapture If true, object will be hidden when rendering GPS/satellite view. Defaults to true if holidayRestriction is set. public bool ShouldExcludeFromSatelliteCapture { get; } Property Value bool ShouldLoadNavInEditor If true, Nav game object will be instantiated in the level editor. Useful for objects which need collision with zombies during gameplay without affecting navmesh baking. Defaults to true for \"medium\" and \"large\" objects. public bool ShouldLoadNavInEditor { get; } Property Value bool ShouldLoadNavOnServer If true, Nav game object will be instantiated in singleplayer and on dedicated server. Useful for objects which need to affect navmesh baking without colliding with zombies during gameplay. Defaults to true for \"medium\" and \"large\" objects. public bool ShouldLoadNavOnServer { get; } Property Value bool assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType holidayRestriction Only activated during this holiday. public ENPCHoliday holidayRestriction { get; protected set; } Property Value ENPCHoliday objectName public string objectName { get; } Property Value string Methods ApplyInteractabilityConditions(Player) public void ApplyInteractabilityConditions(Player player) Parameters player Player FindInteractabilityDialogueAsset() Property is not exposed at the moment because interactability properties should really be moved into some sort of sub-asset. public DialogueAsset FindInteractabilityDialogueAsset() Returns DialogueAsset FindInteractabilityEffectAsset() public EffectAsset FindInteractabilityEffectAsset() Returns EffectAsset FindRubbleEffectAsset() public EffectAsset FindRubbleEffectAsset() Returns EffectAsset FindRubbleFinaleEffectAsset() public EffectAsset FindRubbleFinaleEffectAsset() Returns EffectAsset GetOrLoadModel() public GameObject GetOrLoadModel() Returns GameObject GrantInteractabilityRewards(Player) public void GrantInteractabilityRewards(Player player) Parameters player Player IsRubbleFinaleEffectRefNull() public bool IsRubbleFinaleEffectRefNull() Returns bool OnClientModelLoaded(GameObject) Object.prefab protected void OnClientModelLoaded(GameObject asset) Parameters asset GameObject OnServerModelLoaded(GameObject) Clip.prefab protected void OnServerModelLoaded(GameObject asset) Parameters asset GameObject PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local applyInteractabilityConditions(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void applyInteractabilityConditions(Player player, bool shouldSend) Parameters player Player shouldSend bool areConditionsMet(Player) public bool areConditionsMet(Player player) Parameters player Player Returns bool areInteractabilityConditionsMet(Player) public bool areInteractabilityConditionsMet(Player player) Parameters player Player Returns bool fixTagAndLayer(GameObject, string, int) protected void fixTagAndLayer(GameObject rootGameObject, string expectedTag, int expectedLayer) Parameters rootGameObject GameObject expectedTag string expectedLayer int getHolidayRedirect() Get asset ref to replace this one for holiday, or null if it should not be redirected. public AssetReference<ObjectAsset> getHolidayRedirect() Returns AssetReference<ObjectAsset> getState() public virtual byte[] getState() Returns byte[] grantInteractabilityRewards(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void grantInteractabilityRewards(Player player, bool shouldSend) Parameters player Player shouldSend bool onNavGameObjectLoaded(GameObject) protected void onNavGameObjectLoaded(GameObject asset) Parameters asset GameObject onSlotsGameObjectLoaded(GameObject) protected void onSlotsGameObjectLoaded(GameObject asset) Parameters asset GameObject recursivelyFixLayer(GameObject, int, int) Recursively change all children including root from oldLayer to newLayer. Aborts if a child doesn't match the old layer because it might be something we shouldn't change the layer of. True if layers were all successfully changed. protected bool recursivelyFixLayer(GameObject parentGameObject, int oldLayer, int newLayer) Parameters parentGameObject GameObject oldLayer int newLayer int Returns bool recursivelyFixTag(GameObject, string, string) Recursively change all children including root from oldTag to newTag. Aborts if a child doesn't match the old tag because it might be something we shouldn't change the tag of. True if tags were all successfully changed. protected bool recursivelyFixTag(GameObject parentGameObject, string oldTag, string newTag) Parameters parentGameObject GameObject oldTag string newTag string Returns bool validateModel(GameObject) protected void validateModel(GameObject asset) Parameters asset GameObject"
  },
  "api/SDG.Unturned.ObjectConfigData.html": {
    "href": "api/SDG.Unturned.ObjectConfigData.html",
    "title": "Class ObjectConfigData | Unturned Analyse Doc",
    "keywords": "Class ObjectConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ObjectConfigData Inheritance object ObjectConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ObjectConfigData(EGameMode) public ObjectConfigData(EGameMode mode) Parameters mode EGameMode Fields Allow_Holiday_Drops public bool Allow_Holiday_Drops Field Value bool Binary_State_Reset_Multiplier public float Binary_State_Reset_Multiplier Field Value float Fuel_Reset_Multiplier public float Fuel_Reset_Multiplier Field Value float Items_Obstruct_Tree_Respawns public bool Items_Obstruct_Tree_Respawns Field Value bool Resource_Drops_Multiplier public float Resource_Drops_Multiplier Field Value float Resource_Reset_Multiplier public float Resource_Reset_Multiplier Field Value float Rubble_Reset_Multiplier public float Rubble_Reset_Multiplier Field Value float Water_Reset_Multiplier public float Water_Reset_Multiplier Field Value float"
  },
  "api/SDG.Unturned.ObjectManager.html": {
    "href": "api/SDG.Unturned.ObjectManager.html",
    "title": "Class ObjectManager | Unturned Analyse Doc",
    "keywords": "Class ObjectManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ObjectManager : SteamCaller Inheritance object SteamCaller ObjectManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors ObjectManager() public ObjectManager() Fields OBJECT_REGIONS public static readonly byte OBJECT_REGIONS Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte onDamageObjectRequested public static DamageObjectRequestHandler onDamageObjectRequested Field Value DamageObjectRequestHandler Methods EnumerateClients_Remote(byte, byte) [Obsolete(\"Replaced by GatherRemoteClients\")] public static IEnumerable<ITransportConnection> EnumerateClients_Remote(byte x, byte y) Parameters x byte y byte Returns IEnumerable<ITransportConnection> GatherRemoteClientConnections(byte, byte) public static PooledTransportConnectionList GatherRemoteClientConnections(byte x, byte y) Parameters x byte y byte Returns PooledTransportConnectionList ReceiveClearRegionObjects(byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellClearRegionObjects\")] public static void ReceiveClearRegionObjects(byte x, byte y) Parameters x byte y byte ReceiveObjectBinaryState(byte, byte, ushort, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellToggleObjectBinaryState\")] public static void ReceiveObjectBinaryState(byte x, byte y, ushort index, bool isUsed) Parameters x byte y byte index ushort isUsed bool ReceiveObjectResourceState(byte, byte, ushort, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellObjectResource\")] public static void ReceiveObjectResourceState(byte x, byte y, ushort index, ushort amount) Parameters x byte y byte index ushort amount ushort ReceiveObjectRubble(byte, byte, ushort, byte, bool, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellObjectRubble\")] public static void ReceiveObjectRubble(byte x, byte y, ushort index, byte section, bool isAlive, Vector3 ragdoll) Parameters x byte y byte index ushort section byte isAlive bool ragdoll Vector3 ReceiveObjects(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveObjects(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTalkWithNpcRequest(in ServerInvocationContext, NetId) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 5)] public static void ReceiveTalkWithNpcRequest(in ServerInvocationContext context, NetId netId) Parameters context ServerInvocationContext netId NetId ReceiveToggleObjectBinaryStateRequest(in ServerInvocationContext, byte, byte, ushort, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askToggleObjectBinaryState\")] public static void ReceiveToggleObjectBinaryStateRequest(in ServerInvocationContext context, byte x, byte y, ushort index, bool isUsed) Parameters context ServerInvocationContext x byte y byte index ushort isUsed bool ReceiveUseObjectDropper(in ServerInvocationContext, byte, byte, ushort) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 5, legacyName = \"askUseObjectDropper\")] public static void ReceiveUseObjectDropper(in ServerInvocationContext context, byte x, byte y, ushort index) Parameters context ServerInvocationContext x byte y byte index ushort ReceiveUseObjectQuest(in ServerInvocationContext, byte, byte, ushort) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10, legacyName = \"askUseObjectQuest\")] public static void ReceiveUseObjectQuest(in ServerInvocationContext context, byte x, byte y, ushort index) Parameters context ServerInvocationContext x byte y byte index ushort askClearAllObjects() public static void askClearAllObjects() askClearRegionObjects(byte, byte) public static void askClearRegionObjects(byte x, byte y) Parameters x byte y byte askObjects(CSteamID, byte, byte) [Obsolete] public void askObjects(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte askToggleObjectBinaryState(CSteamID, byte, byte, ushort, bool) [Obsolete] public void askToggleObjectBinaryState(CSteamID steamID, byte x, byte y, ushort index, bool isUsed) Parameters steamID CSteamID x byte y byte index ushort isUsed bool askUseObjectDropper(CSteamID, byte, byte, ushort) [Obsolete] public void askUseObjectDropper(CSteamID steamID, byte x, byte y, ushort index) Parameters steamID CSteamID x byte y byte index ushort askUseObjectQuest(CSteamID, byte, byte, ushort) [Obsolete] public void askUseObjectQuest(CSteamID steamID, byte x, byte y, ushort index) Parameters steamID CSteamID x byte y byte index ushort damage(Transform, Vector3, byte, float, float, out EPlayerKill, out uint, CSteamID, EDamageOrigin, bool) public static void damage(Transform obj, Vector3 direction, byte section, float damage, float times, out EPlayerKill kill, out uint xp, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown, bool trackKill = true) Parameters obj Transform direction Vector3 section byte damage float times float kill EPlayerKill xp uint instigatorSteamID CSteamID damageOrigin EDamageOrigin trackKill bool forceObjectBinaryState(Transform, bool) public static void forceObjectBinaryState(Transform transform, bool isUsed) Parameters transform Transform isUsed bool getObject(byte, byte, ushort) public static LevelObject getObject(byte x, byte y, ushort index) Parameters x byte y byte index ushort Returns LevelObject getObjectsInRadius(Vector3, float, List<RegionCoordinate>, List<Transform>) public static void getObjectsInRadius(Vector3 center, float sqrRadius, List<RegionCoordinate> search, List<Transform> result) Parameters center Vector3 sqrRadius float search List<RegionCoordinate> result List<Transform> load() public static void load() save() public static void save() tellClearRegionObjects(CSteamID, byte, byte) [Obsolete] public void tellClearRegionObjects(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte tellObjectResource(CSteamID, byte, byte, ushort, ushort) [Obsolete] public void tellObjectResource(CSteamID steamID, byte x, byte y, ushort index, ushort amount) Parameters steamID CSteamID x byte y byte index ushort amount ushort tellObjectRubble(CSteamID, byte, byte, ushort, byte, bool, Vector3) [Obsolete] public void tellObjectRubble(CSteamID steamID, byte x, byte y, ushort index, byte section, bool isAlive, Vector3 ragdoll) Parameters steamID CSteamID x byte y byte index ushort section byte isAlive bool ragdoll Vector3 tellObjects(CSteamID) [Obsolete] public void tellObjects(CSteamID steamID) Parameters steamID CSteamID tellToggleObjectBinaryState(CSteamID, byte, byte, ushort, bool) [Obsolete] public void tellToggleObjectBinaryState(CSteamID steamID, byte x, byte y, ushort index, bool isUsed) Parameters steamID CSteamID x byte y byte index ushort isUsed bool toggleObjectBinaryState(Transform, bool) public static void toggleObjectBinaryState(Transform transform, bool isUsed) Parameters transform Transform isUsed bool tryGetRegion(Transform, out byte, out byte, out ushort) public static bool tryGetRegion(Transform transform, out byte x, out byte y, out ushort index) Parameters transform Transform x byte y byte index ushort Returns bool updateObjectResource(Transform, ushort, bool) public static void updateObjectResource(Transform transform, ushort amount, bool shouldSend) Parameters transform Transform amount ushort shouldSend bool useObjectDropper(Transform) public static void useObjectDropper(Transform transform) Parameters transform Transform useObjectQuest(Transform) public static void useObjectQuest(Transform transform) Parameters transform Transform Events OnQuestObjectUsed Invoked when askUseObjectQuest succeeds. public static event Action<Player, InteractableObject> OnQuestObjectUsed Event Type Action<Player, InteractableObject>"
  },
  "api/SDG.Unturned.ObjectManager_NetMethods.html": {
    "href": "api/SDG.Unturned.ObjectManager_NetMethods.html",
    "title": "Class ObjectManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class ObjectManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(ObjectManager))] public static class ObjectManager_NetMethods Inheritance object ObjectManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveClearRegionObjects_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClearRegionObjects\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClearRegionObjects_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveClearRegionObjects_Write(NetPakWriter, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveClearRegionObjects\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveClearRegionObjects_Write(NetPakWriter writer, byte x, byte y) Parameters writer NetPakWriter x byte y byte ReceiveObjectBinaryState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveObjectBinaryState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveObjectBinaryState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveObjectBinaryState_Write(NetPakWriter, byte, byte, ushort, bool) [NetInvokableGeneratedMethod(\"ReceiveObjectBinaryState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveObjectBinaryState_Write(NetPakWriter writer, byte x, byte y, ushort index, bool isUsed) Parameters writer NetPakWriter x byte y byte index ushort isUsed bool ReceiveObjectResourceState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveObjectResourceState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveObjectResourceState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveObjectResourceState_Write(NetPakWriter, byte, byte, ushort, ushort) [NetInvokableGeneratedMethod(\"ReceiveObjectResourceState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveObjectResourceState_Write(NetPakWriter writer, byte x, byte y, ushort index, ushort amount) Parameters writer NetPakWriter x byte y byte index ushort amount ushort ReceiveObjectRubble_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveObjectRubble\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveObjectRubble_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveObjectRubble_Write(NetPakWriter, byte, byte, ushort, byte, bool, Vector3) [NetInvokableGeneratedMethod(\"ReceiveObjectRubble\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveObjectRubble_Write(NetPakWriter writer, byte x, byte y, ushort index, byte section, bool isAlive, Vector3 ragdoll) Parameters writer NetPakWriter x byte y byte index ushort section byte isAlive bool ragdoll Vector3 ReceiveTalkWithNpcRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTalkWithNpcRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTalkWithNpcRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTalkWithNpcRequest_Write(NetPakWriter, NetId) [NetInvokableGeneratedMethod(\"ReceiveTalkWithNpcRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTalkWithNpcRequest_Write(NetPakWriter writer, NetId netId) Parameters writer NetPakWriter netId NetId ReceiveToggleObjectBinaryStateRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleObjectBinaryStateRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleObjectBinaryStateRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleObjectBinaryStateRequest_Write(NetPakWriter, byte, byte, ushort, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleObjectBinaryStateRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleObjectBinaryStateRequest_Write(NetPakWriter writer, byte x, byte y, ushort index, bool isUsed) Parameters writer NetPakWriter x byte y byte index ushort isUsed bool ReceiveUseObjectDropper_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUseObjectDropper\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUseObjectDropper_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveUseObjectDropper_Write(NetPakWriter, byte, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveUseObjectDropper\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUseObjectDropper_Write(NetPakWriter writer, byte x, byte y, ushort index) Parameters writer NetPakWriter x byte y byte index ushort ReceiveUseObjectQuest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUseObjectQuest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUseObjectQuest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveUseObjectQuest_Write(NetPakWriter, byte, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveUseObjectQuest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUseObjectQuest_Write(NetPakWriter writer, byte x, byte y, ushort index) Parameters writer NetPakWriter x byte y byte index ushort"
  },
  "api/SDG.Unturned.ObjectNPCAsset.html": {
    "href": "api/SDG.Unturned.ObjectNPCAsset.html",
    "title": "Class ObjectNPCAsset | Unturned Analyse Doc",
    "keywords": "Class ObjectNPCAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ObjectNPCAsset : ObjectAsset, IAssetErrorContext Inheritance object Asset ObjectAsset ObjectNPCAsset Implements IAssetErrorContext Inherited Members ObjectAsset._objectName ObjectAsset.type ObjectAsset.skyboxGameObject ObjectAsset.navGameObject ObjectAsset.slotsGameObject ObjectAsset.triggersGameObject ObjectAsset.isSnowshoe ObjectAsset.shouldExcludeFromCullingVolumes ObjectAsset.shouldExcludeFromLevelBatching ObjectAsset.chart ObjectAsset.isFuel ObjectAsset.isRefill ObjectAsset.isSoft ObjectAsset.causesFallDamage ObjectAsset.isCollisionImportant ObjectAsset.useScale ObjectAsset.lod ObjectAsset.lodBias ObjectAsset.cullingVolumeLocalPositionOffset ObjectAsset.cullingVolumeSizeOffset ObjectAsset.conditions ObjectAsset.interactability ObjectAsset.interactabilityRemote ObjectAsset.interactabilityDelay ObjectAsset.interactabilityHint ObjectAsset.interactabilityText ObjectAsset.interactabilityPower ObjectAsset.interactabilityEditor ObjectAsset.interactabilityNav ObjectAsset.interactabilityReset ObjectAsset.interactabilityResource ObjectAsset.interactabilityDrops ObjectAsset.interactabilityRewardID ObjectAsset.interactabilityEffectGuid ObjectAsset.interactabilityEffect ObjectAsset.interactabilityConditions ObjectAsset.interactabilityRewards ObjectAsset.rubble ObjectAsset.rubbleReset ObjectAsset.rubbleHealth ObjectAsset.rubbleEffectGuid ObjectAsset.rubbleEffect ObjectAsset.rubbleFinaleGuid ObjectAsset.rubbleFinale ObjectAsset.rubbleEditor ObjectAsset.rubbleRewardID ObjectAsset.rubbleBladeID ObjectAsset.rubbleRewardProbability ObjectAsset.rubbleRewardsMin ObjectAsset.rubbleRewardsMax ObjectAsset.rubbleRewardXP ObjectAsset.rubbleIsVulnerable ObjectAsset.rubbleProofExplosion ObjectAsset.foliage ObjectAsset.useWaterHeightTransparentSort ObjectAsset.materialPalette ObjectAsset.landmarkQuality ObjectAsset.shouldAddNightLightScript ObjectAsset.shouldAddKillTriggers ObjectAsset.allowStructures ObjectAsset.isGore ObjectAsset.christmasRedirect ObjectAsset.halloweenRedirect ObjectAsset.GetOrLoadModel() ObjectAsset.validateModel(GameObject) ObjectAsset.OnServerModelLoaded(GameObject) ObjectAsset.OnClientModelLoaded(GameObject) ObjectAsset.onNavGameObjectLoaded(GameObject) ObjectAsset.onSlotsGameObjectLoaded(GameObject) ObjectAsset.FindInteractabilityEffectAsset() ObjectAsset.FindInteractabilityDialogueAsset() ObjectAsset.FindRubbleEffectAsset() ObjectAsset.IsRubbleFinaleEffectRefNull() ObjectAsset.FindRubbleFinaleEffectAsset() ObjectAsset.getHolidayRedirect() ObjectAsset.getState() ObjectAsset.areConditionsMet(Player) ObjectAsset.areInteractabilityConditionsMet(Player) ObjectAsset.ApplyInteractabilityConditions(Player) ObjectAsset.GrantInteractabilityRewards(Player) ObjectAsset.recursivelyFixTag(GameObject, string, string) ObjectAsset.recursivelyFixLayer(GameObject, int, int) ObjectAsset.fixTagAndLayer(GameObject, string, int) ObjectAsset.applyInteractabilityConditions(Player, bool) ObjectAsset.grantInteractabilityRewards(Player, bool) ObjectAsset.objectName ObjectAsset.FriendlyName ObjectAsset.ShouldExcludeFromSatelliteCapture ObjectAsset.ShouldLoadNavOnServer ObjectAsset.ShouldLoadNavInEditor ObjectAsset.RubbleCanZombiesDamage ObjectAsset.RubbleZombieDamageMultiplier ObjectAsset.RubbleNavMode ObjectAsset.holidayRestriction ObjectAsset.assetCategory Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ObjectNPCAsset() public ObjectNPCAsset() Fields dialogueGuid public Guid dialogueGuid Field Value Guid primaryWeaponGuid public Guid primaryWeaponGuid Field Value Guid secondaryWeaponGuid public Guid secondaryWeaponGuid Field Value Guid tertiaryWeaponGuid public Guid tertiaryWeaponGuid Field Value Guid Properties IsLeftHanded public bool IsLeftHanded { get; protected set; } Property Value bool beard public byte beard { get; protected set; } Property Value byte christmasOutfit public NPCAssetOutfit christmasOutfit { get; protected set; } Property Value NPCAssetOutfit color public Color color { get; protected set; } Property Value Color currentOutfit public NPCAssetOutfit currentOutfit { get; } Property Value NPCAssetOutfit defaultOutfit public NPCAssetOutfit defaultOutfit { get; protected set; } Property Value NPCAssetOutfit dialogue public ushort dialogue { get; protected set; } Property Value ushort equipped public ESlotType equipped { get; protected set; } Property Value ESlotType face public byte face { get; protected set; } Property Value byte hair public byte hair { get; protected set; } Property Value byte halloweenOutfit public NPCAssetOutfit halloweenOutfit { get; protected set; } Property Value NPCAssetOutfit isBackward [Obsolete] public bool isBackward { get; protected set; } Property Value bool npcName public string npcName { get; protected set; } Property Value string playerKnowsNameFlagId If non-zero, NPC name is shown as ??? until bool flag is true. public ushort playerKnowsNameFlagId { get; protected set; } Property Value ushort pose public ENPCPose pose { get; protected set; } Property Value ENPCPose poseHeadOffset public float poseHeadOffset { get; protected set; } Property Value float poseLean public float poseLean { get; protected set; } Property Value float posePitch public float posePitch { get; protected set; } Property Value float primary [Obsolete] public ushort primary { get; protected set; } Property Value ushort secondary [Obsolete] public ushort secondary { get; protected set; } Property Value ushort skin public Color skin { get; protected set; } Property Value Color tertiary [Obsolete] public ushort tertiary { get; protected set; } Property Value ushort Methods FindDialogueAsset() public DialogueAsset FindDialogueAsset() Returns DialogueAsset GetNameShownToPlayer(Player) public string GetNameShownToPlayer(Player player) Parameters player Player Returns string IsDialogueRefNull() public bool IsDialogueRefNull() Returns bool PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local doesPlayerHaveAccessToVendor(Player, VendorAsset) [Obsolete(\"Server now tracks dialogue tree\")] public bool doesPlayerHaveAccessToVendor(Player player, VendorAsset vendorAsset) Parameters player Player vendorAsset VendorAsset Returns bool"
  },
  "api/SDG.Unturned.ObjectRegion.html": {
    "href": "api/SDG.Unturned.ObjectRegion.html",
    "title": "Class ObjectRegion | Unturned Analyse Doc",
    "keywords": "Class ObjectRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ObjectRegion Inheritance object ObjectRegion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ObjectRegion() public ObjectRegion() Fields isNetworked public bool isNetworked Field Value bool updateObjectIndex public ushort updateObjectIndex Field Value ushort"
  },
  "api/SDG.Unturned.OncePerFrameGuard.html": {
    "href": "api/SDG.Unturned.OncePerFrameGuard.html",
    "title": "Struct OncePerFrameGuard | Unturned Analyse Doc",
    "keywords": "Struct OncePerFrameGuard Namespace SDG.Unturned Assembly Assembly-CSharp.dll True once per frame, false otherwise. public struct OncePerFrameGuard Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Properties HasBeenConsumed public bool HasBeenConsumed { get; } Property Value bool Methods Consume() public bool Consume() Returns bool"
  },
  "api/SDG.Unturned.OneShotAudioDefinition.html": {
    "href": "api/SDG.Unturned.OneShotAudioDefinition.html",
    "title": "Class OneShotAudioDefinition | Unturned Analyse Doc",
    "keywords": "Class OneShotAudioDefinition Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class OneShotAudioDefinition : ScriptableObject Inheritance object OneShotAudioDefinition Constructors OneShotAudioDefinition() public OneShotAudioDefinition() Fields clips public List<AudioClip> clips Field Value List<AudioClip> maxPitch public float maxPitch Field Value float minPitch public float minPitch Field Value float volumeMultiplier public float volumeMultiplier Field Value float Methods GetRandomClip() public AudioClip GetRandomClip() Returns AudioClip"
  },
  "api/SDG.Unturned.OneShotAudioHandle.html": {
    "href": "api/SDG.Unturned.OneShotAudioHandle.html",
    "title": "Struct OneShotAudioHandle | Unturned Analyse Doc",
    "keywords": "Struct OneShotAudioHandle Namespace SDG.Unturned Assembly Assembly-CSharp.dll Wraps audio source to prevent caller from meddling with it, and to allow the implementation to change in the future if necessary. public struct OneShotAudioHandle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Methods Stop() public void Stop()"
  },
  "api/SDG.Unturned.OneShotAudioParameters.html": {
    "href": "api/SDG.Unturned.OneShotAudioParameters.html",
    "title": "Struct OneShotAudioParameters | Unturned Analyse Doc",
    "keywords": "Struct OneShotAudioParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct OneShotAudioParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors OneShotAudioParameters(AudioClip) 2D audio. public OneShotAudioParameters(AudioClip clip) Parameters clip AudioClip OneShotAudioParameters(Transform, AudioClip) public OneShotAudioParameters(Transform parent, AudioClip clip) Parameters parent Transform clip AudioClip OneShotAudioParameters(Vector3, AudioClip) public OneShotAudioParameters(Vector3 position, AudioClip clip) Parameters position Vector3 clip AudioClip OneShotAudioParameters(Vector3, AudioClip, Transform) public OneShotAudioParameters(Vector3 position, AudioClip clip, Transform parent) Parameters position Vector3 clip AudioClip parent Transform Fields clip public AudioClip clip Field Value AudioClip maxDistance public float maxDistance Field Value float minDistance public float minDistance Field Value float outputAudioMixerGroup public AudioMixerGroup outputAudioMixerGroup Field Value AudioMixerGroup parent Optional parent transform to attach the audio source to. public Transform parent Field Value Transform pitch public float pitch Field Value float position public Vector3 position Field Value Vector3 rolloffMode public AudioRolloffMode rolloffMode Field Value AudioRolloffMode spatialBlend 0 = 2D, 1 = 3D public float spatialBlend Field Value float volume public float volume Field Value float Methods Play() public OneShotAudioHandle Play() Returns OneShotAudioHandle RandomizePitch(float, float) public void RandomizePitch(float min, float max) Parameters min float max float RandomizeVolume(float, float) public void RandomizeVolume(float min, float max) Parameters min float max float SetLinearRolloff(float, float) public void SetLinearRolloff(float min, float max) Parameters min float max float SetSpatialBlend2D() public void SetSpatialBlend2D() SetSpatialBlend3D() public void SetSpatialBlend3D()"
  },
  "api/SDG.Unturned.OpenStorageRequestHandler.html": {
    "href": "api/SDG.Unturned.OpenStorageRequestHandler.html",
    "title": "Delegate OpenStorageRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate OpenStorageRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void OpenStorageRequestHandler(CSteamID instigator, InteractableStorage storage, ref bool shouldAllow) Parameters instigator CSteamID storage InteractableStorage shouldAllow bool Constructors OpenStorageRequestHandler(object, IntPtr) public OpenStorageRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, InteractableStorage, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigator, InteractableStorage storage, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigator CSteamID storage InteractableStorage shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(CSteamID, InteractableStorage, ref bool) public virtual void Invoke(CSteamID instigator, InteractableStorage storage, ref bool shouldAllow) Parameters instigator CSteamID storage InteractableStorage shouldAllow bool"
  },
  "api/SDG.Unturned.OptionsSettings.html": {
    "href": "api/SDG.Unturned.OptionsSettings.html",
    "title": "Class OptionsSettings | Unturned Analyse Doc",
    "keywords": "Class OptionsSettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class OptionsSettings Inheritance object OptionsSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors OptionsSettings() public OptionsSettings() Fields DEFAULT_AMBIENT_MUSIC_VOLUME public const float DEFAULT_AMBIENT_MUSIC_VOLUME = 0.7 Field Value float DEFAULT_ATMOSPHERE_VOLUME public const float DEFAULT_ATMOSPHERE_VOLUME = 0.7 Field Value float DEFAULT_DEATH_MUSIC_VOLUME public const float DEFAULT_DEATH_MUSIC_VOLUME = 0.7 Field Value float DEFAULT_MAIN_MENU_MUSIC_VOLUME public const float DEFAULT_MAIN_MENU_MUSIC_VOLUME = 0.7 Field Value float DEFAULT_MASTER_VOLUME public const float DEFAULT_MASTER_VOLUME = 1 Field Value float DEFAULT_MUSIC_MASTER_VOLUME public const float DEFAULT_MUSIC_MASTER_VOLUME = 0.7 Field Value float DEFAULT_UNFOCUSED_VOLUME public const float DEFAULT_UNFOCUSED_VOLUME = 0.5 Field Value float MAX_FOV public static readonly byte MAX_FOV Field Value byte MIN_FOV public static readonly byte MIN_FOV Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte ambience public static bool ambience Field Value bool ambientMusicVolume public static float ambientMusicVolume Field Value float cameraShakeIntensity [0, 1] Multiplier for shake from cameraShakeMagnitudeDegrees. public static float cameraShakeIntensity Field Value float chatText public static bool chatText Field Value bool chatVoiceIn public static bool chatVoiceIn Field Value bool chatVoiceOut public static bool chatVoiceOut Field Value bool criticalHitmarkerColor public static Color criticalHitmarkerColor Field Value Color crosshairColor public static Color crosshairColor Field Value Color crosshairShape public static ECrosshairShape crosshairShape Field Value ECrosshairShape damageFlinchIntensity Multiplier for flinch away from damage source in SDG.Unturned.PlayerLook.FlinchFromDamage(System.Byte,UnityEngine.Vector3). public static float damageFlinchIntensity Field Value float damageFlinchMode Controls whether camera is constrained to roll-only or all axes. public static EDamageFlinchMode damageFlinchMode Field Value EDamageFlinchMode deathMusicVolume public static float deathMusicVolume Field Value float debug public static bool debug Field Value bool enableScreenshotSupersampling public static bool enableScreenshotSupersampling Field Value bool enableScreenshotsOnLoadingScreen public static bool enableScreenshotsOnLoadingScreen Field Value bool featuredWorkshop public static bool featuredWorkshop Field Value bool filter public static bool filter Field Value bool flashbangBrightness [0, 1] Blend factor between black and flashbang's desired color. public static float flashbangBrightness Field Value float gore public static bool gore Field Value bool hints public static bool hints Field Value bool hitmarker [Obsolete(\"Renamed to ShouldHitmarkersFollowWorldPosition\")] public static bool hitmarker Field Value bool hitmarkerColor public static Color hitmarkerColor Field Value Color hitmarkerStyle Controls whether hitmarkers are animated outward (newer) or just a static image (\"classic\"). public static EHitmarkerStyle hitmarkerStyle Field Value EHitmarkerStyle loadingScreenMusicVolume public static float loadingScreenMusicVolume Field Value float onlineSafetyMenuProceedCount Number of times the player has clicked \"Proceed\" in the online safety menu. public static int onlineSafetyMenuProceedCount Field Value int pauseWhenUnfocused public static bool pauseWhenUnfocused Field Value bool screenshotSizeMultiplier public static int screenshotSizeMultiplier Field Value int shouldNametagFadeOut If true, group member name labels fade out when near the center of the screen. Defaults to true. public static bool shouldNametagFadeOut Field Value bool showHotbar public static bool showHotbar Field Value bool splashscreen public static bool splashscreen Field Value bool staticCrosshairSize public static float staticCrosshairSize Field Value float streamer public static bool streamer Field Value bool talk public static bool talk Field Value bool timer public static bool timer Field Value bool useStaticCrosshair public static bool useStaticCrosshair Field Value bool vehicleAircraftThirdPersonCameraMode Determines how camera follows aircraft vehicle in third-person view. public static EVehicleThirdPersonCameraMode vehicleAircraftThirdPersonCameraMode Field Value EVehicleThirdPersonCameraMode vehicleThirdPersonCameraMode Determines how camera follows vehicle in third-person view. public static EVehicleThirdPersonCameraMode vehicleThirdPersonCameraMode Field Value EVehicleThirdPersonCameraMode volume public static float volume Field Value float wantsToHideOnlineSafetyMenu If true, \"don't show again\" is checked in the online safety menu. public static bool wantsToHideOnlineSafetyMenu Field Value bool Properties AtmosphereVolume public static float AtmosphereVolume { get; set; } Property Value float DesiredVerticalFieldOfView public static float DesiredVerticalFieldOfView { get; } Property Value float MainMenuMusicVolume public static float MainMenuMusicVolume { get; set; } Property Value float MusicMasterVolume public static float MusicMasterVolume { get; set; } Property Value float ShouldHitmarkersFollowWorldPosition public static bool ShouldHitmarkersFollowWorldPosition { get; set; } Property Value bool UnfocusedVolume public static float UnfocusedVolume { get; set; } Property Value float VoiceAlwaysRecording If false, call Start and Stop recording before and after push-to-talk key is pressed. This was the original default behavior, but causes a hitch for some players. As a workaround we can always keep the microphone rolling and only send data when the push-to-talk key is held. (public issue #4248) public static bool VoiceAlwaysRecording { get; set; } Property Value bool backgroundColor public static Color backgroundColor { get; set; } Property Value Color badColor public static Color badColor { get; set; } Property Value Color cursorColor public static Color cursorColor { get; set; } Property Value Color fontColor public static Color fontColor { get; set; } Property Value Color foregroundColor public static Color foregroundColor { get; set; } Property Value Color fov public static float fov { get; set; } Property Value float gameVolume public static float gameVolume { get; set; } Property Value float metric public static bool metric { get; set; } Property Value bool proUI public static bool proUI { get; set; } Property Value bool shadowColor public static Color shadowColor { get; set; } Property Value Color voiceVolume public static float voiceVolume { get; set; } Property Value float Methods GetZoomBaseFieldOfView() Prior to 3.22.8.0 all scopes/optics had a base fov of 90 degrees. public static float GetZoomBaseFieldOfView() Returns float RestoreAudioDefaults() public static void RestoreAudioDefaults() apply() public static void apply() load() public static void load() restoreDefaults() public static void restoreDefaults() save() public static void save() Events OnCustomColorsChanged Invoked when custom UI colors are set. public static event Action OnCustomColorsChanged Event Type Action OnThemeChanged Invoked when dark/light theme is set. public static event Action OnThemeChanged Event Type Action OnUnitSystemChanged public static event Action OnUnitSystemChanged Event Type Action OnVoiceAlwaysRecordingChanged public static event Action OnVoiceAlwaysRecordingChanged Event Type Action"
  },
  "api/SDG.Unturned.OutfitAsset.html": {
    "href": "api/SDG.Unturned.OutfitAsset.html",
    "title": "Class OutfitAsset | Unturned Analyse Doc",
    "keywords": "Class OutfitAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class OutfitAsset : Asset, IAssetErrorContext Inheritance object Asset OutfitAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors OutfitAsset() public OutfitAsset() Fields itemAssets public AssetReference<ItemAsset>[] itemAssets Field Value AssetReference<ItemAsset>[] Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.OxygenBubble.html": {
    "href": "api/SDG.Unturned.OxygenBubble.html",
    "title": "Class OxygenBubble | Unturned Analyse Doc",
    "keywords": "Class OxygenBubble Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class OxygenBubble Inheritance object OxygenBubble Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors OxygenBubble(Transform, float) public OxygenBubble(Transform newOrigin, float newSqrRadius) Parameters newOrigin Transform newSqrRadius float Fields origin public Transform origin Field Value Transform sqrRadius public float sqrRadius Field Value float"
  },
  "api/SDG.Unturned.OxygenManager.html": {
    "href": "api/SDG.Unturned.OxygenManager.html",
    "title": "Class OxygenManager | Unturned Analyse Doc",
    "keywords": "Class OxygenManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class OxygenManager : MonoBehaviour Inheritance object OxygenManager Constructors OxygenManager() public OxygenManager() Methods checkPointBreathable(Vector3) public static bool checkPointBreathable(Vector3 point) Parameters point Vector3 Returns bool deregisterBubble(OxygenBubble) public static void deregisterBubble(OxygenBubble bubble) Parameters bubble OxygenBubble registerBubble(Transform, float) public static OxygenBubble registerBubble(Transform origin, float radius) Parameters origin Transform radius float Returns OxygenBubble"
  },
  "api/SDG.Unturned.OxygenUpdated.html": {
    "href": "api/SDG.Unturned.OxygenUpdated.html",
    "title": "Delegate OxygenUpdated | Unturned Analyse Doc",
    "keywords": "Delegate OxygenUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void OxygenUpdated(byte newOxygen) Parameters newOxygen byte Constructors OxygenUpdated(object, IntPtr) public OxygenUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte newOxygen, AsyncCallback callback, object @object) Parameters newOxygen byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte) public virtual void Invoke(byte newOxygen) Parameters newOxygen byte"
  },
  "api/SDG.Unturned.OxygenVolume.html": {
    "href": "api/SDG.Unturned.OxygenVolume.html",
    "title": "Class OxygenVolume | Unturned Analyse Doc",
    "keywords": "Class OxygenVolume Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class OxygenVolume : LevelVolume<OxygenVolume, OxygenVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<OxygenVolume, OxygenVolumeManager> OxygenVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<OxygenVolume, OxygenVolumeManager>.falloffDistance LevelVolume<OxygenVolume, OxygenVolumeManager>.editorGameObject LevelVolume<OxygenVolume, OxygenVolumeManager>.editorMeshFilter LevelVolume<OxygenVolume, OxygenVolumeManager>.editorMeshRenderer LevelVolume<OxygenVolume, OxygenVolumeManager>.forceShouldAddCollider LevelVolume<OxygenVolume, OxygenVolumeManager>.supportsBoxShape LevelVolume<OxygenVolume, OxygenVolumeManager>.supportsSphereShape LevelVolume<OxygenVolume, OxygenVolumeManager>.supportsFalloff LevelVolume<OxygenVolume, OxygenVolumeManager>.CreateMenu() LevelVolume<OxygenVolume, OxygenVolumeManager>.beginSelection(InteractionData) LevelVolume<OxygenVolume, OxygenVolumeManager>.endSelection(InteractionData) LevelVolume<OxygenVolume, OxygenVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<OxygenVolume, OxygenVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<OxygenVolume, OxygenVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<OxygenVolume, OxygenVolumeManager>.GetBoxSize() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetBoxExtents() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetInnerBoxSize() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetInnerBoxExtents() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetLocalInnerBoxSize() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetSphereRadius() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetLocalSphereRadius() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<OxygenVolume, OxygenVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<OxygenVolume, OxygenVolumeManager>.SetSphereRadius(float) LevelVolume<OxygenVolume, OxygenVolumeManager>.CalculateWorldBounds() LevelVolume<OxygenVolume, OxygenVolumeManager>.CalculateLocalBounds() LevelVolume<OxygenVolume, OxygenVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<OxygenVolume, OxygenVolumeManager>.OnEnable() LevelVolume<OxygenVolume, OxygenVolumeManager>.OnDisable() LevelVolume<OxygenVolume, OxygenVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<OxygenVolume, OxygenVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<OxygenVolume, OxygenVolumeManager>.Awake() LevelVolume<OxygenVolume, OxygenVolumeManager>.Start() LevelVolume<OxygenVolume, OxygenVolumeManager>.OnDestroy() LevelVolume<OxygenVolume, OxygenVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<OxygenVolume, OxygenVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors OxygenVolume() public OxygenVolume() Properties isBreathable If true oxygen is restored while in this volume, otherwise if false oxygen is depleted. public bool isBreathable { get; set; } Property Value bool Methods Awake() protected override void Awake() CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.OxygenVolumeManager.html": {
    "href": "api/SDG.Unturned.OxygenVolumeManager.html",
    "title": "Class OxygenVolumeManager | Unturned Analyse Doc",
    "keywords": "Class OxygenVolumeManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll Overrides breathability for example in a deep cave with no oxygen, or near a deep sea plant that provides oxygen. public class OxygenVolumeManager : VolumeManager<OxygenVolume, OxygenVolumeManager> Inheritance object VolumeManagerBase VolumeManager<OxygenVolume, OxygenVolumeManager> OxygenVolumeManager Inherited Members VolumeManager<OxygenVolume, OxygenVolumeManager>.allowInstantiation VolumeManager<OxygenVolume, OxygenVolumeManager>.supportsFalloff VolumeManager<OxygenVolume, OxygenVolumeManager>.allVolumes VolumeManager<OxygenVolume, OxygenVolumeManager>.Get() VolumeManager<OxygenVolume, OxygenVolumeManager>.GetAllVolumes() VolumeManager<OxygenVolume, OxygenVolumeManager>.GetRandomVolumeOrNull() VolumeManager<OxygenVolume, OxygenVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<OxygenVolume, OxygenVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<OxygenVolume, OxygenVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<OxygenVolume, OxygenVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<OxygenVolume, OxygenVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<OxygenVolume, OxygenVolumeManager>.EnumerateAllVolumes() VolumeManager<OxygenVolume, OxygenVolumeManager>.Raycast(Ray, out RaycastHit, out OxygenVolume, float) VolumeManager<OxygenVolume, OxygenVolumeManager>.AddVolume(OxygenVolume) VolumeManager<OxygenVolume, OxygenVolumeManager>.RemoveVolume(OxygenVolume) VolumeManager<OxygenVolume, OxygenVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<OxygenVolume, OxygenVolumeManager>.SetDebugColor(Color) VolumeManager<OxygenVolume, OxygenVolumeManager>.Visibility VolumeManager<OxygenVolume, OxygenVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors OxygenVolumeManager() public OxygenVolumeManager() Methods AddVolume(OxygenVolume) public override void AddVolume(OxygenVolume volume) Parameters volume OxygenVolume IsPositionInsideBreathableVolume(Vector3, out float) Find highest alpha breathable volume overlapping position. public bool IsPositionInsideBreathableVolume(Vector3 position, out float maxAlpha) Parameters position Vector3 maxAlpha float Returns bool IsPositionInsideNonBreathableVolume(Vector3, out float) Find highest alpha non-breathable volume overlapping position. public bool IsPositionInsideNonBreathableVolume(Vector3 position, out float maxAlpha) Parameters position Vector3 maxAlpha float Returns bool RemoveVolume(OxygenVolume) public override void RemoveVolume(OxygenVolume volume) Parameters volume OxygenVolume"
  },
  "api/SDG.Unturned.PackInfo.html": {
    "href": "api/SDG.Unturned.PackInfo.html",
    "title": "Class PackInfo | Unturned Analyse Doc",
    "keywords": "Class PackInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PackInfo Inheritance object PackInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PackInfo() public PackInfo() Properties animals public List<Animal> animals { get; } Property Value List<Animal> spawns public List<AnimalSpawnpoint> spawns { get; } Property Value List<AnimalSpawnpoint> wanderAngle public float wanderAngle { get; set; } Property Value float Methods getAverageAnimalPoint() public Vector3 getAverageAnimalPoint() Returns Vector3 getAverageSpawnPoint() public Vector3 getAverageSpawnPoint() Returns Vector3 getWanderDirection() public Vector3 getWanderDirection() Returns Vector3"
  },
  "api/SDG.Unturned.PaintVehicleRequestHandler.html": {
    "href": "api/SDG.Unturned.PaintVehicleRequestHandler.html",
    "title": "Delegate PaintVehicleRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate PaintVehicleRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PaintVehicleRequestHandler(InteractableVehicle vehicle, Player instigatingPlayer, ref bool shouldAllow, ref Color32 desiredColor) Parameters vehicle InteractableVehicle instigatingPlayer Player shouldAllow bool desiredColor Color32 Constructors PaintVehicleRequestHandler(object, IntPtr) public PaintVehicleRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableVehicle, Player, ref bool, ref Color32, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool shouldAllow, ref Color32 desiredColor, AsyncCallback callback, object @object) Parameters vehicle InteractableVehicle instigatingPlayer Player shouldAllow bool desiredColor Color32 callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref Color32, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, ref Color32 desiredColor, IAsyncResult result) Parameters shouldAllow bool desiredColor Color32 result IAsyncResult Invoke(InteractableVehicle, Player, ref bool, ref Color32) public virtual void Invoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool shouldAllow, ref Color32 desiredColor) Parameters vehicle InteractableVehicle instigatingPlayer Player shouldAllow bool desiredColor Color32"
  },
  "api/SDG.Unturned.PaintableVehicleSection.html": {
    "href": "api/SDG.Unturned.PaintableVehicleSection.html",
    "title": "Struct PaintableVehicleSection | Unturned Analyse Doc",
    "keywords": "Struct PaintableVehicleSection Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct PaintableVehicleSection : IDatParseable Implements IDatParseable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields allMaterials If true, apply to every item in renderer's materials array. public bool allMaterials Field Value bool materialIndex Index in renderer's materials array. public int materialIndex Field Value int path Scene hierarchy path relative to vehicle root. public string path Field Value string Methods TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool"
  },
  "api/SDG.Unturned.Palette.html": {
    "href": "api/SDG.Unturned.Palette.html",
    "title": "Class Palette | Unturned Analyse Doc",
    "keywords": "Class Palette Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Palette Inheritance object Palette Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Palette() public Palette() Fields ADMIN public static readonly Color ADMIN Field Value Color AMBIENT public static readonly Color AMBIENT Field Value Color COLOR_B public static readonly Color COLOR_B Field Value Color COLOR_G public static readonly Color COLOR_G Field Value Color COLOR_O public static readonly Color COLOR_O Field Value Color COLOR_P public static readonly Color COLOR_P Field Value Color COLOR_R public static readonly Color COLOR_R Field Value Color COLOR_W public static readonly Color COLOR_W Field Value Color COLOR_Y public static readonly Color COLOR_Y Field Value Color MYTHICAL public static readonly Color MYTHICAL Field Value Color PRO public static readonly Color PRO Field Value Color SERVER public static readonly Color SERVER Field Value Color Methods hex(string) public static Color hex(string color) Parameters color string Returns Color hex(Color32) public static string hex(Color32 color) Parameters color Color32 Returns string"
  },
  "api/SDG.Unturned.PantsUpdated.html": {
    "href": "api/SDG.Unturned.PantsUpdated.html",
    "title": "Delegate PantsUpdated | Unturned Analyse Doc",
    "keywords": "Delegate PantsUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PantsUpdated(ushort newPants, byte newPantsQuality, byte[] newPantsState) Parameters newPants ushort newPantsQuality byte newPantsState byte[] Constructors PantsUpdated(object, IntPtr) public PantsUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, byte, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort newPants, byte newPantsQuality, byte[] newPantsState, AsyncCallback callback, object @object) Parameters newPants ushort newPantsQuality byte newPantsState byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort, byte, byte[]) public virtual void Invoke(ushort newPants, byte newPantsQuality, byte[] newPantsState) Parameters newPants ushort newPantsQuality byte newPantsState byte[]"
  },
  "api/SDG.Unturned.Parser.html": {
    "href": "api/SDG.Unturned.Parser.html",
    "title": "Class Parser | Unturned Analyse Doc",
    "keywords": "Class Parser Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Parser Inheritance object Parser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Parser() public Parser() Methods TryGetUInt32FromIP(string, out uint) public static bool TryGetUInt32FromIP(string ip, out uint value) Parameters ip string value uint Returns bool checkIP(string) public static bool checkIP(string ip) Parameters ip string Returns bool getComponentsFromSerial(string, char) public static string[] getComponentsFromSerial(string serial, char delimiter) Parameters serial string delimiter char Returns string[] getIPFromUInt32(uint) public static string getIPFromUInt32(uint ip) Parameters ip uint Returns string getSerialFromComponents(char, params object[]) public static string getSerialFromComponents(char delimiter, params object[] components) Parameters delimiter char components object[] Returns string getUInt32FromIP(string) public static uint getUInt32FromIP(string ip) Parameters ip string Returns uint trySplitEnd(string, out string, out string) public static bool trySplitEnd(string serial, out string start, out string end) Parameters serial string start string end string Returns bool trySplitStart(string, out string, out string) public static bool trySplitStart(string serial, out string start, out string end) Parameters serial string start string end string Returns bool"
  },
  "api/SDG.Unturned.ParticleSystemCollisionAudio.html": {
    "href": "api/SDG.Unturned.ParticleSystemCollisionAudio.html",
    "title": "Class ParticleSystemCollisionAudio | Unturned Analyse Doc",
    "keywords": "Class ParticleSystemCollisionAudio Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ParticleSystemCollisionAudio : MonoBehaviour Inheritance object ParticleSystemCollisionAudio Constructors ParticleSystemCollisionAudio() public ParticleSystemCollisionAudio() Fields audioDef public OneShotAudioDefinition audioDef Field Value OneShotAudioDefinition materialPropertyName If set, audio clip associated with physics material will take priority. public string materialPropertyName Field Value string maxSpeed public float maxSpeed Field Value float maxVolume public float maxVolume Field Value float minSpeed public float minSpeed Field Value float minVolume public float minVolume Field Value float particleSystemComponent public ParticleSystem particleSystemComponent Field Value ParticleSystem speedThreshold Collision with speed lower than this value will not play a sound. public float speedThreshold Field Value float"
  },
  "api/SDG.Unturned.Passenger.html": {
    "href": "api/SDG.Unturned.Passenger.html",
    "title": "Class Passenger | Unturned Analyse Doc",
    "keywords": "Class Passenger Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Passenger Inheritance object Passenger Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Passenger(Transform, Transform, Transform, Transform, Transform) public Passenger(Transform newSeat, Transform newObj, Transform newTurretYaw, Transform newTurretPitch, Transform newTurretAim) Parameters newSeat Transform newObj Transform newTurretYaw Transform newTurretPitch Transform newTurretAim Transform Fields player public SteamPlayer player Field Value SteamPlayer state public byte[] state Field Value byte[] turret public TurretInfo turret Field Value TurretInfo turretEventHook Optional component on Turret_# GameObject for modding UnityEvents. public VehicleTurretEventHook turretEventHook Field Value VehicleTurretEventHook Properties obj public Transform obj { get; } Property Value Transform rotationPitch public Quaternion rotationPitch { get; } Property Value Quaternion rotationYaw public Quaternion rotationYaw { get; } Property Value Quaternion seat public Transform seat { get; } Property Value Transform turretAim public Transform turretAim { get; } Property Value Transform turretPitch public Transform turretPitch { get; } Property Value Transform turretYaw public Transform turretYaw { get; } Property Value Transform"
  },
  "api/SDG.Unturned.PerspectiveUpdated.html": {
    "href": "api/SDG.Unturned.PerspectiveUpdated.html",
    "title": "Delegate PerspectiveUpdated | Unturned Analyse Doc",
    "keywords": "Delegate PerspectiveUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PerspectiveUpdated(EPlayerPerspective newPerspective) Parameters newPerspective EPlayerPerspective Constructors PerspectiveUpdated(object, IntPtr) public PerspectiveUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EPlayerPerspective, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EPlayerPerspective newPerspective, AsyncCallback callback, object @object) Parameters newPerspective EPlayerPerspective callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EPlayerPerspective) public virtual void Invoke(EPlayerPerspective newPerspective) Parameters newPerspective EPlayerPerspective"
  },
  "api/SDG.Unturned.PhysicsEx.html": {
    "href": "api/SDG.Unturned.PhysicsEx.html",
    "title": "Class PhysicsEx | Unturned Analyse Doc",
    "keywords": "Class PhysicsEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll Extensions to the built-in Physics class. Shares similar functionality to the SDG.Framework.Utilities.PhysicsUtility class, but that should be moved here because the \"framework\" is unused and and the long name is annoying. public static class PhysicsEx Inheritance object PhysicsEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Raycast(Ray, out RaycastHit, float, int, QueryTriggerInteraction) Wrapper that respects landscape hole volumes. [Obsolete(\"Hole collision is handled by Unity now\")] public static bool Raycast(Ray ray, out RaycastHit hit, float maxDistance = Infinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters ray Ray hit RaycastHit maxDistance float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns bool Raycast(Vector3, Vector3, out RaycastHit, float, int, QueryTriggerInteraction) Wrapper that respects landscape hole volumes. [Obsolete(\"Hole collision is handled by Unity now\")] public static bool Raycast(Vector3 origin, Vector3 direction, out RaycastHit hit, float maxDistance = Infinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters origin Vector3 direction Vector3 hit RaycastHit maxDistance float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns bool SphereCast(Ray, float, out RaycastHit, float, int, QueryTriggerInteraction) Wrapper that respects landscape hole volumes. [Obsolete(\"Hole collision is handled by Unity now\")] public static bool SphereCast(Ray ray, float radius, out RaycastHit hitInfo, float maxDistance = Infinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters ray Ray radius float hitInfo RaycastHit maxDistance float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns bool SphereCast(Vector3, float, Vector3, out RaycastHit, float, int, QueryTriggerInteraction) Wrapper that respects landscape hole volumes. [Obsolete(\"Hole collision is handled by Unity now\")] public static bool SphereCast(Vector3 origin, float radius, Vector3 direction, out RaycastHit hitInfo, float maxDistance = Infinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = 0) Parameters origin Vector3 radius float direction Vector3 hitInfo RaycastHit maxDistance float layerMask int queryTriggerInteraction QueryTriggerInteraction Returns bool"
  },
  "api/SDG.Unturned.PhysicsMaterialAsset.html": {
    "href": "api/SDG.Unturned.PhysicsMaterialAsset.html",
    "title": "Class PhysicsMaterialAsset | Unturned Analyse Doc",
    "keywords": "Class PhysicsMaterialAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Expands upon Unity physics material properties for gameplay features. public class PhysicsMaterialAsset : PhysicsMaterialAssetBase, IAssetErrorContext Inheritance object Asset PhysicsMaterialAssetBase PhysicsMaterialAsset Implements IAssetErrorContext Inherited Members PhysicsMaterialAssetBase.audioDefs Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PhysicsMaterialAsset() public PhysicsMaterialAsset() Fields bulletImpactEffect public AssetReference<EffectAsset> bulletImpactEffect Field Value AssetReference<EffectAsset> characterAccelerationMultiplier For custom friction mode, multiplies character acceleration. public float? characterAccelerationMultiplier Field Value float? characterDecelerationMultiplier For custom friction mode, multiplies character deceleration. public float? characterDecelerationMultiplier Field Value float? characterFrictionMode public EPhysicsMaterialCharacterFrictionMode characterFrictionMode Field Value EPhysicsMaterialCharacterFrictionMode characterMaxSpeedMultiplier For custom friction mode, multiplies character max speed. public float? characterMaxSpeedMultiplier Field Value float? fallbackRef public AssetReference<PhysicsMaterialAsset> fallbackRef Field Value AssetReference<PhysicsMaterialAsset> hasOil If true, oil drills can be placed on this material. public bool? hasOil Field Value bool? isArable If true, crops can be planted on this material. public bool? isArable Field Value bool? physicMaterialNames Originally considered assets for each legacy material with fallback to main material, but the fallback would mean a failed lookup for every property in the vast majority of cases. public string[] physicMaterialNames Field Value string[] tireMotionEffect public AssetReference<EffectAsset> tireMotionEffect Field Value AssetReference<EffectAsset> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.PhysicsMaterialAssetBase.html": {
    "href": "api/SDG.Unturned.PhysicsMaterialAssetBase.html",
    "title": "Class PhysicsMaterialAssetBase | Unturned Analyse Doc",
    "keywords": "Class PhysicsMaterialAssetBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll Properties common to asset and extensions. For example both can specify sounds. public class PhysicsMaterialAssetBase : Asset, IAssetErrorContext Inheritance object Asset PhysicsMaterialAssetBase Implements IAssetErrorContext Derived PhysicsMaterialAsset PhysicsMaterialExtensionAsset Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PhysicsMaterialAssetBase() public PhysicsMaterialAssetBase() Fields audioDefs public Dictionary<string, MasterBundleReference<OneShotAudioDefinition>> audioDefs Field Value Dictionary<string, MasterBundleReference<OneShotAudioDefinition>> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.PhysicsMaterialExtensionAsset.html": {
    "href": "api/SDG.Unturned.PhysicsMaterialExtensionAsset.html",
    "title": "Class PhysicsMaterialExtensionAsset | Unturned Analyse Doc",
    "keywords": "Class PhysicsMaterialExtensionAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Adds custom data to base physics material asset. For example how a vanilla material should respond to custom laser guns. public class PhysicsMaterialExtensionAsset : PhysicsMaterialAssetBase, IAssetErrorContext Inheritance object Asset PhysicsMaterialAssetBase PhysicsMaterialExtensionAsset Implements IAssetErrorContext Inherited Members PhysicsMaterialAssetBase.audioDefs Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PhysicsMaterialExtensionAsset() public PhysicsMaterialExtensionAsset() Fields baseRef public AssetReference<PhysicsMaterialAsset> baseRef Field Value AssetReference<PhysicsMaterialAsset> Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.PhysicsMaterialNetId.html": {
    "href": "api/SDG.Unturned.PhysicsMaterialNetId.html",
    "title": "Struct PhysicsMaterialNetId | Unturned Analyse Doc",
    "keywords": "Struct PhysicsMaterialNetId Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct PhysicsMaterialNetId : IEquatable<PhysicsMaterialNetId> Implements IEquatable<PhysicsMaterialNetId> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors PhysicsMaterialNetId(uint) public PhysicsMaterialNetId(uint id) Parameters id uint Fields NULL public static readonly PhysicsMaterialNetId NULL Field Value PhysicsMaterialNetId id public uint id Field Value uint Methods Clear() public void Clear() Equals(PhysicsMaterialNetId) public bool Equals(PhysicsMaterialNetId other) Parameters other PhysicsMaterialNetId Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int IsNull() Zero is treated as unset. public bool IsNull() Returns bool ToString() public override string ToString() Returns string Operators operator ==(PhysicsMaterialNetId, PhysicsMaterialNetId) public static bool operator ==(PhysicsMaterialNetId lhs, PhysicsMaterialNetId rhs) Parameters lhs PhysicsMaterialNetId rhs PhysicsMaterialNetId Returns bool operator !=(PhysicsMaterialNetId, PhysicsMaterialNetId) public static bool operator !=(PhysicsMaterialNetId lhs, PhysicsMaterialNetId rhs) Parameters lhs PhysicsMaterialNetId rhs PhysicsMaterialNetId Returns bool"
  },
  "api/SDG.Unturned.PhysicsMaterialNetIdPakEx.html": {
    "href": "api/SDG.Unturned.PhysicsMaterialNetIdPakEx.html",
    "title": "Class PhysicsMaterialNetIdPakEx | Unturned Analyse Doc",
    "keywords": "Class PhysicsMaterialNetIdPakEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class PhysicsMaterialNetIdPakEx Inheritance object PhysicsMaterialNetIdPakEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReadPhysicsMaterialName(NetPakReader, out string) public static bool ReadPhysicsMaterialName(this NetPakReader reader, out string materialName) Parameters reader NetPakReader materialName string Returns bool ReadPhysicsMaterialNetId(NetPakReader, out PhysicsMaterialNetId) public static bool ReadPhysicsMaterialNetId(this NetPakReader reader, out PhysicsMaterialNetId value) Parameters reader NetPakReader value PhysicsMaterialNetId Returns bool WritePhysicsMaterialName(NetPakWriter, string) public static bool WritePhysicsMaterialName(this NetPakWriter writer, string materialName) Parameters writer NetPakWriter materialName string Returns bool WritePhysicsMaterialNetId(NetPakWriter, PhysicsMaterialNetId) public static bool WritePhysicsMaterialNetId(this NetPakWriter writer, PhysicsMaterialNetId value) Parameters writer NetPakWriter value PhysicsMaterialNetId Returns bool"
  },
  "api/SDG.Unturned.PhysicsMaterialNetTable.html": {
    "href": "api/SDG.Unturned.PhysicsMaterialNetTable.html",
    "title": "Class PhysicsMaterialNetTable | Unturned Analyse Doc",
    "keywords": "Class PhysicsMaterialNetTable Namespace SDG.Unturned Assembly Assembly-CSharp.dll String table specifically for Unity physics material names. Implemented so that tires can more efficiently replicate which ground material they are touching. public static class PhysicsMaterialNetTable Inheritance object PhysicsMaterialNetTable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetMaterialName(PhysicsMaterialNetId) Get name of a physics material from network ID. Returns null if ID is null, e.g., if the sent name wasn't registered or was over the max material limit. public static string GetMaterialName(PhysicsMaterialNetId netId) Parameters netId PhysicsMaterialNetId Returns string GetNetId(string) Get an ID that can be used to reference a physics material name over the network. If given material name isn't supported (e.g., not registered in a PhysicsMaterialAsset or over max material limit) returns NULL instead. public static PhysicsMaterialNetId GetNetId(string materialName) Parameters materialName string Returns PhysicsMaterialNetId ReceiveMappings(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveMappings(in ClientInvocationContext context) Parameters context ClientInvocationContext"
  },
  "api/SDG.Unturned.PhysicsMaterialNetTable_NetMethods.html": {
    "href": "api/SDG.Unturned.PhysicsMaterialNetTable_NetMethods.html",
    "title": "Class PhysicsMaterialNetTable_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PhysicsMaterialNetTable_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PhysicsMaterialNetTable))] public static class PhysicsMaterialNetTable_NetMethods Inheritance object PhysicsMaterialNetTable_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/SDG.Unturned.PhysicsTool.html": {
    "href": "api/SDG.Unturned.PhysicsTool.html",
    "title": "Class PhysicsTool | Unturned Analyse Doc",
    "keywords": "Class PhysicsTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PhysicsTool Inheritance object PhysicsTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PhysicsTool() public PhysicsTool() Methods GetLegacyMaterialByName(string) Get legacy enum corresponding to Unity physics material object name. Moved from obsolete checkMaterial method. [Obsolete(\"Intended for backwards compatibility\")] public static EPhysicsMaterial GetLegacyMaterialByName(string name) Parameters name string Returns EPhysicsMaterial GetMaterialName(RaycastHit) public static string GetMaterialName(RaycastHit hit) Parameters hit RaycastHit Returns string GetMaterialName(Vector3, Transform, Collider) public static string GetMaterialName(Vector3 point, Transform transform, Collider collider) Parameters point Vector3 transform Transform collider Collider Returns string GetMaterialName(WheelHit) public static string GetMaterialName(WheelHit hit) Parameters hit WheelHit Returns string GetNameOfLegacyMaterial(EPhysicsMaterial) [Obsolete(\"Intended for backwards compatibility\")] public static string GetNameOfLegacyMaterial(EPhysicsMaterial material) Parameters material EPhysicsMaterial Returns string GetTerrainMaterialName(Vector3) public static string GetTerrainMaterialName(Vector3 position) Parameters position Vector3 Returns string checkMaterial(Collider) [Obsolete(\"Replaced by GetMaterialName\")] public static EPhysicsMaterial checkMaterial(Collider collider) Parameters collider Collider Returns EPhysicsMaterial checkMaterial(Vector3) [Obsolete(\"Replaced by GetTerrainMaterialName\")] public static EPhysicsMaterial checkMaterial(Vector3 point) Parameters point Vector3 Returns EPhysicsMaterial isMaterialDynamic(EPhysicsMaterial) [Obsolete(\"Network attachment removes the need for distinction between dynamic and static materials\")] public static bool isMaterialDynamic(EPhysicsMaterial material) Parameters material EPhysicsMaterial Returns bool"
  },
  "api/SDG.Unturned.PitchYawSnapshotInfo.html": {
    "href": "api/SDG.Unturned.PitchYawSnapshotInfo.html",
    "title": "Struct PitchYawSnapshotInfo | Unturned Analyse Doc",
    "keywords": "Struct PitchYawSnapshotInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct PitchYawSnapshotInfo : ISnapshotInfo<PitchYawSnapshotInfo> Implements ISnapshotInfo<PitchYawSnapshotInfo> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors PitchYawSnapshotInfo(Vector3, float, float) public PitchYawSnapshotInfo(Vector3 pos, float pitch, float yaw) Parameters pos Vector3 pitch float yaw float Fields pitch public float pitch Field Value float pos public Vector3 pos Field Value Vector3 yaw public float yaw Field Value float Methods lerp(PitchYawSnapshotInfo, float, out PitchYawSnapshotInfo) public void lerp(PitchYawSnapshotInfo target, float delta, out PitchYawSnapshotInfo result) Parameters target PitchYawSnapshotInfo delta float result PitchYawSnapshotInfo"
  },
  "api/SDG.Unturned.PlacedItem.html": {
    "href": "api/SDG.Unturned.PlacedItem.html",
    "title": "Delegate PlacedItem | Unturned Analyse Doc",
    "keywords": "Delegate PlacedItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlacedItem(byte page, byte x, byte y) Parameters page byte x byte y byte Constructors PlacedItem(object, IntPtr) public PlacedItem(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte x, byte y, AsyncCallback callback, object @object) Parameters page byte x byte y byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, byte) public virtual void Invoke(byte page, byte x, byte y) Parameters page byte x byte y byte"
  },
  "api/SDG.Unturned.PlaySettings.html": {
    "href": "api/SDG.Unturned.PlaySettings.html",
    "title": "Class PlaySettings | Unturned Analyse Doc",
    "keywords": "Class PlaySettings Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlaySettings Inheritance object PlaySettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlaySettings() public PlaySettings() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_INITIAL Version before named version constants were introduced. (2023-11-08) public const byte SAVEDATA_VERSION_INITIAL = 11 Field Value byte SAVEDATA_VERSION_REMOVED_MATCHMAKING public const byte SAVEDATA_VERSION_REMOVED_MATCHMAKING = 12 Field Value byte SAVEDATA_VERSION_REMOVED_SERVER_NAME_FILTER Moved into ServerListFilters. public const byte SAVEDATA_VERSION_REMOVED_SERVER_NAME_FILTER = 13 Field Value byte connectHost public static string connectHost Field Value string connectPassword public static string connectPassword Field Value string connectPort public static ushort connectPort Field Value ushort editorMap public static string editorMap Field Value string isVR public static bool isVR Field Value bool serversPassword public static string serversPassword Field Value string singleplayerCategory public static ESingleplayerMapCategory singleplayerCategory Field Value ESingleplayerMapCategory singleplayerCheats public static bool singleplayerCheats Field Value bool singleplayerMap public static string singleplayerMap Field Value string singleplayerMode public static EGameMode singleplayerMode Field Value EGameMode Methods load() public static void load() save() public static void save()"
  },
  "api/SDG.Unturned.Player.PlayerStatIncremented.html": {
    "href": "api/SDG.Unturned.Player.PlayerStatIncremented.html",
    "title": "Delegate Player.PlayerStatIncremented | Unturned Analyse Doc",
    "keywords": "Delegate Player.PlayerStatIncremented Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Player.PlayerStatIncremented(Player player, EPlayerStat stat) Parameters player Player stat EPlayerStat Constructors PlayerStatIncremented(object, IntPtr) public PlayerStatIncremented(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, EPlayerStat, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, EPlayerStat stat, AsyncCallback callback, object @object) Parameters player Player stat EPlayerStat callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, EPlayerStat) public virtual void Invoke(Player player, EPlayerStat stat) Parameters player Player stat EPlayerStat"
  },
  "api/SDG.Unturned.Player.PluginWidgetFlagsChanged.html": {
    "href": "api/SDG.Unturned.Player.PluginWidgetFlagsChanged.html",
    "title": "Delegate Player.PluginWidgetFlagsChanged | Unturned Analyse Doc",
    "keywords": "Delegate Player.PluginWidgetFlagsChanged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Player.PluginWidgetFlagsChanged(Player player, EPluginWidgetFlags oldFlags) Parameters player Player oldFlags EPluginWidgetFlags Constructors PluginWidgetFlagsChanged(object, IntPtr) public PluginWidgetFlagsChanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, EPluginWidgetFlags, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, EPluginWidgetFlags oldFlags, AsyncCallback callback, object @object) Parameters player Player oldFlags EPluginWidgetFlags callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, EPluginWidgetFlags) public virtual void Invoke(Player player, EPluginWidgetFlags oldFlags) Parameters player Player oldFlags EPluginWidgetFlags"
  },
  "api/SDG.Unturned.Player.html": {
    "href": "api/SDG.Unturned.Player.html",
    "title": "Class Player | Unturned Analyse Doc",
    "keywords": "Class Player Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Player : MonoBehaviour, IDialogueTarget, IExplosionDamageable, IEquatable<IExplosionDamageable> Inheritance object Player Implements IDialogueTarget IExplosionDamageable IEquatable<IExplosionDamageable> Constructors Player() public Player() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte _channel protected SteamChannel _channel Field Value SteamChannel agro public int agro Field Value int isLoadingClothing public static bool isLoadingClothing Field Value bool isLoadingInventory public static bool isLoadingInventory Field Value bool isLoadingLife public static bool isLoadingLife Field Value bool maxRateLimitedActionsPerSecond How many calls to tryToPerformRateLimitedAction() will succeed per second. public uint maxRateLimitedActionsPerSecond Field Value uint onPlayerCreated public static PlayerCreated onPlayerCreated Field Value PlayerCreated onPlayerSpyReady public PlayerSpyReady onPlayerSpyReady Field Value PlayerSpyReady onPlayerTeleported public PlayerTeleported onPlayerTeleported Field Value PlayerTeleported onSpyReady public static PlayerSpyReady onSpyReady Field Value PlayerSpyReady Properties AdminUsageFlags Which admin powers are currently in use by the client. Reported to the server by the client. Does not control which admin powers are available. Note: Hacks can prevent this notification from being sent. public EPlayerAdminUsageFlags AdminUsageFlags { get; } Property Value EPlayerAdminUsageFlags IsEligibleForExplosionDamage Used to exclude dead entities from further evaluation. public bool IsEligibleForExplosionDamage { get; } Property Value bool animator public PlayerAnimator animator { get; } Property Value PlayerAnimator channel public SteamChannel channel { get; } Property Value SteamChannel character public Transform character { get; } Property Value Transform clothing public PlayerClothing clothing { get; } Property Value PlayerClothing crafting public PlayerCrafting crafting { get; } Property Value PlayerCrafting equipment public PlayerEquipment equipment { get; } Property Value PlayerEquipment first public Transform first { get; } Property Value Transform inPluginModal Is this player currently in a plugin's modal dialog? Enables cursor movement while not in a vanilla menu. public bool inPluginModal { get; } Property Value bool input public PlayerInput input { get; } Property Value PlayerInput instance Exposed for Rocket transition to modules backwards compatibility. public static Player instance { get; } Property Value Player interact public PlayerInteract interact { get; } Property Value PlayerInteract inventory public PlayerInventory inventory { get; } Property Value PlayerInventory isLoading public static bool isLoading { get; } Property Value bool isSpotOn public bool isSpotOn { get; } Property Value bool life public PlayerLife life { get; } Property Value PlayerLife look public PlayerLook look { get; } Property Value PlayerLook movement public PlayerMovement movement { get; } Property Value PlayerMovement player public static Player player { get; } Property Value Player pluginWidgetFlags public EPluginWidgetFlags pluginWidgetFlags { get; protected set; } Property Value EPluginWidgetFlags quests public PlayerQuests quests { get; } Property Value PlayerQuests rateLimitedActionsCredits How many rate limited actions have been performed recently. Increased after performing each rate limited action, and decreased over time. Cannot perform actions when greater than one. public float rateLimitedActionsCredits { get; protected set; } Property Value float skills public PlayerSkills skills { get; } Property Value PlayerSkills stance public PlayerStance stance { get; } Property Value PlayerStance third public Transform third { get; } Property Value Transform voice public PlayerVoice voice { get; } Property Value PlayerVoice wantsBattlEyeLogs public bool wantsBattlEyeLogs { get; protected set; } Property Value bool workzone public PlayerWorkzone workzone { get; } Property Value PlayerWorkzone Methods ApplyExplosionDamage(in ExplosionParameters, ref ExplosionDamageParameters) public void ApplyExplosionDamage(in ExplosionParameters explosionParameters, ref ExplosionDamageParameters damageParameters) Parameters explosionParameters ExplosionParameters damageParameters ExplosionDamageParameters Equals(IExplosionDamageable) public bool Equals(IExplosionDamageable obj) Parameters obj IExplosionDamageable Returns bool FindStartingDialogueAsset() Called on server to find the start of conversation dialogue asset. public DialogueAsset FindStartingDialogueAsset() Returns DialogueAsset GetClosestPointToExplosion(Vector3) Used to sort damage from nearest to furthest. public Vector3 GetClosestPointToExplosion(Vector3 explosionCenter) Parameters explosionCenter Vector3 Returns Vector3 GetDialogueTargetDebugName() Used in error messages. public string GetDialogueTargetDebugName() Returns string GetDialogueTargetNameShownToPlayer(Player) Called on client to format in UI. public string GetDialogueTargetNameShownToPlayer(Player player) Parameters player Player Returns string GetDialogueTargetNetId() Get a net ID that can be used with GetDialogueTargetFromNetId to resolve IDialogueTarget in multiplayer. public NetId GetDialogueTargetNetId() Returns NetId GetDialogueTargetWorldPosition() Used to test whether player is within range. Ideally, this should be removed in the future in favor of the server resetting speaker when out of range. public Vector3 GetDialogueTargetWorldPosition() Returns Vector3 GetNetId() public NetId GetNetId() Returns NetId PlayAudioReference(AudioReference) public OneShotAudioHandle PlayAudioReference(AudioReference audioReference) Parameters audioReference AudioReference Returns OneShotAudioHandle ReceiveAchievementUnlocked(string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellAchievementUnlocked\")] public void ReceiveAchievementUnlocked(string id) Parameters id string ReceiveAdminUsageFlags(in ServerInvocationContext, uint) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 8)] public void ReceiveAdminUsageFlags(in ServerInvocationContext context, uint newFlagsBitmask) Parameters context ServerInvocationContext newFlagsBitmask uint ReceiveBattlEyeLogsRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 1, legacyName = \"askRequestBattlEyeLogs\")] public void ReceiveBattlEyeLogsRequest() ReceiveBrowserRequest(string, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askBrowserRequest\")] public void ReceiveBrowserRequest(string msg, string url) Parameters msg string url string ReceiveHintMessage(string, float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveHintMessage(string message, float durationSeconds) Parameters message string durationSeconds float ReceiveRelayToServer(uint, ushort, CSteamID, string, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveRelayToServer(uint ip, ushort port, CSteamID serverCode, string password, bool shouldShowMenu) Parameters ip uint port ushort serverCode CSteamID password string shouldShowMenu bool ReceiveScreenshotDestination(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveScreenshotDestination(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveScreenshotRelay(in ServerInvocationContext) Not rate limited because server tracks number of expected screenshots. [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER)] public void ReceiveScreenshotRelay(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSetPluginWidgetFlags(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"clientsideSetPluginWidgetFlags\")] public void ReceiveSetPluginWidgetFlags(uint newFlags) Parameters newFlags uint ReceiveStat(EPlayerStat) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellStat\")] public void ReceiveStat(EPlayerStat stat) Parameters stat EPlayerStat ReceiveTakeScreenshot() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askScreenshot\")] public void ReceiveTakeScreenshot() ReceiveTeleport(Vector3, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askTeleport\")] public void ReceiveTeleport(Vector3 position, byte angle) Parameters position Vector3 angle byte ReceiveTerminalRelay(string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellTerminalRelay\")] public void ReceiveTerminalRelay(string internalMessage) Parameters internalMessage string ReceiveUIMessage(EPlayerMessage) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askMessage\")] public void ReceiveUIMessage(EPlayerMessage message) Parameters message EPlayerMessage ServerShowHint(string, float) public void ServerShowHint(string message, float durationSeconds) Parameters message string durationSeconds float SetFaceOverride(byte?) public void SetFaceOverride(byte? faceOverride) Parameters faceOverride byte? SetIsTalkingWithLocalPlayer(bool) public void SetIsTalkingWithLocalPlayer(bool isTalkingWithLocalPlayer) Parameters isTalkingWithLocalPlayer bool ShouldServerApproveDialogueRequest(Player) Called on server to test whether object conditions are met. public bool ShouldServerApproveDialogueRequest(Player withPlayer) Parameters withPlayer Player Returns bool adjustStanceOrTeleportIfStuck() public bool adjustStanceOrTeleportIfStuck() Returns bool askBrowserRequest(CSteamID, string, string) [Obsolete] public void askBrowserRequest(CSteamID steamID, string msg, string url) Parameters steamID CSteamID msg string url string askMessage(CSteamID, byte) [Obsolete] public void askMessage(CSteamID steamID, byte message) Parameters steamID CSteamID message byte askRelayToServer(CSteamID, uint, ushort, string, bool) [Obsolete] public void askRelayToServer(CSteamID steamID, uint ip, ushort port, string password, bool shouldShowMenu) Parameters steamID CSteamID ip uint port ushort password string shouldShowMenu bool askRequestBattlEyeLogs(CSteamID) [Obsolete] public void askRequestBattlEyeLogs(CSteamID steamID) Parameters steamID CSteamID askScreenshot(CSteamID) [Obsolete] public void askScreenshot(CSteamID steamID) Parameters steamID CSteamID askTeleport(CSteamID, Vector3, byte) [Obsolete] public void askTeleport(CSteamID steamID, Vector3 position, byte angle) Parameters steamID CSteamID position Vector3 angle byte clientsideSetPluginWidgetFlags(CSteamID, uint) [Obsolete] public void clientsideSetPluginWidgetFlags(CSteamID steamID, uint newFlags) Parameters steamID CSteamID newFlags uint disableHeadlamp() public void disableHeadlamp() disableItemSpotLight() public void disableItemSpotLight() disablePluginWidgetFlag(EPluginWidgetFlags) public void disablePluginWidgetFlag(EPluginWidgetFlags flag) Parameters flag EPluginWidgetFlags enableHeadlamp(PlayerSpotLightConfig) public void enableHeadlamp(PlayerSpotLightConfig config) Parameters config PlayerSpotLightConfig enableItemSpotLight(PlayerSpotLightConfig) public void enableItemSpotLight(PlayerSpotLightConfig config) Parameters config PlayerSpotLightConfig enablePluginWidgetFlag(EPluginWidgetFlags) public void enablePluginWidgetFlag(EPluginWidgetFlags flag) Parameters flag EPluginWidgetFlags isPluginWidgetFlagActive(EPluginWidgetFlags) public bool isPluginWidgetFlagActive(EPluginWidgetFlags flag) Parameters flag EPluginWidgetFlags Returns bool playSound(AudioClip) public OneShotAudioHandle playSound(AudioClip clip) Parameters clip AudioClip Returns OneShotAudioHandle playSound(AudioClip, float) public OneShotAudioHandle playSound(AudioClip clip, float volume) Parameters clip AudioClip volume float Returns OneShotAudioHandle playSound(AudioClip, float, float) public OneShotAudioHandle playSound(AudioClip clip, float pitch, float deviation) Parameters clip AudioClip pitch float deviation float Returns OneShotAudioHandle playSound(AudioClip, float, float, float) public OneShotAudioHandle playSound(AudioClip clip, float volume, float pitch, float deviation) Parameters clip AudioClip volume float pitch float deviation float Returns OneShotAudioHandle save() public void save() savePositionAndRotation() protected void savePositionAndRotation() sendAchievementUnlocked(string) public void sendAchievementUnlocked(string id) Parameters id string sendBrowserRequest(string, string) Request client to open a given URL. Allows plugins to open web browser, but also gives client the chance to ignore it. public void sendBrowserRequest(string msg, string url) Parameters msg string url string sendMessage(EPlayerMessage) public void sendMessage(EPlayerMessage message) Parameters message EPlayerMessage sendRelayToServer(CSteamID, string, bool) public void sendRelayToServer(CSteamID serverCode, string password, bool shouldShowMenu = true) Parameters serverCode CSteamID password string shouldShowMenu bool sendRelayToServer(uint, ushort, string) public void sendRelayToServer(uint ip, ushort port, string password) Parameters ip uint port ushort password string sendRelayToServer(uint, ushort, string, bool) Tell client to join a specific server. Disconnects client and sends them to the join server screen. Only used by plugins. public void sendRelayToServer(uint ip, ushort port, string password, bool shouldShowMenu = true) Parameters ip uint port ushort password string shouldShowMenu bool sendScreenshot(CSteamID, PlayerSpyReady) public void sendScreenshot(CSteamID destination, PlayerSpyReady callback = null) Parameters destination CSteamID callback PlayerSpyReady sendStat(EPlayerKill) public void sendStat(EPlayerKill kill) Parameters kill EPlayerKill sendStat(EPlayerStat) public void sendStat(EPlayerStat stat) Parameters stat EPlayerStat sendTeleport(Vector3, byte) public void sendTeleport(Vector3 position, byte angle) Parameters position Vector3 angle byte sendTerminalRelay(string) public void sendTerminalRelay(string internalMessage) Parameters internalMessage string sendTerminalRelay(string, string, string) [Obsolete] public void sendTerminalRelay(string internalMessage, string internalCategory, string displayCategory) Parameters internalMessage string internalCategory string displayCategory string serversideSetPluginModal(bool) Tell the client whether to be in plugin modal mode or not. Kept from prior to introduction of pluginWidgetFlags. [Obsolete] public void serversideSetPluginModal(bool enableModal) Parameters enableModal bool setAllPluginWidgetFlags(EPluginWidgetFlags) public void setAllPluginWidgetFlags(EPluginWidgetFlags newFlags) Parameters newFlags EPluginWidgetFlags setPluginWidgetFlag(EPluginWidgetFlags, bool) public void setPluginWidgetFlag(EPluginWidgetFlags flag, bool active) Parameters flag EPluginWidgetFlags active bool teleportToBed() Teleport to bed, if player has set one. public bool teleportToBed() Returns bool teleportToLocation(Vector3, float) public bool teleportToLocation(Vector3 position, float yaw) Parameters position Vector3 yaw float Returns bool teleportToLocationUnsafe(Vector3, float) public void teleportToLocationUnsafe(Vector3 position, float yaw) Parameters position Vector3 yaw float teleportToPlayer(Player) public bool teleportToPlayer(Player otherPlayer) Parameters otherPlayer Player Returns bool teleportToRandomSpawnPoint() Teleport to a random player spawn designated in the level. public bool teleportToRandomSpawnPoint() Returns bool tellAchievementUnlocked(CSteamID, string) [Obsolete] public void tellAchievementUnlocked(CSteamID steamID, string id) Parameters steamID CSteamID id string tellScreenshotDestination(CSteamID) [Obsolete] public void tellScreenshotDestination(CSteamID steamID) Parameters steamID CSteamID tellScreenshotRelay(CSteamID) [Obsolete] public void tellScreenshotRelay(CSteamID steamID) Parameters steamID CSteamID tellStat(CSteamID, byte) [Obsolete] public void tellStat(CSteamID steamID, byte newStat) Parameters steamID CSteamID newStat byte tellTerminalRelay(CSteamID, string) [Obsolete] public void tellTerminalRelay(CSteamID steamID, string internalMessage) Parameters steamID CSteamID internalMessage string trackStat(EPlayerStat) protected void trackStat(EPlayerStat stat) Parameters stat EPlayerStat tryToPerformRateLimitedAction() Note: new official code should be using per-method rate limit attribute. This is kept for backwards compatibility with plugins however. Call this method before any requests the client can spam to the server. public bool tryToPerformRateLimitedAction() Returns bool Should your code proceed with the rate limited action? updateGlassesLights(bool) public void updateGlassesLights(bool on) Parameters on bool updateRateLimiting() Call every frame to cool down rate limiting. protected void updateRateLimiting() Events OnAdminUsageChanged Per-player event invoked when admin usage flags change. public event AdminUsageFlagsChanged OnAdminUsageChanged Event Type AdminUsageFlagsChanged OnAnyPlayerAdminUsageChanged Event invoked when any player's admin usage flags change. public static event AdminUsageFlagsChanged OnAnyPlayerAdminUsageChanged Event Type AdminUsageFlagsChanged onLocalPluginWidgetFlagsChanged Invoked on client when a plugin changes the widget flags. public event Player.PluginWidgetFlagsChanged onLocalPluginWidgetFlagsChanged Event Type Player.PluginWidgetFlagsChanged onPlayerStatIncremented Used by plugins. public static event Player.PlayerStatIncremented onPlayerStatIncremented Event Type Player.PlayerStatIncremented"
  },
  "api/SDG.Unturned.PlayerAnimator.InventoryGestureListener.html": {
    "href": "api/SDG.Unturned.PlayerAnimator.InventoryGestureListener.html",
    "title": "Delegate PlayerAnimator.InventoryGestureListener | Unturned Analyse Doc",
    "keywords": "Delegate PlayerAnimator.InventoryGestureListener Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerAnimator.InventoryGestureListener(bool InInventory) Parameters InInventory bool Constructors InventoryGestureListener(object, IntPtr) public InventoryGestureListener(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool InInventory, AsyncCallback callback, object @object) Parameters InInventory bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool InInventory) Parameters InInventory bool"
  },
  "api/SDG.Unturned.PlayerAnimator.html": {
    "href": "api/SDG.Unturned.PlayerAnimator.html",
    "title": "Class PlayerAnimator | Unturned Analyse Doc",
    "keywords": "Class PlayerAnimator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerAnimator : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerAnimator Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerAnimator() public PlayerAnimator() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte captorID public CSteamID captorID Field Value CSteamID captorItem public ushort captorItem Field Value ushort captorStrength public ushort captorStrength Field Value ushort drivingViewmodelCameraLocalPositionOffset Used to hide viewmodel arms while using a vehicle turret gun. public Vector3 drivingViewmodelCameraLocalPositionOffset Field Value Vector3 onGestureUpdated public GestureUpdated onGestureUpdated Field Value GestureUpdated onInventoryGesture Event for server plugins to monitor whether player is in-inventory. public PlayerAnimator.InventoryGestureListener onInventoryGesture Field Value PlayerAnimator.InventoryGestureListener recoilViewmodelCameraMask public Vector3 recoilViewmodelCameraMask Field Value Vector3 recoilViewmodelCameraOffset Abruptly offset when gun is fired, then animated back toward zero. public Rk4Spring3 recoilViewmodelCameraOffset Field Value Rk4Spring3 recoilViewmodelCameraRotation Abruptly offset when gun is fired, then animated back toward zero. x = pitch, y = yaw, z = roll public Rk4Spring3 recoilViewmodelCameraRotation Field Value Rk4Spring3 rotationInputViewmodelRoll Animated according to change in pitch/yaw input between frames so that gun rolls slightly while turning. public Rk4Spring3 rotationInputViewmodelRoll Field Value Rk4Spring3 scopeSway Offsets main camera and aim rotation while aiming with a scoped gun. public Vector3 scopeSway Field Value Vector3 viewmodelCamera Camera near world origin masking the first-person arms and weapon. public Camera viewmodelCamera Field Value Camera viewmodelCameraLocalPositionOffset Used by gun to hide viewmodel arms while aiming 2D scope, and by chainsaw to shake the viewmodel. public Vector3 viewmodelCameraLocalPositionOffset Field Value Vector3 viewmodelCameraMovementLocalRotation Animated while playing is moving. x = pitch, y = roll public Rk4Spring2 viewmodelCameraMovementLocalRotation Field Value Rk4Spring2 viewmodelCameraTransform Child of the first-person skull transform. public Transform viewmodelCameraTransform Field Value Transform viewmodelExplosionSmoothingSpeed public float viewmodelExplosionSmoothingSpeed Field Value float viewmodelItemInertiaMask Degrees per meter of item distance travelled. Pitch is driven by vertical displacement, yaw and roll are driven by horizontal. x = pitch, y = yaw, z = roll public Vector3 viewmodelItemInertiaMask Field Value Vector3 viewmodelItemInertiaRotation Animated according to change in item position between frames so that animations have more inertia. public Rk4Spring3 viewmodelItemInertiaRotation Field Value Rk4Spring3 viewmodelMovementOffset Animated while player is moving. public Rk4Spring2 viewmodelMovementOffset Field Value Rk4Spring2 viewmodelOffsetPreferenceMultiplier 0 while aiming, 1 while not aiming. Players can customize the 3D position of the viewmodel on screen, but this needs to be blended out while aiming down sights otherwise it would not line up with the center of the screen. public float viewmodelOffsetPreferenceMultiplier Field Value float viewmodelParentTransform Empty transform created at the world origin. The first-person Viewmodel transform is re-parented to this. public Transform viewmodelParentTransform Field Value Transform viewmodelSwayMultiplier Small number (0.1) while aiming, 1 while not aiming. Reduces viewmodel animation while aiming to make 3D sights more usable. public float viewmodelSwayMultiplier Field Value float viewmodelTargetExplosionLocalRotation public Rk4SpringQ viewmodelTargetExplosionLocalRotation Field Value Rk4SpringQ Properties bob public float bob { get; } Property Value float firstSkeleton public Transform firstSkeleton { get; } Property Value Transform gesture public EPlayerGesture gesture { get; } Property Value EPlayerGesture lean public int lean { get; } Property Value int leanLeft public bool leanLeft { get; } Property Value bool leanRight public bool leanRight { get; } Property Value bool roll public float roll { get; } Property Value float shoulder public float shoulder { get; } Property Value float shoulder2 public float shoulder2 { get; } Property Value float side public bool side { get; } Property Value bool speed public float speed { get; } Property Value float thirdSkeleton public Transform thirdSkeleton { get; } Property Value Transform tilt public float tilt { get; } Property Value float Methods AddBayonetViewmodelCameraOffset(float, float, float) public void AddBayonetViewmodelCameraOffset(float fling_x, float fling_y, float fling_z) Parameters fling_x float fling_y float fling_z float AddEquippedItemAnimation(AnimationClip, Transform, Transform, Transform) public void AddEquippedItemAnimation(AnimationClip clip, Transform firstPersonModel, Transform thirdPersonModel, Transform characterModel) Parameters clip AnimationClip firstPersonModel Transform thirdPersonModel Transform characterModel Transform AddRecoilViewmodelCameraOffset(float, float, float) public void AddRecoilViewmodelCameraOffset(float shake_x, float shake_y, float shake_z) Parameters shake_x float shake_y float shake_z float AddRecoilViewmodelCameraRotation(float, float) public void AddRecoilViewmodelCameraRotation(float cameraYaw, float cameraPitch) Parameters cameraYaw float cameraPitch float GetAnimationLength(string, bool) public float GetAnimationLength(string name, bool scaled = true) Parameters name string scaled bool If true, include current animation speed modifier. Returns float NotifyClothingIsVisible() Called by clothing to make mesh renderers visible. public void NotifyClothingIsVisible() ReceiveGesture(EPlayerGesture) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellGesture\")] public void ReceiveGesture(EPlayerGesture newGesture) Parameters newGesture EPlayerGesture ReceiveGestureRequest(EPlayerGesture) Rate limit is relatively high because this RPC handles open/close inventory notification. [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 15, legacyName = \"askGesture\")] public void ReceiveGestureRequest(EPlayerGesture newGesture) Parameters newGesture EPlayerGesture ReceiveLean(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLean\")] public void ReceiveLean(byte newLean) Parameters newLean byte askEmote(CSteamID) [Obsolete] public void askEmote(CSteamID steamID) Parameters steamID CSteamID askGesture(CSteamID, byte) [Obsolete] public void askGesture(CSteamID steamID, byte id) Parameters steamID CSteamID id byte checkExists(string) public bool checkExists(string name) Parameters name string Returns bool getAnimationLength(string) public float getAnimationLength(string name) Parameters name string Returns float load() public void load() mixAnimation(string) public void mixAnimation(string name) Parameters name string mixAnimation(string, bool, bool) public void mixAnimation(string name, bool mixLeftShoulder, bool mixRightShoulder) Parameters name string mixLeftShoulder bool mixRightShoulder bool mixAnimation(string, bool, bool, bool) public void mixAnimation(string name, bool mixLeftShoulder, bool mixRightShoulder, bool mixSkull) Parameters name string mixLeftShoulder bool mixRightShoulder bool mixSkull bool play(string, bool) public void play(string name, bool smooth) Parameters name string smooth bool removeAnimation(AnimationClip) public void removeAnimation(AnimationClip clip) Parameters clip AnimationClip save() public void save() sendGesture(EPlayerGesture, bool) public void sendGesture(EPlayerGesture gesture, bool all) Parameters gesture EPlayerGesture all bool setAnimationSpeed(string, float) public void setAnimationSpeed(string name, float speed) Parameters name string speed float simulate(uint, bool, bool) public void simulate(uint simulation, bool inputLeanLeft, bool inputLeanRight) Parameters simulation uint inputLeanLeft bool inputLeanRight bool stop(string) public void stop(string name) Parameters name string tellGesture(CSteamID, byte) [Obsolete] public void tellGesture(CSteamID steamID, byte id) Parameters steamID CSteamID id byte tellLean(CSteamID, byte) [Obsolete] public void tellLean(CSteamID steamID, byte newLean) Parameters steamID CSteamID newLean byte Events OnGestureChanged_Global Invoked after tellGesture is called with the new gesture. public static event Action<PlayerAnimator, EPlayerGesture> OnGestureChanged_Global Event Type Action<PlayerAnimator, EPlayerGesture> OnLeanChanged_Global public static event Action<PlayerAnimator> OnLeanChanged_Global Event Type Action<PlayerAnimator>"
  },
  "api/SDG.Unturned.PlayerAnimator_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerAnimator_NetMethods.html",
    "title": "Class PlayerAnimator_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerAnimator_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerAnimator))] public static class PlayerAnimator_NetMethods Inheritance object PlayerAnimator_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveGestureRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveGestureRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveGestureRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveGestureRequest_Write(NetPakWriter, EPlayerGesture) [NetInvokableGeneratedMethod(\"ReceiveGestureRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveGestureRequest_Write(NetPakWriter writer, EPlayerGesture newGesture) Parameters writer NetPakWriter newGesture EPlayerGesture ReceiveGesture_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveGesture\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveGesture_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveGesture_Write(NetPakWriter, EPlayerGesture) [NetInvokableGeneratedMethod(\"ReceiveGesture\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveGesture_Write(NetPakWriter writer, EPlayerGesture newGesture) Parameters writer NetPakWriter newGesture EPlayerGesture ReceiveLean_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLean\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLean_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLean_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveLean\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLean_Write(NetPakWriter writer, byte newLean) Parameters writer NetPakWriter newLean byte"
  },
  "api/SDG.Unturned.PlayerBarricadeLibraryUI.html": {
    "href": "api/SDG.Unturned.PlayerBarricadeLibraryUI.html",
    "title": "Class PlayerBarricadeLibraryUI | Unturned Analyse Doc",
    "keywords": "Class PlayerBarricadeLibraryUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerBarricadeLibraryUI Inheritance object PlayerBarricadeLibraryUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerBarricadeLibraryUI() public PlayerBarricadeLibraryUI() Fields active public static bool active Field Value bool Methods close() public static void close() open(InteractableLibrary) public static void open(InteractableLibrary newLibrary) Parameters newLibrary InteractableLibrary"
  },
  "api/SDG.Unturned.PlayerBarricadeMannequinUI.html": {
    "href": "api/SDG.Unturned.PlayerBarricadeMannequinUI.html",
    "title": "Class PlayerBarricadeMannequinUI | Unturned Analyse Doc",
    "keywords": "Class PlayerBarricadeMannequinUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerBarricadeMannequinUI : SleekFullscreenBox Inheritance object SleekFullscreenBox PlayerBarricadeMannequinUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) Constructors PlayerBarricadeMannequinUI() public PlayerBarricadeMannequinUI() Fields active public bool active Field Value bool Methods OnUpdate() public override void OnUpdate() close() public void close() open(InteractableMannequin) public void open(InteractableMannequin newMannequin) Parameters newMannequin InteractableMannequin"
  },
  "api/SDG.Unturned.PlayerBarricadeSignUI.html": {
    "href": "api/SDG.Unturned.PlayerBarricadeSignUI.html",
    "title": "Class PlayerBarricadeSignUI | Unturned Analyse Doc",
    "keywords": "Class PlayerBarricadeSignUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerBarricadeSignUI Inheritance object PlayerBarricadeSignUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerBarricadeSignUI() public PlayerBarricadeSignUI() Fields active public static bool active Field Value bool Methods close() public static void close() open(InteractableSign) public static void open(InteractableSign newSign) Parameters newSign InteractableSign open(string) public static void open(string newText) Parameters newText string"
  },
  "api/SDG.Unturned.PlayerBarricadeStereoUI.html": {
    "href": "api/SDG.Unturned.PlayerBarricadeStereoUI.html",
    "title": "Class PlayerBarricadeStereoUI | Unturned Analyse Doc",
    "keywords": "Class PlayerBarricadeStereoUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerBarricadeStereoUI : SleekFullscreenBox Inheritance object SleekFullscreenBox PlayerBarricadeStereoUI Inherited Members SleekFullscreenBox.AnimateIntoView() SleekFullscreenBox.AnimateOutOfView(float, float) Constructors PlayerBarricadeStereoUI() public PlayerBarricadeStereoUI() Fields active public bool active Field Value bool Methods OnUpdate() public override void OnUpdate() close() public void close() open(InteractableStereo) public void open(InteractableStereo newStereo) Parameters newStereo InteractableStereo"
  },
  "api/SDG.Unturned.PlayerBoundUpdated.html": {
    "href": "api/SDG.Unturned.PlayerBoundUpdated.html",
    "title": "Delegate PlayerBoundUpdated | Unturned Analyse Doc",
    "keywords": "Delegate PlayerBoundUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerBoundUpdated(Player player, byte oldBound, byte newBound) Parameters player Player oldBound byte newBound byte Constructors PlayerBoundUpdated(object, IntPtr) public PlayerBoundUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, byte oldBound, byte newBound, AsyncCallback callback, object @object) Parameters player Player oldBound byte newBound byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, byte, byte) public virtual void Invoke(Player player, byte oldBound, byte newBound) Parameters player Player oldBound byte newBound byte"
  },
  "api/SDG.Unturned.PlayerCaller.html": {
    "href": "api/SDG.Unturned.PlayerCaller.html",
    "title": "Class PlayerCaller | Unturned Analyse Doc",
    "keywords": "Class PlayerCaller Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerCaller : SteamCaller Inheritance object SteamCaller PlayerCaller Derived PlayerAnimator PlayerClothing PlayerCrafting PlayerEquipment PlayerInput PlayerInteract PlayerInventory PlayerLife PlayerLook PlayerMovement PlayerQuests PlayerSkills PlayerStance PlayerVoice PlayerWorkzone Useable Inherited Members SteamCaller._channel SteamCaller.channel Constructors PlayerCaller() public PlayerCaller() Fields _player protected Player _player Field Value Player Properties player public Player player { get; } Property Value Player Methods GetNetId() public NetId GetNetId() Returns NetId"
  },
  "api/SDG.Unturned.PlayerClothing.html": {
    "href": "api/SDG.Unturned.PlayerClothing.html",
    "title": "Class PlayerClothing | Unturned Analyse Doc",
    "keywords": "Class PlayerClothing Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerClothing : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerClothing Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerClothing() public PlayerClothing() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte backpackQuality public byte backpackQuality Field Value byte backpackState public byte[] backpackState Field Value byte[] glassesQuality public byte glassesQuality Field Value byte glassesState public byte[] glassesState Field Value byte[] hatQuality public byte hatQuality Field Value byte hatState public byte[] hatState Field Value byte[] maskQuality public byte maskQuality Field Value byte maskState public byte[] maskState Field Value byte[] onBackpackUpdated public BackpackUpdated onBackpackUpdated Field Value BackpackUpdated onGlassesUpdated public GlassesUpdated onGlassesUpdated Field Value GlassesUpdated onHatUpdated public HatUpdated onHatUpdated Field Value HatUpdated onMaskUpdated public MaskUpdated onMaskUpdated Field Value MaskUpdated onPantsUpdated public PantsUpdated onPantsUpdated Field Value PantsUpdated onShirtUpdated public ShirtUpdated onShirtUpdated Field Value ShirtUpdated onVestUpdated public VestUpdated onVestUpdated Field Value VestUpdated pantsQuality public byte pantsQuality Field Value byte pantsState public byte[] pantsState Field Value byte[] shirtQuality public byte shirtQuality Field Value byte shirtState public byte[] shirtState Field Value byte[] vestQuality public byte vestQuality Field Value byte vestState public byte[] vestState Field Value byte[] Properties backpack public ushort backpack { get; } Property Value ushort backpackAsset public ItemBackpackAsset backpackAsset { get; } Property Value ItemBackpackAsset beard public byte beard { get; } Property Value byte characterClothes public HumanClothes characterClothes { get; } Property Value HumanClothes color public Color color { get; } Property Value Color face public byte face { get; } Property Value byte firstClothes public HumanClothes firstClothes { get; } Property Value HumanClothes glasses public ushort glasses { get; } Property Value ushort glassesAsset public ItemGlassesAsset glassesAsset { get; } Property Value ItemGlassesAsset hair public byte hair { get; } Property Value byte hat public ushort hat { get; } Property Value ushort hatAsset public ItemHatAsset hatAsset { get; } Property Value ItemHatAsset isMythic public bool isMythic { get; } Property Value bool isSkinned public bool isSkinned { get; } Property Value bool isVisual public bool isVisual { get; } Property Value bool mask public ushort mask { get; } Property Value ushort maskAsset public ItemMaskAsset maskAsset { get; } Property Value ItemMaskAsset pants public ushort pants { get; } Property Value ushort pantsAsset public ItemPantsAsset pantsAsset { get; } Property Value ItemPantsAsset shirt public ushort shirt { get; } Property Value ushort shirtAsset public ItemShirtAsset shirtAsset { get; } Property Value ItemShirtAsset skin public Color skin { get; } Property Value Color thirdClothes public HumanClothes thirdClothes { get; } Property Value HumanClothes vest public ushort vest { get; } Property Value ushort vestAsset public ItemVestAsset vestAsset { get; } Property Value ItemVestAsset visualBackpack public int visualBackpack { get; } Property Value int visualGlasses public int visualGlasses { get; } Property Value int visualHat public int visualHat { get; } Property Value int visualMask public int visualMask { get; } Property Value int visualPants public int visualPants { get; } Property Value int visualShirt public int visualShirt { get; } Property Value int visualVest public int visualVest { get; } Property Value int Methods ReceiveBackpackQuality(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateBackpackQuality\")] public void ReceiveBackpackQuality(byte quality) Parameters quality byte ReceiveClothingState(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveClothingState(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFaceState(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSwapFace\")] public void ReceiveFaceState(byte index) Parameters index byte ReceiveGlassesQuality(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateGlassesQuality\")] public void ReceiveGlassesQuality(byte quality) Parameters quality byte ReceiveHatQuality(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateHatQuality\")] public void ReceiveHatQuality(byte quality) Parameters quality byte ReceiveMaskQuality(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateMaskQuality\")] public void ReceiveMaskQuality(byte quality) Parameters quality byte ReceivePantsQuality(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdatePantsQuality\")] public void ReceivePantsQuality(byte quality) Parameters quality byte ReceiveShirtQuality(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateShirtQuality\")] public void ReceiveShirtQuality(byte quality) Parameters quality byte ReceiveSwapBackpackRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapBackpack\")] public void ReceiveSwapBackpackRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveSwapFaceRequest(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapFace\")] public void ReceiveSwapFaceRequest(byte index) Parameters index byte ReceiveSwapGlassesRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapGlasses\")] public void ReceiveSwapGlassesRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveSwapHatRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapHat\")] public void ReceiveSwapHatRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveSwapMaskRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapMask\")] public void ReceiveSwapMaskRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveSwapPantsRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapPants\")] public void ReceiveSwapPantsRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveSwapShirtRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapShirt\")] public void ReceiveSwapShirtRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveSwapVestRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSwapVest\")] public void ReceiveSwapVestRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveVestQuality(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateVestQuality\")] public void ReceiveVestQuality(byte quality) Parameters quality byte ReceiveVisualToggleRequest(EVisualToggleType) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askVisualToggle\")] public void ReceiveVisualToggleRequest(EVisualToggleType type) Parameters type EVisualToggleType ReceiveVisualToggleState(EVisualToggleType, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVisualToggle\")] public void ReceiveVisualToggleState(EVisualToggleType type, bool toggle) Parameters type EVisualToggleType toggle bool ReceiveWearBackpack(Guid, byte, byte[], bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWearBackpack\")] public void ReceiveWearBackpack(Guid id, byte quality, byte[] state, bool playEffect) Parameters id Guid quality byte state byte[] playEffect bool ReceiveWearGlasses(Guid, byte, byte[], bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWearGlasses\")] public void ReceiveWearGlasses(Guid id, byte quality, byte[] state, bool playEffect) Parameters id Guid quality byte state byte[] playEffect bool ReceiveWearHat(Guid, byte, byte[], bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWearHat\")] public void ReceiveWearHat(Guid id, byte quality, byte[] state, bool playEffect) Parameters id Guid quality byte state byte[] playEffect bool ReceiveWearMask(Guid, byte, byte[], bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWearMask\")] public void ReceiveWearMask(Guid id, byte quality, byte[] state, bool playEffect) Parameters id Guid quality byte state byte[] playEffect bool ReceiveWearPants(Guid, byte, byte[], bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWearPants\")] public void ReceiveWearPants(Guid id, byte quality, byte[] state, bool playEffect) Parameters id Guid quality byte state byte[] playEffect bool ReceiveWearShirt(Guid, byte, byte[], bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWearShirt\")] public void ReceiveWearShirt(Guid id, byte quality, byte[] state, bool playEffect) Parameters id Guid quality byte state byte[] playEffect bool ReceiveWearVest(Guid, byte, byte[], bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWearVest\")] public void ReceiveWearVest(Guid id, byte quality, byte[] state, bool playEffect) Parameters id Guid quality byte state byte[] playEffect bool ServerSetFace(byte) public bool ServerSetFace(byte index) Parameters index byte Returns bool ServerSetVisualToggleState(EVisualToggleType, bool) public void ServerSetVisualToggleState(EVisualToggleType type, bool isVisible) Parameters type EVisualToggleType isVisible bool askClothing(CSteamID) [Obsolete] public void askClothing(CSteamID steamID) Parameters steamID CSteamID askSwapBackpack(CSteamID, byte, byte, byte) [Obsolete] public void askSwapBackpack(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askSwapFace(CSteamID, byte) [Obsolete] public void askSwapFace(CSteamID steamID, byte index) Parameters steamID CSteamID index byte askSwapGlasses(CSteamID, byte, byte, byte) [Obsolete] public void askSwapGlasses(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askSwapHat(CSteamID, byte, byte, byte) [Obsolete] public void askSwapHat(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askSwapMask(CSteamID, byte, byte, byte) [Obsolete] public void askSwapMask(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askSwapPants(CSteamID, byte, byte, byte) [Obsolete] public void askSwapPants(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askSwapShirt(CSteamID, byte, byte, byte) [Obsolete] public void askSwapShirt(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askSwapVest(CSteamID, byte, byte, byte) [Obsolete] public void askSwapVest(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askVisualToggle(CSteamID, byte) [Obsolete] public void askVisualToggle(CSteamID steamID, byte index) Parameters steamID CSteamID index byte askWearBackpack(ItemBackpackAsset, byte, byte[], bool) public void askWearBackpack(ItemBackpackAsset asset, byte quality, byte[] state, bool playEffect) Parameters asset ItemBackpackAsset quality byte state byte[] playEffect bool askWearBackpack(ushort, byte, byte[], bool) public void askWearBackpack(ushort id, byte quality, byte[] state, bool playEffect) Parameters id ushort quality byte state byte[] playEffect bool askWearGlasses(ItemGlassesAsset, byte, byte[], bool) public void askWearGlasses(ItemGlassesAsset asset, byte quality, byte[] state, bool playEffect) Parameters asset ItemGlassesAsset quality byte state byte[] playEffect bool askWearGlasses(ushort, byte, byte[], bool) public void askWearGlasses(ushort id, byte quality, byte[] state, bool playEffect) Parameters id ushort quality byte state byte[] playEffect bool askWearHat(ItemHatAsset, byte, byte[], bool) public void askWearHat(ItemHatAsset asset, byte quality, byte[] state, bool playEffect) Parameters asset ItemHatAsset quality byte state byte[] playEffect bool askWearHat(ushort, byte, byte[], bool) public void askWearHat(ushort id, byte quality, byte[] state, bool playEffect) Parameters id ushort quality byte state byte[] playEffect bool askWearMask(ItemMaskAsset, byte, byte[], bool) public void askWearMask(ItemMaskAsset asset, byte quality, byte[] state, bool playEffect) Parameters asset ItemMaskAsset quality byte state byte[] playEffect bool askWearMask(ushort, byte, byte[], bool) public void askWearMask(ushort id, byte quality, byte[] state, bool playEffect) Parameters id ushort quality byte state byte[] playEffect bool askWearPants(ItemPantsAsset, byte, byte[], bool) public void askWearPants(ItemPantsAsset asset, byte quality, byte[] state, bool playEffect) Parameters asset ItemPantsAsset quality byte state byte[] playEffect bool askWearPants(ushort, byte, byte[], bool) public void askWearPants(ushort id, byte quality, byte[] state, bool playEffect) Parameters id ushort quality byte state byte[] playEffect bool askWearShirt(ItemShirtAsset, byte, byte[], bool) public void askWearShirt(ItemShirtAsset asset, byte quality, byte[] state, bool playEffect) Parameters asset ItemShirtAsset quality byte state byte[] playEffect bool askWearShirt(ushort, byte, byte[], bool) public void askWearShirt(ushort id, byte quality, byte[] state, bool playEffect) Parameters id ushort quality byte state byte[] playEffect bool askWearVest(ItemVestAsset, byte, byte[], bool) public void askWearVest(ItemVestAsset asset, byte quality, byte[] state, bool playEffect) Parameters asset ItemVestAsset quality byte state byte[] playEffect bool askWearVest(ushort, byte, byte[], bool) public void askWearVest(ushort id, byte quality, byte[] state, bool playEffect) Parameters id ushort quality byte state byte[] playEffect bool load() public void load() save() public void save() sendSwapBackpack(byte, byte, byte) public void sendSwapBackpack(byte page, byte x, byte y) Parameters page byte x byte y byte sendSwapFace(byte) public void sendSwapFace(byte index) Parameters index byte sendSwapGlasses(byte, byte, byte) public void sendSwapGlasses(byte page, byte x, byte y) Parameters page byte x byte y byte sendSwapHat(byte, byte, byte) public void sendSwapHat(byte page, byte x, byte y) Parameters page byte x byte y byte sendSwapMask(byte, byte, byte) public void sendSwapMask(byte page, byte x, byte y) Parameters page byte x byte y byte sendSwapPants(byte, byte, byte) public void sendSwapPants(byte page, byte x, byte y) Parameters page byte x byte y byte sendSwapShirt(byte, byte, byte) public void sendSwapShirt(byte page, byte x, byte y) Parameters page byte x byte y byte sendSwapVest(byte, byte, byte) public void sendSwapVest(byte page, byte x, byte y) Parameters page byte x byte y byte sendUpdateBackpackQuality() public void sendUpdateBackpackQuality() sendUpdateGlassesQuality() public void sendUpdateGlassesQuality() sendUpdateHatQuality() public void sendUpdateHatQuality() sendUpdateMaskQuality() public void sendUpdateMaskQuality() sendUpdatePantsQuality() public void sendUpdatePantsQuality() sendUpdateShirtQuality() public void sendUpdateShirtQuality() sendUpdateVestQuality() public void sendUpdateVestQuality() sendVisualToggle(EVisualToggleType) public void sendVisualToggle(EVisualToggleType type) Parameters type EVisualToggleType tellClothing(CSteamID, ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], bool, bool, bool) [Obsolete] public void tellClothing(CSteamID steamID, ushort newShirt, byte newShirtQuality, byte[] newShirtState, ushort newPants, byte newPantsQuality, byte[] newPantsState, ushort newHat, byte newHatQuality, byte[] newHatState, ushort newBackpack, byte newBackpackQuality, byte[] newBackpackState, ushort newVest, byte newVestQuality, byte[] newVestState, ushort newMask, byte newMaskQuality, byte[] newMaskState, ushort newGlasses, byte newGlassesQuality, byte[] newGlassesState, bool newVisual, bool newSkinned, bool newMythic) Parameters steamID CSteamID newShirt ushort newShirtQuality byte newShirtState byte[] newPants ushort newPantsQuality byte newPantsState byte[] newHat ushort newHatQuality byte newHatState byte[] newBackpack ushort newBackpackQuality byte newBackpackState byte[] newVest ushort newVestQuality byte newVestState byte[] newMask ushort newMaskQuality byte newMaskState byte[] newGlasses ushort newGlassesQuality byte newGlassesState byte[] newVisual bool newSkinned bool newMythic bool tellSwapFace(CSteamID, byte) [Obsolete] public void tellSwapFace(CSteamID steamID, byte index) Parameters steamID CSteamID index byte tellUpdateBackpackQuality(CSteamID, byte) [Obsolete] public void tellUpdateBackpackQuality(CSteamID steamID, byte quality) Parameters steamID CSteamID quality byte tellUpdateGlassesQuality(CSteamID, byte) [Obsolete] public void tellUpdateGlassesQuality(CSteamID steamID, byte quality) Parameters steamID CSteamID quality byte tellUpdateHatQuality(CSteamID, byte) [Obsolete] public void tellUpdateHatQuality(CSteamID steamID, byte quality) Parameters steamID CSteamID quality byte tellUpdateMaskQuality(CSteamID, byte) [Obsolete] public void tellUpdateMaskQuality(CSteamID steamID, byte quality) Parameters steamID CSteamID quality byte tellUpdatePantsQuality(CSteamID, byte) [Obsolete] public void tellUpdatePantsQuality(CSteamID steamID, byte quality) Parameters steamID CSteamID quality byte tellUpdateShirtQuality(CSteamID, byte) [Obsolete] public void tellUpdateShirtQuality(CSteamID steamID, byte quality) Parameters steamID CSteamID quality byte tellUpdateVestQuality(CSteamID, byte) [Obsolete] public void tellUpdateVestQuality(CSteamID steamID, byte quality) Parameters steamID CSteamID quality byte tellVisualToggle(CSteamID, byte, bool) [Obsolete] public void tellVisualToggle(CSteamID steamID, byte index, bool toggle) Parameters steamID CSteamID index byte toggle bool tellWearBackpack(CSteamID, ushort, byte, byte[]) [Obsolete] public void tellWearBackpack(CSteamID steamID, ushort id, byte quality, byte[] state) Parameters steamID CSteamID id ushort quality byte state byte[] tellWearGlasses(CSteamID, ushort, byte, byte[]) [Obsolete] public void tellWearGlasses(CSteamID steamID, ushort id, byte quality, byte[] state) Parameters steamID CSteamID id ushort quality byte state byte[] tellWearHat(CSteamID, ushort, byte, byte[]) [Obsolete] public void tellWearHat(CSteamID steamID, ushort id, byte quality, byte[] state) Parameters steamID CSteamID id ushort quality byte state byte[] tellWearMask(CSteamID, ushort, byte, byte[]) [Obsolete] public void tellWearMask(CSteamID steamID, ushort id, byte quality, byte[] state) Parameters steamID CSteamID id ushort quality byte state byte[] tellWearPants(CSteamID, ushort, byte, byte[]) [Obsolete] public void tellWearPants(CSteamID steamID, ushort id, byte quality, byte[] state) Parameters steamID CSteamID id ushort quality byte state byte[] tellWearShirt(CSteamID, ushort, byte, byte[]) [Obsolete] public void tellWearShirt(CSteamID steamID, ushort id, byte quality, byte[] state) Parameters steamID CSteamID id ushort quality byte state byte[] tellWearVest(CSteamID, ushort, byte, byte[]) [Obsolete] public void tellWearVest(CSteamID steamID, ushort id, byte quality, byte[] state) Parameters steamID CSteamID id ushort quality byte state byte[] updateClothes(ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[], ushort, byte, byte[]) public void updateClothes(ushort newShirt, byte newShirtQuality, byte[] newShirtState, ushort newPants, byte newPantsQuality, byte[] newPantsState, ushort newHat, byte newHatQuality, byte[] newHatState, ushort newBackpack, byte newBackpackQuality, byte[] newBackpackState, ushort newVest, byte newVestQuality, byte[] newVestState, ushort newMask, byte newMaskQuality, byte[] newMaskState, ushort newGlasses, byte newGlassesQuality, byte[] newGlassesState) Parameters newShirt ushort newShirtQuality byte newShirtState byte[] newPants ushort newPantsQuality byte newPantsState byte[] newHat ushort newHatQuality byte newHatState byte[] newBackpack ushort newBackpackQuality byte newBackpackState byte[] newVest ushort newVestQuality byte newVestState byte[] newMask ushort newMaskQuality byte newMaskState byte[] newGlasses ushort newGlassesQuality byte newGlassesState byte[] updateMaskQuality() public void updateMaskQuality() Events OnBackpackChanged_Global Invoked after any player's backpack values change (not including loading). public static event Action<PlayerClothing> OnBackpackChanged_Global Event Type Action<PlayerClothing> OnGlassesChanged_Global Invoked after any player's glasses values change (not including loading). public static event Action<PlayerClothing> OnGlassesChanged_Global Event Type Action<PlayerClothing> OnHatChanged_Global Invoked after any player's hat values change (not including loading). public static event Action<PlayerClothing> OnHatChanged_Global Event Type Action<PlayerClothing> OnMaskChanged_Global Invoked after any player's backpack values change (not including loading). public static event Action<PlayerClothing> OnMaskChanged_Global Event Type Action<PlayerClothing> OnPantsChanged_Global Invoked after any player's shirt values change (not including loading). public static event Action<PlayerClothing> OnPantsChanged_Global Event Type Action<PlayerClothing> OnShirtChanged_Global Invoked after any player's shirt values change (not including loading). public static event Action<PlayerClothing> OnShirtChanged_Global Event Type Action<PlayerClothing> OnVestChanged_Global Invoked after any player's backpack values change (not including loading). public static event Action<PlayerClothing> OnVestChanged_Global Event Type Action<PlayerClothing> VisualToggleChanged Called when the player clicks the cosmetic, visual or skin toggle buttons. public event VisualToggleChanged VisualToggleChanged Event Type VisualToggleChanged"
  },
  "api/SDG.Unturned.PlayerClothing_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerClothing_NetMethods.html",
    "title": "Class PlayerClothing_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerClothing_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerClothing))] public static class PlayerClothing_NetMethods Inheritance object PlayerClothing_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveBackpackQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBackpackQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBackpackQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveBackpackQuality_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveBackpackQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBackpackQuality_Write(NetPakWriter writer, byte quality) Parameters writer NetPakWriter quality byte ReceiveClothingState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClothingState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClothingState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFaceState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveFaceState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveFaceState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFaceState_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveFaceState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveFaceState_Write(NetPakWriter writer, byte index) Parameters writer NetPakWriter index byte ReceiveGlassesQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveGlassesQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveGlassesQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveGlassesQuality_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveGlassesQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveGlassesQuality_Write(NetPakWriter writer, byte quality) Parameters writer NetPakWriter quality byte ReceiveHatQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveHatQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveHatQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveHatQuality_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveHatQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveHatQuality_Write(NetPakWriter writer, byte quality) Parameters writer NetPakWriter quality byte ReceiveMaskQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveMaskQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveMaskQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveMaskQuality_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveMaskQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveMaskQuality_Write(NetPakWriter writer, byte quality) Parameters writer NetPakWriter quality byte ReceivePantsQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePantsQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePantsQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePantsQuality_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceivePantsQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePantsQuality_Write(NetPakWriter writer, byte quality) Parameters writer NetPakWriter quality byte ReceiveShirtQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveShirtQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveShirtQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveShirtQuality_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveShirtQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveShirtQuality_Write(NetPakWriter writer, byte quality) Parameters writer NetPakWriter quality byte ReceiveSwapBackpackRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapBackpackRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapBackpackRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapBackpackRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapBackpackRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapBackpackRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveSwapFaceRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapFaceRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapFaceRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapFaceRequest_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapFaceRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapFaceRequest_Write(NetPakWriter writer, byte index) Parameters writer NetPakWriter index byte ReceiveSwapGlassesRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapGlassesRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapGlassesRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapGlassesRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapGlassesRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapGlassesRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveSwapHatRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapHatRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapHatRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapHatRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapHatRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapHatRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveSwapMaskRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapMaskRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapMaskRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapMaskRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapMaskRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapMaskRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveSwapPantsRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapPantsRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapPantsRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapPantsRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapPantsRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapPantsRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveSwapShirtRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapShirtRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapShirtRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapShirtRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapShirtRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapShirtRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveSwapVestRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapVestRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapVestRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapVestRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapVestRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapVestRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveVestQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVestQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVestQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVestQuality_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveVestQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVestQuality_Write(NetPakWriter writer, byte quality) Parameters writer NetPakWriter quality byte ReceiveVisualToggleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVisualToggleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVisualToggleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveVisualToggleRequest_Write(NetPakWriter, EVisualToggleType) [NetInvokableGeneratedMethod(\"ReceiveVisualToggleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVisualToggleRequest_Write(NetPakWriter writer, EVisualToggleType type) Parameters writer NetPakWriter type EVisualToggleType ReceiveVisualToggleState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVisualToggleState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVisualToggleState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVisualToggleState_Write(NetPakWriter, EVisualToggleType, bool) [NetInvokableGeneratedMethod(\"ReceiveVisualToggleState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVisualToggleState_Write(NetPakWriter writer, EVisualToggleType type, bool toggle) Parameters writer NetPakWriter type EVisualToggleType toggle bool ReceiveWearBackpack_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWearBackpack\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWearBackpack_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWearBackpack_Write(NetPakWriter, Guid, byte, byte[], bool) [NetInvokableGeneratedMethod(\"ReceiveWearBackpack\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWearBackpack_Write(NetPakWriter writer, Guid id, byte quality, byte[] state, bool playEffect) Parameters writer NetPakWriter id Guid quality byte state byte[] playEffect bool ReceiveWearGlasses_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWearGlasses\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWearGlasses_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWearGlasses_Write(NetPakWriter, Guid, byte, byte[], bool) [NetInvokableGeneratedMethod(\"ReceiveWearGlasses\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWearGlasses_Write(NetPakWriter writer, Guid id, byte quality, byte[] state, bool playEffect) Parameters writer NetPakWriter id Guid quality byte state byte[] playEffect bool ReceiveWearHat_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWearHat\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWearHat_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWearHat_Write(NetPakWriter, Guid, byte, byte[], bool) [NetInvokableGeneratedMethod(\"ReceiveWearHat\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWearHat_Write(NetPakWriter writer, Guid id, byte quality, byte[] state, bool playEffect) Parameters writer NetPakWriter id Guid quality byte state byte[] playEffect bool ReceiveWearMask_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWearMask\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWearMask_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWearMask_Write(NetPakWriter, Guid, byte, byte[], bool) [NetInvokableGeneratedMethod(\"ReceiveWearMask\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWearMask_Write(NetPakWriter writer, Guid id, byte quality, byte[] state, bool playEffect) Parameters writer NetPakWriter id Guid quality byte state byte[] playEffect bool ReceiveWearPants_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWearPants\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWearPants_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWearPants_Write(NetPakWriter, Guid, byte, byte[], bool) [NetInvokableGeneratedMethod(\"ReceiveWearPants\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWearPants_Write(NetPakWriter writer, Guid id, byte quality, byte[] state, bool playEffect) Parameters writer NetPakWriter id Guid quality byte state byte[] playEffect bool ReceiveWearShirt_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWearShirt\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWearShirt_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWearShirt_Write(NetPakWriter, Guid, byte, byte[], bool) [NetInvokableGeneratedMethod(\"ReceiveWearShirt\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWearShirt_Write(NetPakWriter writer, Guid id, byte quality, byte[] state, bool playEffect) Parameters writer NetPakWriter id Guid quality byte state byte[] playEffect bool ReceiveWearVest_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWearVest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWearVest_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWearVest_Write(NetPakWriter, Guid, byte, byte[], bool) [NetInvokableGeneratedMethod(\"ReceiveWearVest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWearVest_Write(NetPakWriter writer, Guid id, byte quality, byte[] state, bool playEffect) Parameters writer NetPakWriter id Guid quality byte state byte[] playEffect bool"
  },
  "api/SDG.Unturned.PlayerContinuousIntegrationReport.html": {
    "href": "api/SDG.Unturned.PlayerContinuousIntegrationReport.html",
    "title": "Class PlayerContinuousIntegrationReport | Unturned Analyse Doc",
    "keywords": "Class PlayerContinuousIntegrationReport Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerContinuousIntegrationReport Inheritance object PlayerContinuousIntegrationReport Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerContinuousIntegrationReport() public PlayerContinuousIntegrationReport() PlayerContinuousIntegrationReport(string) public PlayerContinuousIntegrationReport(string ErrorMessage) Parameters ErrorMessage string Fields ErrorMessage Empty if successful, otherwise an explanation of the first error encountered. public string ErrorMessage Field Value string ExitCode Error code that the server exited with. 0 is succesful, anything else is an error. public int ExitCode Field Value int"
  },
  "api/SDG.Unturned.PlayerCrafting.html": {
    "href": "api/SDG.Unturned.PlayerCrafting.html",
    "title": "Class PlayerCrafting | Unturned Analyse Doc",
    "keywords": "Class PlayerCrafting Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerCrafting : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerCrafting Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerCrafting() public PlayerCrafting() Fields onCraftBlueprintRequested public static PlayerCraftingRequestHandler onCraftBlueprintRequested Field Value PlayerCraftingRequestHandler onCraftingRequested [Obsolete(\"Use the static onCraftBlueprintRequested for ease-of-use instead.\")] public PlayerCraftingRequestHandler onCraftingRequested Field Value PlayerCraftingRequestHandler onCraftingUpdated public CraftingUpdated onCraftingUpdated Field Value CraftingUpdated Methods ReceiveCraft(in ServerInvocationContext, ushort, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10)] public void ReceiveCraft(in ServerInvocationContext context, ushort id, byte index, bool force) Parameters context ServerInvocationContext id ushort index byte force bool ReceiveRefreshCrafting() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellCraft\")] public void ReceiveRefreshCrafting() ReceiveStripAttachments(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askStripAttachments\")] public void ReceiveStripAttachments(byte page, byte x, byte y) Parameters page byte x byte y byte ServerRefreshOwnerCrafting() Requested for plugin use. Notifies owner they should refresh the crafting menu. public void ServerRefreshOwnerCrafting() askCraft(CSteamID, ushort, byte, bool) [Obsolete] public void askCraft(CSteamID steamID, ushort id, byte index, bool force) Parameters steamID CSteamID id ushort index byte force bool askStripAttachments(CSteamID, byte, byte, byte) [Obsolete] public void askStripAttachments(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte getIgnoringBlueprint(Blueprint) Get whether this player is ignoring a blueprint. public bool getIgnoringBlueprint(Blueprint blueprint) Parameters blueprint Blueprint Returns bool isBlueprintBlacklisted(Blueprint) public bool isBlueprintBlacklisted(Blueprint blueprint) Parameters blueprint Blueprint Returns bool removeItem(byte, ItemJar) public void removeItem(byte page, ItemJar jar) Parameters page byte jar ItemJar sendCraft(ushort, byte, bool) public void sendCraft(ushort id, byte index, bool force) Parameters id ushort index byte force bool sendStripAttachments(byte, byte, byte) public void sendStripAttachments(byte page, byte x, byte y) Parameters page byte x byte y byte setIgnoringBlueprint(Blueprint, bool) Set whether this player is ignoring a blueprint. This is a kludge to help with accidentally crafting items like blindfolds. public void setIgnoringBlueprint(Blueprint blueprint, bool isIgnoring) Parameters blueprint Blueprint isIgnoring bool tellCraft(CSteamID) [Obsolete] public void tellCraft(CSteamID steamID) Parameters steamID CSteamID"
  },
  "api/SDG.Unturned.PlayerCraftingRequestHandler.html": {
    "href": "api/SDG.Unturned.PlayerCraftingRequestHandler.html",
    "title": "Delegate PlayerCraftingRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate PlayerCraftingRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerCraftingRequestHandler(PlayerCrafting crafting, ref ushort itemID, ref byte blueprintIndex, ref bool shouldAllow) Parameters crafting PlayerCrafting itemID ushort blueprintIndex byte shouldAllow bool Constructors PlayerCraftingRequestHandler(object, IntPtr) public PlayerCraftingRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerCrafting, ref ushort, ref byte, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerCrafting crafting, ref ushort itemID, ref byte blueprintIndex, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters crafting PlayerCrafting itemID ushort blueprintIndex byte shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref ushort, ref byte, ref bool, IAsyncResult) public virtual void EndInvoke(ref ushort itemID, ref byte blueprintIndex, ref bool shouldAllow, IAsyncResult result) Parameters itemID ushort blueprintIndex byte shouldAllow bool result IAsyncResult Invoke(PlayerCrafting, ref ushort, ref byte, ref bool) public virtual void Invoke(PlayerCrafting crafting, ref ushort itemID, ref byte blueprintIndex, ref bool shouldAllow) Parameters crafting PlayerCrafting itemID ushort blueprintIndex byte shouldAllow bool"
  },
  "api/SDG.Unturned.PlayerCrafting_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerCrafting_NetMethods.html",
    "title": "Class PlayerCrafting_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerCrafting_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerCrafting))] public static class PlayerCrafting_NetMethods Inheritance object PlayerCrafting_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveCraft_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveCraft\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveCraft_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveCraft_Write(NetPakWriter, ushort, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveCraft\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveCraft_Write(NetPakWriter writer, ushort id, byte index, bool force) Parameters writer NetPakWriter id ushort index byte force bool ReceiveRefreshCrafting_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRefreshCrafting\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRefreshCrafting_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRefreshCrafting_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveRefreshCrafting\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRefreshCrafting_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveStripAttachments_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveStripAttachments\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveStripAttachments_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveStripAttachments_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveStripAttachments\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveStripAttachments_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte"
  },
  "api/SDG.Unturned.PlayerCreated.html": {
    "href": "api/SDG.Unturned.PlayerCreated.html",
    "title": "Delegate PlayerCreated | Unturned Analyse Doc",
    "keywords": "Delegate PlayerCreated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerCreated(Player player) Parameters player Player Constructors PlayerCreated(object, IntPtr) public PlayerCreated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, AsyncCallback callback, object @object) Parameters player Player callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player) public virtual void Invoke(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.PlayerDamageMultiplier.html": {
    "href": "api/SDG.Unturned.PlayerDamageMultiplier.html",
    "title": "Class PlayerDamageMultiplier | Unturned Analyse Doc",
    "keywords": "Class PlayerDamageMultiplier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDamageMultiplier : IDamageMultiplier Inheritance object PlayerDamageMultiplier Implements IDamageMultiplier Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDamageMultiplier(float, float, float, float, float) public PlayerDamageMultiplier(float newDamage, float newLeg, float newArm, float newSpine, float newSkull) Parameters newDamage float newLeg float newArm float newSpine float newSkull float Fields arm public float arm Field Value float damage public float damage Field Value float leg public float leg Field Value float skull public float skull Field Value float spine public float spine Field Value float Methods multiply(ELimb) public float multiply(ELimb limb) Parameters limb ELimb Returns float"
  },
  "api/SDG.Unturned.PlayerDashboardCraftingUI.html": {
    "href": "api/SDG.Unturned.PlayerDashboardCraftingUI.html",
    "title": "Class PlayerDashboardCraftingUI | Unturned Analyse Doc",
    "keywords": "Class PlayerDashboardCraftingUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDashboardCraftingUI Inheritance object PlayerDashboardCraftingUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDashboardCraftingUI() public PlayerDashboardCraftingUI() Fields active public static bool active Field Value bool filteredBlueprintsOverride Used by inventory item context menu to override which blueprints are shown. public static Blueprint[] filteredBlueprintsOverride Field Value Blueprint[] icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local Methods close() public static void close() open() public static void open() updateSelection() public static void updateSelection()"
  },
  "api/SDG.Unturned.PlayerDashboardInformationUI.html": {
    "href": "api/SDG.Unturned.PlayerDashboardInformationUI.html",
    "title": "Class PlayerDashboardInformationUI | Unturned Analyse Doc",
    "keywords": "Class PlayerDashboardInformationUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDashboardInformationUI Inheritance object PlayerDashboardInformationUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDashboardInformationUI() public PlayerDashboardInformationUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local noLabel public static ISleekLabel noLabel Field Value ISleekLabel Methods OnDestroy() Temporary to unbind events because this class is static for now. (sigh) public void OnDestroy() close() public static void close() focusPoint(Vector3) public static void focusPoint(Vector3 point) Parameters point Vector3 open() public static void open() openGroups() public static void openGroups() openPlayers() public static void openPlayers() openQuests() public static void openQuests() searchForMapsInInventory(ref bool, ref bool) protected static void searchForMapsInInventory(ref bool enableChart, ref bool enableMap) Parameters enableChart bool enableMap bool updateDynamicMap() public static void updateDynamicMap()"
  },
  "api/SDG.Unturned.PlayerDashboardInventoryUI.html": {
    "href": "api/SDG.Unturned.PlayerDashboardInventoryUI.html",
    "title": "Class PlayerDashboardInventoryUI | Unturned Analyse Doc",
    "keywords": "Class PlayerDashboardInventoryUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDashboardInventoryUI Inheritance object PlayerDashboardInventoryUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDashboardInventoryUI() public PlayerDashboardInventoryUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local Properties WasEventConsumed Was ConsumeEvent called during this frame? This is a hack to prevent firing when clicking in the UI on the same frame it closes. Moved from SleekWindow and Event.current.Use() during UI refactor. public static bool WasEventConsumed { get; } Property Value bool isDragging public static bool isDragging { get; } Property Value bool selectedAsset public static ItemAsset selectedAsset { get; } Property Value ItemAsset selectedJar public static ItemJar selectedJar { get; } Property Value ItemJar selectedPage public static byte selectedPage { get; } Property Value byte selected_x public static byte selected_x { get; } Property Value byte selected_y public static byte selected_y { get; } Property Value byte Methods close() public static void close() closeSelection() public static void closeSelection() open() public static void open() stopDrag() public static void stopDrag() updateDraggedItem() public static void updateDraggedItem() updateNearbyDrops() public static void updateNearbyDrops()"
  },
  "api/SDG.Unturned.PlayerDashboardSkillsUI.html": {
    "href": "api/SDG.Unturned.PlayerDashboardSkillsUI.html",
    "title": "Class PlayerDashboardSkillsUI | Unturned Analyse Doc",
    "keywords": "Class PlayerDashboardSkillsUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDashboardSkillsUI Inheritance object PlayerDashboardSkillsUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDashboardSkillsUI() public PlayerDashboardSkillsUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.PlayerDashboardUI.html": {
    "href": "api/SDG.Unturned.PlayerDashboardUI.html",
    "title": "Class PlayerDashboardUI | Unturned Analyse Doc",
    "keywords": "Class PlayerDashboardUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDashboardUI Inheritance object PlayerDashboardUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDashboardUI() public PlayerDashboardUI() Fields active public static bool active Field Value bool container public static SleekFullscreenBox container Field Value SleekFullscreenBox Methods OnDestroy() Temporary to unbind events because this class is static for now. (sigh) public void OnDestroy() close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.PlayerDeathUI.html": {
    "href": "api/SDG.Unturned.PlayerDeathUI.html",
    "title": "Class PlayerDeathUI | Unturned Analyse Doc",
    "keywords": "Class PlayerDeathUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDeathUI Inheritance object PlayerDeathUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerDeathUI() public PlayerDeathUI() Fields active public static bool active Field Value bool homeButton public static SleekButtonIcon homeButton Field Value SleekButtonIcon localization public static Local localization Field Value Local respawnButton public static SleekButtonIcon respawnButton Field Value SleekButtonIcon Methods close() public static void close() open(bool) public static void open(bool fromDeath) Parameters fromDeath bool"
  },
  "api/SDG.Unturned.PlayerDelayedQuestRewardsComponent.html": {
    "href": "api/SDG.Unturned.PlayerDelayedQuestRewardsComponent.html",
    "title": "Class PlayerDelayedQuestRewardsComponent | Unturned Analyse Doc",
    "keywords": "Class PlayerDelayedQuestRewardsComponent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerDelayedQuestRewardsComponent : MonoBehaviour Inheritance object PlayerDelayedQuestRewardsComponent Constructors PlayerDelayedQuestRewardsComponent() public PlayerDelayedQuestRewardsComponent() Fields player public Player player Field Value Player"
  },
  "api/SDG.Unturned.PlayerDequipRequestHandler.html": {
    "href": "api/SDG.Unturned.PlayerDequipRequestHandler.html",
    "title": "Delegate PlayerDequipRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate PlayerDequipRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerDequipRequestHandler(PlayerEquipment equipment, ref bool shouldAllow) Parameters equipment PlayerEquipment shouldAllow bool Constructors PlayerDequipRequestHandler(object, IntPtr) public PlayerDequipRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerEquipment, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerEquipment equipment, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters equipment PlayerEquipment shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(PlayerEquipment, ref bool) public virtual void Invoke(PlayerEquipment equipment, ref bool shouldAllow) Parameters equipment PlayerEquipment shouldAllow bool"
  },
  "api/SDG.Unturned.PlayerEquipRequestHandler.html": {
    "href": "api/SDG.Unturned.PlayerEquipRequestHandler.html",
    "title": "Delegate PlayerEquipRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate PlayerEquipRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerEquipRequestHandler(PlayerEquipment equipment, ItemJar jar, ItemAsset asset, ref bool shouldAllow) Parameters equipment PlayerEquipment jar ItemJar asset ItemAsset shouldAllow bool Constructors PlayerEquipRequestHandler(object, IntPtr) public PlayerEquipRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerEquipment, ItemJar, ItemAsset, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerEquipment equipment, ItemJar jar, ItemAsset asset, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters equipment PlayerEquipment jar ItemJar asset ItemAsset shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(PlayerEquipment, ItemJar, ItemAsset, ref bool) public virtual void Invoke(PlayerEquipment equipment, ItemJar jar, ItemAsset asset, ref bool shouldAllow) Parameters equipment PlayerEquipment jar ItemJar asset ItemAsset shouldAllow bool"
  },
  "api/SDG.Unturned.PlayerEquipment.html": {
    "href": "api/SDG.Unturned.PlayerEquipment.html",
    "title": "Class PlayerEquipment | Unturned Analyse Doc",
    "keywords": "Class PlayerEquipment Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerEquipment : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerEquipment Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerEquipment() public PlayerEquipment() Fields OnPunch_Global Invoked before dealing damage regardless of whether the punch impacted anything. public static Action<PlayerEquipment, EPlayerPunch> OnPunch_Global Field Value Action<PlayerEquipment, EPlayerPunch> SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte canEquip public bool canEquip Field Value bool ignoreDequip_A protected bool ignoreDequip_A Field Value bool isBusy public bool isBusy Field Value bool onDequipRequested public PlayerDequipRequestHandler onDequipRequested Field Value PlayerDequipRequestHandler onEquipRequested public PlayerEquipRequestHandler onEquipRequested Field Value PlayerEquipRequestHandler onHotkeysUpdated public HotkeysUpdated onHotkeysUpdated Field Value HotkeysUpdated page_A protected byte page_A Field Value byte rot_A protected byte rot_A Field Value byte wasTryingToSelect public bool wasTryingToSelect Field Value bool x_A protected byte x_A Field Value byte y_A protected byte y_A Field Value byte Properties HasValidUseable public bool HasValidUseable { get; } Property Value bool IsEquipAnimationFinished public bool IsEquipAnimationFinished { get; } Property Value bool asset public ItemAsset asset { get; } Property Value ItemAsset canInspect public bool canInspect { get; } Property Value bool characterLeftHook public Transform characterLeftHook { get; } Property Value Transform characterModel public Transform characterModel { get; } Property Value Transform characterPrimaryLargeGunSlot public Transform characterPrimaryLargeGunSlot { get; } Property Value Transform characterPrimaryMeleeSlot public Transform characterPrimaryMeleeSlot { get; } Property Value Transform characterPrimarySmallGunSlot public Transform characterPrimarySmallGunSlot { get; } Property Value Transform characterRightHook public Transform characterRightHook { get; } Property Value Transform characterSecondaryGunSlot public Transform characterSecondaryGunSlot { get; } Property Value Transform characterSecondaryMeleeSlot public Transform characterSecondaryMeleeSlot { get; } Property Value Transform equippedPage public byte equippedPage { get; } Property Value byte equipped_x public byte equipped_x { get; } Property Value byte equipped_y public byte equipped_y { get; } Property Value byte firstLeftHook public Transform firstLeftHook { get; } Property Value Transform firstModel public Transform firstModel { get; } Property Value Transform firstRightHook public Transform firstRightHook { get; } Property Value Transform hotkeys public HotkeyInfo[] hotkeys { get; } Property Value HotkeyInfo[] isEquipped [Obsolete(\"Renamed to IsEquipAnimationFinished\")] public bool isEquipped { get; } Property Value bool isInspecting public bool isInspecting { get; } Property Value bool isSelected [Obsolete(\"Renamed to HasValidUseable\")] public bool isSelected { get; } Property Value bool isTurret public bool isTurret { get; } Property Value bool isUseableShowingMenu Does equipped useable have a menu open? If so pause menu, dashboard, and other menus cannot be opened. public bool isUseableShowingMenu { get; } Property Value bool itemID public ushort itemID { get; } Property Value ushort lastPunching public float lastPunching { get; } Property Value float primary [Obsolete] public bool primary { get; } Property Value bool quality public byte quality { get; set; } Property Value byte secondary [Obsolete] public bool secondary { get; } Property Value bool state public byte[] state { get; set; } Property Value byte[] thirdLeftHook public Transform thirdLeftHook { get; } Property Value Transform thirdModel public Transform thirdModel { get; } Property Value Transform thirdPrimaryLargeGunSlot public Transform thirdPrimaryLargeGunSlot { get; } Property Value Transform thirdPrimaryMeleeSlot public Transform thirdPrimaryMeleeSlot { get; } Property Value Transform thirdPrimarySmallGunSlot public Transform thirdPrimarySmallGunSlot { get; } Property Value Transform thirdRightHook public Transform thirdRightHook { get; } Property Value Transform thirdSecondaryGunSlot public Transform thirdSecondaryGunSlot { get; } Property Value Transform thirdSecondaryMeleeSlot public Transform thirdSecondaryMeleeSlot { get; } Property Value Transform useable public Useable useable { get; } Property Value Useable Methods ReceiveEquip(byte, byte, byte, Guid, byte, byte[], NetId) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellEquip\")] public void ReceiveEquip(byte page, byte x, byte y, Guid newAssetGuid, byte newQuality, byte[] newState, NetId useableNetId) Parameters page byte x byte y byte newAssetGuid Guid newQuality byte newState byte[] useableNetId NetId ReceiveEquipRequest(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 5, legacyName = \"askEquip\")] public void ReceiveEquipRequest(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveItemHotkeySuggeston(in ClientInvocationContext, byte, Guid, byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveItemHotkeySuggeston(in ClientInvocationContext context, byte hotkeyIndex, Guid expectedAssetGuid, byte page, byte x, byte y) Parameters context ClientInvocationContext hotkeyIndex byte expectedAssetGuid Guid page byte x byte y byte ReceiveSlot(byte, ushort, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSlot\")] public void ReceiveSlot(byte slot, ushort id, byte[] state) Parameters slot byte id ushort state byte[] ReceiveToggleVision() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellToggleVision\")] public void ReceiveToggleVision() ReceiveToggleVisionRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askToggleVision\")] public void ReceiveToggleVisionRequest() ReceiveUpdateState(byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateState\")] public void ReceiveUpdateState(byte page, byte index, byte[] newState) Parameters page byte index byte newState byte[] ReceiveUpdateStateTemp(byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateStateTemp\")] public void ReceiveUpdateStateTemp(byte[] newState) Parameters newState byte[] ServerBindItemHotkey(byte, ItemAsset, byte, byte, byte) It should be safe to call this immediately because hotkeys are loaded in InitializePlayer. public void ServerBindItemHotkey(byte hotkeyIndex, ItemAsset expectedItem, byte page, byte x, byte y) Parameters hotkeyIndex byte expectedItem ItemAsset page byte x byte y byte ServerClearItemHotkey(byte) public void ServerClearItemHotkey(byte hotkeyIndex) Parameters hotkeyIndex byte ServerEquip(byte, byte, byte) public void ServerEquip(byte page, byte x, byte y) Parameters page byte x byte y byte applyMythicVisual() public void applyMythicVisual() applySkinVisual() public void applySkinVisual() askEquip(CSteamID, byte, byte, byte, byte[]) [Obsolete] public void askEquip(CSteamID steamID, byte page, byte x, byte y, byte[] hash) Parameters steamID CSteamID page byte x byte y byte hash byte[] askEquipment(CSteamID) [Obsolete] public void askEquipment(CSteamID steamID) Parameters steamID CSteamID askToggleVision(CSteamID) [Obsolete] public void askToggleVision(CSteamID steamID) Parameters steamID CSteamID checkSelection(byte) public bool checkSelection(byte page) Parameters page byte Returns bool checkSelection(byte, byte, byte) public bool checkSelection(byte page, byte x, byte y) Parameters page byte x byte y byte Returns bool dequip() public void dequip() equip(byte, byte, byte) Called clientside to ask server to equip an item in the inventory. public void equip(byte page, byte x, byte y) Parameters page byte x byte y byte fixStatTrackerHookScale(Transform) Left-handed characters need the stat tracker to be flipped on the X axis so that the text reads properly. ItemTool doesn't know about left/right handedness, so for the moment that's handled here because only players need this fixed up. protected void fixStatTrackerHookScale(Transform itemModelTransform) Parameters itemModelTransform Transform getSlot0StatTrackerValue(out EStatTrackerType, out int) protected bool getSlot0StatTrackerValue(out EStatTrackerType type, out int kills) Parameters type EStatTrackerType kills int Returns bool getSlot1StatTrackerValue(out EStatTrackerType, out int) protected bool getSlot1StatTrackerValue(out EStatTrackerType type, out int kills) Parameters type EStatTrackerType kills int Returns bool getUseableRagdollEffect() Get ragdoll effect to use when the current weapon deals damage. public ERagdollEffect getUseableRagdollEffect() Returns ERagdollEffect getUseableStatTrackerValue(out EStatTrackerType, out int) public bool getUseableStatTrackerValue(out EStatTrackerType type, out int kills) Parameters type EStatTrackerType kills int Returns bool inspect() public void inspect() isItemHotkeyed(byte, byte, ItemJar, out byte) public bool isItemHotkeyed(byte page, byte index, ItemJar jar, out byte button) Parameters page byte index byte jar ItemJar button byte Returns bool sendSlot(byte) public void sendSlot(byte slot) Parameters slot byte sendUpdateQuality() public void sendUpdateQuality() sendUpdateState() public void sendUpdateState() simulate(uint, EAttackInputFlags, EAttackInputFlags, bool) public void simulate(uint simulation, EAttackInputFlags inputPrimary, EAttackInputFlags inputSecondary, bool inputSteady) Parameters simulation uint inputPrimary EAttackInputFlags inputSecondary EAttackInputFlags inputSteady bool syncAllStatTrackerVisibility() Match all stat tracker visibilities to whether skins are visible. protected void syncAllStatTrackerVisibility() syncStatTrackTrackerVisibility(Transform) Match stat tracker gameobject's isActive to whether skins are visible. protected void syncStatTrackTrackerVisibility(Transform itemModelTransform) Parameters itemModelTransform Transform tellEquip(CSteamID, byte, byte, byte, ushort, byte, byte[]) [Obsolete] public void tellEquip(CSteamID steamID, byte page, byte x, byte y, ushort id, byte newQuality, byte[] newState) Parameters steamID CSteamID page byte x byte y byte id ushort newQuality byte newState byte[] tellSlot(CSteamID, byte, ushort, byte[]) [Obsolete] public void tellSlot(CSteamID steamID, byte slot, ushort id, byte[] state) Parameters steamID CSteamID slot byte id ushort state byte[] tellToggleVision(CSteamID) [Obsolete] public void tellToggleVision(CSteamID steamID) Parameters steamID CSteamID tellUpdateState(CSteamID, byte, byte, byte[]) [Obsolete] public void tellUpdateState(CSteamID steamID, byte page, byte index, byte[] newState) Parameters steamID CSteamID page byte index byte newState byte[] tellUpdateStateTemp(CSteamID, byte[]) [Obsolete] public void tellUpdateStateTemp(CSteamID steamID, byte[] newState) Parameters steamID CSteamID newState byte[] tock(uint) public void tock(uint clock) Parameters clock uint tryEquip(byte, byte, byte) [Obsolete(\"Renamed to ServerEquip\")] public void tryEquip(byte page, byte x, byte y) Parameters page byte x byte y byte tryEquip(byte, byte, byte, byte[]) [Obsolete(\"No longer necessary after hash check was converted to newer system\")] public void tryEquip(byte page, byte x, byte y, byte[] hash) Parameters page byte x byte y byte hash byte[] turretDequipClient() public void turretDequipClient() turretDequipServer() public void turretDequipServer() turretEquipClient() public void turretEquipClient() turretEquipServer(ushort, byte[]) public void turretEquipServer(ushort id, byte[] state) Parameters id ushort state byte[] uninspect() public void uninspect() updateQuality() public void updateQuality() updateState() public void updateState() use() public void use() useStepA() Remove the item from inventory so that if we die before useStepB() the item isn't dropped public void useStepA() useStepB() Finish dequipping from useStepA() public void useStepB() Events OnInspectingUseable_Global public static event Action<PlayerEquipment> OnInspectingUseable_Global Event Type Action<PlayerEquipment> OnUseableChanged_Global Invoked from tellEquip after change. public static event Action<PlayerEquipment> OnUseableChanged_Global Event Type Action<PlayerEquipment>"
  },
  "api/SDG.Unturned.PlayerEquipment_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerEquipment_NetMethods.html",
    "title": "Class PlayerEquipment_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerEquipment_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerEquipment))] public static class PlayerEquipment_NetMethods Inheritance object PlayerEquipment_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveEquipRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEquipRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEquipRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveEquipRequest_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveEquipRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEquipRequest_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveEquip_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEquip\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEquip_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEquip_Write(NetPakWriter, byte, byte, byte, Guid, byte, byte[], NetId) [NetInvokableGeneratedMethod(\"ReceiveEquip\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEquip_Write(NetPakWriter writer, byte page, byte x, byte y, Guid newAssetGuid, byte newQuality, byte[] newState, NetId useableNetId) Parameters writer NetPakWriter page byte x byte y byte newAssetGuid Guid newQuality byte newState byte[] useableNetId NetId ReceiveItemHotkeySuggeston_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveItemHotkeySuggeston\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveItemHotkeySuggeston_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveItemHotkeySuggeston_Write(NetPakWriter, byte, Guid, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveItemHotkeySuggeston\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveItemHotkeySuggeston_Write(NetPakWriter writer, byte hotkeyIndex, Guid expectedAssetGuid, byte page, byte x, byte y) Parameters writer NetPakWriter hotkeyIndex byte expectedAssetGuid Guid page byte x byte y byte ReceiveSlot_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSlot\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSlot_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSlot_Write(NetPakWriter, byte, ushort, byte[]) [NetInvokableGeneratedMethod(\"ReceiveSlot\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSlot_Write(NetPakWriter writer, byte slot, ushort id, byte[] state) Parameters writer NetPakWriter slot byte id ushort state byte[] ReceiveToggleVisionRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleVisionRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleVisionRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleVisionRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveToggleVisionRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleVisionRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveToggleVision_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleVision\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleVision_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveToggleVision_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveToggleVision\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleVision_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveUpdateStateTemp_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdateStateTemp\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdateStateTemp_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUpdateStateTemp_Write(NetPakWriter, byte[]) [NetInvokableGeneratedMethod(\"ReceiveUpdateStateTemp\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdateStateTemp_Write(NetPakWriter writer, byte[] newState) Parameters writer NetPakWriter newState byte[] ReceiveUpdateState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdateState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdateState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUpdateState_Write(NetPakWriter, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveUpdateState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdateState_Write(NetPakWriter writer, byte page, byte index, byte[] newState) Parameters writer NetPakWriter page byte index byte newState byte[]"
  },
  "api/SDG.Unturned.PlayerInput.html": {
    "href": "api/SDG.Unturned.PlayerInput.html",
    "title": "Class PlayerInput | Unturned Analyse Doc",
    "keywords": "Class PlayerInput Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerInput : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerInput Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerInput() public PlayerInput() Fields RATE public static readonly float RATE Field Value float SAMPLES public static readonly uint SAMPLES Field Value uint TOCK_PER_SECOND Calls to UseableGun.tock per second. public static readonly uint TOCK_PER_SECOND Field Value uint onPluginKeyTick Called for every input packet received allowing plugins to listen for a few special keys they can display in chat/effect UIs. public static PluginKeyTickHandler onPluginKeyTick Field Value PluginKeyTickHandler recov public int recov Field Value int Properties IsUnderFakeLagPenalty Whether client is currently penalized for potentially using a lag switch. False positives are relatively likely when client framerate hitches (e.g. loading dense region), so we only modify their stats (e.g. reduce player damage) for a corresponding duration. public bool IsUnderFakeLagPenalty { get; } Property Value bool clock public uint clock { get; } Property Value uint keys public bool[] keys { get; protected set; } Property Value bool[] simulation public uint simulation { get; } Property Value uint tick public float tick { get; } Property Value float Methods IsPluginKeyHeld(int) public bool IsPluginKeyHeld(int index) Parameters index int Returns bool ReceiveAckGoodInputs(uint) Notify client old inputs can be discarded because they were predicted correctly. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveAckGoodInputs(uint frameNumber) Parameters frameNumber uint ReceiveInputs(in ServerInvocationContext) Not using rate limit attribute because it internally keeps a rolling window limit. [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER)] public void ReceiveInputs(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSimulateMispredictedInputs(uint, EPlayerStance, Vector3, Vector3, byte, int, int) Notify client there has been a prediction error, so movement needs to be re-simulated. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveSimulateMispredictedInputs(uint frameNumber, EPlayerStance stance, Vector3 position, Vector3 velocity, byte stamina, int lastTireOffset, int lastRestOffset) Parameters frameNumber uint stance EPlayerStance position Vector3 velocity Vector3 stamina byte lastTireOffset int lastRestOffset int askInput(CSteamID) [Obsolete] public void askInput(CSteamID steamID) Parameters steamID CSteamID getInput(bool) [Obsolete(\"Use the overload of getInput that takes an expected usage parameter instead.\")] public InputInfo getInput(bool doOcclusionCheck) Parameters doOcclusionCheck bool Returns InputInfo getInput(bool, ERaycastInfoUsage) Get the hit result of a raycast on the server. Until a generic way to address net objects is implemented this is how legacy features specify which player/animal/zombie/vehicle/etc they want to interact with. public InputInfo getInput(bool doOcclusionCheck, ERaycastInfoUsage usage) Parameters doOcclusionCheck bool usage ERaycastInfoUsage Returns InputInfo getInputCount() public int getInputCount() Returns int hasInputs() public bool hasInputs() Returns bool isRaycastInvalid(RaycastInfo) public bool isRaycastInvalid(RaycastInfo info) Parameters info RaycastInfo Returns bool sendRaycast(RaycastInfo, ERaycastInfoUsage) public void sendRaycast(RaycastInfo info, ERaycastInfoUsage usage) Parameters info RaycastInfo usage ERaycastInfoUsage"
  },
  "api/SDG.Unturned.PlayerInputPacket.ClientRaycast.html": {
    "href": "api/SDG.Unturned.PlayerInputPacket.ClientRaycast.html",
    "title": "Struct PlayerInputPacket.ClientRaycast | Unturned Analyse Doc",
    "keywords": "Struct PlayerInputPacket.ClientRaycast Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct PlayerInputPacket.ClientRaycast Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors ClientRaycast(RaycastInfo, ERaycastInfoUsage) public ClientRaycast(RaycastInfo info, ERaycastInfoUsage usage) Parameters info RaycastInfo usage ERaycastInfoUsage Fields info public RaycastInfo info Field Value RaycastInfo usage public ERaycastInfoUsage usage Field Value ERaycastInfoUsage"
  },
  "api/SDG.Unturned.PlayerInputPacket.html": {
    "href": "api/SDG.Unturned.PlayerInputPacket.html",
    "title": "Class PlayerInputPacket | Unturned Analyse Doc",
    "keywords": "Class PlayerInputPacket Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerInputPacket Inheritance object PlayerInputPacket Derived DrivingPlayerInputPacket WalkingPlayerInputPacket Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerInputPacket() public PlayerInputPacket() Fields clientSimulationFrameNumber public uint clientSimulationFrameNumber Field Value uint clientsideInputs public List<PlayerInputPacket.ClientRaycast> clientsideInputs Field Value List<PlayerInputPacket.ClientRaycast> keys public ushort keys Field Value ushort primaryAttack public EAttackInputFlags primaryAttack Field Value EAttackInputFlags recov public int recov Field Value int secondaryAttack public EAttackInputFlags secondaryAttack Field Value EAttackInputFlags serversideInputs public Queue<InputInfo> serversideInputs Field Value Queue<InputInfo> Methods read(SteamChannel, NetPakReader) public virtual void read(SteamChannel channel, NetPakReader reader) Parameters channel SteamChannel reader NetPakReader write(NetPakWriter) public virtual void write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.PlayerInput_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerInput_NetMethods.html",
    "title": "Class PlayerInput_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerInput_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerInput))] public static class PlayerInput_NetMethods Inheritance object PlayerInput_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAckGoodInputs_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAckGoodInputs\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAckGoodInputs_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAckGoodInputs_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveAckGoodInputs\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAckGoodInputs_Write(NetPakWriter writer, uint frameNumber) Parameters writer NetPakWriter frameNumber uint ReceiveInputs_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveInputs\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveInputs_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSimulateMispredictedInputs_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSimulateMispredictedInputs\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSimulateMispredictedInputs_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSimulateMispredictedInputs_Write(NetPakWriter, uint, EPlayerStance, Vector3, Vector3, byte, int, int) [NetInvokableGeneratedMethod(\"ReceiveSimulateMispredictedInputs\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSimulateMispredictedInputs_Write(NetPakWriter writer, uint frameNumber, EPlayerStance stance, Vector3 position, Vector3 velocity, byte stamina, int lastTireOffset, int lastRestOffset) Parameters writer NetPakWriter frameNumber uint stance EPlayerStance position Vector3 velocity Vector3 stamina byte lastTireOffset int lastRestOffset int"
  },
  "api/SDG.Unturned.PlayerInteract.html": {
    "href": "api/SDG.Unturned.PlayerInteract.html",
    "title": "Class PlayerInteract | Unturned Analyse Doc",
    "keywords": "Class PlayerInteract Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerInteract : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerInteract Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerInteract() public PlayerInteract() Properties interactable public static Interactable interactable { get; } Property Value Interactable interactable2 public static Interactable2 interactable2 { get; } Property Value Interactable2 Methods ReceiveInspectRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askInspect\")] public void ReceiveInspectRequest() ReceivePlayInspect() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellInspect\")] public void ReceivePlayInspect() ReceiveSalvageTimeOverride(float) Called from the server to override salvage duration. Only used by plugins. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSalvageTimeOverride\")] public void ReceiveSalvageTimeOverride(float overrideValue) Parameters overrideValue float askInspect(CSteamID) [Obsolete] public void askInspect(CSteamID steamID) Parameters steamID CSteamID sendSalvageTimeOverride(float) Override salvage duration without admin. Only used by plugins. public void sendSalvageTimeOverride(float overrideValue) Parameters overrideValue float tellInspect(CSteamID) [Obsolete] public void tellInspect(CSteamID steamID) Parameters steamID CSteamID tellSalvageTimeOverride(CSteamID, float) [Obsolete] public void tellSalvageTimeOverride(CSteamID senderId, float overrideValue) Parameters senderId CSteamID overrideValue float"
  },
  "api/SDG.Unturned.PlayerInteract_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerInteract_NetMethods.html",
    "title": "Class PlayerInteract_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerInteract_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerInteract))] public static class PlayerInteract_NetMethods Inheritance object PlayerInteract_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveInspectRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveInspectRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveInspectRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveInspectRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveInspectRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveInspectRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlayInspect_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayInspect\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayInspect_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayInspect_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayInspect\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayInspect_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveSalvageTimeOverride_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSalvageTimeOverride\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSalvageTimeOverride_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSalvageTimeOverride_Write(NetPakWriter, float) [NetInvokableGeneratedMethod(\"ReceiveSalvageTimeOverride\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSalvageTimeOverride_Write(NetPakWriter writer, float overrideValue) Parameters writer NetPakWriter overrideValue float"
  },
  "api/SDG.Unturned.PlayerInventory.html": {
    "href": "api/SDG.Unturned.PlayerInventory.html",
    "title": "Class PlayerInventory | Unturned Analyse Doc",
    "keywords": "Class PlayerInventory Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerInventory : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerInventory Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerInventory() public PlayerInventory() Fields AREA public static readonly byte AREA Field Value byte BACKPACK public static readonly byte BACKPACK Field Value byte HORDE public static readonly ushort[] HORDE Field Value ushort[] LOADOUT public static readonly ushort[] LOADOUT Field Value ushort[] PAGES public static readonly byte PAGES Field Value byte PANTS public static readonly byte PANTS Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SHIRT public static readonly byte SHIRT Field Value byte SKILLSETS_CLIENT public static readonly ushort[][] SKILLSETS_CLIENT Field Value ushort[][] SKILLSETS_HERO public static readonly ushort[][] SKILLSETS_HERO Field Value ushort[][] SKILLSETS_SERVER public static readonly ushort[][] SKILLSETS_SERVER Field Value ushort[][] SLOTS public static readonly byte SLOTS Field Value byte STORAGE public static readonly byte STORAGE Field Value byte VEST public static readonly byte VEST Field Value byte isStorageTrunk public bool isStorageTrunk Field Value bool isStoring public bool isStoring Field Value bool loadout public static ushort[] loadout Field Value ushort[] onDropItemRequested public DropItemRequestHandler onDropItemRequested Field Value DropItemRequestHandler onInventoryAdded public InventoryAdded onInventoryAdded Field Value InventoryAdded onInventoryRemoved public InventoryRemoved onInventoryRemoved Field Value InventoryRemoved onInventoryResized public InventoryResized onInventoryResized Field Value InventoryResized onInventoryStateUpdated public InventoryStateUpdated onInventoryStateUpdated Field Value InventoryStateUpdated onInventoryStored public InventoryStored onInventoryStored Field Value InventoryStored onInventoryUpdated public InventoryUpdated onInventoryUpdated Field Value InventoryUpdated receivedUpdateIndex Every time the inventory changes this number is incremented. While a little messy, the idea is to prevent inventory checks from happening every frame. protected int receivedUpdateIndex Field Value int skillsets public static ushort[][] skillsets Field Value ushort[][] storage public InteractableStorage storage Field Value InteractableStorage Properties items public Items[] items { get; } Property Value Items[] shouldInteractCloseStorage public bool shouldInteractCloseStorage { get; } Property Value bool shouldInventoryStopGestureCloseStorage public bool shouldInventoryStopGestureCloseStorage { get; } Property Value bool shouldStorageOpenDashboard public bool shouldStorageOpenDashboard { get; } Property Value bool Methods ReceiveDragItem(byte, byte, byte, byte, byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askDragItem\")] public void ReceiveDragItem(byte page_0, byte x_0, byte y_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters page_0 byte x_0 byte y_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte ReceiveDropItem(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askDropItem\")] public void ReceiveDropItem(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveInventory(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveInventory(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveItemAdd(byte, byte, byte, byte, ushort, byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellItemAdd\")] public void ReceiveItemAdd(byte page, byte x, byte y, byte rot, ushort id, byte amount, byte quality, byte[] state) Parameters page byte x byte y byte rot byte id ushort amount byte quality byte state byte[] ReceiveItemRemove(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellItemRemove\")] public void ReceiveItemRemove(byte page, byte x, byte y) Parameters page byte x byte y byte ReceiveSize(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSize\")] public void ReceiveSize(byte page, byte newWidth, byte newHeight) Parameters page byte newWidth byte newHeight byte ReceiveStoraging(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveStoraging(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSwapItem(byte, byte, byte, byte, byte, byte, byte, byte) Swap coordinates of two existing items. Rotation is provided to handle differently shaped items e.g. a 1x2 item with a 2x1 item. [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askSwapItem\")] public void ReceiveSwapItem(byte page_0, byte x_0, byte y_0, byte rot_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters page_0 byte x_0 byte y_0 byte rot_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte ReceiveUpdateAmount(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateAmount\")] public void ReceiveUpdateAmount(byte page, byte index, byte amount) Parameters page byte index byte amount byte ReceiveUpdateInvState(byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateInvState\")] public void ReceiveUpdateInvState(byte page, byte index, byte[] state) Parameters page byte index byte state byte[] ReceiveUpdateQuality(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellUpdateQuality\")] public void ReceiveUpdateQuality(byte page, byte index, byte quality) Parameters page byte index byte quality byte askDragItem(CSteamID, byte, byte, byte, byte, byte, byte, byte) [Obsolete] public void askDragItem(CSteamID steamID, byte page_0, byte x_0, byte y_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters steamID CSteamID page_0 byte x_0 byte y_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte askDropItem(CSteamID, byte, byte, byte) [Obsolete] public void askDropItem(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte askInventory(CSteamID) [Obsolete] public void askInventory(CSteamID steamID) Parameters steamID CSteamID askSwapItem(CSteamID, byte, byte, byte, byte, byte, byte, byte, byte) [Obsolete] public void askSwapItem(CSteamID steamID, byte page_0, byte x_0, byte y_0, byte rot_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters steamID CSteamID page_0 byte x_0 byte y_0 byte rot_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte checkSpaceDrag(byte, byte, byte, byte, byte, byte, byte, byte, byte, bool) public bool checkSpaceDrag(byte page, byte old_x, byte old_y, byte oldRot, byte new_x, byte new_y, byte newRot, byte size_x, byte size_y, bool checkSame) Parameters page byte old_x byte old_y byte oldRot byte new_x byte new_y byte newRot byte size_x byte size_y byte checkSame bool Returns bool checkSpaceEmpty(byte, byte, byte, byte, byte, byte) public bool checkSpaceEmpty(byte page, byte x, byte y, byte size_x, byte size_y, byte rot) Parameters page byte x byte y byte size_x byte size_y byte rot byte Returns bool checkSpaceSwap(byte, byte, byte, byte, byte, byte, byte, byte, byte) Given an item coordinate (page, x, y) could a new item take the place of an old (existing) item without overlapping other item(s) space? Always true for equipment slots (page less than SLOTS). For example if oldSize is (1, 2) rot 0, and newSize is (2, 1) rot 1, then they can swap. public bool checkSpaceSwap(byte page, byte x, byte y, byte oldSize_X, byte oldSize_Y, byte oldRot, byte newSize_X, byte newSize_Y, byte newRot) Parameters page byte x byte y byte oldSize_X byte oldSize_Y byte oldRot byte newSize_X byte newSize_Y byte newRot byte Returns bool closeDistantStorage() Called from player movement to close storage that has moved away. public void closeDistantStorage() closeStorage() Called on both client and server, as well as by storage itself when destroyed. public void closeStorage() closeStorageAndNotifyClient() public void closeStorageAndNotifyClient() closeTrunk() Serverside revoke trunk access and notify client. public void closeTrunk() doesSearchNeedRefresh(ref int) Helper to prevent checking the inventory every frame for systems that don't use events. public bool doesSearchNeedRefresh(ref int index) Parameters index int Returns bool findIndex(byte, byte, byte, out byte, out byte) public byte findIndex(byte page, byte x, byte y, out byte find_x, out byte find_y) Parameters page byte x byte y byte find_x byte find_y byte Returns byte forceAddItem(Item, bool) public void forceAddItem(Item item, bool auto) Parameters item Item auto bool forceAddItem(Item, bool, bool) public void forceAddItem(Item item, bool auto, bool playEffect) Parameters item Item auto bool playEffect bool forceAddItemAuto(Item, bool, bool, bool) public void forceAddItemAuto(Item item, bool autoEquipWeapon, bool autoEquipUseable, bool autoEquipClothing) Parameters item Item autoEquipWeapon bool autoEquipUseable bool autoEquipClothing bool forceAddItemAuto(Item, bool, bool, bool, bool) public void forceAddItemAuto(Item item, bool autoEquipWeapon, bool autoEquipUseable, bool autoEquipClothing, bool playEffect) Parameters item Item autoEquipWeapon bool autoEquipUseable bool autoEquipClothing bool playEffect bool getHeight(byte) public byte getHeight(byte page) Parameters page byte Returns byte getIndex(byte, byte, byte) public byte getIndex(byte page, byte x, byte y) Parameters page byte x byte y byte Returns byte getItem(byte, byte) public ItemJar getItem(byte page, byte index) Parameters page byte index byte Returns ItemJar getItemCount(byte) public byte getItemCount(byte page) Parameters page byte Returns byte getWidth(byte) public byte getWidth(byte page) Parameters page byte Returns byte has(ushort) public InventorySearch has(ushort id) Parameters id ushort Returns InventorySearch incrementUpdateIndex() Should be called every time something changes in the inventory. protected void incrementUpdateIndex() load() public void load() openStorage(InteractableStorage) Serverside open a storage crate and notify client. public void openStorage(InteractableStorage newStorage) Parameters newStorage InteractableStorage openTrunk(Items) Serverside grant access to car trunk storage and notify client. public void openTrunk(Items trunkItems) Parameters trunkItems Items removeItem(byte, byte) public void removeItem(byte page, byte index) Parameters page byte index byte replaceItems(byte, Items) public void replaceItems(byte page, Items replacement) Parameters page byte replacement Items save() public void save() search(EItemType) public List<InventorySearch> search(EItemType type) Parameters type EItemType Returns List<InventorySearch> search(EItemType, ushort[]) [Obsolete] public List<InventorySearch> search(EItemType type, ushort[] calibers) Parameters type EItemType calibers ushort[] Returns List<InventorySearch> search(EItemType, ushort[], bool) public List<InventorySearch> search(EItemType type, ushort[] calibers, bool allowZeroCaliber) Parameters type EItemType calibers ushort[] allowZeroCaliber bool Returns List<InventorySearch> search(List<InventorySearch>) public List<InventorySearch> search(List<InventorySearch> search) Parameters search List<InventorySearch> Returns List<InventorySearch> search(List<InventorySearch>, EItemType) public void search(List<InventorySearch> search, EItemType type) Parameters search List<InventorySearch> type EItemType search(List<InventorySearch>, EItemType, ushort) [Obsolete] public void search(List<InventorySearch> search, EItemType type, ushort caliber) Parameters search List<InventorySearch> type EItemType caliber ushort search(List<InventorySearch>, EItemType, ushort, bool) public void search(List<InventorySearch> search, EItemType type, ushort caliber, bool allowZeroCaliber) Parameters search List<InventorySearch> type EItemType caliber ushort allowZeroCaliber bool search(List<InventorySearch>, ushort, bool, bool) public void search(List<InventorySearch> search, ushort id, bool findEmpty, bool findHealthy) Parameters search List<InventorySearch> id ushort findEmpty bool findHealthy bool search(ushort, bool, bool) public List<InventorySearch> search(ushort id, bool findEmpty, bool findHealthy) Parameters id ushort findEmpty bool findHealthy bool Returns List<InventorySearch> sendDragItem(byte, byte, byte, byte, byte, byte, byte) public void sendDragItem(byte page_0, byte x_0, byte y_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters page_0 byte x_0 byte y_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte sendDropItem(byte, byte, byte) public void sendDropItem(byte page, byte x, byte y) Parameters page byte x byte y byte sendStorage() public void sendStorage() sendSwapItem(byte, byte, byte, byte, byte, byte, byte, byte) Swap coordinates of two existing items. Rotation is provided to handle differently shaped items e.g. a 1x2 item with a 2x1 item. public void sendSwapItem(byte page_0, byte x_0, byte y_0, byte rot_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters page_0 byte x_0 byte y_0 byte rot_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte sendUpdateAmount(byte, byte, byte, byte) public void sendUpdateAmount(byte page, byte x, byte y, byte amount) Parameters page byte x byte y byte amount byte sendUpdateInvState(byte, byte, byte, byte[]) public void sendUpdateInvState(byte page, byte x, byte y, byte[] state) Parameters page byte x byte y byte state byte[] sendUpdateQuality(byte, byte, byte, byte) public void sendUpdateQuality(byte page, byte x, byte y, byte quality) Parameters page byte x byte y byte quality byte tellInventory(CSteamID) [Obsolete] public void tellInventory(CSteamID steamID) Parameters steamID CSteamID tellItemAdd(CSteamID, byte, byte, byte, byte, ushort, byte, byte, byte[]) [Obsolete] public void tellItemAdd(CSteamID steamID, byte page, byte x, byte y, byte rot, ushort id, byte amount, byte quality, byte[] state) Parameters steamID CSteamID page byte x byte y byte rot byte id ushort amount byte quality byte state byte[] tellItemRemove(CSteamID, byte, byte, byte) [Obsolete] public void tellItemRemove(CSteamID steamID, byte page, byte x, byte y) Parameters steamID CSteamID page byte x byte y byte tellSize(CSteamID, byte, byte, byte) [Obsolete] public void tellSize(CSteamID steamID, byte page, byte newWidth, byte newHeight) Parameters steamID CSteamID page byte newWidth byte newHeight byte tellStoraging(CSteamID) [Obsolete] public void tellStoraging(CSteamID steamID) Parameters steamID CSteamID tellUpdateAmount(CSteamID, byte, byte, byte) [Obsolete] public void tellUpdateAmount(CSteamID steamID, byte page, byte index, byte amount) Parameters steamID CSteamID page byte index byte amount byte tellUpdateInvState(CSteamID, byte, byte, byte[]) [Obsolete] public void tellUpdateInvState(CSteamID steamID, byte page, byte index, byte[] state) Parameters steamID CSteamID page byte index byte state byte[] tellUpdateQuality(CSteamID, byte, byte, byte) [Obsolete] public void tellUpdateQuality(CSteamID steamID, byte page, byte index, byte quality) Parameters steamID CSteamID page byte index byte quality byte tryAddItem(Item, bool) public bool tryAddItem(Item item, bool auto) Parameters item Item auto bool Returns bool tryAddItem(Item, bool, bool) public bool tryAddItem(Item item, bool auto, bool playEffect) Parameters item Item auto bool playEffect bool Returns bool tryAddItem(Item, byte, byte, byte, byte) public bool tryAddItem(Item item, byte x, byte y, byte page, byte rot) Parameters item Item x byte y byte page byte rot byte Returns bool tryAddItemAuto(Item, bool, bool, bool, bool) public bool tryAddItemAuto(Item item, bool autoEquipWeapon, bool autoEquipUseable, bool autoEquipClothing, bool playEffect) Parameters item Item autoEquipWeapon bool autoEquipUseable bool autoEquipClothing bool playEffect bool Returns bool tryFindSpace(byte, byte, byte, out byte, out byte, out byte) public bool tryFindSpace(byte page, byte size_x, byte size_y, out byte x, out byte y, out byte rot) Parameters page byte size_x byte size_y byte x byte y byte rot byte Returns bool tryFindSpace(byte, byte, out byte, out byte, out byte, out byte) public bool tryFindSpace(byte size_x, byte size_y, out byte page, out byte x, out byte y, out byte rot) Parameters size_x byte size_y byte page byte x byte y byte rot byte Returns bool updateAmount(byte, byte, byte) public void updateAmount(byte page, byte index, byte newAmount) Parameters page byte index byte newAmount byte updateItems(byte, Items) public void updateItems(byte page, Items newItems) Parameters page byte newItems Items updateQuality(byte, byte, byte) public void updateQuality(byte page, byte index, byte newQuality) Parameters page byte index byte newQuality byte updateState(byte, byte, byte[]) public void updateState(byte page, byte index, byte[] newState) Parameters page byte index byte newState byte[]"
  },
  "api/SDG.Unturned.PlayerInventory_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerInventory_NetMethods.html",
    "title": "Class PlayerInventory_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerInventory_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerInventory))] public static class PlayerInventory_NetMethods Inheritance object PlayerInventory_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveDragItem_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDragItem\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDragItem_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveDragItem_Write(NetPakWriter, byte, byte, byte, byte, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveDragItem\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDragItem_Write(NetPakWriter writer, byte page_0, byte x_0, byte y_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters writer NetPakWriter page_0 byte x_0 byte y_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte ReceiveDropItem_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDropItem\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDropItem_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveDropItem_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveDropItem\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDropItem_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveInventory_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveInventory\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveInventory_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveItemAdd_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveItemAdd\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveItemAdd_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveItemAdd_Write(NetPakWriter, byte, byte, byte, byte, ushort, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveItemAdd\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveItemAdd_Write(NetPakWriter writer, byte page, byte x, byte y, byte rot, ushort id, byte amount, byte quality, byte[] state) Parameters writer NetPakWriter page byte x byte y byte rot byte id ushort amount byte quality byte state byte[] ReceiveItemRemove_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveItemRemove\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveItemRemove_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveItemRemove_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveItemRemove\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveItemRemove_Write(NetPakWriter writer, byte page, byte x, byte y) Parameters writer NetPakWriter page byte x byte y byte ReceiveSize_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSize\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSize_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSize_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSize\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSize_Write(NetPakWriter writer, byte page, byte newWidth, byte newHeight) Parameters writer NetPakWriter page byte newWidth byte newHeight byte ReceiveStoraging_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveStoraging\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveStoraging_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSwapItem_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapItem\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapItem_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapItem_Write(NetPakWriter, byte, byte, byte, byte, byte, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapItem\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapItem_Write(NetPakWriter writer, byte page_0, byte x_0, byte y_0, byte rot_0, byte page_1, byte x_1, byte y_1, byte rot_1) Parameters writer NetPakWriter page_0 byte x_0 byte y_0 byte rot_0 byte page_1 byte x_1 byte y_1 byte rot_1 byte ReceiveUpdateAmount_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdateAmount\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdateAmount_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUpdateAmount_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveUpdateAmount\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdateAmount_Write(NetPakWriter writer, byte page, byte index, byte amount) Parameters writer NetPakWriter page byte index byte amount byte ReceiveUpdateInvState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdateInvState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdateInvState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUpdateInvState_Write(NetPakWriter, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveUpdateInvState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdateInvState_Write(NetPakWriter writer, byte page, byte index, byte[] state) Parameters writer NetPakWriter page byte index byte state byte[] ReceiveUpdateQuality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpdateQuality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpdateQuality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUpdateQuality_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveUpdateQuality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpdateQuality_Write(NetPakWriter writer, byte page, byte index, byte quality) Parameters writer NetPakWriter page byte index byte quality byte"
  },
  "api/SDG.Unturned.PlayerLife.FallDamageRequestHandler.html": {
    "href": "api/SDG.Unturned.PlayerLife.FallDamageRequestHandler.html",
    "title": "Delegate PlayerLife.FallDamageRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate PlayerLife.FallDamageRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerLife.FallDamageRequestHandler(PlayerLife component, float velocity, ref float damage, ref bool shouldBreakLegs) Parameters component PlayerLife velocity float damage float shouldBreakLegs bool Constructors FallDamageRequestHandler(object, IntPtr) public FallDamageRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerLife, float, ref float, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerLife component, float velocity, ref float damage, ref bool shouldBreakLegs, AsyncCallback callback, object @object) Parameters component PlayerLife velocity float damage float shouldBreakLegs bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref float, ref bool, IAsyncResult) public virtual void EndInvoke(ref float damage, ref bool shouldBreakLegs, IAsyncResult result) Parameters damage float shouldBreakLegs bool result IAsyncResult Invoke(PlayerLife, float, ref float, ref bool) public virtual void Invoke(PlayerLife component, float velocity, ref float damage, ref bool shouldBreakLegs) Parameters component PlayerLife velocity float damage float shouldBreakLegs bool"
  },
  "api/SDG.Unturned.PlayerLife.PlayerDiedCallback.html": {
    "href": "api/SDG.Unturned.PlayerLife.PlayerDiedCallback.html",
    "title": "Delegate PlayerLife.PlayerDiedCallback | Unturned Analyse Doc",
    "keywords": "Delegate PlayerLife.PlayerDiedCallback Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerLife.PlayerDiedCallback(PlayerLife sender, EDeathCause cause, ELimb limb, CSteamID instigator) Parameters sender PlayerLife cause EDeathCause limb ELimb instigator CSteamID Constructors PlayerDiedCallback(object, IntPtr) public PlayerDiedCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerLife, EDeathCause, ELimb, CSteamID, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerLife sender, EDeathCause cause, ELimb limb, CSteamID instigator, AsyncCallback callback, object @object) Parameters sender PlayerLife cause EDeathCause limb ELimb instigator CSteamID callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerLife, EDeathCause, ELimb, CSteamID) public virtual void Invoke(PlayerLife sender, EDeathCause cause, ELimb limb, CSteamID instigator) Parameters sender PlayerLife cause EDeathCause limb ELimb instigator CSteamID"
  },
  "api/SDG.Unturned.PlayerLife.RespawnPointSelector.html": {
    "href": "api/SDG.Unturned.PlayerLife.RespawnPointSelector.html",
    "title": "Delegate PlayerLife.RespawnPointSelector | Unturned Analyse Doc",
    "keywords": "Delegate PlayerLife.RespawnPointSelector Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerLife.RespawnPointSelector(PlayerLife sender, bool wantsToSpawnAtHome, ref Vector3 position, ref float yaw) Parameters sender PlayerLife wantsToSpawnAtHome bool position Vector3 yaw float Constructors RespawnPointSelector(object, IntPtr) public RespawnPointSelector(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerLife, bool, ref Vector3, ref float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerLife sender, bool wantsToSpawnAtHome, ref Vector3 position, ref float yaw, AsyncCallback callback, object @object) Parameters sender PlayerLife wantsToSpawnAtHome bool position Vector3 yaw float callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref float, IAsyncResult) public virtual void EndInvoke(ref Vector3 position, ref float yaw, IAsyncResult result) Parameters position Vector3 yaw float result IAsyncResult Invoke(PlayerLife, bool, ref Vector3, ref float) public virtual void Invoke(PlayerLife sender, bool wantsToSpawnAtHome, ref Vector3 position, ref float yaw) Parameters sender PlayerLife wantsToSpawnAtHome bool position Vector3 yaw float"
  },
  "api/SDG.Unturned.PlayerLife.html": {
    "href": "api/SDG.Unturned.PlayerLife.html",
    "title": "Class PlayerLife | Unturned Analyse Doc",
    "keywords": "Class PlayerLife Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerLife : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerLife Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerLife() public PlayerLife() Fields OnRevived_Global Invoked after player finishes respawning. public static Action<PlayerLife> OnRevived_Global Field Value Action<PlayerLife> OnTellBleeding_Global public static Action<PlayerLife> OnTellBleeding_Global Field Value Action<PlayerLife> OnTellBroken_Global public static Action<PlayerLife> OnTellBroken_Global Field Value Action<PlayerLife> OnTellFood_Global public static Action<PlayerLife> OnTellFood_Global Field Value Action<PlayerLife> OnTellHealth_Global public static Action<PlayerLife> OnTellHealth_Global Field Value Action<PlayerLife> OnTellVirus_Global public static Action<PlayerLife> OnTellVirus_Global Field Value Action<PlayerLife> OnTellWater_Global public static Action<PlayerLife> OnTellWater_Global Field Value Action<PlayerLife> RocketLegacyOnDeath public static Action<PlayerLife, EDeathCause, ELimb, CSteamID> RocketLegacyOnDeath Field Value Action<PlayerLife, EDeathCause, ELimb, CSteamID> SAVEDATA_VERSION [Obsolete(\"Future version numbers for all systems will specify what changed.\")] public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_LATEST public static readonly byte SAVEDATA_VERSION_LATEST Field Value byte SAVEDATA_VERSION_WITH_OXYGEN public static readonly byte SAVEDATA_VERSION_WITH_OXYGEN Field Value byte onBleedingUpdated public BleedingUpdated onBleedingUpdated Field Value BleedingUpdated onBrokenUpdated public BrokenUpdated onBrokenUpdated Field Value BrokenUpdated onDamaged public Damaged onDamaged Field Value Damaged onFoodUpdated public FoodUpdated onFoodUpdated Field Value FoodUpdated onHealthUpdated public HealthUpdated onHealthUpdated Field Value HealthUpdated onLifeUpdated public LifeUpdated onLifeUpdated Field Value LifeUpdated onOxygenUpdated public OxygenUpdated onOxygenUpdated Field Value OxygenUpdated onPlayerLifeUpdated public static PlayerLifeUpdated onPlayerLifeUpdated Field Value PlayerLifeUpdated onStaminaUpdated public StaminaUpdated onStaminaUpdated Field Value StaminaUpdated onTemperatureUpdated public TemperatureUpdated onTemperatureUpdated Field Value TemperatureUpdated onVirusUpdated public VirusUpdated onVirusUpdated Field Value VirusUpdated onVisionUpdated public VisionUpdated onVisionUpdated Field Value VisionUpdated onWaterUpdated public WaterUpdated onWaterUpdated Field Value WaterUpdated Properties IsAlive public bool IsAlive { get; } Property Value bool deathCause public static EDeathCause deathCause { get; } Property Value EDeathCause deathKiller public static CSteamID deathKiller { get; } Property Value CSteamID deathLimb public static ELimb deathLimb { get; } Property Value ELimb food public byte food { get; } Property Value byte health public byte health { get; } Property Value byte isAggressor public bool isAggressor { get; } Property Value bool isBleeding public bool isBleeding { get; } Property Value bool isBroken public bool isBroken { get; } Property Value bool isDead public bool isDead { get; } Property Value bool lastDeath public float lastDeath { get; } Property Value float lastRespawn public float lastRespawn { get; } Property Value float oxygen public byte oxygen { get; } Property Value byte stamina public byte stamina { get; } Property Value byte temperature public EPlayerTemperature temperature { get; } Property Value EPlayerTemperature virus public byte virus { get; } Property Value byte vision public byte vision { get; } Property Value byte warmth public uint warmth { get; } Property Value uint wasPvPDeath public bool wasPvPDeath { get; } Property Value bool water public byte water { get; } Property Value byte Methods ReceiveBleeding(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellBleeding\")] public void ReceiveBleeding(bool newBleeding) Parameters newBleeding bool ReceiveBroken(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellBroken\")] public void ReceiveBroken(bool newBroken) Parameters newBroken bool ReceiveDamagedEvent(byte, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveDamagedEvent(byte damageAmount, Vector3 damageDirection) Parameters damageAmount byte damageDirection Vector3 ReceiveDead(Vector3, ERagdollEffect) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellDead\")] public void ReceiveDead(Vector3 newRagdoll, ERagdollEffect newRagdollEffect) Parameters newRagdoll Vector3 newRagdollEffect ERagdollEffect ReceiveDeath(EDeathCause, ELimb, CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellDeath\")] public void ReceiveDeath(EDeathCause newCause, ELimb newLimb, CSteamID newKiller) Parameters newCause EDeathCause newLimb ELimb newKiller CSteamID ReceiveFood(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellFood\")] public void ReceiveFood(byte newFood) Parameters newFood byte ReceiveHealth(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellHealth\")] public void ReceiveHealth(byte newHealth) Parameters newHealth byte ReceiveLifeStats(byte, byte, byte, byte, byte, bool, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellLifeWithOxygen\")] public void ReceiveLifeStats(byte newHealth, byte newFood, byte newWater, byte newVirus, byte newOxygen, bool newBleeding, bool newBroken) Parameters newHealth byte newFood byte newWater byte newVirus byte newOxygen byte newBleeding bool newBroken bool ReceiveModifyHallucination(short) Called from the server to induce a hallucination. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"clientModifyHallucination\")] public void ReceiveModifyHallucination(short delta) Parameters delta short ReceiveModifyStamina(short) Called from the server to modify stamina. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"clientModifyStamina\")] public void ReceiveModifyStamina(short delta) Parameters delta short ReceiveModifyWarmth(short) Called from the server to modify warmth. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"clientModifyWarmth\")] public void ReceiveModifyWarmth(short delta) Parameters delta short ReceiveRespawnRequest(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askRespawn\")] public void ReceiveRespawnRequest(bool atHome) Parameters atHome bool ReceiveRevive(Vector3, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellRevive\")] public void ReceiveRevive(Vector3 position, byte angle) Parameters position Vector3 angle byte ReceiveSuicideRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askSuicide\")] public void ReceiveSuicideRequest() ReceiveVirus(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVirus\")] public void ReceiveVirus(byte newVirus) Parameters newVirus byte ReceiveWater(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWater\")] public void ReceiveWater(byte newWater) Parameters newWater byte ServerRespawn(bool) Used by plugins to respawn the player bypassing timers. Issue #2701 public void ServerRespawn(bool atHome) Parameters atHome bool askBlind(byte) public void askBlind(byte amount) Parameters amount byte askBreath(byte) public void askBreath(byte amount) Parameters amount byte askDamage(byte, Vector3, EDeathCause, ELimb, CSteamID, out EPlayerKill) public void askDamage(byte amount, Vector3 newRagdoll, EDeathCause newCause, ELimb newLimb, CSteamID newKiller, out EPlayerKill kill) Parameters amount byte newRagdoll Vector3 newCause EDeathCause newLimb ELimb newKiller CSteamID kill EPlayerKill askDamage(byte, Vector3, EDeathCause, ELimb, CSteamID, out EPlayerKill, bool, ERagdollEffect) public void askDamage(byte amount, Vector3 newRagdoll, EDeathCause newCause, ELimb newLimb, CSteamID newKiller, out EPlayerKill kill, bool trackKill = false, ERagdollEffect newRagdollEffect = ERagdollEffect.NONE) Parameters amount byte newRagdoll Vector3 newCause EDeathCause newLimb ELimb newKiller CSteamID kill EPlayerKill trackKill bool newRagdollEffect ERagdollEffect askDamage(byte, Vector3, EDeathCause, ELimb, CSteamID, out EPlayerKill, bool, ERagdollEffect, bool) public void askDamage(byte amount, Vector3 newRagdoll, EDeathCause newCause, ELimb newLimb, CSteamID newKiller, out EPlayerKill kill, bool trackKill = false, ERagdollEffect newRagdollEffect = ERagdollEffect.NONE, bool canCauseBleeding = true) Parameters amount byte newRagdoll Vector3 newCause EDeathCause newLimb ELimb newKiller CSteamID kill EPlayerKill trackKill bool newRagdollEffect ERagdollEffect canCauseBleeding bool askDamage(byte, Vector3, EDeathCause, ELimb, CSteamID, out EPlayerKill, bool, ERagdollEffect, bool, bool) public void askDamage(byte amount, Vector3 newRagdoll, EDeathCause newCause, ELimb newLimb, CSteamID newKiller, out EPlayerKill kill, bool trackKill = false, ERagdollEffect newRagdollEffect = ERagdollEffect.NONE, bool canCauseBleeding = true, bool bypassSafezone = false) Parameters amount byte newRagdoll Vector3 newCause EDeathCause newLimb ELimb newKiller CSteamID kill EPlayerKill trackKill bool newRagdollEffect ERagdollEffect canCauseBleeding bool bypassSafezone bool Should damage be dealt even while inside safezone? askDehydrate(byte) public void askDehydrate(byte amount) Parameters amount byte askDisinfect(byte) public void askDisinfect(byte amount) Parameters amount byte askDrink(byte) public void askDrink(byte amount) Parameters amount byte askEat(byte) public void askEat(byte amount) Parameters amount byte askHeal(byte, bool, bool) public void askHeal(byte amount, bool healBleeding, bool healBroken) Parameters amount byte healBleeding bool healBroken bool askInfect(byte) public void askInfect(byte amount) Parameters amount byte askLife(CSteamID) [Obsolete] public void askLife(CSteamID steamID) Parameters steamID CSteamID askRadiate(byte) public void askRadiate(byte amount) Parameters amount byte askRespawn(CSteamID, bool) [Obsolete] public void askRespawn(CSteamID steamID, bool atHome) Parameters steamID CSteamID atHome bool askRest(byte) public void askRest(byte amount) Parameters amount byte askStarve(byte) public void askStarve(byte amount) Parameters amount byte askSuffocate(byte) public void askSuffocate(byte amount) Parameters amount byte askSuicide(CSteamID) [Obsolete] public void askSuicide(CSteamID steamID) Parameters steamID CSteamID askTire(byte) public void askTire(byte amount) Parameters amount byte askView(byte) public void askView(byte amount) Parameters amount byte breakLegs() public void breakLegs() clientModifyHallucination(CSteamID, short) [Obsolete] public void clientModifyHallucination(CSteamID senderId, short delta) Parameters senderId CSteamID delta short clientModifyStamina(CSteamID, short) [Obsolete] public void clientModifyStamina(CSteamID senderId, short delta) Parameters senderId CSteamID delta short clientModifyWarmth(CSteamID, short) [Obsolete] public void clientModifyWarmth(CSteamID senderId, short delta) Parameters senderId CSteamID delta short load() public void load() markAggressive(bool, bool) Tracks this player as an aggressor if they were recently an aggressor or if they haven't been attacked recently. public void markAggressive(bool force, bool spreadToGroup = true) Parameters force bool Ignores rules and just make aggressive. spreadToGroup bool Whether to call markAggressive on group members. save() public void save() sendHallucination(byte) [Obsolete(\"Use serverModifyHallucination instead.\")] public void sendHallucination(byte amount) Parameters amount byte sendRespawn(bool) public void sendRespawn(bool atHome) Parameters atHome bool sendRevive() Used to refill all client stats like stamina public void sendRevive() sendSuicide() public void sendSuicide() serverModifyFood(float) Add to or subtract from food level. Replicates change to owner. public void serverModifyFood(float delta) Parameters delta float serverModifyHallucination(float) Add to or subtract from hallucination level on the client. public void serverModifyHallucination(float delta) Parameters delta float serverModifyHealth(float) Add to or subtract from health level. Replicates change to owner. public void serverModifyHealth(float delta) Parameters delta float serverModifyStamina(float) Add to or subtract from stamina level on the client and server. public void serverModifyStamina(float delta) Parameters delta float serverModifyVirus(float) Add to or subtract from virus level. Replicates change to owner. public void serverModifyVirus(float delta) Parameters delta float serverModifyWarmth(float) Add to or subtract from warmth level on the client and server. public void serverModifyWarmth(float delta) Parameters delta float serverModifyWater(float) Add to or subtract from water level. Replicates change to owner. public void serverModifyWater(float delta) Parameters delta float serverSetBleeding(bool) Set bleeding state and replicate to owner if changed. public void serverSetBleeding(bool newBleeding) Parameters newBleeding bool serverSetLegsBroken(bool) Set legs broken state and replicate to owner if changed. public void serverSetLegsBroken(bool newLegsBroken) Parameters newLegsBroken bool simulate(uint) public void simulate(uint simulation) Parameters simulation uint simulatedModifyOxygen(sbyte) Add to or subtract from oxygen level. Does not replicate the change. public void simulatedModifyOxygen(sbyte delta) Parameters delta sbyte simulatedModifyOxygen(float) public void simulatedModifyOxygen(float delta) Parameters delta float simulatedModifyStamina(short) Add to or subtract from stamina level. Does not replicate the change. public void simulatedModifyStamina(short delta) Parameters delta short simulatedModifyStamina(float) Add to or subtract from stamina level. Does not replicate the change. public void simulatedModifyStamina(float delta) Parameters delta float simulatedModifyWarmth(short) Add to or subtract from warmth level. Does not replicate the change. public void simulatedModifyWarmth(short delta) Parameters delta short tellBleeding(CSteamID, bool) [Obsolete] public void tellBleeding(CSteamID steamID, bool newBleeding) Parameters steamID CSteamID newBleeding bool tellBroken(CSteamID, bool) [Obsolete] public void tellBroken(CSteamID steamID, bool newBroken) Parameters steamID CSteamID newBroken bool tellDead(CSteamID, Vector3, byte) [Obsolete] public void tellDead(CSteamID steamID, Vector3 newRagdoll, byte newRagdollEffect) Parameters steamID CSteamID newRagdoll Vector3 newRagdollEffect byte tellDeath(CSteamID, byte, byte, CSteamID) [Obsolete] public void tellDeath(CSteamID steamID, byte newCause, byte newLimb, CSteamID newKiller) Parameters steamID CSteamID newCause byte newLimb byte newKiller CSteamID tellFood(CSteamID, byte) [Obsolete] public void tellFood(CSteamID steamID, byte newFood) Parameters steamID CSteamID newFood byte tellHallucinate(CSteamID, byte) [Obsolete(\"Use serverModifyHallucination instead.\")] public void tellHallucinate(CSteamID senderId, byte amount) Parameters senderId CSteamID amount byte tellHealth(CSteamID, byte) [Obsolete] public void tellHealth(CSteamID steamID, byte newHealth) Parameters steamID CSteamID newHealth byte tellLife(CSteamID, byte, byte, byte, byte, bool, bool) [Obsolete(\"Prior to saving/loading oxygen the client assumed it started at 100, but now needs the exact value.\")] public void tellLife(CSteamID steamID, byte newHealth, byte newFood, byte newWater, byte newVirus, bool newBleeding, bool newBroken) Parameters steamID CSteamID newHealth byte newFood byte newWater byte newVirus byte newBleeding bool newBroken bool tellLifeWithOxygen(CSteamID, byte, byte, byte, byte, byte, bool, bool) [Obsolete] public void tellLifeWithOxygen(CSteamID steamID, byte newHealth, byte newFood, byte newWater, byte newVirus, byte newOxygen, bool newBleeding, bool newBroken) Parameters steamID CSteamID newHealth byte newFood byte newWater byte newVirus byte newOxygen byte newBleeding bool newBroken bool tellRevive(CSteamID, Vector3, byte) [Obsolete] public void tellRevive(CSteamID steamID, Vector3 position, byte angle) Parameters steamID CSteamID position Vector3 angle byte tellVirus(CSteamID, byte) [Obsolete] public void tellVirus(CSteamID steamID, byte newVirus) Parameters steamID CSteamID newVirus byte tellWater(CSteamID, byte) [Obsolete] public void tellWater(CSteamID steamID, byte newWater) Parameters steamID CSteamID newWater byte Events OnFallDamageRequested public event PlayerLife.FallDamageRequestHandler OnFallDamageRequested Event Type PlayerLife.FallDamageRequestHandler OnPreDeath Invoked prior to built-in death logic. public static event Action<PlayerLife> OnPreDeath Event Type Action<PlayerLife> OnSelectingRespawnPoint public static event PlayerLife.RespawnPointSelector OnSelectingRespawnPoint Event Type PlayerLife.RespawnPointSelector onHurt public event Hurt onHurt Event Type Hurt onPlayerDied Event for plugins when player dies. public static event PlayerLife.PlayerDiedCallback onPlayerDied Event Type PlayerLife.PlayerDiedCallback"
  },
  "api/SDG.Unturned.PlayerLifeUI.html": {
    "href": "api/SDG.Unturned.PlayerLifeUI.html",
    "title": "Class PlayerLifeUI | Unturned Analyse Doc",
    "keywords": "Class PlayerLifeUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerLifeUI Inheritance object PlayerLifeUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerLifeUI() public PlayerLifeUI() Fields active public static bool active Field Value bool binocularsOverlay public static ISleekImage binocularsOverlay Field Value ISleekImage chatField public static ISleekField chatField Field Value ISleekField chatting public static bool chatting Field Value bool compassBox public static ISleekBox compassBox Field Value ISleekBox crosshair public static Crosshair crosshair Field Value Crosshair gesturing public static bool gesturing Field Value bool icons public static Bundle icons Field Value Bundle isVoteMessaged public static bool isVoteMessaged Field Value bool lastVoteMessage public static float lastVoteMessage Field Value float localization public static Local localization Field Value Local npc public static IDialogueTarget npc Field Value IDialogueTarget scopeOverlay public static SleekScopeOverlay scopeOverlay Field Value SleekScopeOverlay statTrackerLabel public static ISleekLabel statTrackerLabel Field Value ISleekLabel voteBox public static ISleekBox voteBox Field Value ISleekBox Properties container public static SleekFullscreenBox container { get; } Property Value SleekFullscreenBox Methods OnDestroy() public void OnDestroy() SendChatAndClose() public static void SendChatAndClose() close() public static void close() closeChat() public static void closeChat() closeGestures() public static void closeGestures() hasCompassInInventory() protected static bool hasCompassInInventory() Returns bool open() public static void open() openChat() public static void openChat() openGestures() public static void openGestures() repeatChat(int) Fill chat field with previous sent message. Useful for repeating commands with minor changes. public static void repeatChat(int delta) Parameters delta int updateCompass() public static void updateCompass() updateGrayscale() public static void updateGrayscale() updateHotbar() Use the latest hotbar items in the UI. public static void updateHotbar() updateStatTracker() public static void updateStatTracker()"
  },
  "api/SDG.Unturned.PlayerLifeUpdated.html": {
    "href": "api/SDG.Unturned.PlayerLifeUpdated.html",
    "title": "Delegate PlayerLifeUpdated | Unturned Analyse Doc",
    "keywords": "Delegate PlayerLifeUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerLifeUpdated(Player player) Parameters player Player Constructors PlayerLifeUpdated(object, IntPtr) public PlayerLifeUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, AsyncCallback callback, object @object) Parameters player Player callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player) public virtual void Invoke(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.PlayerLife_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerLife_NetMethods.html",
    "title": "Class PlayerLife_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerLife_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerLife))] public static class PlayerLife_NetMethods Inheritance object PlayerLife_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveBleeding_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBleeding\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBleeding_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveBleeding_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveBleeding\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBleeding_Write(NetPakWriter writer, bool newBleeding) Parameters writer NetPakWriter newBleeding bool ReceiveBroken_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBroken\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBroken_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveBroken_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveBroken\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBroken_Write(NetPakWriter writer, bool newBroken) Parameters writer NetPakWriter newBroken bool ReceiveDamagedEvent_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDamagedEvent\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDamagedEvent_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDamagedEvent_Write(NetPakWriter, byte, Vector3) [NetInvokableGeneratedMethod(\"ReceiveDamagedEvent\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDamagedEvent_Write(NetPakWriter writer, byte damageAmount, Vector3 damageDirection) Parameters writer NetPakWriter damageAmount byte damageDirection Vector3 ReceiveDead_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDead\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDead_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDead_Write(NetPakWriter, Vector3, ERagdollEffect) [NetInvokableGeneratedMethod(\"ReceiveDead\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDead_Write(NetPakWriter writer, Vector3 newRagdoll, ERagdollEffect newRagdollEffect) Parameters writer NetPakWriter newRagdoll Vector3 newRagdollEffect ERagdollEffect ReceiveDeath_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDeath\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDeath_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDeath_Write(NetPakWriter, EDeathCause, ELimb, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveDeath\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDeath_Write(NetPakWriter writer, EDeathCause newCause, ELimb newLimb, CSteamID newKiller) Parameters writer NetPakWriter newCause EDeathCause newLimb ELimb newKiller CSteamID ReceiveFood_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveFood\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveFood_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFood_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveFood\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveFood_Write(NetPakWriter writer, byte newFood) Parameters writer NetPakWriter newFood byte ReceiveHealth_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveHealth\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveHealth_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveHealth_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveHealth\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveHealth_Write(NetPakWriter writer, byte newHealth) Parameters writer NetPakWriter newHealth byte ReceiveLifeStats_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLifeStats\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLifeStats_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLifeStats_Write(NetPakWriter, byte, byte, byte, byte, byte, bool, bool) [NetInvokableGeneratedMethod(\"ReceiveLifeStats\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLifeStats_Write(NetPakWriter writer, byte newHealth, byte newFood, byte newWater, byte newVirus, byte newOxygen, bool newBleeding, bool newBroken) Parameters writer NetPakWriter newHealth byte newFood byte newWater byte newVirus byte newOxygen byte newBleeding bool newBroken bool ReceiveModifyHallucination_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveModifyHallucination\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveModifyHallucination_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveModifyHallucination_Write(NetPakWriter, short) [NetInvokableGeneratedMethod(\"ReceiveModifyHallucination\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveModifyHallucination_Write(NetPakWriter writer, short delta) Parameters writer NetPakWriter delta short ReceiveModifyStamina_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveModifyStamina\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveModifyStamina_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveModifyStamina_Write(NetPakWriter, short) [NetInvokableGeneratedMethod(\"ReceiveModifyStamina\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveModifyStamina_Write(NetPakWriter writer, short delta) Parameters writer NetPakWriter delta short ReceiveModifyWarmth_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveModifyWarmth\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveModifyWarmth_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveModifyWarmth_Write(NetPakWriter, short) [NetInvokableGeneratedMethod(\"ReceiveModifyWarmth\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveModifyWarmth_Write(NetPakWriter writer, short delta) Parameters writer NetPakWriter delta short ReceiveRespawnRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRespawnRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRespawnRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveRespawnRequest_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveRespawnRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRespawnRequest_Write(NetPakWriter writer, bool atHome) Parameters writer NetPakWriter atHome bool ReceiveRevive_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRevive\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRevive_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRevive_Write(NetPakWriter, Vector3, byte) [NetInvokableGeneratedMethod(\"ReceiveRevive\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRevive_Write(NetPakWriter writer, Vector3 position, byte angle) Parameters writer NetPakWriter position Vector3 angle byte ReceiveSuicideRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSuicideRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSuicideRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSuicideRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveSuicideRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSuicideRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveVirus_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVirus\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVirus_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVirus_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveVirus\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVirus_Write(NetPakWriter writer, byte newVirus) Parameters writer NetPakWriter newVirus byte ReceiveWater_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWater\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWater_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWater_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveWater\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWater_Write(NetPakWriter writer, byte newWater) Parameters writer NetPakWriter newWater byte"
  },
  "api/SDG.Unturned.PlayerLook.html": {
    "href": "api/SDG.Unturned.PlayerLook.html",
    "title": "Class PlayerLook | Unturned Analyse Doc",
    "keywords": "Class PlayerLook Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerLook : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerLook Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerLook() public PlayerLook() Fields IsControllingFreecam If true, freecam controls take input priority. Previously named isOrbiting. public bool IsControllingFreecam Field Value bool allowFreecamWithoutAdmin Can spectating be used without admin powers? Plugins can enable spectator mode. protected bool allowFreecamWithoutAdmin Field Value bool allowSpecStatsWithoutAdmin Can spectator overlays be used without admin powers? Plugins can enable specstats permissions. protected bool allowSpecStatsWithoutAdmin Field Value bool allowWorkzoneWithoutAdmin Can workzone be used without admin powers? Plugins can enable workzone permissions. protected bool allowWorkzoneWithoutAdmin Field Value bool angle public byte angle Field Value byte characterYaw public static float characterYaw Field Value float explosionSmoothingSpeed public float explosionSmoothingSpeed Field Value float freecamVerticalFieldOfView Reset to actual fov when first used. public float freecamVerticalFieldOfView Field Value float isFocusing public bool isFocusing Field Value bool isIgnoringInput public bool isIgnoringInput Field Value bool isLocking public bool isLocking Field Value bool isSmoothing public bool isSmoothing Field Value bool isTracking public bool isTracking Field Value bool isZoomed protected bool isZoomed Field Value bool lastAngle public byte lastAngle Field Value byte lastRot public byte lastRot Field Value byte lockPosition public Vector3 lockPosition Field Value Vector3 onPerspectiveUpdated public PerspectiveUpdated onPerspectiveUpdated Field Value PerspectiveUpdated orbitPosition public Vector3 orbitPosition Field Value Vector3 orbitSpeed public float orbitSpeed Field Value float rot public byte rot Field Value byte shouldUseZoomFactorForSensitivity public bool shouldUseZoomFactorForSensitivity Field Value bool targetExplosionLocalRotation public Rk4SpringQ targetExplosionLocalRotation Field Value Rk4SpringQ Properties IsLocallyUsingFreecam public bool IsLocallyUsingFreecam { get; } Property Value bool aim public Transform aim { get; } Property Value Transform areSpecStatsVisible Should player stats be visible in spectator mode? public bool areSpecStatsVisible { get; protected set; } Property Value bool canUseFreecam public bool canUseFreecam { get; } Property Value bool canUseSpecStats public bool canUseSpecStats { get; } Property Value bool canUseWorkzone public bool canUseWorkzone { get; } Property Value bool characterCamera public Camera characterCamera { get; } Property Value Camera heightLook public float heightLook { get; } Property Value float isCam [Obsolete] public bool isCam { get; } Property Value bool isScopeActive public bool isScopeActive { get; } Property Value bool look_x public float look_x { get; } Property Value float look_y public float look_y { get; } Property Value float orbitPitch public float orbitPitch { get; } Property Value float orbitYaw public float orbitYaw { get; } Property Value float perspective public EPlayerPerspective perspective { get; } Property Value EPlayerPerspective pitch Unintuitively (to say the least), a pitch of 0 is up, 90 is forward, and 180 is down. public float pitch { get; } Property Value float scopeCamera public Camera scopeCamera { get; } Property Value Camera scopeMaterial Material instantiated when dual-render scopes are enabled. Overrides the material of the gun sight attachment. public Material scopeMaterial { get; } Property Value Material yaw public float yaw { get; } Property Value float Methods GetEyesPositionWithoutLeaning() Get point of view in worldspace without the left/right leaning modifier. public Vector3 GetEyesPositionWithoutLeaning() Returns Vector3 ReceiveFreecamAllowed(bool) Called from the server to allow spectating without admin powers. Only used by plugins. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellFreecamAllowed\")] public void ReceiveFreecamAllowed(bool isAllowed) Parameters isAllowed bool ReceiveSpecStatsAllowed(bool) Called from the server to allow spectator overlays without admin powers. Only used by plugins. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSpecStatsAllowed\")] public void ReceiveSpecStatsAllowed(bool isAllowed) Parameters isAllowed bool ReceiveWorkzoneAllowed(bool) Called from the server to allow workzone without admin powers. Only used by plugins. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWorkzoneAllowed\")] public void ReceiveWorkzoneAllowed(bool isAllowed) Parameters isAllowed bool disableOverlay() public void disableOverlay() disableScope() public void disableScope() disableZoom() public void disableZoom() enableOverlay() public void enableOverlay() enableScope(float, ItemSightAsset) public void enableScope(float zoom, ItemSightAsset sightAsset) Parameters zoom float sightAsset ItemSightAsset enableZoom(float) public void enableZoom(float zoom) Parameters zoom float getEyesPosition() Get point-of-view in world-space. public Vector3 getEyesPosition() Returns Vector3 recoil(float, float, float, float) public void recoil(float x, float y, float h, float v) Parameters x float y float h float v float sendFreecamAllowed(bool) Allow use of spectator mode without admin powers. Only used by plugins. public void sendFreecamAllowed(bool isAllowed) Parameters isAllowed bool sendSpecStatsAllowed(bool) Allow use of spectator overlay mode without admin powers. Only used by plugins. public void sendSpecStatsAllowed(bool isAllowed) Parameters isAllowed bool sendWorkzoneAllowed(bool) Allow use of workzone mode without admin powers. Only used by plugins. public void sendWorkzoneAllowed(bool isAllowed) Parameters isAllowed bool setPerspective(EPlayerPerspective) [Obsolete(\"this was never supported server-side\")] public void setPerspective(EPlayerPerspective newPerspective) Parameters newPerspective EPlayerPerspective simulate(float, float, float) public void simulate(float look_x, float look_y, float delta) Parameters look_x float look_y float delta float tellFreecamAllowed(CSteamID, bool) [Obsolete] public void tellFreecamAllowed(CSteamID senderId, bool isAllowed) Parameters senderId CSteamID isAllowed bool tellSpecStatsAllowed(CSteamID, bool) [Obsolete] public void tellSpecStatsAllowed(CSteamID senderId, bool isAllowed) Parameters senderId CSteamID isAllowed bool tellWorkzoneAllowed(CSteamID, bool) [Obsolete] public void tellWorkzoneAllowed(CSteamID senderId, bool isAllowed) Parameters senderId CSteamID isAllowed bool updateAim(float) public void updateAim(float delta) Parameters delta float updateLook() public void updateLook() updateRot() public void updateRot() updateScope(EGraphicQuality) public void updateScope(EGraphicQuality quality) Parameters quality EGraphicQuality"
  },
  "api/SDG.Unturned.PlayerLook_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerLook_NetMethods.html",
    "title": "Class PlayerLook_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerLook_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerLook))] public static class PlayerLook_NetMethods Inheritance object PlayerLook_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveFreecamAllowed_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveFreecamAllowed\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveFreecamAllowed_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveFreecamAllowed_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveFreecamAllowed\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveFreecamAllowed_Write(NetPakWriter writer, bool isAllowed) Parameters writer NetPakWriter isAllowed bool ReceiveSpecStatsAllowed_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSpecStatsAllowed\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSpecStatsAllowed_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSpecStatsAllowed_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveSpecStatsAllowed\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSpecStatsAllowed_Write(NetPakWriter writer, bool isAllowed) Parameters writer NetPakWriter isAllowed bool ReceiveWorkzoneAllowed_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWorkzoneAllowed\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWorkzoneAllowed_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWorkzoneAllowed_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveWorkzoneAllowed\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWorkzoneAllowed_Write(NetPakWriter writer, bool isAllowed) Parameters writer NetPakWriter isAllowed bool"
  },
  "api/SDG.Unturned.PlayerManager.html": {
    "href": "api/SDG.Unturned.PlayerManager.html",
    "title": "Class PlayerManager | Unturned Analyse Doc",
    "keywords": "Class PlayerManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerManager : SteamCaller Inheritance object SteamCaller PlayerManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors PlayerManager() public PlayerManager() Fields updates [Obsolete] public static ushort updates Field Value ushort Methods ReceivePlayerStates(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceivePlayerStates(in ClientInvocationContext context) Parameters context ClientInvocationContext tellPlayerStates(CSteamID) [Obsolete] public void tellPlayerStates(CSteamID steamID) Parameters steamID CSteamID"
  },
  "api/SDG.Unturned.PlayerManager_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerManager_NetMethods.html",
    "title": "Class PlayerManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerManager))] public static class PlayerManager_NetMethods Inheritance object PlayerManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/SDG.Unturned.PlayerMovement.html": {
    "href": "api/SDG.Unturned.PlayerMovement.html",
    "title": "Class PlayerMovement | Unturned Analyse Doc",
    "keywords": "Class PlayerMovement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerMovement : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerMovement Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerMovement() public PlayerMovement() Fields HEIGHT_CROUCH public static readonly float HEIGHT_CROUCH Field Value float HEIGHT_PRONE public static readonly float HEIGHT_PRONE Field Value float HEIGHT_STAND public static readonly float HEIGHT_STAND Field Value float _multiplier [Obsolete(\"Was current value of interpolated aiming speed multiplier.\")] public float _multiplier Field Value float bypassUndergroundWhitelist Flag for plugins to allow maintenance access underneath the map. public bool bypassUndergroundWhitelist Field Value bool canAddSimulationResultsToUpdates public bool canAddSimulationResultsToUpdates Field Value bool ground public RaycastHit ground Field Value RaycastHit inRain [Obsolete] public bool inRain Field Value bool inSnow public bool inSnow Field Value bool isAllowed Was set to true during teleport, and restored to false during the next movement tick. Server pauses movement when this is set until next client update that matches, in order to prevent rubberbanding following a teleport. [Obsolete] public bool isAllowed Field Value bool isSafeInfo public SafezoneNode isSafeInfo Field Value SafezoneNode isUpdated [Obsolete] public bool isUpdated Field Value bool itemGravityMultiplier public float itemGravityMultiplier Field Value float multiplier [Obsolete(\"Was target value of interpolated aiming speed multiplier.\")] public float multiplier Field Value float onBoundUpdated public PlayerBoundUpdated onBoundUpdated Field Value PlayerBoundUpdated onLanded public Landed onLanded Field Value Landed onPurchaseUpdated public PurchaseUpdated onPurchaseUpdated Field Value PurchaseUpdated onRadiationUpdated public RadiationUpdated onRadiationUpdated Field Value RadiationUpdated onRegionUpdated public PlayerRegionUpdated onRegionUpdated Field Value PlayerRegionUpdated onSafetyUpdated public SafetyUpdated onSafetyUpdated Field Value SafetyUpdated onSeated public Seated onSeated Field Value Seated onVehicleUpdated public VehicleUpdated onVehicleUpdated Field Value VehicleUpdated pendingLaunchVelocity public Vector3 pendingLaunchVelocity Field Value Vector3 pluginGravityMultiplier public float pluginGravityMultiplier Field Value float pluginJumpMultiplier public float pluginJumpMultiplier Field Value float pluginSpeedMultiplier public float pluginSpeedMultiplier Field Value float snapshot public PitchYawSnapshotInfo snapshot Field Value PitchYawSnapshotInfo updates public List<PlayerStateUpdate> updates Field Value List<PlayerStateUpdate> Properties ActiveDeadzone Valid while isRadiated. public IDeadzoneNode ActiveDeadzone { get; } Property Value IDeadzoneNode WeatherMask Set according to volume or level global asset fallback. public uint WeatherMask { get; protected set; } Property Value uint bound public byte bound { get; } Property Value byte controller Note: Only UpdateCharacterControllerEnabled should modify whether controller is enabled. (turning off and back on is fine though) public CharacterController controller { get; protected set; } Property Value CharacterController effectNode public IAmbianceNode effectNode { get; } Property Value IAmbianceNode fall public float fall { get; } Property Value float forceTrustClient public static bool forceTrustClient { get; set; } Property Value bool horizontal public byte horizontal { get; } Property Value byte isGrounded public bool isGrounded { get; } Property Value bool isMoving public bool isMoving { get; } Property Value bool isRadiated public bool isRadiated { get; set; } Property Value bool isSafe public bool isSafe { get; set; } Property Value bool jump public bool jump { get; } Property Value bool landscapeHoleVolume [Obsolete] public LandscapeHoleVolume landscapeHoleVolume { get; } Property Value LandscapeHoleVolume loadedBounds public LoadedBound[] loadedBounds { get; } Property Value LoadedBound[] loadedRegions public LoadedRegion[,] loadedRegions { get; } Property Value LoadedRegion[,] move public Vector3 move { get; } Property Value Vector3 nav public byte nav { get; } Property Value byte purchaseNode public HordePurchaseVolume purchaseNode { get; set; } Property Value HordePurchaseVolume real [Obsolete] public Vector3 real { get; } Property Value Vector3 region_x public byte region_x { get; } Property Value byte region_y public byte region_y { get; } Property Value byte speed public float speed { get; } Property Value float totalGravityMultiplier public float totalGravityMultiplier { get; } Property Value float totalSpeedMultiplier public float totalSpeedMultiplier { get; } Property Value float vertical public byte vertical { get; } Property Value byte Methods ReceivePluginGravityMultiplier(float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellPluginGravityMultiplier\")] public void ReceivePluginGravityMultiplier(float newPluginGravityMultiplier) Parameters newPluginGravityMultiplier float ReceivePluginJumpMultiplier(float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellPluginJumpMultiplier\")] public void ReceivePluginJumpMultiplier(float newPluginJumpMultiplier) Parameters newPluginJumpMultiplier float ReceivePluginSpeedMultiplier(float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellPluginSpeedMultiplier\")] public void ReceivePluginSpeedMultiplier(float newPluginSpeedMultiplier) Parameters newPluginSpeedMultiplier float forceRemoveFromVehicle() Serverside force player to exit vehicle regardless of safe exit points. public bool forceRemoveFromVehicle() Returns bool True if player was seated in vehicle. getSeat() public byte getSeat() Returns byte getVehicle() public InteractableVehicle getVehicle() Returns InteractableVehicle getVehicleSeat() Get seat (if any), otherwise null. public Passenger getVehicleSeat() Returns Passenger sendPluginGravityMultiplier(float) public void sendPluginGravityMultiplier(float newPluginGravityMultiplier) Parameters newPluginGravityMultiplier float sendPluginJumpMultiplier(float) public void sendPluginJumpMultiplier(float newPluginJumpMultiplier) Parameters newPluginJumpMultiplier float sendPluginSpeedMultiplier(float) public void sendPluginSpeedMultiplier(float newPluginSpeedMultiplier) Parameters newPluginSpeedMultiplier float setSize(EPlayerHeight) public void setSize(EPlayerHeight newHeight) Parameters newHeight EPlayerHeight setVehicle(InteractableVehicle, byte, Transform, Vector3, byte, bool) public void setVehicle(InteractableVehicle newVehicle, byte newSeat, Transform newSeatingTransform, Vector3 newSeatingPosition, byte newSeatingAngle, bool forceUpdate) Parameters newVehicle InteractableVehicle newSeat byte newSeatingTransform Transform newSeatingPosition Vector3 newSeatingAngle byte forceUpdate bool simulate() Dedicated server simulate while input queue is empty. public void simulate() simulate(uint, int, bool, bool, Vector3, Quaternion, float, float, float, float, float) Dedicated server simulate driving input. public void simulate(uint simulation, int recov, bool inputBrake, bool inputStamina, Vector3 point, Quaternion rotation, float newSpeed, float newForwardVelocity, float newSteeringInput, float newVelocityInput, float delta) Parameters simulation uint recov int inputBrake bool inputStamina bool point Vector3 rotation Quaternion newSpeed float newForwardVelocity float newSteeringInput float newVelocityInput float delta float simulate(uint, int, int, int, float, float, bool, bool, float) Client and dedicated server simulate walking input. public void simulate(uint simulation, int recov, int input_x, int input_y, float look_x, float look_y, bool inputJump, bool inputSprint, float deltaTime) Parameters simulation uint recov int input_x int input_y int look_x float look_y float inputJump bool inputSprint bool deltaTime float tellPluginGravityMultiplier(CSteamID, float) [Obsolete] public void tellPluginGravityMultiplier(CSteamID steamID, float newPluginGravityMultiplier) Parameters steamID CSteamID newPluginGravityMultiplier float tellPluginJumpMultiplier(CSteamID, float) [Obsolete] public void tellPluginJumpMultiplier(CSteamID steamID, float newPluginJumpMultiplier) Parameters steamID CSteamID newPluginJumpMultiplier float tellPluginSpeedMultiplier(CSteamID, float) [Obsolete] public void tellPluginSpeedMultiplier(CSteamID steamID, float newPluginSpeedMultiplier) Parameters steamID CSteamID newPluginSpeedMultiplier float tellState(Vector3, byte, byte) public void tellState(Vector3 newPosition, byte newPitch, byte newYaw) Parameters newPosition Vector3 newPitch byte newYaw byte updateMovement() public void updateMovement() Events PlayerNavChanged public event PlayerNavChanged PlayerNavChanged Event Type PlayerNavChanged"
  },
  "api/SDG.Unturned.PlayerMovement_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerMovement_NetMethods.html",
    "title": "Class PlayerMovement_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerMovement_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerMovement))] public static class PlayerMovement_NetMethods Inheritance object PlayerMovement_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePluginGravityMultiplier_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePluginGravityMultiplier\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePluginGravityMultiplier_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePluginGravityMultiplier_Write(NetPakWriter, float) [NetInvokableGeneratedMethod(\"ReceivePluginGravityMultiplier\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePluginGravityMultiplier_Write(NetPakWriter writer, float newPluginGravityMultiplier) Parameters writer NetPakWriter newPluginGravityMultiplier float ReceivePluginJumpMultiplier_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePluginJumpMultiplier\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePluginJumpMultiplier_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePluginJumpMultiplier_Write(NetPakWriter, float) [NetInvokableGeneratedMethod(\"ReceivePluginJumpMultiplier\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePluginJumpMultiplier_Write(NetPakWriter writer, float newPluginJumpMultiplier) Parameters writer NetPakWriter newPluginJumpMultiplier float ReceivePluginSpeedMultiplier_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePluginSpeedMultiplier\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePluginSpeedMultiplier_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePluginSpeedMultiplier_Write(NetPakWriter, float) [NetInvokableGeneratedMethod(\"ReceivePluginSpeedMultiplier\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePluginSpeedMultiplier_Write(NetPakWriter writer, float newPluginSpeedMultiplier) Parameters writer NetPakWriter newPluginSpeedMultiplier float"
  },
  "api/SDG.Unturned.PlayerNPCDialogueUI.html": {
    "href": "api/SDG.Unturned.PlayerNPCDialogueUI.html",
    "title": "Class PlayerNPCDialogueUI | Unturned Analyse Doc",
    "keywords": "Class PlayerNPCDialogueUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerNPCDialogueUI Inheritance object PlayerNPCDialogueUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerNPCDialogueUI() public PlayerNPCDialogueUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle Properties CanAdvanceToNextPage If true, animation is finished and there is another page to show when Interact [F] is pressed. public static bool CanAdvanceToNextPage { get; } Property Value bool IsDialogueAnimating If true, text on current page is in the process of gradually appearing. public static bool IsDialogueAnimating { get; } Property Value bool Methods AdvancePage() Called when the player presses Interact [F] in dialogue screen. public static void AdvancePage() OpenCurrentDialogue() Used by quest UI to return to current dialogue. public static void OpenCurrentDialogue() SkipAnimation() Show complete text for the current page and make responses visible. Called if dialogue animation is disabled, and when the player presses Interact [F] during animation. public static void SkipAnimation() UpdateAnimation() public static void UpdateAnimation() close() public static void close() open(DialogueAsset, DialogueMessage, bool) public static void open(DialogueAsset newDialogue, DialogueMessage newMessage, bool newHasNextDialogue) Parameters newDialogue DialogueAsset newMessage DialogueMessage newHasNextDialogue bool"
  },
  "api/SDG.Unturned.PlayerNPCQuestUI.html": {
    "href": "api/SDG.Unturned.PlayerNPCQuestUI.html",
    "title": "Class PlayerNPCQuestUI | Unturned Analyse Doc",
    "keywords": "Class PlayerNPCQuestUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerNPCQuestUI Inheritance object PlayerNPCQuestUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerNPCQuestUI() public PlayerNPCQuestUI() Fields active public static bool active Field Value bool icons public static Bundle icons Field Value Bundle localization public static Local localization Field Value Local Methods close() public static void close() closeNicely() public static void closeNicely() open(QuestAsset, DialogueAsset, DialogueResponse, EQuestViewMode) public static void open(QuestAsset newQuest, DialogueAsset newDialogueContext, DialogueResponse newPendingResponse, EQuestViewMode newMode) Parameters newQuest QuestAsset newDialogueContext DialogueAsset newPendingResponse DialogueResponse newMode EQuestViewMode"
  },
  "api/SDG.Unturned.PlayerNPCVendorUI.html": {
    "href": "api/SDG.Unturned.PlayerNPCVendorUI.html",
    "title": "Class PlayerNPCVendorUI | Unturned Analyse Doc",
    "keywords": "Class PlayerNPCVendorUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerNPCVendorUI Inheritance object PlayerNPCVendorUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerNPCVendorUI() public PlayerNPCVendorUI() Fields active public static bool active Field Value bool localization public static Local localization Field Value Local Methods MaybeRefresh() Update currency and owned items if inventory has changed and menu is open. public static void MaybeRefresh() close() public static void close() closeNicely() public static void closeNicely() open(VendorAsset, DialogueAsset, DialogueMessage, bool) public static void open(VendorAsset newVendor, DialogueAsset newDialogue, DialogueMessage newNextMessage, bool newHasNextDialogue) Parameters newVendor VendorAsset newDialogue DialogueAsset newNextMessage DialogueMessage newHasNextDialogue bool"
  },
  "api/SDG.Unturned.PlayerNavChanged.html": {
    "href": "api/SDG.Unturned.PlayerNavChanged.html",
    "title": "Delegate PlayerNavChanged | Unturned Analyse Doc",
    "keywords": "Delegate PlayerNavChanged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerNavChanged(PlayerMovement sender, byte oldNav, byte newNav) Parameters sender PlayerMovement oldNav byte newNav byte Constructors PlayerNavChanged(object, IntPtr) public PlayerNavChanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerMovement, byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerMovement sender, byte oldNav, byte newNav, AsyncCallback callback, object @object) Parameters sender PlayerMovement oldNav byte newNav byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerMovement, byte, byte) public virtual void Invoke(PlayerMovement sender, byte oldNav, byte newNav) Parameters sender PlayerMovement oldNav byte newNav byte"
  },
  "api/SDG.Unturned.PlayerPauseUI.html": {
    "href": "api/SDG.Unturned.PlayerPauseUI.html",
    "title": "Class PlayerPauseUI | Unturned Analyse Doc",
    "keywords": "Class PlayerPauseUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerPauseUI Inheritance object PlayerPauseUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerPauseUI() public PlayerPauseUI() Fields active public static bool active Field Value bool exitButton public static SleekButtonIconConfirm exitButton Field Value SleekButtonIconConfirm lastLeave public static float lastLeave Field Value float localization public static Local localization Field Value Local quitButton public static SleekButtonIconConfirm quitButton Field Value SleekButtonIconConfirm Properties shouldExitButtonRespectTimer Exit button only needs to wait for timer in certain conditions. public static bool shouldExitButtonRespectTimer { get; } Property Value bool Methods close() public static void close() closeAndGotoAppropriateHUD() public static void closeAndGotoAppropriateHUD() open() public static void open()"
  },
  "api/SDG.Unturned.PlayerQuest.html": {
    "href": "api/SDG.Unturned.PlayerQuest.html",
    "title": "Class PlayerQuest | Unturned Analyse Doc",
    "keywords": "Class PlayerQuest Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerQuest Inheritance object PlayerQuest Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerQuest(ushort) public PlayerQuest(ushort newID) Parameters newID ushort Properties asset public QuestAsset asset { get; protected set; } Property Value QuestAsset id public ushort id { get; } Property Value ushort"
  },
  "api/SDG.Unturned.PlayerQuestComparator.html": {
    "href": "api/SDG.Unturned.PlayerQuestComparator.html",
    "title": "Class PlayerQuestComparator | Unturned Analyse Doc",
    "keywords": "Class PlayerQuestComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerQuestComparator : IComparer<PlayerQuest> Inheritance object PlayerQuestComparator Implements IComparer<PlayerQuest> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerQuestComparator() public PlayerQuestComparator() Methods Compare(PlayerQuest, PlayerQuest) public int Compare(PlayerQuest a, PlayerQuest b) Parameters a PlayerQuest b PlayerQuest Returns int"
  },
  "api/SDG.Unturned.PlayerQuestFlag.html": {
    "href": "api/SDG.Unturned.PlayerQuestFlag.html",
    "title": "Class PlayerQuestFlag | Unturned Analyse Doc",
    "keywords": "Class PlayerQuestFlag Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerQuestFlag Inheritance object PlayerQuestFlag Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerQuestFlag(ushort, short) public PlayerQuestFlag(ushort newID, short newValue) Parameters newID ushort newValue short Fields value public short value Field Value short Properties id public ushort id { get; } Property Value ushort"
  },
  "api/SDG.Unturned.PlayerQuestFlagComparator.html": {
    "href": "api/SDG.Unturned.PlayerQuestFlagComparator.html",
    "title": "Class PlayerQuestFlagComparator | Unturned Analyse Doc",
    "keywords": "Class PlayerQuestFlagComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerQuestFlagComparator : IComparer<PlayerQuestFlag> Inheritance object PlayerQuestFlagComparator Implements IComparer<PlayerQuestFlag> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerQuestFlagComparator() public PlayerQuestFlagComparator() Methods Compare(PlayerQuestFlag, PlayerQuestFlag) public int Compare(PlayerQuestFlag a, PlayerQuestFlag b) Parameters a PlayerQuestFlag b PlayerQuestFlag Returns int"
  },
  "api/SDG.Unturned.PlayerQuests.AnyFlagChangedHandler.html": {
    "href": "api/SDG.Unturned.PlayerQuests.AnyFlagChangedHandler.html",
    "title": "Delegate PlayerQuests.AnyFlagChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate PlayerQuests.AnyFlagChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerQuests.AnyFlagChangedHandler(PlayerQuests quests, PlayerQuestFlag flag) Parameters quests PlayerQuests flag PlayerQuestFlag Constructors AnyFlagChangedHandler(object, IntPtr) public AnyFlagChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, PlayerQuestFlag, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests quests, PlayerQuestFlag flag, AsyncCallback callback, object @object) Parameters quests PlayerQuests flag PlayerQuestFlag callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests, PlayerQuestFlag) public virtual void Invoke(PlayerQuests quests, PlayerQuestFlag flag) Parameters quests PlayerQuests flag PlayerQuestFlag"
  },
  "api/SDG.Unturned.PlayerQuests.GroupChangedCallback.html": {
    "href": "api/SDG.Unturned.PlayerQuests.GroupChangedCallback.html",
    "title": "Delegate PlayerQuests.GroupChangedCallback | Unturned Analyse Doc",
    "keywords": "Delegate PlayerQuests.GroupChangedCallback Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerQuests.GroupChangedCallback(PlayerQuests sender, CSteamID oldGroupID, EPlayerGroupRank oldGroupRank, CSteamID newGroupID, EPlayerGroupRank newGroupRank) Parameters sender PlayerQuests oldGroupID CSteamID oldGroupRank EPlayerGroupRank newGroupID CSteamID newGroupRank EPlayerGroupRank Constructors GroupChangedCallback(object, IntPtr) public GroupChangedCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, CSteamID, EPlayerGroupRank, CSteamID, EPlayerGroupRank, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests sender, CSteamID oldGroupID, EPlayerGroupRank oldGroupRank, CSteamID newGroupID, EPlayerGroupRank newGroupRank, AsyncCallback callback, object @object) Parameters sender PlayerQuests oldGroupID CSteamID oldGroupRank EPlayerGroupRank newGroupID CSteamID newGroupRank EPlayerGroupRank callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests, CSteamID, EPlayerGroupRank, CSteamID, EPlayerGroupRank) public virtual void Invoke(PlayerQuests sender, CSteamID oldGroupID, EPlayerGroupRank oldGroupRank, CSteamID newGroupID, EPlayerGroupRank newGroupRank) Parameters sender PlayerQuests oldGroupID CSteamID oldGroupRank EPlayerGroupRank newGroupID CSteamID newGroupRank EPlayerGroupRank"
  },
  "api/SDG.Unturned.PlayerQuests.html": {
    "href": "api/SDG.Unturned.PlayerQuests.html",
    "title": "Class PlayerQuests | Unturned Analyse Doc",
    "keywords": "Class PlayerQuests Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerQuests : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerQuests Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerQuests() public PlayerQuests() Fields DEFAULT_RADIO_FREQUENCY public static readonly uint DEFAULT_RADIO_FREQUENCY Field Value uint SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte checkNPC [Obsolete(\"Replaced by DialogueTarget. Will be removed in a future version!\")] public InteractableObjectNPC checkNPC Field Value InteractableObjectNPC groupUpdated public static GroupUpdatedHandler groupUpdated Field Value GroupUpdatedHandler npcSpawnId If set, default spawn logic will check for a location node or spawnpoint node matching name. Saved and loaded between sessions. public string npcSpawnId Field Value string onExternalConditionsUpdated public ExternalConditionsUpdated onExternalConditionsUpdated Field Value ExternalConditionsUpdated onFlagUpdated public FlagUpdated onFlagUpdated Field Value FlagUpdated onFlagsUpdated public FlagsUpdated onFlagsUpdated Field Value FlagsUpdated Properties DialogueTarget public IDialogueTarget DialogueTarget { get; } Property Value IDialogueTarget TrackedQuestID [Obsolete(\"Replaced by GetTrackedQuest\")] public ushort TrackedQuestID { get; } Property Value ushort canBeKickedFromGroup public bool canBeKickedFromGroup { get; } Property Value bool canChangeGroupMembership Check before allowing changes to this player's groupID public bool canChangeGroupMembership { get; } Property Value bool flagsList public List<PlayerQuestFlag> flagsList { get; } Property Value List<PlayerQuestFlag> groupID public CSteamID groupID { get; } Property Value CSteamID groupInvites public HashSet<CSteamID> groupInvites { get; } Property Value HashSet<CSteamID> groupRank public EPlayerGroupRank groupRank { get; } Property Value EPlayerGroupRank hasPermissionToChangeName Can rename the group. public bool hasPermissionToChangeName { get; } Property Value bool hasPermissionToChangeRank Can promote and demote members. public bool hasPermissionToChangeRank { get; } Property Value bool hasPermissionToCreateGroup public bool hasPermissionToCreateGroup { get; } Property Value bool hasPermissionToDeleteGroup public bool hasPermissionToDeleteGroup { get; } Property Value bool hasPermissionToInviteMembers public bool hasPermissionToInviteMembers { get; } Property Value bool hasPermissionToKickMembers public bool hasPermissionToKickMembers { get; } Property Value bool hasPermissionToLeaveGroup public bool hasPermissionToLeaveGroup { get; } Property Value bool hasSpaceForMoreMembersInGroup public bool hasSpaceForMoreMembersInGroup { get; } Property Value bool isMarkerPlaced public bool isMarkerPlaced { get; } Property Value bool isMemberOfAGroup public bool isMemberOfAGroup { get; } Property Value bool markerPosition public Vector3 markerPosition { get; } Property Value Vector3 markerTextOverride public string markerTextOverride { get; } Property Value string questsList public List<PlayerQuest> questsList { get; } Property Value List<PlayerQuest> radioFrequency public uint radioFrequency { get; } Property Value uint useMaxGroupMembersLimit public bool useMaxGroupMembersLimit { get; } Property Value bool Methods AbandonQuest(QuestAsset) [Obsolete(\"Identical to ServerRemoveQuest\")] public void AbandonQuest(QuestAsset questAsset) Parameters questAsset QuestAsset AddQuest(QuestAsset) public void AddQuest(QuestAsset questAsset) Parameters questAsset QuestAsset ClientAbandonQuest(QuestAsset) Called by quest details UI to request server to abandon quest. public void ClientAbandonQuest(QuestAsset questAsset) Parameters questAsset QuestAsset ClientChooseDialogueResponse(Guid, byte) public void ClientChooseDialogueResponse(Guid assetGuid, byte index) Parameters assetGuid Guid index byte ClientChooseNextDialogue(Guid, byte) Called when there are no responses to choose, but server has indicated a next dialogue is available. public void ClientChooseNextDialogue(Guid assetGuid, byte index) Parameters assetGuid Guid index byte ClientTrackQuest(QuestAsset) public void ClientTrackQuest(QuestAsset questAsset) Parameters questAsset QuestAsset CompleteQuest(QuestAsset, bool) Called on server to finalize and remove quest. public void CompleteQuest(QuestAsset questAsset, bool ignoreNPC = false) Parameters questAsset QuestAsset ignoreNPC bool GetQuestStatus(QuestAsset) public ENPCQuestStatus GetQuestStatus(QuestAsset questAsset) Parameters questAsset QuestAsset Returns ENPCQuestStatus GetTrackedQuest() public QuestAsset GetTrackedQuest() Returns QuestAsset IsCutsceneModeActive() If true, hide viewmodel and prevent using equipped item. For example, to prevent shooting gun on top of a first-person scene. This could be expanded in the future with other flags and options. public bool IsCutsceneModeActive() Returns bool ReceiveAbandonQuestRequest(Guid) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 5)] public void ReceiveAbandonQuestRequest(Guid assetGuid) Parameters assetGuid Guid ReceiveAcceptGroupInvitationRequest(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askJoinGroupInvite\")] public void ReceiveAcceptGroupInvitationRequest(CSteamID newGroupID) Parameters newGroupID CSteamID ReceiveAddGroupInviteClient(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellAddGroupInvite\")] public void ReceiveAddGroupInviteClient(CSteamID newGroupID) Parameters newGroupID CSteamID ReceiveAddGroupInviteRequest(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askAddGroupInvite\")] public void ReceiveAddGroupInviteRequest(CSteamID targetID) Parameters targetID CSteamID ReceiveAddQuest(Guid) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveAddQuest(Guid assetGuid) Parameters assetGuid Guid ReceiveBuyFromVendor(in ServerInvocationContext, Guid, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askBuyFromVendor\")] public void ReceiveBuyFromVendor(in ServerInvocationContext context, Guid assetGuid, byte index, bool asManyAsPossible) Parameters context ServerInvocationContext assetGuid Guid index byte asManyAsPossible bool ReceiveChooseDefaultNextDialogueRequest(in ServerInvocationContext, Guid, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 20)] public void ReceiveChooseDefaultNextDialogueRequest(in ServerInvocationContext context, Guid assetGuid, byte index) Parameters context ServerInvocationContext assetGuid Guid index byte ReceiveChooseDialogueResponseRequest(in ServerInvocationContext, Guid, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 20)] public void ReceiveChooseDialogueResponseRequest(in ServerInvocationContext context, Guid assetGuid, byte index) Parameters context ServerInvocationContext assetGuid Guid index byte ReceiveCreateGroupRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askCreateGroup\")] public void ReceiveCreateGroupRequest() ReceiveCutsceneMode(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveCutsceneMode(bool newCutsceneMode) Parameters newCutsceneMode bool ReceiveDeclineGroupInvitationRequest(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askJoinGroupInvite\")] public void ReceiveDeclineGroupInvitationRequest(CSteamID newGroupID) Parameters newGroupID CSteamID ReceiveDeleteGroupRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askDeleteGroup\")] public void ReceiveDeleteGroupRequest() ReceiveDemoteRequest(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askDemote\")] public void ReceiveDemoteRequest(CSteamID targetID) Parameters targetID CSteamID ReceiveGroupState(CSteamID, EPlayerGroupRank) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSetGroup\")] public void ReceiveGroupState(CSteamID newGroupID, EPlayerGroupRank newGroupRank) Parameters newGroupID CSteamID newGroupRank EPlayerGroupRank ReceiveKickFromGroup(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askKickFromGroup\")] public void ReceiveKickFromGroup(CSteamID targetID) Parameters targetID CSteamID ReceiveLeaveGroupRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askLeaveGroup\")] public void ReceiveLeaveGroupRequest() ReceiveMarkerState(bool, Vector3, string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSetMarker\")] public void ReceiveMarkerState(bool newIsMarkerPlaced, Vector3 newMarkerPosition, string newMarkerTextOverride) Parameters newIsMarkerPlaced bool newMarkerPosition Vector3 newMarkerTextOverride string ReceiveOpenDialogue(in ClientInvocationContext, Guid, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveOpenDialogue(in ClientInvocationContext context, Guid dialogueAssetGuid, byte messageIndex, bool hasNextDialogue) Parameters context ClientInvocationContext dialogueAssetGuid Guid messageIndex byte hasNextDialogue bool ReceiveOpenVendor(in ClientInvocationContext, Guid, Guid, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveOpenVendor(in ClientInvocationContext context, Guid vendorAssetGuid, Guid dialogueAssetGuid, byte messageIndex, bool hasNextDialogue) Parameters context ClientInvocationContext vendorAssetGuid Guid dialogueAssetGuid Guid messageIndex byte hasNextDialogue bool ReceivePromoteRequest(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askPromote\")] public void ReceivePromoteRequest(CSteamID targetID) Parameters targetID CSteamID ReceiveQuests(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveQuests(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRadioFrequencyState(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSetRadioFrequency\")] public void ReceiveRadioFrequencyState(uint newRadioFrequency) Parameters newRadioFrequency uint ReceiveRemoveFlag(ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellRemoveFlag\")] public void ReceiveRemoveFlag(ushort id) Parameters id ushort ReceiveRemoveGroupInviteClient(CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveRemoveGroupInviteClient(CSteamID newGroupID) Parameters newGroupID CSteamID ReceiveRemoveQuest(Guid, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveRemoveQuest(Guid assetGuid, bool wasCompleted) Parameters assetGuid Guid wasCompleted bool ReceiveRenameGroupRequest(string) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askRenameGroup\")] public void ReceiveRenameGroupRequest(string newName) Parameters newName string ReceiveSellToVendor(in ServerInvocationContext, Guid, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askSellToVendor\")] public void ReceiveSellToVendor(in ServerInvocationContext context, Guid assetGuid, byte index, bool asManyAsPossible) Parameters context ServerInvocationContext assetGuid Guid index byte asManyAsPossible bool ReceiveSetFlag(ushort, short) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSetFlag\")] public void ReceiveSetFlag(ushort id, short value) Parameters id ushort value short ReceiveSetMarkerRequest(bool, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 5, legacyName = \"askSetMarker\")] public void ReceiveSetMarkerRequest(bool newIsMarkerPlaced, Vector3 newMarkerPosition) Parameters newIsMarkerPlaced bool newMarkerPosition Vector3 ReceiveSetRadioFrequencyRequest(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 5, legacyName = \"askSetRadioFrequency\")] public void ReceiveSetRadioFrequencyRequest(uint newRadioFrequency) Parameters newRadioFrequency uint ReceiveTalkWithNpcResponse(in ClientInvocationContext, NetId, Guid, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveTalkWithNpcResponse(in ClientInvocationContext context, NetId targetNpcNetId, Guid dialogueAssetGuid, byte messageIndex, bool hasNextDialogue) Parameters context ClientInvocationContext targetNpcNetId NetId dialogueAssetGuid Guid messageIndex byte hasNextDialogue bool ReceiveTrackQuest(Guid) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 5)] public void ReceiveTrackQuest(Guid assetGuid) Parameters assetGuid Guid RemoveQuest(QuestAsset, bool) public void RemoveQuest(QuestAsset questAsset, bool wasCompleted = false) Parameters questAsset QuestAsset wasCompleted bool SendAcceptGroupInvitation(CSteamID) public void SendAcceptGroupInvitation(CSteamID newGroupID) Parameters newGroupID CSteamID SendDeclineGroupInvitation(CSteamID) public void SendDeclineGroupInvitation(CSteamID newGroupID) Parameters newGroupID CSteamID ServerAddQuest(QuestAsset) public void ServerAddQuest(QuestAsset questAsset) Parameters questAsset QuestAsset ServerAssignToGroup(CSteamID, EPlayerGroupRank, bool) public bool ServerAssignToGroup(CSteamID newGroupID, EPlayerGroupRank newRank, bool bypassMemberLimit) Parameters newGroupID CSteamID newRank EPlayerGroupRank bypassMemberLimit bool Returns bool ServerAssignToMainGroup() Set player's group to their Steam group (if any) without testing restrictions. public void ServerAssignToMainGroup() ServerRemoveGroupInvitation(CSteamID) public bool ServerRemoveGroupInvitation(CSteamID groupId) Parameters groupId CSteamID Returns bool ServerRemoveQuest(QuestAsset) public void ServerRemoveQuest(QuestAsset questAsset) Parameters questAsset QuestAsset ServerRemoveQuest(QuestAsset, bool) public void ServerRemoveQuest(QuestAsset questAsset, bool wasCompleted = false) Parameters questAsset QuestAsset wasCompleted bool ServerSetCutsceneModeActive(bool) public void ServerSetCutsceneModeActive(bool active) Parameters active bool TrackQuest(QuestAsset) public void TrackQuest(QuestAsset questAsset) Parameters questAsset QuestAsset abandonQuest(ushort) [Obsolete] public void abandonQuest(ushort id) Parameters id ushort addQuest(ushort) [Obsolete] public void addQuest(ushort id) Parameters id ushort askAbandonQuest(CSteamID, ushort) [Obsolete] public void askAbandonQuest(CSteamID steamID, ushort id) Parameters steamID CSteamID id ushort askAddGroupInvite(CSteamID, CSteamID) [Obsolete] public void askAddGroupInvite(CSteamID steamID, CSteamID targetID) Parameters steamID CSteamID targetID CSteamID askBuyFromVendor(CSteamID, ushort, byte) [Obsolete] public void askBuyFromVendor(CSteamID steamID, ushort id, byte index) Parameters steamID CSteamID id ushort index byte askCreateGroup(CSteamID) [Obsolete] public void askCreateGroup(CSteamID steamID) Parameters steamID CSteamID askDeleteGroup(CSteamID) [Obsolete] public void askDeleteGroup(CSteamID steamID) Parameters steamID CSteamID askDemote(CSteamID, CSteamID) [Obsolete] public void askDemote(CSteamID steamID, CSteamID targetID) Parameters steamID CSteamID targetID CSteamID askIgnoreGroupInvite(CSteamID, CSteamID) [Obsolete] public void askIgnoreGroupInvite(CSteamID steamID, CSteamID newGroupID) Parameters steamID CSteamID newGroupID CSteamID askJoinGroupInvite(CSteamID, CSteamID) [Obsolete] public void askJoinGroupInvite(CSteamID steamID, CSteamID newGroupID) Parameters steamID CSteamID newGroupID CSteamID askKickFromGroup(CSteamID, CSteamID) [Obsolete] public void askKickFromGroup(CSteamID steamID, CSteamID targetID) Parameters steamID CSteamID targetID CSteamID askLeaveGroup(CSteamID) [Obsolete] public void askLeaveGroup(CSteamID steamID) Parameters steamID CSteamID askPromote(CSteamID, CSteamID) [Obsolete] public void askPromote(CSteamID steamID, CSteamID targetID) Parameters steamID CSteamID targetID CSteamID askQuests(CSteamID) [Obsolete] public void askQuests(CSteamID steamID) Parameters steamID CSteamID askRenameGroup(CSteamID, string) [Obsolete] public void askRenameGroup(CSteamID steamID, string newName) Parameters steamID CSteamID newName string askSellToVendor(CSteamID, ushort, byte) [Obsolete] public void askSellToVendor(CSteamID steamID, ushort id, byte index) Parameters steamID CSteamID id ushort index byte askSetMarker(CSteamID, bool, Vector3) [Obsolete] public void askSetMarker(CSteamID steamID, bool newIsMarkerPlaced, Vector3 newMarkerPosition) Parameters steamID CSteamID newIsMarkerPlaced bool newMarkerPosition Vector3 askSetRadioFrequency(CSteamID, uint) [Obsolete] public void askSetRadioFrequency(CSteamID steamID, uint newRadioFrequency) Parameters steamID CSteamID newRadioFrequency uint askTrackQuest(CSteamID, ushort) [Obsolete] public void askTrackQuest(CSteamID steamID, ushort id) Parameters steamID CSteamID id ushort changeRank(EPlayerGroupRank) Call serverside to replicate new rank to clients public void changeRank(EPlayerGroupRank newRank) Parameters newRank EPlayerGroupRank completeQuest(ushort, bool) [Obsolete] public void completeQuest(ushort id, bool ignoreNPC = false) Parameters id ushort ignoreNPC bool countValidQuests() public int countValidQuests() Returns int deleteGroup() public void deleteGroup() getFlag(ushort, out short) public bool getFlag(ushort id, out short value) Parameters id ushort value short Returns bool getQuest(ushort, out PlayerQuest) [Obsolete] public bool getQuest(ushort id, out PlayerQuest quest) Parameters id ushort quest PlayerQuest Returns bool getQuestStatus(ushort) [Obsolete] public ENPCQuestStatus getQuestStatus(ushort id) Parameters id ushort Returns ENPCQuestStatus isMemberOfGroup(CSteamID) public bool isMemberOfGroup(CSteamID groupID) Parameters groupID CSteamID Returns bool isMemberOfSameGroupAs(Player) public bool isMemberOfSameGroupAs(Player player) Parameters player Player Returns bool leaveGroup(bool) public void leaveGroup(bool force = false) Parameters force bool Ignores group changing rules when true. load() public void load() removeFlag(ushort) public void removeFlag(ushort id) Parameters id ushort removeQuest(ushort) [Obsolete] public void removeQuest(ushort id) Parameters id ushort replicateSetMarker(bool, Vector3, string) Called serverside to set marker on clients. public void replicateSetMarker(bool newIsMarkerPlaced, Vector3 newMarkerPosition, string newMarkerTextOverride = \"\") Parameters newIsMarkerPlaced bool newMarkerPosition Vector3 newMarkerTextOverride string save() public void save() sendAbandonQuest(ushort) [Obsolete] public void sendAbandonQuest(ushort id) Parameters id ushort sendAddGroupInvite(CSteamID) Serverside send packet telling player about this invite public void sendAddGroupInvite(CSteamID newGroupID) Parameters newGroupID CSteamID sendAddQuest(ushort) [Obsolete] public void sendAddQuest(ushort id) Parameters id ushort sendAskAddGroupInvite(CSteamID) public void sendAskAddGroupInvite(CSteamID targetID) Parameters targetID CSteamID sendBuyFromVendor(Guid, byte, bool) public void sendBuyFromVendor(Guid assetGuid, byte index, bool asManyAsPossible) Parameters assetGuid Guid index byte asManyAsPossible bool sendBuyFromVendor(ushort, byte) [Obsolete] public void sendBuyFromVendor(ushort id, byte index) Parameters id ushort index byte sendCreateGroup() public void sendCreateGroup() sendDeleteGroup() public void sendDeleteGroup() sendDemote(CSteamID) public void sendDemote(CSteamID targetID) Parameters targetID CSteamID sendKickFromGroup(CSteamID) public void sendKickFromGroup(CSteamID targetID) Parameters targetID CSteamID sendLeaveGroup() public void sendLeaveGroup() sendPromote(CSteamID) public void sendPromote(CSteamID targetID) Parameters targetID CSteamID sendRemoveFlag(ushort) public void sendRemoveFlag(ushort id) Parameters id ushort sendRemoveQuest(ushort) [Obsolete] public void sendRemoveQuest(ushort id) Parameters id ushort sendRenameGroup(string) public void sendRenameGroup(string newName) Parameters newName string sendSellToVendor(Guid, byte, bool) public void sendSellToVendor(Guid assetGuid, byte index, bool asManyAsPossible) Parameters assetGuid Guid index byte asManyAsPossible bool sendSellToVendor(ushort, byte) [Obsolete] public void sendSellToVendor(ushort id, byte index) Parameters id ushort index byte sendSetFlag(ushort, short) public void sendSetFlag(ushort id, short value) Parameters id ushort value short sendSetMarker(bool, Vector3) Ask server to set marker. public void sendSetMarker(bool newIsMarkerPlaced, Vector3 newMarkerPosition) Parameters newIsMarkerPlaced bool newMarkerPosition Vector3 sendSetRadioFrequency(uint) public void sendSetRadioFrequency(uint newRadioFrequency) Parameters newRadioFrequency uint sendTrackQuest(ushort) [Obsolete] public void sendTrackQuest(ushort id) Parameters id ushort setFlag(ushort, short) public void setFlag(ushort id, short value) Parameters id ushort value short tellAddGroupInvite(CSteamID, CSteamID) [Obsolete] public void tellAddGroupInvite(CSteamID steamID, CSteamID newGroupID) Parameters steamID CSteamID newGroupID CSteamID tellAddQuest(CSteamID, ushort) [Obsolete] public void tellAddQuest(CSteamID steamID, ushort id) Parameters steamID CSteamID id ushort tellQuests(CSteamID) [Obsolete] public void tellQuests(CSteamID steamID) Parameters steamID CSteamID tellRemoveFlag(CSteamID, ushort) [Obsolete] public void tellRemoveFlag(CSteamID steamID, ushort id) Parameters steamID CSteamID id ushort tellRemoveQuest(CSteamID, ushort) [Obsolete] public void tellRemoveQuest(CSteamID steamID, ushort id) Parameters steamID CSteamID id ushort tellSetFlag(CSteamID, ushort, short) [Obsolete] public void tellSetFlag(CSteamID steamID, ushort id, short value) Parameters steamID CSteamID id ushort value short tellSetGroup(CSteamID, CSteamID, byte) [Obsolete] public void tellSetGroup(CSteamID steamID, CSteamID newGroupID, byte newGroupRank) Parameters steamID CSteamID newGroupID CSteamID newGroupRank byte tellSetMarker(CSteamID, bool, Vector3, string) [Obsolete] public void tellSetMarker(CSteamID steamID, bool newIsMarkerPlaced, Vector3 newMarkerPosition, string newMarkerTextOverride) Parameters steamID CSteamID newIsMarkerPlaced bool newMarkerPosition Vector3 newMarkerTextOverride string tellSetRadioFrequency(CSteamID, uint) [Obsolete] public void tellSetRadioFrequency(CSteamID steamID, uint newRadioFrequency) Parameters steamID CSteamID newRadioFrequency uint trackAnimalKill(Animal) public void trackAnimalKill(Animal animal) Parameters animal Animal trackHordeKill() public void trackHordeKill() trackObjectKill(Guid, byte) public void trackObjectKill(Guid objectGuid, byte nav) Parameters objectGuid Guid nav byte trackPlayerKill(Player) public void trackPlayerKill(Player enemyPlayer) Parameters enemyPlayer Player trackQuest(ushort) [Obsolete] public void trackQuest(ushort id) Parameters id ushort trackTreeKill(Guid) public void trackTreeKill(Guid treeGuid) Parameters treeGuid Guid trackZombieKill(Zombie) public void trackZombieKill(Zombie zombie) Parameters zombie Zombie Events TrackedQuestUpdated public event TrackedQuestUpdated TrackedQuestUpdated Event Type TrackedQuestUpdated groupIDChanged public event GroupIDChangedHandler groupIDChanged Event Type GroupIDChangedHandler groupInvitesChanged public event GroupInvitesChangedHandler groupInvitesChanged Event Type GroupInvitesChangedHandler groupRankChanged public event GroupRankChangedHandler groupRankChanged Event Type GroupRankChangedHandler onAnyFlagChanged Event specifically for plugins to listen to global quest progress. public static event PlayerQuests.AnyFlagChangedHandler onAnyFlagChanged Event Type PlayerQuests.AnyFlagChangedHandler onGroupChanged Event for plugins when group or rank changes. public static event PlayerQuests.GroupChangedCallback onGroupChanged Event Type PlayerQuests.GroupChangedCallback questCompleted public event QuestCompletedHandler questCompleted Event Type QuestCompletedHandler"
  },
  "api/SDG.Unturned.PlayerQuests_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerQuests_NetMethods.html",
    "title": "Class PlayerQuests_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerQuests_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerQuests))] public static class PlayerQuests_NetMethods Inheritance object PlayerQuests_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAbandonQuestRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAbandonQuestRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAbandonQuestRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAbandonQuestRequest_Write(NetPakWriter, Guid) [NetInvokableGeneratedMethod(\"ReceiveAbandonQuestRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAbandonQuestRequest_Write(NetPakWriter writer, Guid assetGuid) Parameters writer NetPakWriter assetGuid Guid ReceiveAcceptGroupInvitationRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAcceptGroupInvitationRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAcceptGroupInvitationRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAcceptGroupInvitationRequest_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveAcceptGroupInvitationRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAcceptGroupInvitationRequest_Write(NetPakWriter writer, CSteamID newGroupID) Parameters writer NetPakWriter newGroupID CSteamID ReceiveAddGroupInviteClient_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAddGroupInviteClient\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAddGroupInviteClient_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAddGroupInviteClient_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveAddGroupInviteClient\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAddGroupInviteClient_Write(NetPakWriter writer, CSteamID newGroupID) Parameters writer NetPakWriter newGroupID CSteamID ReceiveAddGroupInviteRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAddGroupInviteRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAddGroupInviteRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAddGroupInviteRequest_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveAddGroupInviteRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAddGroupInviteRequest_Write(NetPakWriter writer, CSteamID targetID) Parameters writer NetPakWriter targetID CSteamID ReceiveAddQuest_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAddQuest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAddQuest_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAddQuest_Write(NetPakWriter, Guid) [NetInvokableGeneratedMethod(\"ReceiveAddQuest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAddQuest_Write(NetPakWriter writer, Guid assetGuid) Parameters writer NetPakWriter assetGuid Guid ReceiveBuyFromVendor_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBuyFromVendor\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBuyFromVendor_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveBuyFromVendor_Write(NetPakWriter, Guid, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveBuyFromVendor\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBuyFromVendor_Write(NetPakWriter writer, Guid assetGuid, byte index, bool asManyAsPossible) Parameters writer NetPakWriter assetGuid Guid index byte asManyAsPossible bool ReceiveChooseDefaultNextDialogueRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChooseDefaultNextDialogueRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChooseDefaultNextDialogueRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveChooseDefaultNextDialogueRequest_Write(NetPakWriter, Guid, byte) [NetInvokableGeneratedMethod(\"ReceiveChooseDefaultNextDialogueRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChooseDefaultNextDialogueRequest_Write(NetPakWriter writer, Guid assetGuid, byte index) Parameters writer NetPakWriter assetGuid Guid index byte ReceiveChooseDialogueResponseRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChooseDialogueResponseRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChooseDialogueResponseRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveChooseDialogueResponseRequest_Write(NetPakWriter, Guid, byte) [NetInvokableGeneratedMethod(\"ReceiveChooseDialogueResponseRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChooseDialogueResponseRequest_Write(NetPakWriter writer, Guid assetGuid, byte index) Parameters writer NetPakWriter assetGuid Guid index byte ReceiveCreateGroupRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveCreateGroupRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveCreateGroupRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveCreateGroupRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveCreateGroupRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveCreateGroupRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveCutsceneMode_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveCutsceneMode\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveCutsceneMode_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveCutsceneMode_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveCutsceneMode\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveCutsceneMode_Write(NetPakWriter writer, bool newCutsceneMode) Parameters writer NetPakWriter newCutsceneMode bool ReceiveDeclineGroupInvitationRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDeclineGroupInvitationRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDeclineGroupInvitationRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveDeclineGroupInvitationRequest_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveDeclineGroupInvitationRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDeclineGroupInvitationRequest_Write(NetPakWriter writer, CSteamID newGroupID) Parameters writer NetPakWriter newGroupID CSteamID ReceiveDeleteGroupRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDeleteGroupRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDeleteGroupRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveDeleteGroupRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveDeleteGroupRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDeleteGroupRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveDemoteRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDemoteRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDemoteRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveDemoteRequest_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveDemoteRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDemoteRequest_Write(NetPakWriter writer, CSteamID targetID) Parameters writer NetPakWriter targetID CSteamID ReceiveGroupState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveGroupState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveGroupState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveGroupState_Write(NetPakWriter, CSteamID, EPlayerGroupRank) [NetInvokableGeneratedMethod(\"ReceiveGroupState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveGroupState_Write(NetPakWriter writer, CSteamID newGroupID, EPlayerGroupRank newGroupRank) Parameters writer NetPakWriter newGroupID CSteamID newGroupRank EPlayerGroupRank ReceiveKickFromGroup_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveKickFromGroup\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveKickFromGroup_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveKickFromGroup_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveKickFromGroup\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveKickFromGroup_Write(NetPakWriter writer, CSteamID targetID) Parameters writer NetPakWriter targetID CSteamID ReceiveLeaveGroupRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLeaveGroupRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLeaveGroupRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveLeaveGroupRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveLeaveGroupRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLeaveGroupRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveMarkerState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveMarkerState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveMarkerState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveMarkerState_Write(NetPakWriter, bool, Vector3, string) [NetInvokableGeneratedMethod(\"ReceiveMarkerState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveMarkerState_Write(NetPakWriter writer, bool newIsMarkerPlaced, Vector3 newMarkerPosition, string newMarkerTextOverride) Parameters writer NetPakWriter newIsMarkerPlaced bool newMarkerPosition Vector3 newMarkerTextOverride string ReceiveOpenDialogue_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveOpenDialogue\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveOpenDialogue_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveOpenDialogue_Write(NetPakWriter, Guid, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveOpenDialogue\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveOpenDialogue_Write(NetPakWriter writer, Guid dialogueAssetGuid, byte messageIndex, bool hasNextDialogue) Parameters writer NetPakWriter dialogueAssetGuid Guid messageIndex byte hasNextDialogue bool ReceiveOpenVendor_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveOpenVendor\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveOpenVendor_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveOpenVendor_Write(NetPakWriter, Guid, Guid, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveOpenVendor\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveOpenVendor_Write(NetPakWriter writer, Guid vendorAssetGuid, Guid dialogueAssetGuid, byte messageIndex, bool hasNextDialogue) Parameters writer NetPakWriter vendorAssetGuid Guid dialogueAssetGuid Guid messageIndex byte hasNextDialogue bool ReceivePromoteRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePromoteRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePromoteRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceivePromoteRequest_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceivePromoteRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePromoteRequest_Write(NetPakWriter writer, CSteamID targetID) Parameters writer NetPakWriter targetID CSteamID ReceiveQuests_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveQuests\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveQuests_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRadioFrequencyState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRadioFrequencyState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRadioFrequencyState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRadioFrequencyState_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveRadioFrequencyState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRadioFrequencyState_Write(NetPakWriter writer, uint newRadioFrequency) Parameters writer NetPakWriter newRadioFrequency uint ReceiveRemoveFlag_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRemoveFlag\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRemoveFlag_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRemoveFlag_Write(NetPakWriter, ushort) [NetInvokableGeneratedMethod(\"ReceiveRemoveFlag\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRemoveFlag_Write(NetPakWriter writer, ushort id) Parameters writer NetPakWriter id ushort ReceiveRemoveGroupInviteClient_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRemoveGroupInviteClient\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRemoveGroupInviteClient_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRemoveGroupInviteClient_Write(NetPakWriter, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveRemoveGroupInviteClient\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRemoveGroupInviteClient_Write(NetPakWriter writer, CSteamID newGroupID) Parameters writer NetPakWriter newGroupID CSteamID ReceiveRemoveQuest_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRemoveQuest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRemoveQuest_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRemoveQuest_Write(NetPakWriter, Guid, bool) [NetInvokableGeneratedMethod(\"ReceiveRemoveQuest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRemoveQuest_Write(NetPakWriter writer, Guid assetGuid, bool wasCompleted) Parameters writer NetPakWriter assetGuid Guid wasCompleted bool ReceiveRenameGroupRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRenameGroupRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRenameGroupRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveRenameGroupRequest_Write(NetPakWriter, string) [NetInvokableGeneratedMethod(\"ReceiveRenameGroupRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRenameGroupRequest_Write(NetPakWriter writer, string newName) Parameters writer NetPakWriter newName string ReceiveSellToVendor_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSellToVendor\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSellToVendor_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSellToVendor_Write(NetPakWriter, Guid, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveSellToVendor\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSellToVendor_Write(NetPakWriter writer, Guid assetGuid, byte index, bool asManyAsPossible) Parameters writer NetPakWriter assetGuid Guid index byte asManyAsPossible bool ReceiveSetFlag_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSetFlag\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSetFlag_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSetFlag_Write(NetPakWriter, ushort, short) [NetInvokableGeneratedMethod(\"ReceiveSetFlag\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSetFlag_Write(NetPakWriter writer, ushort id, short value) Parameters writer NetPakWriter id ushort value short ReceiveSetMarkerRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSetMarkerRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSetMarkerRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSetMarkerRequest_Write(NetPakWriter, bool, Vector3) [NetInvokableGeneratedMethod(\"ReceiveSetMarkerRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSetMarkerRequest_Write(NetPakWriter writer, bool newIsMarkerPlaced, Vector3 newMarkerPosition) Parameters writer NetPakWriter newIsMarkerPlaced bool newMarkerPosition Vector3 ReceiveSetRadioFrequencyRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSetRadioFrequencyRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSetRadioFrequencyRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSetRadioFrequencyRequest_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveSetRadioFrequencyRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSetRadioFrequencyRequest_Write(NetPakWriter writer, uint newRadioFrequency) Parameters writer NetPakWriter newRadioFrequency uint ReceiveTalkWithNpcResponse_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTalkWithNpcResponse\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTalkWithNpcResponse_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTalkWithNpcResponse_Write(NetPakWriter, NetId, Guid, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveTalkWithNpcResponse\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTalkWithNpcResponse_Write(NetPakWriter writer, NetId targetNpcNetId, Guid dialogueAssetGuid, byte messageIndex, bool hasNextDialogue) Parameters writer NetPakWriter targetNpcNetId NetId dialogueAssetGuid Guid messageIndex byte hasNextDialogue bool ReceiveTrackQuest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTrackQuest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTrackQuest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTrackQuest_Write(NetPakWriter, Guid) [NetInvokableGeneratedMethod(\"ReceiveTrackQuest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTrackQuest_Write(NetPakWriter writer, Guid assetGuid) Parameters writer NetPakWriter assetGuid Guid"
  },
  "api/SDG.Unturned.PlayerRegionUpdated.html": {
    "href": "api/SDG.Unturned.PlayerRegionUpdated.html",
    "title": "Delegate PlayerRegionUpdated | Unturned Analyse Doc",
    "keywords": "Delegate PlayerRegionUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerRegionUpdated(Player player, byte old_x, byte old_y, byte new_x, byte new_y, byte index, ref bool canIncrementIndex) Parameters player Player old_x byte old_y byte new_x byte new_y byte index byte canIncrementIndex bool Constructors PlayerRegionUpdated(object, IntPtr) public PlayerRegionUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, byte, byte, byte, byte, byte, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, byte old_x, byte old_y, byte new_x, byte new_y, byte index, ref bool canIncrementIndex, AsyncCallback callback, object @object) Parameters player Player old_x byte old_y byte new_x byte new_y byte index byte canIncrementIndex bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool canIncrementIndex, IAsyncResult result) Parameters canIncrementIndex bool result IAsyncResult Invoke(Player, byte, byte, byte, byte, byte, ref bool) public virtual void Invoke(Player player, byte old_x, byte old_y, byte new_x, byte new_y, byte index, ref bool canIncrementIndex) Parameters player Player old_x byte old_y byte new_x byte new_y byte index byte canIncrementIndex bool"
  },
  "api/SDG.Unturned.PlayerSavedata.html": {
    "href": "api/SDG.Unturned.PlayerSavedata.html",
    "title": "Class PlayerSavedata | Unturned Analyse Doc",
    "keywords": "Class PlayerSavedata Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerSavedata Inheritance object PlayerSavedata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerSavedata() public PlayerSavedata() Fields hasSync public static bool hasSync Field Value bool Methods deleteFile(SteamPlayerID, string) public static void deleteFile(SteamPlayerID playerID, string path) Parameters playerID SteamPlayerID path string deleteFolder(SteamPlayerID) Delete all savedata folders for player's characters. public static void deleteFolder(SteamPlayerID playerID) Parameters playerID SteamPlayerID fileExists(SteamPlayerID, string) public static bool fileExists(SteamPlayerID playerID, string path) Parameters playerID SteamPlayerID path string Returns bool openRiver(SteamPlayerID, string, bool) public static River openRiver(SteamPlayerID playerID, string path, bool isReading) Parameters playerID SteamPlayerID path string isReading bool Returns River readBlock(SteamPlayerID, string, byte) public static Block readBlock(SteamPlayerID playerID, string path, byte prefix) Parameters playerID SteamPlayerID path string prefix byte Returns Block readData(SteamPlayerID, string) public static Data readData(SteamPlayerID playerID, string path) Parameters playerID SteamPlayerID path string Returns Data writeBlock(SteamPlayerID, string, Block) public static void writeBlock(SteamPlayerID playerID, string path, Block block) Parameters playerID SteamPlayerID path string block Block writeData(SteamPlayerID, string, Data) public static void writeData(SteamPlayerID playerID, string path, Data data) Parameters playerID SteamPlayerID path string data Data"
  },
  "api/SDG.Unturned.PlayerSkills.html": {
    "href": "api/SDG.Unturned.PlayerSkills.html",
    "title": "Class PlayerSkills | Unturned Analyse Doc",
    "keywords": "Class PlayerSkills Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerSkills : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerSkills Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerSkills() public PlayerSkills() Fields BOOST_COST public static readonly uint BOOST_COST Field Value uint BOOST_COUNT public static readonly byte BOOST_COUNT Field Value byte SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SKILLSETS public static readonly SpecialitySkillPair[][] SKILLSETS Field Value SpecialitySkillPair[][] SPECIALITIES public static readonly byte SPECIALITIES Field Value byte onBoostUpdated public BoostUpdated onBoostUpdated Field Value BoostUpdated onExperienceUpdated public ExperienceUpdated onExperienceUpdated Field Value ExperienceUpdated onReputationUpdated public ReputationUpdated onReputationUpdated Field Value ReputationUpdated onSkillsUpdated public SkillsUpdated onSkillsUpdated Field Value SkillsUpdated Properties boost public EPlayerBoost boost { get; } Property Value EPlayerBoost doesLevelAllowSkills public bool doesLevelAllowSkills { get; } Property Value bool experience public uint experience { get; } Property Value uint reputation public int reputation { get; } Property Value int skills public Skill[][] skills { get; } Property Value Skill[][] Methods GetSharpshooterRecoilMultiplier() public float GetSharpshooterRecoilMultiplier() Returns float GetSharpshooterRecoilMultiplierForLevel(int) public float GetSharpshooterRecoilMultiplierForLevel(int level) Parameters level int Returns float ReceiveBoost(EPlayerBoost) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellBoost\")] public void ReceiveBoost(EPlayerBoost newBoost) Parameters newBoost EPlayerBoost ReceiveBoostRequest() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askBoost\")] public void ReceiveBoostRequest() ReceiveExperience(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellExperience\")] public void ReceiveExperience(uint newExperience) Parameters newExperience uint ReceiveMultipleSkillLevels(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveMultipleSkillLevels(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePurchaseRequest(NetId) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askPurchase\")] public void ReceivePurchaseRequest(NetId volumeNetId) Parameters volumeNetId NetId ReceiveReputation(int) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellReputation\")] public void ReceiveReputation(int newReputation) Parameters newReputation int ReceiveSingleSkillLevel(byte, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSkill\")] public void ReceiveSingleSkillLevel(byte speciality, byte index, byte level) Parameters speciality byte index byte level byte ReceiveUpgradeRequest(byte, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askUpgrade\")] public void ReceiveUpgradeRequest(byte speciality, byte index, bool force) Parameters speciality byte index byte force bool ServerModifyExperience(int) public void ServerModifyExperience(int delta) Parameters delta int ServerSetExperience(uint) public void ServerSetExperience(uint newExperience) Parameters newExperience uint ServerSetSkillLevel(int, int, int) public bool ServerSetSkillLevel(int specialityIndex, int skillIndex, int newLevel) Parameters specialityIndex int skillIndex int newLevel int Returns bool ServerUnlockAllSkills() Set every level to max and replicate. public void ServerUnlockAllSkills() TryParseIndices(string, out int, out int) Ugly hack for the awful skills enums. Eventually skills should be replaced. public static bool TryParseIndices(string input, out int specialityIndex, out int skillIndex) Parameters input string specialityIndex int skillIndex int Returns bool askAward(uint) public void askAward(uint award) Parameters award uint askBoost(CSteamID) [Obsolete] public void askBoost(CSteamID steamID) Parameters steamID CSteamID askPay(uint) public void askPay(uint pay) Parameters pay uint askPurchase(CSteamID, byte) [Obsolete] public void askPurchase(CSteamID steamID, byte index) Parameters steamID CSteamID index byte askRep(int) public void askRep(int rep) Parameters rep int askSkills(CSteamID) [Obsolete] public void askSkills(CSteamID steamID) Parameters steamID CSteamID askSpend(uint) public void askSpend(uint cost) Parameters cost uint askUpgrade(CSteamID, byte, byte, bool) [Obsolete] public void askUpgrade(CSteamID steamID, byte speciality, byte index, bool force) Parameters steamID CSteamID speciality byte index byte force bool cost(int, int) public uint cost(int speciality, int index) Parameters speciality int index int Returns uint load() public void load() mastery(int, int) public float mastery(int speciality, int index) Parameters speciality int index int Returns float modRep(int) public void modRep(int rep) Parameters rep int modXp(uint) public void modXp(uint xp) Parameters xp uint modXp2(uint) public void modXp2(uint xp) Parameters xp uint save() public void save() sendBoost() public void sendBoost() sendPurchase(HordePurchaseVolume) public void sendPurchase(HordePurchaseVolume node) Parameters node HordePurchaseVolume sendUpgrade(byte, byte, bool) public void sendUpgrade(byte speciality, byte index, bool force) Parameters speciality byte index byte force bool tellBoost(CSteamID, byte) [Obsolete] public void tellBoost(CSteamID steamID, byte newBoost) Parameters steamID CSteamID newBoost byte tellExperience(CSteamID, uint) [Obsolete] public void tellExperience(CSteamID steamID, uint newExperience) Parameters steamID CSteamID newExperience uint tellReputation(CSteamID, int) [Obsolete] public void tellReputation(CSteamID steamID, int newReputation) Parameters steamID CSteamID newReputation int tellSkill(CSteamID, byte, byte, byte) [Obsolete] public void tellSkill(CSteamID steamID, byte speciality, byte index, byte level) Parameters steamID CSteamID speciality byte index byte level byte tellSkills(CSteamID, byte, byte[]) [Obsolete] public void tellSkills(CSteamID steamID, byte speciality, byte[] newLevels) Parameters steamID CSteamID speciality byte newLevels byte[] Events OnExperienceChanged_Global Invoked after any player's experience value changes (not including loading). public static event Action<PlayerSkills, uint> OnExperienceChanged_Global Event Type Action<PlayerSkills, uint> OnReputationChanged_Global Invoked after any player's reputation value changes (not including loading). public static event Action<PlayerSkills, int> OnReputationChanged_Global Event Type Action<PlayerSkills, int> OnSkillUpgraded_Global public static event Action<PlayerSkills, byte, byte, byte> OnSkillUpgraded_Global Event Type Action<PlayerSkills, byte, byte, byte> onApplyingDefaultSkills public static event ApplyingDefaultSkillsHandler onApplyingDefaultSkills Event Type ApplyingDefaultSkillsHandler"
  },
  "api/SDG.Unturned.PlayerSkills_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerSkills_NetMethods.html",
    "title": "Class PlayerSkills_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerSkills_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerSkills))] public static class PlayerSkills_NetMethods Inheritance object PlayerSkills_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveBoostRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBoostRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBoostRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveBoostRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveBoostRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBoostRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveBoost_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBoost\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBoost_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveBoost_Write(NetPakWriter, EPlayerBoost) [NetInvokableGeneratedMethod(\"ReceiveBoost\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBoost_Write(NetPakWriter writer, EPlayerBoost newBoost) Parameters writer NetPakWriter newBoost EPlayerBoost ReceiveExperience_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveExperience\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveExperience_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveExperience_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveExperience\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveExperience_Write(NetPakWriter writer, uint newExperience) Parameters writer NetPakWriter newExperience uint ReceiveMultipleSkillLevels_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveMultipleSkillLevels\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveMultipleSkillLevels_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePurchaseRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePurchaseRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePurchaseRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceivePurchaseRequest_Write(NetPakWriter, NetId) [NetInvokableGeneratedMethod(\"ReceivePurchaseRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePurchaseRequest_Write(NetPakWriter writer, NetId volumeNetId) Parameters writer NetPakWriter volumeNetId NetId ReceiveReputation_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveReputation\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveReputation_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveReputation_Write(NetPakWriter, int) [NetInvokableGeneratedMethod(\"ReceiveReputation\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveReputation_Write(NetPakWriter writer, int newReputation) Parameters writer NetPakWriter newReputation int ReceiveSingleSkillLevel_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSingleSkillLevel\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSingleSkillLevel_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSingleSkillLevel_Write(NetPakWriter, byte, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSingleSkillLevel\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSingleSkillLevel_Write(NetPakWriter writer, byte speciality, byte index, byte level) Parameters writer NetPakWriter speciality byte index byte level byte ReceiveUpgradeRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUpgradeRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUpgradeRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveUpgradeRequest_Write(NetPakWriter, byte, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveUpgradeRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUpgradeRequest_Write(NetPakWriter writer, byte speciality, byte index, bool force) Parameters writer NetPakWriter speciality byte index byte force bool"
  },
  "api/SDG.Unturned.PlayerSpawnpoint.html": {
    "href": "api/SDG.Unturned.PlayerSpawnpoint.html",
    "title": "Class PlayerSpawnpoint | Unturned Analyse Doc",
    "keywords": "Class PlayerSpawnpoint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerSpawnpoint Inheritance object PlayerSpawnpoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerSpawnpoint(Vector3, float, bool) public PlayerSpawnpoint(Vector3 newPoint, float newAngle, bool newIsAlt) Parameters newPoint Vector3 newAngle float newIsAlt bool Properties angle public float angle { get; } Property Value float isAlt public bool isAlt { get; } Property Value bool node public Transform node { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 Methods setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.PlayerSpotLightConfig.html": {
    "href": "api/SDG.Unturned.PlayerSpotLightConfig.html",
    "title": "Struct PlayerSpotLightConfig | Unturned Analyse Doc",
    "keywords": "Struct PlayerSpotLightConfig Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct PlayerSpotLightConfig Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors PlayerSpotLightConfig(DatDictionary) public PlayerSpotLightConfig(DatDictionary data) Parameters data DatDictionary Fields angle public float angle Field Value float color public Color color Field Value Color intensity public float intensity Field Value float isEnabled If true, light contributes to player spotlight. Defaults to true. Can be set to false for modders with a custom light setup. For example, this was added for a modder who is using melee lights to toggle a lightsaber-style glow. public bool isEnabled Field Value bool range public float range Field Value float Methods applyToLight(Light) public void applyToLight(Light light) Parameters light Light"
  },
  "api/SDG.Unturned.PlayerSpyReady.html": {
    "href": "api/SDG.Unturned.PlayerSpyReady.html",
    "title": "Delegate PlayerSpyReady | Unturned Analyse Doc",
    "keywords": "Delegate PlayerSpyReady Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerSpyReady(CSteamID steamID, byte[] data) Parameters steamID CSteamID data byte[] Constructors PlayerSpyReady(object, IntPtr) public PlayerSpyReady(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID steamID, byte[] data, AsyncCallback callback, object @object) Parameters steamID CSteamID data byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID, byte[]) public virtual void Invoke(CSteamID steamID, byte[] data) Parameters steamID CSteamID data byte[]"
  },
  "api/SDG.Unturned.PlayerStance.html": {
    "href": "api/SDG.Unturned.PlayerStance.html",
    "title": "Class PlayerStance | Unturned Analyse Doc",
    "keywords": "Class PlayerStance Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerStance : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerStance Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerStance() public PlayerStance() Fields COOLDOWN public static readonly float COOLDOWN Field Value float DETECT_BACKWARD public static readonly float DETECT_BACKWARD Field Value float DETECT_CROUCH public static readonly float DETECT_CROUCH Field Value float DETECT_FORWARD public static readonly float DETECT_FORWARD Field Value float DETECT_MOVE public static readonly float DETECT_MOVE Field Value float DETECT_PRONE public static readonly float DETECT_PRONE Field Value float DETECT_SPRINT public static readonly float DETECT_SPRINT Field Value float DETECT_STAND public static readonly float DETECT_STAND Field Value float RADIUS public static readonly float RADIUS Field Value float initialStance Stance to fit available space when loading in. public EPlayerStance initialStance Field Value EPlayerStance onStanceUpdated public StanceUpdated onStanceUpdated Field Value StanceUpdated Properties areEyesUnderwater Test whether viewpoint is currently inside a water volume. public bool areEyesUnderwater { get; } Property Value bool areFeetUnderwater Test whether bottom of controller is currently inside a water volume. public bool areFeetUnderwater { get; } Property Value bool crouch public bool crouch { get; } Property Value bool isBodyUnderwater Test whether body is currently inside a water volume. Enters the swimming stance while true. public bool isBodyUnderwater { get; } Property Value bool isSubmerged Older, cached version of areEyesUnderwater. public bool isSubmerged { get; } Property Value bool prone public bool prone { get; } Property Value bool radius [Obsolete(\"Renamed to GetStealthDetectionRadius.\")] public float radius { get; } Property Value float sprint public bool sprint { get; } Property Value bool stance public EPlayerStance stance { get; set; } Property Value EPlayerStance Methods GetStealthDetectionRadius() public float GetStealthDetectionRadius() Returns float Distance zombies can detect this player within. ReceiveClimbRequest(in ServerInvocationContext, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2)] public void ReceiveClimbRequest(in ServerInvocationContext context, Vector3 direction) Parameters context ServerInvocationContext direction Vector3 ReceiveStance(EPlayerStance) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellStance\")] public void ReceiveStance(EPlayerStance newStance) Parameters newStance EPlayerStance adjustStanceOrTeleportIfStuck() public bool adjustStanceOrTeleportIfStuck() Returns bool askStance(CSteamID) [Obsolete] public void askStance(CSteamID steamID) Parameters steamID CSteamID checkStance(EPlayerStance) public void checkStance(EPlayerStance newStance) Parameters newStance EPlayerStance checkStance(EPlayerStance, bool) public void checkStance(EPlayerStance newStance, bool all) Parameters newStance EPlayerStance all bool drawCapsule(Vector3, float, Color, float) Draw debug capsule matching the player size. public static void drawCapsule(Vector3 position, float height, Color color, float lifespan = 0) Parameters position Vector3 height float color Color lifespan float drawStandingCapsule(Vector3, Color, float) Draw standing-height debug capsule matching the player size. public static void drawStandingCapsule(Vector3 position, Color color, float lifespan = 0) Parameters position Vector3 color Color lifespan float getStanceForPosition(Vector3, ref EPlayerStance) Is there any compatible stance that can fit at position? public static bool getStanceForPosition(Vector3 position, ref EPlayerStance stance) Parameters position Vector3 stance EPlayerStance Returns bool hasCrouchingHeightClearanceAtPosition(Vector3) Could a crouching player capsule fit at the given position? public static bool hasCrouchingHeightClearanceAtPosition(Vector3 position) Parameters position Vector3 Returns bool hasHeightClearance(float) Does capsule have appropriate clearance for a pending height change? public bool hasHeightClearance(float height) Parameters height float Returns bool hasHeightClearanceAtPosition(Vector3, float) Is there enough height for our capsule at a position? public static bool hasHeightClearanceAtPosition(Vector3 position, float height) Parameters position Vector3 height float Returns bool hasProneHeightClearanceAtPosition(Vector3) Could a prone player capsule fit at the given position? public static bool hasProneHeightClearanceAtPosition(Vector3 position) Parameters position Vector3 Returns bool hasStandingHeightClearanceAtPosition(Vector3) Could a standing player capsule fit at the given position? public static bool hasStandingHeightClearanceAtPosition(Vector3 position) Parameters position Vector3 Returns bool hasTeleportClearanceAtPosition(Vector3) Could a standing player capsule teleport to the given position? public static bool hasTeleportClearanceAtPosition(Vector3 position) Parameters position Vector3 Returns bool simulate(uint, bool, bool, bool) public void simulate(uint simulation, bool inputCrouch, bool inputProne, bool inputSprint) Parameters simulation uint inputCrouch bool inputProne bool inputSprint bool tellStance(CSteamID, byte) [Obsolete] public void tellStance(CSteamID steamID, byte newStance) Parameters steamID CSteamID newStance byte wouldHaveHeightClearanceAtPosition(Vector3, float) Using our capsule's current height would there be enough space at a given position? public bool wouldHaveHeightClearanceAtPosition(Vector3 position, float padding = 0) Parameters position Vector3 padding float Returns bool Events OnStanceChanged_Global Invoked after any player's stance changes (not including loading). public static event Action<PlayerStance> OnStanceChanged_Global Event Type Action<PlayerStance>"
  },
  "api/SDG.Unturned.PlayerStance_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerStance_NetMethods.html",
    "title": "Class PlayerStance_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerStance_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerStance))] public static class PlayerStance_NetMethods Inheritance object PlayerStance_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveClimbRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClimbRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClimbRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveClimbRequest_Write(NetPakWriter, Vector3) [NetInvokableGeneratedMethod(\"ReceiveClimbRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveClimbRequest_Write(NetPakWriter writer, Vector3 direction) Parameters writer NetPakWriter direction Vector3 ReceiveStance_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveStance\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveStance_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveStance_Write(NetPakWriter, EPlayerStance) [NetInvokableGeneratedMethod(\"ReceiveStance\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveStance_Write(NetPakWriter writer, EPlayerStance newStance) Parameters writer NetPakWriter newStance EPlayerStance"
  },
  "api/SDG.Unturned.PlayerStateUpdate.html": {
    "href": "api/SDG.Unturned.PlayerStateUpdate.html",
    "title": "Struct PlayerStateUpdate | Unturned Analyse Doc",
    "keywords": "Struct PlayerStateUpdate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct PlayerStateUpdate Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors PlayerStateUpdate(Vector3, byte, byte) public PlayerStateUpdate(Vector3 pos, byte angle, byte rot) Parameters pos Vector3 angle byte rot byte Fields angle public byte angle Field Value byte pos public Vector3 pos Field Value Vector3 rot public byte rot Field Value byte"
  },
  "api/SDG.Unturned.PlayerTeleported.html": {
    "href": "api/SDG.Unturned.PlayerTeleported.html",
    "title": "Delegate PlayerTeleported | Unturned Analyse Doc",
    "keywords": "Delegate PlayerTeleported Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerTeleported(Player player, Vector3 point) Parameters player Player point Vector3 Constructors PlayerTeleported(object, IntPtr) public PlayerTeleported(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, Vector3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, Vector3 point, AsyncCallback callback, object @object) Parameters player Player point Vector3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, Vector3) public virtual void Invoke(Player player, Vector3 point) Parameters player Player point Vector3"
  },
  "api/SDG.Unturned.PlayerTool.html": {
    "href": "api/SDG.Unturned.PlayerTool.html",
    "title": "Class PlayerTool | Unturned Analyse Doc",
    "keywords": "Class PlayerTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerTool Inheritance object PlayerTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerTool() public PlayerTool() Methods EnumeratePlayers() public static IEnumerable<Player> EnumeratePlayers() Returns IEnumerable<Player> findSteamPlayerByChannel(int) Find client with given RPC channel ID. public static SteamPlayer findSteamPlayerByChannel(int channel) Parameters channel int Returns SteamPlayer getPlayer(CSteamID) public static Player getPlayer(CSteamID steamID) Parameters steamID CSteamID Returns Player getPlayer(string) public static Player getPlayer(string name) Parameters name string Returns Player getPlayerModel(CSteamID) public static Transform getPlayerModel(CSteamID steamID) Parameters steamID CSteamID Returns Transform getPlayerModel(string) public static Transform getPlayerModel(string name) Parameters name string Returns Transform getPlayersInRadius(Vector3, float, List<Player>) public static void getPlayersInRadius(Vector3 center, float sqrRadius, List<Player> result) Parameters center Vector3 sqrRadius float result List<Player> getRepColor(int) public static Color getRepColor(int rep) Parameters rep int Returns Color getRepTexture(int) public static Texture2D getRepTexture(int rep) Parameters rep int Returns Texture2D getRepTitle(int) public static string getRepTitle(int rep) Parameters rep int Returns string getSteamPlayer(CSteamID) public static SteamPlayer getSteamPlayer(CSteamID steamID) Parameters steamID CSteamID Returns SteamPlayer getSteamPlayer(string) public static SteamPlayer getSteamPlayer(string name) Parameters name string Returns SteamPlayer getSteamPlayer(ulong) public static SteamPlayer getSteamPlayer(ulong steamID) Parameters steamID ulong Returns SteamPlayer getSteamPlayers() public static SteamPlayer[] getSteamPlayers() Returns SteamPlayer[] tryGetSteamID(string, out CSteamID) public static bool tryGetSteamID(string input, out CSteamID steamID) Parameters input string steamID CSteamID Returns bool tryGetSteamPlayer(string, out SteamPlayer) public static bool tryGetSteamPlayer(string input, out SteamPlayer player) Parameters input string player SteamPlayer Returns bool"
  },
  "api/SDG.Unturned.PlayerUI.html": {
    "href": "api/SDG.Unturned.PlayerUI.html",
    "title": "Class PlayerUI | Unturned Analyse Doc",
    "keywords": "Class PlayerUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerUI : MonoBehaviour Inheritance object PlayerUI Constructors PlayerUI() public PlayerUI() Fields HIT_TIME public static readonly float HIT_TIME Field Value float chat public static EChatMode chat Field Value EChatMode container public static ISleekElement container Field Value ISleekElement isLocked public static bool isLocked Field Value bool messageBox public static ISleekBox messageBox Field Value ISleekBox messageBox2 public static ISleekBox messageBox2 Field Value ISleekBox window public static SleekWindow window Field Value SleekWindow Properties isBlindfolded public static bool isBlindfolded { get; set; } Property Value bool Methods disableCrosshair() public static void disableCrosshair() disableDot() public static void disableDot() enableCrosshair() public static void enableCrosshair() enableDot() public static void enableDot() hint(Transform, EPlayerMessage) public static void hint(Transform transform, EPlayerMessage message) Parameters transform Transform message EPlayerMessage hint(Transform, EPlayerMessage, string, Color, params object[]) public static void hint(Transform transform, EPlayerMessage message, string text, Color color, params object[] objects) Parameters transform Transform message EPlayerMessage text string color Color objects object[] hint2(EPlayerMessage, float, float) public static void hint2(EPlayerMessage message, float progress, float data) Parameters message EPlayerMessage progress float data float hitmark(Vector3, bool, EPlayerHit) public static void hitmark(Vector3 point, bool worldspace, EPlayerHit newHit) Parameters point Vector3 worldspace bool newHit EPlayerHit message(EPlayerMessage, string, float) public static void message(EPlayerMessage message, string text, float duration = 2) Parameters message EPlayerMessage text string duration float pain(float) public static void pain(float amount) Parameters amount float stun(Color, float) public static void stun(Color color, float amount) Parameters color Color amount float updateBinoculars(bool) public static void updateBinoculars(bool isBinoculars) Parameters isBinoculars bool updateScope(bool) public static void updateScope(bool isScoped) Parameters isScoped bool Events isBlindfoldedChanged public static event IsBlindfoldedChangedHandler isBlindfoldedChanged Event Type IsBlindfoldedChangedHandler"
  },
  "api/SDG.Unturned.PlayerVoice.RelayVoiceCullingHandler.html": {
    "href": "api/SDG.Unturned.PlayerVoice.RelayVoiceCullingHandler.html",
    "title": "Delegate PlayerVoice.RelayVoiceCullingHandler | Unturned Analyse Doc",
    "keywords": "Delegate PlayerVoice.RelayVoiceCullingHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate bool PlayerVoice.RelayVoiceCullingHandler(PlayerVoice speaker, PlayerVoice listener) Parameters speaker PlayerVoice listener PlayerVoice Returns bool Constructors RelayVoiceCullingHandler(object, IntPtr) public RelayVoiceCullingHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerVoice, PlayerVoice, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerVoice speaker, PlayerVoice listener, AsyncCallback callback, object @object) Parameters speaker PlayerVoice listener PlayerVoice callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual bool EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns bool Invoke(PlayerVoice, PlayerVoice) public virtual bool Invoke(PlayerVoice speaker, PlayerVoice listener) Parameters speaker PlayerVoice listener PlayerVoice Returns bool"
  },
  "api/SDG.Unturned.PlayerVoice.RelayVoiceHandler.html": {
    "href": "api/SDG.Unturned.PlayerVoice.RelayVoiceHandler.html",
    "title": "Delegate PlayerVoice.RelayVoiceHandler | Unturned Analyse Doc",
    "keywords": "Delegate PlayerVoice.RelayVoiceHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PlayerVoice.RelayVoiceHandler(PlayerVoice speaker, bool wantsToUseWalkieTalkie, ref bool shouldAllow, ref bool shouldBroadcastOverRadio, ref PlayerVoice.RelayVoiceCullingHandler cullingHandler) Parameters speaker PlayerVoice wantsToUseWalkieTalkie bool shouldAllow bool shouldBroadcastOverRadio bool cullingHandler PlayerVoice.RelayVoiceCullingHandler Constructors RelayVoiceHandler(object, IntPtr) public RelayVoiceHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerVoice, bool, ref bool, ref bool, ref RelayVoiceCullingHandler, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerVoice speaker, bool wantsToUseWalkieTalkie, ref bool shouldAllow, ref bool shouldBroadcastOverRadio, ref PlayerVoice.RelayVoiceCullingHandler cullingHandler, AsyncCallback callback, object @object) Parameters speaker PlayerVoice wantsToUseWalkieTalkie bool shouldAllow bool shouldBroadcastOverRadio bool cullingHandler PlayerVoice.RelayVoiceCullingHandler callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref bool, ref RelayVoiceCullingHandler, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, ref bool shouldBroadcastOverRadio, ref PlayerVoice.RelayVoiceCullingHandler cullingHandler, IAsyncResult result) Parameters shouldAllow bool shouldBroadcastOverRadio bool cullingHandler PlayerVoice.RelayVoiceCullingHandler result IAsyncResult Invoke(PlayerVoice, bool, ref bool, ref bool, ref RelayVoiceCullingHandler) public virtual void Invoke(PlayerVoice speaker, bool wantsToUseWalkieTalkie, ref bool shouldAllow, ref bool shouldBroadcastOverRadio, ref PlayerVoice.RelayVoiceCullingHandler cullingHandler) Parameters speaker PlayerVoice wantsToUseWalkieTalkie bool shouldAllow bool shouldBroadcastOverRadio bool cullingHandler PlayerVoice.RelayVoiceCullingHandler"
  },
  "api/SDG.Unturned.PlayerVoice.html": {
    "href": "api/SDG.Unturned.PlayerVoice.html",
    "title": "Class PlayerVoice | Unturned Analyse Doc",
    "keywords": "Class PlayerVoice Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerVoice : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerVoice Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerVoice() public PlayerVoice() Fields allowVoiceChat [Obsolete(\"Replaced by ServerSetPermissions which is replicated to owner.\")] public bool allowVoiceChat Field Value bool hasUseableWalkieTalkie Is a UseableWalkieTalkie currently equipped? Set by useable's equip and dequip events. public bool hasUseableWalkieTalkie Field Value bool Properties canHearRadio Can this player currently hear global (radio) voice chat? public bool canHearRadio { get; } Property Value bool hasEarpiece Is the player wearing an earpiece? Allows global (radio) voice chat to be heard without equipping the walkie-talkie item. public bool hasEarpiece { get; } Property Value bool isTalking Is this player broadcasting their voice? Used in the menus to show an indicator who's talking. Locally set when recording starts/stops, and remotely when voice data starts/stops being received. public bool isTalking { get; } Property Value bool Methods GetAllowTalkingWhileDead() public bool GetAllowTalkingWhileDead() Returns bool GetCustomAllowTalking() public bool GetCustomAllowTalking() Returns bool ReceivePermissions(bool, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceivePermissions(bool allowTalkingWhileDead, bool customAllowTalking) Parameters allowTalkingWhileDead bool customAllowTalking bool ReceivePlayVoiceChat(in ClientInvocationContext) Called by server to relay voice data from clients. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceivePlayVoiceChat(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVoiceChatRelay(in ServerInvocationContext) Called by owner to relay voice data to clients. Not using rate limit attribute because it internally tracks bytes per second. [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER)] public void ReceiveVoiceChatRelay(in ServerInvocationContext context) Parameters context ServerInvocationContext ServerSetPermissions(bool, bool) public void ServerSetPermissions(bool allowTalkingWhileDead, bool customAllowTalking) Parameters allowTalkingWhileDead bool customAllowTalking bool askVoiceChat(byte[]) [Obsolete] public void askVoiceChat(byte[] packet) Parameters packet byte[] handleRelayVoiceCulling_Proximity(PlayerVoice, PlayerVoice) Default culling handler when speaking in proximity. public static bool handleRelayVoiceCulling_Proximity(PlayerVoice speaker, PlayerVoice listener) Parameters speaker PlayerVoice listener PlayerVoice Returns bool handleRelayVoiceCulling_RadioFrequency(PlayerVoice, PlayerVoice) Default culling handler when speaking over walkie-talkie. public static bool handleRelayVoiceCulling_RadioFrequency(PlayerVoice speaker, PlayerVoice listener) Parameters speaker PlayerVoice listener PlayerVoice Returns bool Events onRelayVoice Only used by plugins. Called on server to allow plugins to override the default area and walkie-talkie voice channels. public static event PlayerVoice.RelayVoiceHandler onRelayVoice Event Type PlayerVoice.RelayVoiceHandler onTalkingChanged Broadcasts after isTalking changes. public event Talked onTalkingChanged Event Type Talked"
  },
  "api/SDG.Unturned.PlayerVoice_NetMethods.html": {
    "href": "api/SDG.Unturned.PlayerVoice_NetMethods.html",
    "title": "Class PlayerVoice_NetMethods | Unturned Analyse Doc",
    "keywords": "Class PlayerVoice_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(PlayerVoice))] public static class PlayerVoice_NetMethods Inheritance object PlayerVoice_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePermissions_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePermissions\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePermissions_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePermissions_Write(NetPakWriter, bool, bool) [NetInvokableGeneratedMethod(\"ReceivePermissions\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePermissions_Write(NetPakWriter writer, bool allowTalkingWhileDead, bool customAllowTalking) Parameters writer NetPakWriter allowTalkingWhileDead bool customAllowTalking bool ReceivePlayVoiceChat_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayVoiceChat\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayVoiceChat_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVoiceChatRelay_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVoiceChatRelay\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVoiceChatRelay_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext"
  },
  "api/SDG.Unturned.PlayerWorkzone.html": {
    "href": "api/SDG.Unturned.PlayerWorkzone.html",
    "title": "Class PlayerWorkzone | Unturned Analyse Doc",
    "keywords": "Class PlayerWorkzone Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerWorkzone : PlayerCaller Inheritance object SteamCaller PlayerCaller PlayerWorkzone Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors PlayerWorkzone() public PlayerWorkzone() Fields onDragStarted public DragStarted onDragStarted Field Value DragStarted onDragStopped public DragStopped onDragStopped Field Value DragStopped snapRotation public float snapRotation Field Value float snapTransform public float snapTransform Field Value float Properties dragCoordinate public EDragCoordinate dragCoordinate { get; set; } Property Value EDragCoordinate dragMode public EDragMode dragMode { get; set; } Property Value EDragMode isBuilding public bool isBuilding { get; set; } Property Value bool Methods SubmitTransformsToServer() public void SubmitTransformsToServer() addSelection(Transform) public void addSelection(Transform select) Parameters select Transform applySelection() [Obsolete(\"Renamed to SubmitTransformsToServer\")] public void applySelection() containsSelection(Transform) public bool containsSelection(Transform select) Parameters select Transform Returns bool pointSelection() [Obsolete(\"No longer necessary\")] public void pointSelection() removeSelection(Transform) public void removeSelection(Transform select) Parameters select Transform"
  },
  "api/SDG.Unturned.PlayerWorkzoneUI.html": {
    "href": "api/SDG.Unturned.PlayerWorkzoneUI.html",
    "title": "Class PlayerWorkzoneUI | Unturned Analyse Doc",
    "keywords": "Class PlayerWorkzoneUI Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayerWorkzoneUI Inheritance object PlayerWorkzoneUI Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayerWorkzoneUI() public PlayerWorkzoneUI() Fields active public static bool active Field Value bool coordinateButton public static SleekButtonState coordinateButton Field Value SleekButtonState Methods close() public static void close() open() public static void open()"
  },
  "api/SDG.Unturned.Player_NetMethods.html": {
    "href": "api/SDG.Unturned.Player_NetMethods.html",
    "title": "Class Player_NetMethods | Unturned Analyse Doc",
    "keywords": "Class Player_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(Player))] public static class Player_NetMethods Inheritance object Player_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAchievementUnlocked_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAchievementUnlocked\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAchievementUnlocked_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveAchievementUnlocked_Write(NetPakWriter, string) [NetInvokableGeneratedMethod(\"ReceiveAchievementUnlocked\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAchievementUnlocked_Write(NetPakWriter writer, string id) Parameters writer NetPakWriter id string ReceiveAdminUsageFlags_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAdminUsageFlags\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAdminUsageFlags_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAdminUsageFlags_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveAdminUsageFlags\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAdminUsageFlags_Write(NetPakWriter writer, uint newFlagsBitmask) Parameters writer NetPakWriter newFlagsBitmask uint ReceiveBattlEyeLogsRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBattlEyeLogsRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBattlEyeLogsRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveBattlEyeLogsRequest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveBattlEyeLogsRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBattlEyeLogsRequest_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveBrowserRequest_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBrowserRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBrowserRequest_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveBrowserRequest_Write(NetPakWriter, string, string) [NetInvokableGeneratedMethod(\"ReceiveBrowserRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBrowserRequest_Write(NetPakWriter writer, string msg, string url) Parameters writer NetPakWriter msg string url string ReceiveHintMessage_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveHintMessage\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveHintMessage_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveHintMessage_Write(NetPakWriter, string, float) [NetInvokableGeneratedMethod(\"ReceiveHintMessage\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveHintMessage_Write(NetPakWriter writer, string message, float durationSeconds) Parameters writer NetPakWriter message string durationSeconds float ReceiveRelayToServer_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveRelayToServer\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveRelayToServer_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveRelayToServer_Write(NetPakWriter, uint, ushort, CSteamID, string, bool) [NetInvokableGeneratedMethod(\"ReceiveRelayToServer\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveRelayToServer_Write(NetPakWriter writer, uint ip, ushort port, CSteamID serverCode, string password, bool shouldShowMenu) Parameters writer NetPakWriter ip uint port ushort serverCode CSteamID password string shouldShowMenu bool ReceiveScreenshotDestination_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveScreenshotDestination\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveScreenshotDestination_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveScreenshotRelay_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveScreenshotRelay\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveScreenshotRelay_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSetPluginWidgetFlags_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSetPluginWidgetFlags\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSetPluginWidgetFlags_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSetPluginWidgetFlags_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveSetPluginWidgetFlags\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSetPluginWidgetFlags_Write(NetPakWriter writer, uint newFlags) Parameters writer NetPakWriter newFlags uint ReceiveStat_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveStat\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveStat_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveStat_Write(NetPakWriter, EPlayerStat) [NetInvokableGeneratedMethod(\"ReceiveStat\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveStat_Write(NetPakWriter writer, EPlayerStat stat) Parameters writer NetPakWriter stat EPlayerStat ReceiveTakeScreenshot_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTakeScreenshot\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTakeScreenshot_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTakeScreenshot_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveTakeScreenshot\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTakeScreenshot_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveTeleport_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTeleport\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTeleport_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTeleport_Write(NetPakWriter, Vector3, byte) [NetInvokableGeneratedMethod(\"ReceiveTeleport\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTeleport_Write(NetPakWriter writer, Vector3 position, byte angle) Parameters writer NetPakWriter position Vector3 angle byte ReceiveTerminalRelay_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTerminalRelay\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTerminalRelay_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTerminalRelay_Write(NetPakWriter, string) [NetInvokableGeneratedMethod(\"ReceiveTerminalRelay\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTerminalRelay_Write(NetPakWriter writer, string internalMessage) Parameters writer NetPakWriter internalMessage string ReceiveUIMessage_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUIMessage\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUIMessage_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveUIMessage_Write(NetPakWriter, EPlayerMessage) [NetInvokableGeneratedMethod(\"ReceiveUIMessage\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUIMessage_Write(NetPakWriter writer, EPlayerMessage message) Parameters writer NetPakWriter message EPlayerMessage"
  },
  "api/SDG.Unturned.PlayersConfigData.html": {
    "href": "api/SDG.Unturned.PlayersConfigData.html",
    "title": "Class PlayersConfigData | Unturned Analyse Doc",
    "keywords": "Class PlayersConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PlayersConfigData Inheritance object PlayersConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlayersConfigData(EGameMode) public PlayersConfigData(EGameMode mode) Parameters mode EGameMode Fields Allow_Instakill_Headshots public bool Allow_Instakill_Headshots Field Value bool Allow_Per_Character_Saves Should each character slot have separate savedata? public bool Allow_Per_Character_Saves Field Value bool Armor_Multiplier public float Armor_Multiplier Field Value float Bleed_Damage_Ticks public uint Bleed_Damage_Ticks Field Value uint Bleed_Regen_Ticks public uint Bleed_Regen_Ticks Field Value uint Can_Break_Legs public bool Can_Break_Legs Field Value bool Can_Fix_Legs public bool Can_Fix_Legs Field Value bool Can_Hurt_Legs public bool Can_Hurt_Legs Field Value bool Can_Start_Bleeding public bool Can_Start_Bleeding Field Value bool Can_Stop_Bleeding public bool Can_Stop_Bleeding Field Value bool Detect_Radius_Multiplier public float Detect_Radius_Multiplier Field Value float Enable_Terrain_Color_Kick If true, players will be kicked if their skin color is too similar to one of the level's terrain colors. public bool Enable_Terrain_Color_Kick Field Value bool Experience_Multiplier public float Experience_Multiplier Field Value float Food_Damage_Ticks public uint Food_Damage_Ticks Field Value uint Food_Default public uint Food_Default Field Value uint Food_Use_Ticks public uint Food_Use_Ticks Field Value uint Health_Default public uint Health_Default Field Value uint Health_Regen_Min_Food public uint Health_Regen_Min_Food Field Value uint Health_Regen_Min_Water public uint Health_Regen_Min_Water Field Value uint Health_Regen_Ticks public uint Health_Regen_Ticks Field Value uint Leg_Regen_Ticks public uint Leg_Regen_Ticks Field Value uint Lose_Clothes_PvE public bool Lose_Clothes_PvE Field Value bool Lose_Clothes_PvP public bool Lose_Clothes_PvP Field Value bool Lose_Experience_PvE [0, 1] percentage of experience points to retain after death. public float Lose_Experience_PvE Field Value float Lose_Experience_PvP [0, 1] percentage of experience points to retain after death. public float Lose_Experience_PvP Field Value float Lose_Items_PvE public float Lose_Items_PvE Field Value float Lose_Items_PvP public float Lose_Items_PvP Field Value float Lose_Skill_Levels_PvE Number of skill levels to remove after death. public uint Lose_Skill_Levels_PvE Field Value uint Lose_Skill_Levels_PvP Number of skill levels to remove after death. public uint Lose_Skill_Levels_PvP Field Value uint Lose_Skills_PvE [0, 1] percentage of skill levels to retain after death. public float Lose_Skills_PvE Field Value float Lose_Skills_PvP [0, 1] percentage of skill levels to retain after death. public float Lose_Skills_PvP Field Value float Lose_Weapons_PvE public bool Lose_Weapons_PvE Field Value bool Lose_Weapons_PvP public bool Lose_Weapons_PvP Field Value bool Ray_Aggressor_Distance public float Ray_Aggressor_Distance Field Value float Spawn_With_Max_Skills public bool Spawn_With_Max_Skills Field Value bool Spawn_With_Stamina_Skills public bool Spawn_With_Stamina_Skills Field Value bool Virus_Damage_Ticks public uint Virus_Damage_Ticks Field Value uint Virus_Default public uint Virus_Default Field Value uint Virus_Infect public uint Virus_Infect Field Value uint Virus_Use_Ticks public uint Virus_Use_Ticks Field Value uint Water_Damage_Ticks public uint Water_Damage_Ticks Field Value uint Water_Default public uint Water_Default Field Value uint Water_Use_Ticks public uint Water_Use_Ticks Field Value uint Methods InitSingleplayerDefaults() public void InitSingleplayerDefaults()"
  },
  "api/SDG.Unturned.PluginAdvertising.html": {
    "href": "api/SDG.Unturned.PluginAdvertising.html",
    "title": "Class PluginAdvertising | Unturned Analyse Doc",
    "keywords": "Class PluginAdvertising Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class PluginAdvertising Inheritance object PluginAdvertising Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Get() public static IPluginAdvertising Get() Returns IPluginAdvertising"
  },
  "api/SDG.Unturned.PluginButtonListener.html": {
    "href": "api/SDG.Unturned.PluginButtonListener.html",
    "title": "Class PluginButtonListener | Unturned Analyse Doc",
    "keywords": "Class PluginButtonListener Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PluginButtonListener : MonoBehaviour Inheritance object PluginButtonListener Constructors PluginButtonListener() public PluginButtonListener() Fields targetButton public Button targetButton Field Value Button Methods Start() protected void Start()"
  },
  "api/SDG.Unturned.PluginInputFieldListener.html": {
    "href": "api/SDG.Unturned.PluginInputFieldListener.html",
    "title": "Class PluginInputFieldListener | Unturned Analyse Doc",
    "keywords": "Class PluginInputFieldListener Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PluginInputFieldListener : MonoBehaviour Inheritance object PluginInputFieldListener Constructors PluginInputFieldListener() public PluginInputFieldListener() Fields targetInputField public InputField targetInputField Field Value InputField Methods Start() protected void Start()"
  },
  "api/SDG.Unturned.PluginKeyTickHandler.html": {
    "href": "api/SDG.Unturned.PluginKeyTickHandler.html",
    "title": "Delegate PluginKeyTickHandler | Unturned Analyse Doc",
    "keywords": "Delegate PluginKeyTickHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PluginKeyTickHandler(Player player, uint simulation, byte key, bool state) Parameters player Player simulation uint key byte state bool Constructors PluginKeyTickHandler(object, IntPtr) public PluginKeyTickHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, uint, byte, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, uint simulation, byte key, bool state, AsyncCallback callback, object @object) Parameters player Player simulation uint key byte state bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, uint, byte, bool) public virtual void Invoke(Player player, uint simulation, byte key, bool state) Parameters player Player simulation uint key byte state bool"
  },
  "api/SDG.Unturned.PoolReference.html": {
    "href": "api/SDG.Unturned.PoolReference.html",
    "title": "Class PoolReference | Unturned Analyse Doc",
    "keywords": "Class PoolReference Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PoolReference : MonoBehaviour Inheritance object PoolReference Constructors PoolReference() public PoolReference() Fields excludeFromDestroyAll Enabled for effects held by guns and sentries. public bool excludeFromDestroyAll Field Value bool inPool public bool inPool Field Value bool pool public GameObjectPool pool Field Value GameObjectPool Methods DestroyIntoPool(float) public void DestroyIntoPool(float t) Parameters t float"
  },
  "api/SDG.Unturned.PooledTransportConnectionList.html": {
    "href": "api/SDG.Unturned.PooledTransportConnectionList.html",
    "title": "Class PooledTransportConnectionList | Unturned Analyse Doc",
    "keywords": "Class PooledTransportConnectionList Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PooledTransportConnectionList : List<ITransportConnection>, IList<ITransportConnection>, ICollection<ITransportConnection>, IList, ICollection, IReadOnlyList<ITransportConnection>, IReadOnlyCollection<ITransportConnection>, IEnumerable<ITransportConnection>, IEnumerable Inheritance object List<ITransportConnection> PooledTransportConnectionList Implements IList<ITransportConnection> ICollection<ITransportConnection> IList ICollection IReadOnlyList<ITransportConnection> IReadOnlyCollection<ITransportConnection> IEnumerable<ITransportConnection> IEnumerable Inherited Members List<ITransportConnection>.Add(ITransportConnection) List<ITransportConnection>.AddRange(IEnumerable<ITransportConnection>) List<ITransportConnection>.AsReadOnly() List<ITransportConnection>.BinarySearch(int, int, ITransportConnection, IComparer<ITransportConnection>) List<ITransportConnection>.BinarySearch(ITransportConnection) List<ITransportConnection>.BinarySearch(ITransportConnection, IComparer<ITransportConnection>) List<ITransportConnection>.Clear() List<ITransportConnection>.Contains(ITransportConnection) List<ITransportConnection>.ConvertAll<TOutput>(Converter<ITransportConnection, TOutput>) List<ITransportConnection>.CopyTo(ITransportConnection[]) List<ITransportConnection>.CopyTo(int, ITransportConnection[], int, int) List<ITransportConnection>.CopyTo(ITransportConnection[], int) List<ITransportConnection>.Exists(Predicate<ITransportConnection>) List<ITransportConnection>.Find(Predicate<ITransportConnection>) List<ITransportConnection>.FindAll(Predicate<ITransportConnection>) List<ITransportConnection>.FindIndex(Predicate<ITransportConnection>) List<ITransportConnection>.FindIndex(int, Predicate<ITransportConnection>) List<ITransportConnection>.FindIndex(int, int, Predicate<ITransportConnection>) List<ITransportConnection>.FindLast(Predicate<ITransportConnection>) List<ITransportConnection>.FindLastIndex(Predicate<ITransportConnection>) List<ITransportConnection>.FindLastIndex(int, Predicate<ITransportConnection>) List<ITransportConnection>.FindLastIndex(int, int, Predicate<ITransportConnection>) List<ITransportConnection>.ForEach(Action<ITransportConnection>) List<ITransportConnection>.GetEnumerator() List<ITransportConnection>.GetRange(int, int) List<ITransportConnection>.IndexOf(ITransportConnection) List<ITransportConnection>.IndexOf(ITransportConnection, int) List<ITransportConnection>.IndexOf(ITransportConnection, int, int) List<ITransportConnection>.Insert(int, ITransportConnection) List<ITransportConnection>.InsertRange(int, IEnumerable<ITransportConnection>) List<ITransportConnection>.LastIndexOf(ITransportConnection) List<ITransportConnection>.LastIndexOf(ITransportConnection, int) List<ITransportConnection>.LastIndexOf(ITransportConnection, int, int) List<ITransportConnection>.Remove(ITransportConnection) List<ITransportConnection>.RemoveAll(Predicate<ITransportConnection>) List<ITransportConnection>.RemoveAt(int) List<ITransportConnection>.RemoveRange(int, int) List<ITransportConnection>.Reverse() List<ITransportConnection>.Reverse(int, int) List<ITransportConnection>.Sort() List<ITransportConnection>.Sort(IComparer<ITransportConnection>) List<ITransportConnection>.Sort(int, int, IComparer<ITransportConnection>) List<ITransportConnection>.Sort(Comparison<ITransportConnection>) List<ITransportConnection>.ToArray() List<ITransportConnection>.TrimExcess() List<ITransportConnection>.TrueForAll(Predicate<ITransportConnection>) List<ITransportConnection>.Capacity List<ITransportConnection>.Count List<ITransportConnection>.this[int] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/SDG.Unturned.PostLevelLoaded.html": {
    "href": "api/SDG.Unturned.PostLevelLoaded.html",
    "title": "Delegate PostLevelLoaded | Unturned Analyse Doc",
    "keywords": "Delegate PostLevelLoaded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PostLevelLoaded(int level) Parameters level int Constructors PostLevelLoaded(object, IntPtr) public PostLevelLoaded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int level, AsyncCallback callback, object @object) Parameters level int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int) public virtual void Invoke(int level) Parameters level int"
  },
  "api/SDG.Unturned.PowerTool.html": {
    "href": "api/SDG.Unturned.PowerTool.html",
    "title": "Class PowerTool | Unturned Analyse Doc",
    "keywords": "Class PowerTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PowerTool Inheritance object PowerTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PowerTool() public PowerTool() Fields MAX_POWER_RANGE public static readonly float MAX_POWER_RANGE Field Value float Methods checkFires(Vector3, float) public static bool checkFires(Vector3 point, float radius) Parameters point Vector3 radius float Returns bool checkGenerators(Vector3, float, ushort) public static List<InteractableGenerator> checkGenerators(Vector3 point, float radius, ushort plant) Parameters point Vector3 radius float plant ushort Returns List<InteractableGenerator> checkInteractables<T>(Vector3, float, List<T>) public static void checkInteractables<T>(Vector3 point, float radius, List<T> interactablesInRadius) where T : Interactable Parameters point Vector3 radius float interactablesInRadius List<T> Type Parameters T checkInteractables<T>(Vector3, float, ushort, List<T>) public static void checkInteractables<T>(Vector3 point, float radius, ushort plant, List<T> interactablesInRadius) where T : Interactable Parameters point Vector3 radius float plant ushort interactablesInRadius List<T> Type Parameters T checkPower(Vector3, float, ushort) public static List<InteractablePower> checkPower(Vector3 point, float radius, ushort plant) Parameters point Vector3 radius float plant ushort Returns List<InteractablePower>"
  },
  "api/SDG.Unturned.PreLevelLoaded.html": {
    "href": "api/SDG.Unturned.PreLevelLoaded.html",
    "title": "Delegate PreLevelLoaded | Unturned Analyse Doc",
    "keywords": "Delegate PreLevelLoaded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PreLevelLoaded(int level) Parameters level int Constructors PreLevelLoaded(object, IntPtr) public PreLevelLoaded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int level, AsyncCallback callback, object @object) Parameters level int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int) public virtual void Invoke(int level) Parameters level int"
  },
  "api/SDG.Unturned.PrePreLevelLoaded.html": {
    "href": "api/SDG.Unturned.PrePreLevelLoaded.html",
    "title": "Delegate PrePreLevelLoaded | Unturned Analyse Doc",
    "keywords": "Delegate PrePreLevelLoaded Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PrePreLevelLoaded(int level) Parameters level int Constructors PrePreLevelLoaded(object, IntPtr) public PrePreLevelLoaded(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int level, AsyncCallback callback, object @object) Parameters level int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int) public virtual void Invoke(int level) Parameters level int"
  },
  "api/SDG.Unturned.PreferenceData.html": {
    "href": "api/SDG.Unturned.PreferenceData.html",
    "title": "Class PreferenceData | Unturned Analyse Doc",
    "keywords": "Class PreferenceData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PreferenceData Inheritance object PreferenceData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PreferenceData() public PreferenceData() Fields Allow_Ctrl_Shift_Alt_Salvage public bool Allow_Ctrl_Shift_Alt_Salvage Field Value bool Audio public AudioPreferenceData Audio Field Value AudioPreferenceData Chat public ChatPreferenceData Chat Field Value ChatPreferenceData Graphics public GraphicsPreferenceData Graphics Field Value GraphicsPreferenceData Viewmodel public ViewmodelPreferenceData Viewmodel Field Value ViewmodelPreferenceData"
  },
  "api/SDG.Unturned.ProfanityFilter.html": {
    "href": "api/SDG.Unturned.ProfanityFilter.html",
    "title": "Class ProfanityFilter | Unturned Analyse Doc",
    "keywords": "Class ProfanityFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ProfanityFilter Inheritance object ProfanityFilter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ProfanityFilter() public ProfanityFilter() Fields shouldInitSteamTextFiltering public static CommandLineFlag shouldInitSteamTextFiltering Field Value CommandLineFlag Methods NaiveContainsHardcodedBannedWord(string) public static bool NaiveContainsHardcodedBannedWord(string message) Parameters message string Returns bool filterOutCurseWords(ref string, char) public static bool filterOutCurseWords(ref string text, char replacementChar = '#') Parameters text string replacementChar char Returns bool getCurseWords() public static string[] getCurseWords() Returns string[]"
  },
  "api/SDG.Unturned.PropellerModel.html": {
    "href": "api/SDG.Unturned.PropellerModel.html",
    "title": "Class PropellerModel | Unturned Analyse Doc",
    "keywords": "Class PropellerModel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PropellerModel Inheritance object PropellerModel Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PropellerModel() public PropellerModel() Fields baseLocationRotation transform's localRotation when the vehicle was instantiated. public Quaternion baseLocationRotation Field Value Quaternion bladeMaterial Material on Model_0, the low-speed actual blade. public Material bladeMaterial Field Value Material motionBlurMaterial Material on Model_1, the high-speed blurred outline. public Material motionBlurMaterial Field Value Material transform public Transform transform Field Value Transform"
  },
  "api/SDG.Unturned.Provider.BackendRealtimeAvailableHandler.html": {
    "href": "api/SDG.Unturned.Provider.BackendRealtimeAvailableHandler.html",
    "title": "Delegate Provider.BackendRealtimeAvailableHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.BackendRealtimeAvailableHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.BackendRealtimeAvailableHandler() Constructors BackendRealtimeAvailableHandler(object, IntPtr) public BackendRealtimeAvailableHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Provider.BattlEyeKickCallback.html": {
    "href": "api/SDG.Unturned.Provider.BattlEyeKickCallback.html",
    "title": "Delegate Provider.BattlEyeKickCallback | Unturned Analyse Doc",
    "keywords": "Delegate Provider.BattlEyeKickCallback Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.BattlEyeKickCallback(SteamPlayer client, string reason) Parameters client SteamPlayer reason string Constructors BattlEyeKickCallback(object, IntPtr) public BattlEyeKickCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer client, string reason, AsyncCallback callback, object @object) Parameters client SteamPlayer reason string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SteamPlayer, string) public virtual void Invoke(SteamPlayer client, string reason) Parameters client SteamPlayer reason string"
  },
  "api/SDG.Unturned.Provider.CheckBanStatusHandler.html": {
    "href": "api/SDG.Unturned.Provider.CheckBanStatusHandler.html",
    "title": "Delegate Provider.CheckBanStatusHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.CheckBanStatusHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.CheckBanStatusHandler(CSteamID steamID, uint remoteIP, ref bool isBanned, ref string banReason, ref uint banRemainingDuration) Parameters steamID CSteamID remoteIP uint isBanned bool banReason string banRemainingDuration uint Constructors CheckBanStatusHandler(object, IntPtr) public CheckBanStatusHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, uint, ref bool, ref string, ref uint, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID steamID, uint remoteIP, ref bool isBanned, ref string banReason, ref uint banRemainingDuration, AsyncCallback callback, object @object) Parameters steamID CSteamID remoteIP uint isBanned bool banReason string banRemainingDuration uint callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref string, ref uint, IAsyncResult) public virtual void EndInvoke(ref bool isBanned, ref string banReason, ref uint banRemainingDuration, IAsyncResult result) Parameters isBanned bool banReason string banRemainingDuration uint result IAsyncResult Invoke(CSteamID, uint, ref bool, ref string, ref uint) public virtual void Invoke(CSteamID steamID, uint remoteIP, ref bool isBanned, ref string banReason, ref uint banRemainingDuration) Parameters steamID CSteamID remoteIP uint isBanned bool banReason string banRemainingDuration uint"
  },
  "api/SDG.Unturned.Provider.CheckBanStatusWithHWIDHandler.html": {
    "href": "api/SDG.Unturned.Provider.CheckBanStatusWithHWIDHandler.html",
    "title": "Delegate Provider.CheckBanStatusWithHWIDHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.CheckBanStatusWithHWIDHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.CheckBanStatusWithHWIDHandler(SteamPlayerID playerID, uint remoteIP, ref bool isBanned, ref string banReason, ref uint banRemainingDuration) Parameters playerID SteamPlayerID remoteIP uint isBanned bool banReason string banRemainingDuration uint Constructors CheckBanStatusWithHWIDHandler(object, IntPtr) public CheckBanStatusWithHWIDHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayerID, uint, ref bool, ref string, ref uint, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayerID playerID, uint remoteIP, ref bool isBanned, ref string banReason, ref uint banRemainingDuration, AsyncCallback callback, object @object) Parameters playerID SteamPlayerID remoteIP uint isBanned bool banReason string banRemainingDuration uint callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref string, ref uint, IAsyncResult) public virtual void EndInvoke(ref bool isBanned, ref string banReason, ref uint banRemainingDuration, IAsyncResult result) Parameters isBanned bool banReason string banRemainingDuration uint result IAsyncResult Invoke(SteamPlayerID, uint, ref bool, ref string, ref uint) public virtual void Invoke(SteamPlayerID playerID, uint remoteIP, ref bool isBanned, ref string banReason, ref uint banRemainingDuration) Parameters playerID SteamPlayerID remoteIP uint isBanned bool banReason string banRemainingDuration uint"
  },
  "api/SDG.Unturned.Provider.CheckValid.html": {
    "href": "api/SDG.Unturned.Provider.CheckValid.html",
    "title": "Delegate Provider.CheckValid | Unturned Analyse Doc",
    "keywords": "Delegate Provider.CheckValid Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete] public delegate void Provider.CheckValid(ValidateAuthTicketResponse_t callback, ref bool isValid) Parameters callback ValidateAuthTicketResponse_t isValid bool Constructors CheckValid(object, IntPtr) public CheckValid(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ValidateAuthTicketResponse_t, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ValidateAuthTicketResponse_t callback, ref bool isValid, AsyncCallback __callback, object @object) Parameters callback ValidateAuthTicketResponse_t isValid bool __callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool isValid, IAsyncResult result) Parameters isValid bool result IAsyncResult Invoke(ValidateAuthTicketResponse_t, ref bool) public virtual void Invoke(ValidateAuthTicketResponse_t callback, ref bool isValid) Parameters callback ValidateAuthTicketResponse_t isValid bool"
  },
  "api/SDG.Unturned.Provider.CheckValidWithExplanation.html": {
    "href": "api/SDG.Unturned.Provider.CheckValidWithExplanation.html",
    "title": "Delegate Provider.CheckValidWithExplanation | Unturned Analyse Doc",
    "keywords": "Delegate Provider.CheckValidWithExplanation Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.CheckValidWithExplanation(ValidateAuthTicketResponse_t callback, ref bool isValid, ref string explanation) Parameters callback ValidateAuthTicketResponse_t isValid bool explanation string Constructors CheckValidWithExplanation(object, IntPtr) public CheckValidWithExplanation(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ValidateAuthTicketResponse_t, ref bool, ref string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ValidateAuthTicketResponse_t callback, ref bool isValid, ref string explanation, AsyncCallback __callback, object @object) Parameters callback ValidateAuthTicketResponse_t isValid bool explanation string __callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref string, IAsyncResult) public virtual void EndInvoke(ref bool isValid, ref string explanation, IAsyncResult result) Parameters isValid bool explanation string result IAsyncResult Invoke(ValidateAuthTicketResponse_t, ref bool, ref string) public virtual void Invoke(ValidateAuthTicketResponse_t callback, ref bool isValid, ref string explanation) Parameters callback ValidateAuthTicketResponse_t isValid bool explanation string"
  },
  "api/SDG.Unturned.Provider.ClientConnected.html": {
    "href": "api/SDG.Unturned.Provider.ClientConnected.html",
    "title": "Delegate Provider.ClientConnected | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ClientConnected Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.ClientConnected() Constructors ClientConnected(object, IntPtr) public ClientConnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Provider.ClientDisconnected.html": {
    "href": "api/SDG.Unturned.Provider.ClientDisconnected.html",
    "title": "Delegate Provider.ClientDisconnected | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ClientDisconnected Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.ClientDisconnected() Constructors ClientDisconnected(object, IntPtr) public ClientDisconnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Provider.CommenceShutdownHandler.html": {
    "href": "api/SDG.Unturned.Provider.CommenceShutdownHandler.html",
    "title": "Delegate Provider.CommenceShutdownHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.CommenceShutdownHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.CommenceShutdownHandler() Constructors CommenceShutdownHandler(object, IntPtr) public CommenceShutdownHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Provider.EnemyConnected.html": {
    "href": "api/SDG.Unturned.Provider.EnemyConnected.html",
    "title": "Delegate Provider.EnemyConnected | Unturned Analyse Doc",
    "keywords": "Delegate Provider.EnemyConnected Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.EnemyConnected(SteamPlayer player) Parameters player SteamPlayer Constructors EnemyConnected(object, IntPtr) public EnemyConnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer player, AsyncCallback callback, object @object) Parameters player SteamPlayer callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SteamPlayer) public virtual void Invoke(SteamPlayer player) Parameters player SteamPlayer"
  },
  "api/SDG.Unturned.Provider.EnemyDisconnected.html": {
    "href": "api/SDG.Unturned.Provider.EnemyDisconnected.html",
    "title": "Delegate Provider.EnemyDisconnected | Unturned Analyse Doc",
    "keywords": "Delegate Provider.EnemyDisconnected Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.EnemyDisconnected(SteamPlayer player) Parameters player SteamPlayer Constructors EnemyDisconnected(object, IntPtr) public EnemyDisconnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer player, AsyncCallback callback, object @object) Parameters player SteamPlayer callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SteamPlayer) public virtual void Invoke(SteamPlayer player) Parameters player SteamPlayer"
  },
  "api/SDG.Unturned.Provider.IconQueryCallback.html": {
    "href": "api/SDG.Unturned.Provider.IconQueryCallback.html",
    "title": "Delegate Provider.IconQueryCallback | Unturned Analyse Doc",
    "keywords": "Delegate Provider.IconQueryCallback Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.IconQueryCallback(Texture2D icon, bool responsibleForDestroy) Parameters icon Texture2D responsibleForDestroy bool Constructors IconQueryCallback(object, IntPtr) public IconQueryCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Texture2D, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Texture2D icon, bool responsibleForDestroy, AsyncCallback callback, object @object) Parameters icon Texture2D responsibleForDestroy bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Texture2D, bool) public virtual void Invoke(Texture2D icon, bool responsibleForDestroy) Parameters icon Texture2D responsibleForDestroy bool"
  },
  "api/SDG.Unturned.Provider.IconQueryParams.html": {
    "href": "api/SDG.Unturned.Provider.IconQueryParams.html",
    "title": "Struct Provider.IconQueryParams | Unturned Analyse Doc",
    "keywords": "Struct Provider.IconQueryParams Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct Provider.IconQueryParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors IconQueryParams(string, IconQueryCallback, bool) public IconQueryParams(string url, Provider.IconQueryCallback callback, bool shouldCache = true) Parameters url string callback Provider.IconQueryCallback shouldCache bool Fields callback public Provider.IconQueryCallback callback Field Value Provider.IconQueryCallback shouldCache public bool shouldCache Field Value bool url public string url Field Value string"
  },
  "api/SDG.Unturned.Provider.LoginSpawningHandler.html": {
    "href": "api/SDG.Unturned.Provider.LoginSpawningHandler.html",
    "title": "Delegate Provider.LoginSpawningHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.LoginSpawningHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.LoginSpawningHandler(SteamPlayerID playerID, ref Vector3 point, ref float yaw, ref EPlayerStance initialStance, ref bool needsNewSpawnpoint) Parameters playerID SteamPlayerID point Vector3 yaw float initialStance EPlayerStance needsNewSpawnpoint bool Constructors LoginSpawningHandler(object, IntPtr) public LoginSpawningHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayerID, ref Vector3, ref float, ref EPlayerStance, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayerID playerID, ref Vector3 point, ref float yaw, ref EPlayerStance initialStance, ref bool needsNewSpawnpoint, AsyncCallback callback, object @object) Parameters playerID SteamPlayerID point Vector3 yaw float initialStance EPlayerStance needsNewSpawnpoint bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref float, ref EPlayerStance, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 point, ref float yaw, ref EPlayerStance initialStance, ref bool needsNewSpawnpoint, IAsyncResult result) Parameters point Vector3 yaw float initialStance EPlayerStance needsNewSpawnpoint bool result IAsyncResult Invoke(SteamPlayerID, ref Vector3, ref float, ref EPlayerStance, ref bool) public virtual void Invoke(SteamPlayerID playerID, ref Vector3 point, ref float yaw, ref EPlayerStance initialStance, ref bool needsNewSpawnpoint) Parameters playerID SteamPlayerID point Vector3 yaw float initialStance EPlayerStance needsNewSpawnpoint bool"
  },
  "api/SDG.Unturned.Provider.QueuePositionUpdated.html": {
    "href": "api/SDG.Unturned.Provider.QueuePositionUpdated.html",
    "title": "Delegate Provider.QueuePositionUpdated | Unturned Analyse Doc",
    "keywords": "Delegate Provider.QueuePositionUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.QueuePositionUpdated() Constructors QueuePositionUpdated(object, IntPtr) public QueuePositionUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Provider.RejectingPlayerCallback.html": {
    "href": "api/SDG.Unturned.Provider.RejectingPlayerCallback.html",
    "title": "Delegate Provider.RejectingPlayerCallback | Unturned Analyse Doc",
    "keywords": "Delegate Provider.RejectingPlayerCallback Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.RejectingPlayerCallback(CSteamID steamID, ESteamRejection rejection, string explanation) Parameters steamID CSteamID rejection ESteamRejection explanation string Constructors RejectingPlayerCallback(object, IntPtr) public RejectingPlayerCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, ESteamRejection, string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID steamID, ESteamRejection rejection, string explanation, AsyncCallback callback, object @object) Parameters steamID CSteamID rejection ESteamRejection explanation string callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID, ESteamRejection, string) public virtual void Invoke(CSteamID steamID, ESteamRejection rejection, string explanation) Parameters steamID CSteamID rejection ESteamRejection explanation string"
  },
  "api/SDG.Unturned.Provider.RequestBanPlayerHandler.html": {
    "href": "api/SDG.Unturned.Provider.RequestBanPlayerHandler.html",
    "title": "Delegate Provider.RequestBanPlayerHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.RequestBanPlayerHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.RequestBanPlayerHandler(CSteamID instigator, CSteamID playerToBan, uint ipToBan, ref string reason, ref uint duration, ref bool shouldVanillaBan) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint reason string duration uint shouldVanillaBan bool Constructors RequestBanPlayerHandler(object, IntPtr) public RequestBanPlayerHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, CSteamID, uint, ref string, ref uint, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigator, CSteamID playerToBan, uint ipToBan, ref string reason, ref uint duration, ref bool shouldVanillaBan, AsyncCallback callback, object @object) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint reason string duration uint shouldVanillaBan bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref string, ref uint, ref bool, IAsyncResult) public virtual void EndInvoke(ref string reason, ref uint duration, ref bool shouldVanillaBan, IAsyncResult result) Parameters reason string duration uint shouldVanillaBan bool result IAsyncResult Invoke(CSteamID, CSteamID, uint, ref string, ref uint, ref bool) public virtual void Invoke(CSteamID instigator, CSteamID playerToBan, uint ipToBan, ref string reason, ref uint duration, ref bool shouldVanillaBan) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint reason string duration uint shouldVanillaBan bool"
  },
  "api/SDG.Unturned.Provider.RequestBanPlayerHandlerV2.html": {
    "href": "api/SDG.Unturned.Provider.RequestBanPlayerHandlerV2.html",
    "title": "Delegate Provider.RequestBanPlayerHandlerV2 | Unturned Analyse Doc",
    "keywords": "Delegate Provider.RequestBanPlayerHandlerV2 Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.RequestBanPlayerHandlerV2(CSteamID instigator, CSteamID playerToBan, uint ipToBan, IEnumerable<byte[]> hwidsToBan, ref string reason, ref uint duration, ref bool shouldVanillaBan) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint hwidsToBan IEnumerable<byte[]> reason string duration uint shouldVanillaBan bool Constructors RequestBanPlayerHandlerV2(object, IntPtr) public RequestBanPlayerHandlerV2(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, CSteamID, uint, IEnumerable<byte[]>, ref string, ref uint, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigator, CSteamID playerToBan, uint ipToBan, IEnumerable<byte[]> hwidsToBan, ref string reason, ref uint duration, ref bool shouldVanillaBan, AsyncCallback callback, object @object) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint hwidsToBan IEnumerable<byte[]> reason string duration uint shouldVanillaBan bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref string, ref uint, ref bool, IAsyncResult) public virtual void EndInvoke(ref string reason, ref uint duration, ref bool shouldVanillaBan, IAsyncResult result) Parameters reason string duration uint shouldVanillaBan bool result IAsyncResult Invoke(CSteamID, CSteamID, uint, IEnumerable<byte[]>, ref string, ref uint, ref bool) public virtual void Invoke(CSteamID instigator, CSteamID playerToBan, uint ipToBan, IEnumerable<byte[]> hwidsToBan, ref string reason, ref uint duration, ref bool shouldVanillaBan) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint hwidsToBan IEnumerable<byte[]> reason string duration uint shouldVanillaBan bool"
  },
  "api/SDG.Unturned.Provider.RequestUnbanPlayerHandler.html": {
    "href": "api/SDG.Unturned.Provider.RequestUnbanPlayerHandler.html",
    "title": "Delegate Provider.RequestUnbanPlayerHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.RequestUnbanPlayerHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.RequestUnbanPlayerHandler(CSteamID instigator, CSteamID playerToUnban, ref bool shouldVanillaUnban) Parameters instigator CSteamID playerToUnban CSteamID shouldVanillaUnban bool Constructors RequestUnbanPlayerHandler(object, IntPtr) public RequestUnbanPlayerHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, CSteamID, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigator, CSteamID playerToUnban, ref bool shouldVanillaUnban, AsyncCallback callback, object @object) Parameters instigator CSteamID playerToUnban CSteamID shouldVanillaUnban bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldVanillaUnban, IAsyncResult result) Parameters shouldVanillaUnban bool result IAsyncResult Invoke(CSteamID, CSteamID, ref bool) public virtual void Invoke(CSteamID instigator, CSteamID playerToUnban, ref bool shouldVanillaUnban) Parameters instigator CSteamID playerToUnban CSteamID shouldVanillaUnban bool"
  },
  "api/SDG.Unturned.Provider.ServerConnected.html": {
    "href": "api/SDG.Unturned.Provider.ServerConnected.html",
    "title": "Delegate Provider.ServerConnected | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ServerConnected Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.ServerConnected(CSteamID steamID) Parameters steamID CSteamID Constructors ServerConnected(object, IntPtr) public ServerConnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID steamID, AsyncCallback callback, object @object) Parameters steamID CSteamID callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID) public virtual void Invoke(CSteamID steamID) Parameters steamID CSteamID"
  },
  "api/SDG.Unturned.Provider.ServerDisconnected.html": {
    "href": "api/SDG.Unturned.Provider.ServerDisconnected.html",
    "title": "Delegate Provider.ServerDisconnected | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ServerDisconnected Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.ServerDisconnected(CSteamID steamID) Parameters steamID CSteamID Constructors ServerDisconnected(object, IntPtr) public ServerDisconnected(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID steamID, AsyncCallback callback, object @object) Parameters steamID CSteamID callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID) public virtual void Invoke(CSteamID steamID) Parameters steamID CSteamID"
  },
  "api/SDG.Unturned.Provider.ServerHosted.html": {
    "href": "api/SDG.Unturned.Provider.ServerHosted.html",
    "title": "Delegate Provider.ServerHosted | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ServerHosted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.ServerHosted() Constructors ServerHosted(object, IntPtr) public ServerHosted(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Provider.ServerReadingPacketHandler.html": {
    "href": "api/SDG.Unturned.Provider.ServerReadingPacketHandler.html",
    "title": "Delegate Provider.ServerReadingPacketHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ServerReadingPacketHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.ServerReadingPacketHandler(CSteamID remoteSteamId, byte[] payload, int offset, int size, int channel) Parameters remoteSteamId CSteamID payload byte[] offset int size int channel int Constructors ServerReadingPacketHandler(object, IntPtr) public ServerReadingPacketHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, byte[], int, int, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID remoteSteamId, byte[] payload, int offset, int size, int channel, AsyncCallback callback, object @object) Parameters remoteSteamId CSteamID payload byte[] offset int size int channel int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID, byte[], int, int, int) public virtual void Invoke(CSteamID remoteSteamId, byte[] payload, int offset, int size, int channel) Parameters remoteSteamId CSteamID payload byte[] offset int size int channel int"
  },
  "api/SDG.Unturned.Provider.ServerShutdown.html": {
    "href": "api/SDG.Unturned.Provider.ServerShutdown.html",
    "title": "Delegate Provider.ServerShutdown | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ServerShutdown Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Provider.ServerShutdown() Constructors ServerShutdown(object, IntPtr) public ServerShutdown(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.Provider.ServerWritingPacketHandler.html": {
    "href": "api/SDG.Unturned.Provider.ServerWritingPacketHandler.html",
    "title": "Delegate Provider.ServerWritingPacketHandler | Unturned Analyse Doc",
    "keywords": "Delegate Provider.ServerWritingPacketHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete] public delegate void Provider.ServerWritingPacketHandler(CSteamID remoteSteamId, ESteamPacket type, byte[] payload, int size, int channel) Parameters remoteSteamId CSteamID type ESteamPacket payload byte[] size int channel int Constructors ServerWritingPacketHandler(object, IntPtr) public ServerWritingPacketHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, ESteamPacket, byte[], int, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID remoteSteamId, ESteamPacket type, byte[] payload, int size, int channel, AsyncCallback callback, object @object) Parameters remoteSteamId CSteamID type ESteamPacket payload byte[] size int channel int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID, ESteamPacket, byte[], int, int) public virtual void Invoke(CSteamID remoteSteamId, ESteamPacket type, byte[] payload, int size, int channel) Parameters remoteSteamId CSteamID type ESteamPacket payload byte[] size int channel int"
  },
  "api/SDG.Unturned.Provider.html": {
    "href": "api/SDG.Unturned.Provider.html",
    "title": "Class Provider | Unturned Analyse Doc",
    "keywords": "Class Provider Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Provider : MonoBehaviour Inheritance object Provider Constructors Provider() public Provider() Fields APP_AUTHOR public static readonly string APP_AUTHOR Field Value string APP_ID public static readonly AppId_t APP_ID Field Value AppId_t APP_NAME public static readonly string APP_NAME Field Value string CLIENT_TIMEOUT public static readonly int CLIENT_TIMEOUT Field Value int EPSILON public static readonly float EPSILON Field Value float LERP public static readonly float LERP Field Value float PRO_ID public static readonly AppId_t PRO_ID Field Value AppId_t STEAM_DC public static readonly string STEAM_DC Field Value string STEAM_IC public static readonly string STEAM_IC Field Value string UPDATES public static readonly uint UPDATES Field Value uint UPDATE_DELAY public static readonly float UPDATE_DELAY Field Value float UPDATE_DISTANCE public static readonly float UPDATE_DISTANCE Field Value float UPDATE_TIME public static readonly float UPDATE_TIME Field Value float _connectionFailureInfo public static ESteamConnectionFailureInfo _connectionFailureInfo Field Value ESteamConnectionFailureInfo bindAddress Local address to bind listen socket to. Set by bind command. public static string bindAddress Field Value string cameraMode public static ECameraMode cameraMode Field Value ECameraMode debugTPS public static int debugTPS Field Value int debugUPS public static int debugUPS Field Value int filterName public static bool filterName Field Value bool gameMode public static GameMode gameMode Field Value GameMode hasCheats public static bool hasCheats Field Value bool hideAdmins public static bool hideAdmins Field Value bool ip Deprecated-ish IPv4 to bind listen socket to. Set by bind command. public static uint ip Field Value uint isGold public static bool isGold Field Value bool isLoadingInventory public static bool isLoadingInventory Field Value bool isLoadingUGC public static bool isLoadingUGC Field Value bool isPvP public static bool isPvP Field Value bool isWhitelisted public static bool isWhitelisted Field Value bool localization public static Local localization Field Value Local map public static string map Field Value string mode public static EGameMode mode Field Value EGameMode onBackendRealtimeAvailable Invoked after backend realtime becomes available. public static Provider.BackendRealtimeAvailableHandler onBackendRealtimeAvailable Field Value Provider.BackendRealtimeAvailableHandler onBanPlayerRequested [Obsolete(\"V2 provides list of HWIDs to ban\")] public static Provider.RequestBanPlayerHandler onBanPlayerRequested Field Value Provider.RequestBanPlayerHandler onBanPlayerRequestedV2 public static Provider.RequestBanPlayerHandlerV2 onBanPlayerRequestedV2 Field Value Provider.RequestBanPlayerHandlerV2 onCheckBanStatus [Obsolete] public static Provider.CheckBanStatusHandler onCheckBanStatus Field Value Provider.CheckBanStatusHandler onCheckBanStatusWithHWID public static Provider.CheckBanStatusWithHWIDHandler onCheckBanStatusWithHWID Field Value Provider.CheckBanStatusWithHWIDHandler onCheckValid [Obsolete(\"onCheckValidWithExplanation takes priority if bound\")] public static Provider.CheckValid onCheckValid Field Value Provider.CheckValid onCheckValidWithExplanation public static Provider.CheckValidWithExplanation onCheckValidWithExplanation Field Value Provider.CheckValidWithExplanation onClientConnected public static Provider.ClientConnected onClientConnected Field Value Provider.ClientConnected onClientDisconnected public static Provider.ClientDisconnected onClientDisconnected Field Value Provider.ClientDisconnected onEnemyConnected public static Provider.EnemyConnected onEnemyConnected Field Value Provider.EnemyConnected onEnemyDisconnected public static Provider.EnemyDisconnected onEnemyDisconnected Field Value Provider.EnemyDisconnected onLoginSpawning Called when determining spawnpoint during player login. public static Provider.LoginSpawningHandler onLoginSpawning Field Value Provider.LoginSpawningHandler onQueuePositionUpdated public static Provider.QueuePositionUpdated onQueuePositionUpdated Field Value Provider.QueuePositionUpdated onServerConnected public static Provider.ServerConnected onServerConnected Field Value Provider.ServerConnected onServerDisconnected public static Provider.ServerDisconnected onServerDisconnected Field Value Provider.ServerDisconnected onServerHosted public static Provider.ServerHosted onServerHosted Field Value Provider.ServerHosted onServerReadingPacket [Obsolete] public static Provider.ServerReadingPacketHandler onServerReadingPacket Field Value Provider.ServerReadingPacketHandler onServerShutdown public static Provider.ServerShutdown onServerShutdown Field Value Provider.ServerShutdown onServerWritingPacket [Obsolete] public static Provider.ServerWritingPacketHandler onServerWritingPacket Field Value Provider.ServerWritingPacketHandler onUnbanPlayerRequested public static Provider.RequestUnbanPlayerHandler onUnbanPlayerRequested Field Value Provider.RequestUnbanPlayerHandler pending public static List<SteamPending> pending Field Value List<SteamPending> port Steam query port. public static ushort port Field Value ushort queueSize public static byte queueSize Field Value byte Properties APP_VERSION public static string APP_VERSION { get; protected set; } Property Value string APP_VERSION_PACKED App version string packed into a 32-bit number for replication. public static uint APP_VERSION_PACKED { get; protected set; } Property Value uint CanBookmarkCurrentServer public static bool CanBookmarkCurrentServer { get; } Property Value bool CanFavoriteCurrentServer Steam's favorites list requires that we know the server's IPv4 address and port, so we can't favorite when joining by Steam ID. public static bool CanFavoriteCurrentServer { get; } Property Value bool CurrentServerAdvertisement Only used on client. Information about current game server retrieved through Steam's \"A2S\" query system. Available when joining using the Steam server list API (in-game server browser) or querying the Server's A2S port directly (connect by IP menu), but not when joining by Steam ID. public static SteamServerAdvertisement CurrentServerAdvertisement { get; } Property Value SteamServerAdvertisement CurrentServerConnectParameters public static ServerConnectParameters CurrentServerConnectParameters { get; } Property Value ServerConnectParameters IsCurrentServerBookmarked public static bool IsCurrentServerBookmarked { get; } Property Value bool backendRealtimeDate public static DateTime backendRealtimeDate { get; } Property Value DateTime backendRealtimeSeconds Number of seconds since January 1st, 1970 GMT as reported by backend servers. public static uint backendRealtimeSeconds { get; } Property Value uint bytesReceived public static uint bytesReceived { get; } Property Value uint bytesSent public static uint bytesSent { get; } Property Value uint channels [Obsolete] public static int channels { get; } Property Value int client public static CSteamID client { get; } Property Value CSteamID clientHash public static byte[] clientHash { get; } Property Value byte[] clientName public static string clientName { get; } Property Value string clients public static List<SteamPlayer> clients { get; } Property Value List<SteamPlayer> configData public static ConfigData configData { get; } Property Value ConfigData connectionFailureDuration public static uint connectionFailureDuration { get; } Property Value uint connectionFailureInfo public static ESteamConnectionFailureInfo connectionFailureInfo { get; set; } Property Value ESteamConnectionFailureInfo connectionFailureReason public static string connectionFailureReason { get; set; } Property Value string hasRoomForNewConnection Should the network transport layer accept incoming connections? If both the queue and connected slots are full then incoming connections are ignored. public static bool hasRoomForNewConnection { get; } Property Value bool isApplicationQuitting Has the onApplicationQuitting callback been invoked? public static bool isApplicationQuitting { get; } Property Value bool isBackendRealtimeAvailable Has the initial backend realtime been queried yet? Not available immediately on servers because SteamGameServerUtils cannot be used until the actual Steam instance is available. public static bool isBackendRealtimeAvailable { get; } Property Value bool isClient public static bool isClient { get; } Property Value bool isConnected public static bool isConnected { get; } Property Value bool isCurrentServerFavorited public static bool isCurrentServerFavorited { get; } Property Value bool isInitialized public static bool isInitialized { get; } Property Value bool isLoading public static bool isLoading { get; } Property Value bool isPro public static bool isPro { get; } Property Value bool isServer public static bool isServer { get; } Property Value bool language public static string language { get; } Property Value string localizationRoot Path to directory containing \"Editor\", \"Menu\", \"Player\", \"Curse_Words.txt\", etc files. public static string localizationRoot { get; } Property Value string maxPlayers public static byte maxPlayers { get; set; } Property Value byte modeConfigData public static ModeConfigData modeConfigData { get; } Property Value ModeConfigData packetsReceived public static uint packetsReceived { get; } Property Value uint packetsSent public static uint packetsSent { get; } Property Value uint path public static string path { get; } Property Value string ping public static float ping { get; } Property Value float players Exposed for Rocket transition to modules backwards compatibility. [Obsolete] public static List<SteamPlayer> players { get; } Property Value List<SteamPlayer> preferenceData public static PreferenceData preferenceData { get; } Property Value PreferenceData provider public static IProvider provider { get; protected set; } Property Value IProvider queuePosition public static byte queuePosition { get; } Property Value byte receivers public static List<SteamChannel> receivers { get; } Property Value List<SteamChannel> server public static CSteamID server { get; } Property Value CSteamID serverID public static string serverID { get; set; } Property Value string serverName public static string serverName { get; set; } Property Value string serverPassword public static string serverPassword { get; set; } Property Value string serverPasswordHash public static byte[] serverPasswordHash { get; } Property Value byte[] statusData public static StatusData statusData { get; } Property Value StatusData streamerNames public static List<string> streamerNames { get; } Property Value List<string> time public static uint time { get; set; } Property Value uint timeLastPacketWasReceivedFromServer public static float timeLastPacketWasReceivedFromServer { get; } Property Value float useConstNetEvents Should buffers used by plugin network events be read-only copies? public static bool useConstNetEvents { get; } Property Value bool user public static CSteamID user { get; } Property Value CSteamID Methods EnumerateClients() [Obsolete(\"Replaced by GatherClientConnections\")] public static IEnumerable<ITransportConnection> EnumerateClients() Returns IEnumerable<ITransportConnection> EnumerateClients_Predicate(Predicate<SteamPlayer>) [Obsolete(\"Replaced by GatherClientConnectionsMatchingPredicate\")] public static IEnumerable<ITransportConnection> EnumerateClients_Predicate(Predicate<SteamPlayer> predicate) Parameters predicate Predicate<SteamPlayer> Returns IEnumerable<ITransportConnection> EnumerateClients_Remote() [Obsolete(\"Replaced by GatherRemoteClientConnections\")] public static IEnumerable<ITransportConnection> EnumerateClients_Remote() Returns IEnumerable<ITransportConnection> EnumerateClients_RemotePredicate(Predicate<SteamPlayer>) [Obsolete(\"Replaced by GatherRemoteClientsMatchingPredicate\")] public static IEnumerable<ITransportConnection> EnumerateClients_RemotePredicate(Predicate<SteamPlayer> predicate) Parameters predicate Predicate<SteamPlayer> Returns IEnumerable<ITransportConnection> EnumerateClients_RemoteWithinSphere(Vector3, float) [Obsolete(\"Replaced by GatherRemoteClientConnectionsWithinSphere\")] public static IEnumerable<ITransportConnection> EnumerateClients_RemoteWithinSphere(Vector3 position, float radius) Parameters position Vector3 radius float Returns IEnumerable<ITransportConnection> EnumerateClients_WithinSphere(Vector3, float) [Obsolete(\"Replaced by GatherClientConnectionsWithinSphere\")] public static IEnumerable<ITransportConnection> EnumerateClients_WithinSphere(Vector3 position, float radius) Parameters position Vector3 radius float Returns IEnumerable<ITransportConnection> GatherClientConnections() public static PooledTransportConnectionList GatherClientConnections() Returns PooledTransportConnectionList GatherClientConnectionsMatchingPredicate(Predicate<SteamPlayer>) public static PooledTransportConnectionList GatherClientConnectionsMatchingPredicate(Predicate<SteamPlayer> predicate) Parameters predicate Predicate<SteamPlayer> Returns PooledTransportConnectionList GatherClientConnectionsWithinSphere(Vector3, float) public static PooledTransportConnectionList GatherClientConnectionsWithinSphere(Vector3 position, float radius) Parameters position Vector3 radius float Returns PooledTransportConnectionList GatherRemoteClientConnections() public static PooledTransportConnectionList GatherRemoteClientConnections() Returns PooledTransportConnectionList GatherRemoteClientConnectionsMatchingPredicate(Predicate<SteamPlayer>) public static PooledTransportConnectionList GatherRemoteClientConnectionsMatchingPredicate(Predicate<SteamPlayer> predicate) Parameters predicate Predicate<SteamPlayer> Returns PooledTransportConnectionList GatherRemoteClientConnectionsWithinSphere(Vector3, float) public static PooledTransportConnectionList GatherRemoteClientConnectionsWithinSphere(Vector3 position, float radius) Parameters position Vector3 radius float Returns PooledTransportConnectionList GetMonetizationTagAbbreviation(EServerMonetizationTag) public static string GetMonetizationTagAbbreviation(EServerMonetizationTag monetization) Parameters monetization EServerMonetizationTag Returns string GetServerConnectionPort() If hosting a server, get the game traffic port. public static ushort GetServerConnectionPort() Returns ushort GetServerIsFavorited(uint, ushort) Check whether a server is one of our favorites or not. public static bool GetServerIsFavorited(uint ip, ushort queryPort) Parameters ip uint queryPort ushort Returns bool LoadStatusData() Hackily exposed as an easy way for editor code to check the verison number. public static StatusData LoadStatusData() Returns StatusData QuitGame(string) public static void QuitGame(string reason) Parameters reason string RequestDisconnect(string) public static void RequestDisconnect(string reason) Parameters reason string RequestScreenshot() public static void RequestScreenshot() SetServerIsFavorited(uint, ushort, ushort, bool) Set whether a server is one of our favorites or not. public static void SetServerIsFavorited(uint ip, ushort connectionPort, ushort queryPort, bool newFavorited) Parameters ip uint connectionPort ushort queryPort ushort newFavorited bool ToggleCurrentServerBookmarked() Toggle whether we've bookmarked the server we're currently playing on. public static void ToggleCurrentServerBookmarked() accept(SteamPending) public static void accept(SteamPending player) Parameters player SteamPending accept(SteamPlayerID, bool, bool, byte, byte, byte, Color, Color, Color, bool, int, int, int, int, int, int, int, int[], string[], string[], EPlayerSkillset, string, CSteamID) [Obsolete(\"This should not have been public in the first place\")] public static void accept(SteamPlayerID playerID, bool isPro, bool isAdmin, byte face, byte hair, byte beard, Color skin, Color color, Color markerColor, bool hand, int shirtItem, int pantsItem, int hatItem, int backpackItem, int vestItem, int maskItem, int glassesItem, int[] skinItems, string[] skinTags, string[] skinDynamicProps, EPlayerSkillset skillset, string language, CSteamID lobbyID) Parameters playerID SteamPlayerID isPro bool isAdmin bool face byte hair byte beard byte skin Color color Color markerColor Color hand bool shirtItem int pantsItem int hatItem int backpackItem int vestItem int maskItem int glassesItem int skinItems int[] skinTags string[] skinDynamicProps string[] skillset EPlayerSkillset language string lobbyID CSteamID applyLevelModeConfigOverrides() public static void applyLevelModeConfigOverrides() awake() public void awake() ban(CSteamID, string, uint) public static void ban(CSteamID steamID, string reason, uint duration) Parameters steamID CSteamID reason string duration uint closeChannel(SteamChannel) public static void closeChannel(SteamChannel receiver) Parameters receiver SteamChannel connect(ServerConnectParameters, SteamServerAdvertisement, List<PublishedFileId_t>) Connect to server entry point on client. Requests workshop details for download prior to loading level. Once workshop is ready launch() is called. public static void connect(ServerConnectParameters parameters, SteamServerAdvertisement advertisement, List<PublishedFileId_t> expectedWorkshopItems) Parameters parameters ServerConnectParameters advertisement SteamServerAdvertisement expectedWorkshopItems List<PublishedFileId_t> destroyCachedIcon(string) public static void destroyCachedIcon(string url) Parameters url string disconnect() Client should call RequestDisconnect instead to ensure all disconnects have a logged reason. public static void disconnect() dismiss(CSteamID) Player left server by canceling their ticket, or we are disconnecting them without telling them. Does not send any packets to the disconnecting player. public static void dismiss(CSteamID steamID) Parameters steamID CSteamID findPendingPlayer(ITransportConnection) Find player in the queue associated with a client connection. public static SteamPending findPendingPlayer(ITransportConnection transportConnection) Parameters transportConnection ITransportConnection Returns SteamPending findPlayer(ITransportConnection) Find player associated with a client connection. public static SteamPlayer findPlayer(ITransportConnection transportConnection) Parameters transportConnection ITransportConnection Returns SteamPlayer findTransportConnection(CSteamID) Find net transport layer connection associated with a client steam id. This could be a pending player in the queue, or a fully connected player. public static ITransportConnection findTransportConnection(CSteamID steamId) Parameters steamId CSteamID Returns ITransportConnection findTransportConnectionSteamId(ITransportConnection) Find player steam id associated with connection, otherwise nil if not found. public static CSteamID findTransportConnectionSteamId(ITransportConnection transportConnection) Parameters transportConnection ITransportConnection Returns CSteamID getCameraModeTagAbbreviation(ECameraMode) public static string getCameraModeTagAbbreviation(ECameraMode cm) Parameters cm ECameraMode Returns string getModeTagAbbreviation(EGameMode) public static string getModeTagAbbreviation(EGameMode gm) Parameters gm EGameMode Returns string getServerWorkshopFileIDs() Only safe to use serverside. Get the list of workshop ids that a client needs to download when joining. public static List<ulong> getServerWorkshopFileIDs() Returns List<ulong> hasNetBufferChanged(byte[], byte[], int, int) public static bool hasNetBufferChanged(byte[] original, byte[] copy, int offset, int size) Parameters original byte[] copy byte[] offset int size int Returns bool host() public static void host() initAutoSubscribeMaps() In here because we want to call this very early in startup after initializing provider, but with plenty of time to hopefully install maps prior to reaching the main menu. public static void initAutoSubscribeMaps() isChunk(ESteamPacket) [Obsolete] public static bool isChunk(ESteamPacket packet) Parameters packet ESteamPacket Returns bool kick(CSteamID, string) public static void kick(CSteamID steamID, string reason) Parameters steamID CSteamID reason string launch() Multiplayer load level entry point on client. Called once workshop downloads are finished, or we know the server is not using workshop. Once level is loaded the connect packet is sent to the server. public static void launch() openChannel(SteamChannel) public static void openChannel(SteamChannel receiver) Parameters receiver SteamChannel openURL(string) Open URL in the steam overlay, or if disabled use the default browser instead. Warning: any third party url should be checked by WebUtils.ParseThirdPartyUrl. public static void openURL(string url) Parameters url string refreshIcon(IconQueryParams) public static void refreshIcon(Provider.IconQueryParams iconQueryParams) Parameters iconQueryParams Provider.IconQueryParams refuseGarbageConnection(ITransportConnection, string) public static void refuseGarbageConnection(ITransportConnection transportConnection, string reason) Parameters transportConnection ITransportConnection reason string refuseGarbageConnection(CSteamID, string) Close connection, and refuse all future connection attempts from a remote player. Used when garbage messages are received from hacked clients to avoid wasting time on them. public static void refuseGarbageConnection(CSteamID remoteId, string reason) Parameters remoteId CSteamID reason string registerServerUsingWorkshopFileId(ulong) Only safe to use serverside. Lets clients know that this workshop id is being used on the server, and that they need to download it when joining. public static void registerServerUsingWorkshopFileId(ulong id) Parameters id ulong reject(ITransportConnection, ESteamRejection) public static void reject(ITransportConnection transportConnection, ESteamRejection rejection) Parameters transportConnection ITransportConnection rejection ESteamRejection reject(ITransportConnection, ESteamRejection, string) public static void reject(ITransportConnection transportConnection, ESteamRejection rejection, string explanation) Parameters transportConnection ITransportConnection rejection ESteamRejection explanation string reject(CSteamID, ESteamRejection) public static void reject(CSteamID steamID, ESteamRejection rejection) Parameters steamID CSteamID rejection ESteamRejection reject(CSteamID, ESteamRejection, string) public static void reject(CSteamID steamID, ESteamRejection rejection, string explanation) Parameters steamID CSteamID rejection ESteamRejection explanation string requestBanPlayer(CSteamID, CSteamID, uint, IEnumerable<byte[]>, string, uint) public static bool requestBanPlayer(CSteamID instigator, CSteamID playerToBan, uint ipToBan, IEnumerable<byte[]> hwidsToBan, string reason, uint duration) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint hwidsToBan IEnumerable<byte[]> reason string duration uint Returns bool requestBanPlayer(CSteamID, CSteamID, uint, string, uint) [Obsolete(\"Now accepts list of HWIDs to ban\")] public static bool requestBanPlayer(CSteamID instigator, CSteamID playerToBan, uint ipToBan, string reason, uint duration) Parameters instigator CSteamID playerToBan CSteamID ipToBan uint reason string duration uint Returns bool requestUnbanPlayer(CSteamID, CSteamID) public static bool requestUnbanPlayer(CSteamID instigator, CSteamID playerToUnban) Parameters instigator CSteamID playerToUnban CSteamID Returns bool resetConfig() Called while running public static void resetConfig() resetConnectionFailure() public static void resetConnectionFailure() send(CSteamID, ESteamPacket, byte[], int, int) Primarily kept for backwards compatibility with plugins. Some RPCs that reply to sender also use this but should be tidied up. [Obsolete] public static void send(CSteamID steamID, ESteamPacket type, byte[] packet, int size, int channel) Parameters steamID CSteamID type ESteamPacket packet byte[] size int channel int sendGUIDTable(SteamPending) [Obsolete] public static void sendGUIDTable(SteamPending player) Parameters player SteamPending sendToClient(ITransportConnection, ESteamPacket, byte[], int) Send to a connected client. [Obsolete] public static void sendToClient(ITransportConnection transportConnection, ESteamPacket type, byte[] packet, int size) Parameters transportConnection ITransportConnection type ESteamPacket packet byte[] size int shouldNetIgnoreSteamId(CSteamID) Hacked-together initial implementation to refuse network messages from specific players. On PC some cheats send garbage packets in which case those clients should be blocked. public static bool shouldNetIgnoreSteamId(CSteamID id) Parameters id CSteamID Returns bool shutdown() public static void shutdown() shutdown(int) public static void shutdown(int timer) Parameters timer int shutdown(int, string) public static void shutdown(int timer, string explanation) Parameters timer int explanation string singleplayer(EGameMode, bool) public static void singleplayer(EGameMode singleplayerMode, bool singleplayerCheats) Parameters singleplayerMode EGameMode singleplayerCheats bool start() public void start() toggleCurrentServerFavorited() Toggle whether we've favorited the server we're currently playing on. public static void toggleCurrentServerFavorited() updateRichPresence() Call whenever something impacting rich presence changes for example loading a server or changing lobbies. public static void updateRichPresence() Events onBattlEyeKick Event for plugins when BattlEye wants to kick a player. public static event Provider.BattlEyeKickCallback onBattlEyeKick Event Type Provider.BattlEyeKickCallback onCommenceShutdown Event for plugins prior to kicking players during shutdown. public static event Provider.CommenceShutdownHandler onCommenceShutdown Event Type Provider.CommenceShutdownHandler onRejectingPlayer Event for plugins when rejecting a player. public static event Provider.RejectingPlayerCallback onRejectingPlayer Event Type Provider.RejectingPlayerCallback"
  },
  "api/SDG.Unturned.PurchaseNode.html": {
    "href": "api/SDG.Unturned.PurchaseNode.html",
    "title": "Class PurchaseNode | Unturned Analyse Doc",
    "keywords": "Class PurchaseNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class PurchaseNode : Node Inheritance object Node PurchaseNode Inherited Members Node._point Node._type Node._model Node.move(Vector3) Node.setEnabled(bool) Node.remove() Node.point Node.type Node.model object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PurchaseNode(Vector3) public PurchaseNode(Vector3 newPoint) Parameters newPoint Vector3 PurchaseNode(Vector3, float, ushort, uint) public PurchaseNode(Vector3 newPoint, float newRadius, ushort newID, uint newCost) Parameters newPoint Vector3 newRadius float newID ushort newCost uint Fields MAX_SIZE public static readonly float MAX_SIZE Field Value float MIN_SIZE public static readonly float MIN_SIZE Field Value float cost public uint cost Field Value uint id public ushort id Field Value ushort Properties radius This value is confusing because in the level editor it is the normalized radius, but in-game it is the square radius. public float radius { get; set; } Property Value float Methods CalculateNormalizedRadiusFromRadius(float) public static float CalculateNormalizedRadiusFromRadius(float radius) Parameters radius float Returns float CalculateRadiusFromNormalizedRadius(float) public static float CalculateRadiusFromNormalizedRadius(float normalizedRadius) Parameters normalizedRadius float Returns float"
  },
  "api/SDG.Unturned.PurchaseUpdated.html": {
    "href": "api/SDG.Unturned.PurchaseUpdated.html",
    "title": "Delegate PurchaseUpdated | Unturned Analyse Doc",
    "keywords": "Delegate PurchaseUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void PurchaseUpdated(HordePurchaseVolume newNode) Parameters newNode HordePurchaseVolume Constructors PurchaseUpdated(object, IntPtr) public PurchaseUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(HordePurchaseVolume, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(HordePurchaseVolume newNode, AsyncCallback callback, object @object) Parameters newNode HordePurchaseVolume callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(HordePurchaseVolume) public virtual void Invoke(HordePurchaseVolume newNode) Parameters newNode HordePurchaseVolume"
  },
  "api/SDG.Unturned.QuestAsset.html": {
    "href": "api/SDG.Unturned.QuestAsset.html",
    "title": "Class QuestAsset | Unturned Analyse Doc",
    "keywords": "Class QuestAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class QuestAsset : Asset, IAssetErrorContext Inheritance object Asset QuestAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors QuestAsset() public QuestAsset() Fields abandonmentRewardsList Rewards to grant when quest is removed without completing. Not granted when player finishes quest. protected NPCRewardsList abandonmentRewardsList Field Value NPCRewardsList rewardsList protected NPCRewardsList rewardsList Field Value NPCRewardsList Properties assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType conditions public INPCCondition[] conditions { get; protected set; } Property Value INPCCondition[] questDescription public string questDescription { get; protected set; } Property Value string questName public string questName { get; protected set; } Property Value string rewards public INPCReward[] rewards { get; } Property Value INPCReward[] Methods ApplyConditions(Player) public void ApplyConditions(Player player) Parameters player Player GrantAbandonmentRewards(Player) public void GrantAbandonmentRewards(Player player) Parameters player Player GrantRewards(Player) public void GrantRewards(Player player) Parameters player Player PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local applyConditions(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void applyConditions(Player player, bool shouldSend) Parameters player Player shouldSend bool areConditionsMet(Player) public bool areConditionsMet(Player player) Parameters player Player Returns bool grantRewards(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void grantRewards(Player player, bool shouldSend) Parameters player Player shouldSend bool"
  },
  "api/SDG.Unturned.QuestCompletedHandler.html": {
    "href": "api/SDG.Unturned.QuestCompletedHandler.html",
    "title": "Delegate QuestCompletedHandler | Unturned Analyse Doc",
    "keywords": "Delegate QuestCompletedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void QuestCompletedHandler(PlayerQuests sender, QuestAsset asset) Parameters sender PlayerQuests asset QuestAsset Constructors QuestCompletedHandler(object, IntPtr) public QuestCompletedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, QuestAsset, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests sender, QuestAsset asset, AsyncCallback callback, object @object) Parameters sender PlayerQuests asset QuestAsset callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests, QuestAsset) public virtual void Invoke(PlayerQuests sender, QuestAsset asset) Parameters sender PlayerQuests asset QuestAsset"
  },
  "api/SDG.Unturned.QueuedGroupExit.html": {
    "href": "api/SDG.Unturned.QueuedGroupExit.html",
    "title": "Class QueuedGroupExit | Unturned Analyse Doc",
    "keywords": "Class QueuedGroupExit Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class QueuedGroupExit Inheritance object QueuedGroupExit Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors QueuedGroupExit() public QueuedGroupExit() Fields groupId public CSteamID groupId Field Value CSteamID playerID public CSteamID playerID Field Value CSteamID remainingSeconds public float remainingSeconds Field Value float"
  },
  "api/SDG.Unturned.RadiationUpdated.html": {
    "href": "api/SDG.Unturned.RadiationUpdated.html",
    "title": "Delegate RadiationUpdated | Unturned Analyse Doc",
    "keywords": "Delegate RadiationUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RadiationUpdated(bool isRadiated) Parameters isRadiated bool Constructors RadiationUpdated(object, IntPtr) public RadiationUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isRadiated, AsyncCallback callback, object @object) Parameters isRadiated bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isRadiated) Parameters isRadiated bool"
  },
  "api/SDG.Unturned.RagdollTool.html": {
    "href": "api/SDG.Unturned.RagdollTool.html",
    "title": "Class RagdollTool | Unturned Analyse Doc",
    "keywords": "Class RagdollTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RagdollTool Inheritance object RagdollTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RagdollTool() public RagdollTool() Methods ragdollAnimal(Vector3, Quaternion, Transform, Vector3, ushort, ERagdollEffect) public static void ragdollAnimal(Vector3 point, Quaternion rotation, Transform skeleton, Vector3 ragdoll, ushort id, ERagdollEffect effect) Parameters point Vector3 rotation Quaternion skeleton Transform ragdoll Vector3 id ushort effect ERagdollEffect ragdollPlayer(Vector3, Quaternion, Transform, Vector3, PlayerClothing, ERagdollEffect) public static void ragdollPlayer(Vector3 point, Quaternion rotation, Transform skeleton, Vector3 ragdoll, PlayerClothing clothes, ERagdollEffect effect) Parameters point Vector3 rotation Quaternion skeleton Transform ragdoll Vector3 clothes PlayerClothing effect ERagdollEffect ragdollZombie(Vector3, Quaternion, Transform, Vector3, byte, byte, byte, byte, byte, ushort, ushort, bool, ERagdollEffect) public static Transform ragdollZombie(Vector3 point, Quaternion rotation, Transform skeleton, Vector3 ragdoll, byte type, byte shirt, byte pants, byte hat, byte gear, ushort hatID, ushort gearID, bool isMega, ERagdollEffect effect) Parameters point Vector3 rotation Quaternion skeleton Transform ragdoll Vector3 type byte shirt byte pants byte hat byte gear byte hatID ushort gearID ushort isMega bool effect ERagdollEffect Returns Transform"
  },
  "api/SDG.Unturned.Rain.html": {
    "href": "api/SDG.Unturned.Rain.html",
    "title": "Class Rain | Unturned Analyse Doc",
    "keywords": "Class Rain Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Rain : MonoBehaviour Inheritance object Rain Constructors Rain() public Rain() Fields Intensity public float Intensity Field Value float Puddle_Map public Texture2D Puddle_Map Field Value Texture2D Ripple_Map public Texture2D Ripple_Map Field Value Texture2D Water_Level public float Water_Level Field Value float"
  },
  "api/SDG.Unturned.RainUpdated.html": {
    "href": "api/SDG.Unturned.RainUpdated.html",
    "title": "Delegate RainUpdated | Unturned Analyse Doc",
    "keywords": "Delegate RainUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RainUpdated(ELightingRain rain) Parameters rain ELightingRain Constructors RainUpdated(object, IntPtr) public RainUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ELightingRain, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ELightingRain rain, AsyncCallback callback, object @object) Parameters rain ELightingRain callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ELightingRain) public virtual void Invoke(ELightingRain rain) Parameters rain ELightingRain"
  },
  "api/SDG.Unturned.RateLimitedAction.html": {
    "href": "api/SDG.Unturned.RateLimitedAction.html",
    "title": "Struct RateLimitedAction | Unturned Analyse Doc",
    "keywords": "Struct RateLimitedAction Namespace SDG.Unturned Assembly Assembly-CSharp.dll Note: new official code should be using per-method rate limit attribute. This is kept for backwards compatibility with plugins however. Timestamp for server-side rate limiting. public struct RateLimitedAction Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields performedRealtime Realtime this action was performed. public float performedRealtime Field Value float Properties realtimeSincePerformed Realtime since performedRealtime. public float realtimeSincePerformed { get; } Property Value float Methods hasIntervalPassed(float) public bool hasIntervalPassed(float interval) Parameters interval float Returns bool throttle(float) if(myRateLimit.throttle(1.0)) return; // less than 1s passed public bool throttle(float interval) Parameters interval float Returns bool"
  },
  "api/SDG.Unturned.RayMasks.html": {
    "href": "api/SDG.Unturned.RayMasks.html",
    "title": "Class RayMasks | Unturned Analyse Doc",
    "keywords": "Class RayMasks Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RayMasks Inheritance object RayMasks Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RayMasks() public RayMasks() Fields AGENT public const int AGENT = 16777216 Field Value int ALL public const int ALL = -1 Field Value int BARRICADE public const int BARRICADE = 134217728 Field Value int BARRICADE_INTERACT public static readonly int BARRICADE_INTERACT Field Value int BLOCK_BARRICADE public static readonly int BLOCK_BARRICADE Field Value int BLOCK_BARRICADE_INTERACT_LOS public static readonly int BLOCK_BARRICADE_INTERACT_LOS Field Value int BLOCK_BED_LOS public static readonly int BLOCK_BED_LOS Field Value int BLOCK_CHAR_BUILDABLE_OVERLAP public static readonly int BLOCK_CHAR_BUILDABLE_OVERLAP Field Value int BLOCK_CHAR_BUILDABLE_OVERLAP_NOT_ON_VEHICLE public static readonly int BLOCK_CHAR_BUILDABLE_OVERLAP_NOT_ON_VEHICLE Field Value int BLOCK_CHAR_HINGE_OVERLAP public static readonly int BLOCK_CHAR_HINGE_OVERLAP Field Value int BLOCK_CHAR_HINGE_OVERLAP_ON_VEHICLE public static readonly int BLOCK_CHAR_HINGE_OVERLAP_ON_VEHICLE Field Value int BLOCK_COLLISION public static readonly int BLOCK_COLLISION Field Value int BLOCK_DOOR_OPENING public static readonly int BLOCK_DOOR_OPENING Field Value int BLOCK_ENTRY Used to test whether player can enter a vehicle. Does not include resource layer because attached barricades are put on that layer. public static readonly int BLOCK_ENTRY Field Value int BLOCK_EXIT public static readonly int BLOCK_EXIT Field Value int BLOCK_EXIT_FIND_GROUND public static readonly int BLOCK_EXIT_FIND_GROUND Field Value int BLOCK_EXPLOSION public static readonly int BLOCK_EXPLOSION Field Value int BLOCK_EXPLOSION_PENETRATE_BUILDABLES public static readonly int BLOCK_EXPLOSION_PENETRATE_BUILDABLES Field Value int BLOCK_FRAME public static readonly int BLOCK_FRAME Field Value int BLOCK_GRASS public static readonly int BLOCK_GRASS Field Value int BLOCK_ITEM public static readonly int BLOCK_ITEM Field Value int BLOCK_KILLCAM public static readonly int BLOCK_KILLCAM Field Value int BLOCK_LADDER public static readonly int BLOCK_LADDER Field Value int BLOCK_LASER public static readonly int BLOCK_LASER Field Value int BLOCK_LEAN public static readonly int BLOCK_LEAN Field Value int BLOCK_NAVMESH public static readonly int BLOCK_NAVMESH Field Value int BLOCK_PICKUP public static readonly int BLOCK_PICKUP Field Value int BLOCK_PLAYERCAM public static readonly int BLOCK_PLAYERCAM Field Value int BLOCK_PLAYERCAM_1P public static readonly int BLOCK_PLAYERCAM_1P Field Value int BLOCK_RESOURCE public static readonly int BLOCK_RESOURCE Field Value int BLOCK_SENTRY public static readonly int BLOCK_SENTRY Field Value int BLOCK_STANCE Used to test whether player can fit in a space. Includes terrain because tested capsule could be slightly underground, and clip to prevent exploits at sky limit. public static readonly int BLOCK_STANCE Field Value int BLOCK_STRUCTURE [Obsolete] public static readonly int BLOCK_STRUCTURE Field Value int BLOCK_TIRE public static readonly int BLOCK_TIRE Field Value int BLOCK_TRAIN public static readonly int BLOCK_TRAIN Field Value int BLOCK_VEHICLE public static readonly int BLOCK_VEHICLE Field Value int BLOCK_VEHICLECAM Used for third-person camera in vehicle. Does not include resource layer because attached barricades are put on that layer. Barricades layer itself is included to prevent looking inside player bases. public static readonly int BLOCK_VEHICLECAM Field Value int BLOCK_VISION public static readonly int BLOCK_VISION Field Value int BLOCK_WIND public static readonly int BLOCK_WIND Field Value int BLOCK_WINDOW public static readonly int BLOCK_WINDOW Field Value int CHARACTER_CONTROLLER_MOVE Layer mask for CharacterController overlap test. public const int CHARACTER_CONTROLLER_MOVE = 406437888 Field Value int CHARACTER_CONTROLLER_MOVE_IGNORE_GROUND Layer mask for CharacterController overlap test while inside landscape hole volume. public const int CHARACTER_CONTROLLER_MOVE_IGNORE_GROUND = 405389312 Field Value int CHART public static readonly int CHART Field Value int CLIP public const int CLIP = 2097152 Field Value int CLOTHING_INTERACT public static readonly int CLOTHING_INTERACT Field Value int CORNERS_INTERACT public static readonly int CORNERS_INTERACT Field Value int DAMAGE_CLIENT public static readonly int DAMAGE_CLIENT Field Value int DAMAGE_PHYSICS public static readonly int DAMAGE_PHYSICS Field Value int DAMAGE_SERVER public static readonly int DAMAGE_SERVER Field Value int DAMAGE_ZOMBIE public static readonly int DAMAGE_ZOMBIE Field Value int DEBRIS public const int DEBRIS = 4096 Field Value int DEFAULT public const int DEFAULT = 1 Field Value int EDITOR_BUILDABLE public static readonly int EDITOR_BUILDABLE Field Value int EDITOR_INTERACT public static readonly int EDITOR_INTERACT Field Value int EDITOR_LOGIC public static readonly int EDITOR_LOGIC Field Value int EDITOR_VR public static readonly int EDITOR_VR Field Value int EDITOR_WORLD public static readonly int EDITOR_WORLD Field Value int EFFECT_SPLATTER 2023-02-02: adding more layers since splatter can be attached to them now. parent should only be set if that system also calls ClearAttachments, otherwise attachedEffects will leak memory. public const int EFFECT_SPLATTER = 471433216 Field Value int ENEMY public const int ENEMY = 1024 Field Value int ENTITY public const int ENTITY = 8388608 Field Value int ENVIRONMENT public const int ENVIRONMENT = 524288 Field Value int FOLIAGE_FOCUS public static readonly int FOLIAGE_FOCUS Field Value int GROUND public const int GROUND = 1048576 Field Value int GROUND2 public const int GROUND2 = -2147483648 Field Value int IGNORE_RAYCAST public const int IGNORE_RAYCAST = 4 Field Value int ITEM public const int ITEM = 8192 Field Value int LADDER public const int LADDER = 33554432 Field Value int LADDERS_INTERACT public static readonly int LADDERS_INTERACT Field Value int LADDER_INTERACT public static readonly int LADDER_INTERACT Field Value int LARGE public const int LARGE = 32768 Field Value int LIGHTNING Lightning strike raycasts from sky to ground using this layer mask. public const int LIGHTNING = 471449600 Field Value int LOGIC public const int LOGIC = 256 Field Value int MEDIUM public const int MEDIUM = 65536 Field Value int NAVMESH public const int NAVMESH = 4194304 Field Value int PLAYER public const int PLAYER = 512 Field Value int PLAYER_INTERACT public static readonly int PLAYER_INTERACT Field Value int POWER_INTERACT public static readonly int POWER_INTERACT Field Value int REFLECTION public static readonly int REFLECTION Field Value int RESOURCE public const int RESOURCE = 16384 Field Value int ROOFS_INTERACT public static readonly int ROOFS_INTERACT Field Value int SKY public const int SKY = 262144 Field Value int SLOTS_INTERACT public static readonly int SLOTS_INTERACT Field Value int SMALL public const int SMALL = 131072 Field Value int SPLATTER [Obsolete(\"Replaced by EFFECT_SPLATTER to make const\")] public static readonly int SPLATTER Field Value int STRUCTURE public const int STRUCTURE = 268435456 Field Value int STRUCTURE_INTERACT public static readonly int STRUCTURE_INTERACT Field Value int TIRE public const int TIRE = 536870912 Field Value int TRANSPARENT_FX public const int TRANSPARENT_FX = 2 Field Value int TRAP public const int TRAP = 1073741824 Field Value int UI public const int UI = 32 Field Value int VEHICLE public const int VEHICLE = 67108864 Field Value int VIEWMODEL public const int VIEWMODEL = 2048 Field Value int WALLS_INTERACT public static readonly int WALLS_INTERACT Field Value int WATER public const int WATER = 16 Field Value int WAYPOINT public static readonly int WAYPOINT Field Value int"
  },
  "api/SDG.Unturned.RaycastInfo.html": {
    "href": "api/SDG.Unturned.RaycastInfo.html",
    "title": "Class RaycastInfo | Unturned Analyse Doc",
    "keywords": "Class RaycastInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RaycastInfo Inheritance object RaycastInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RaycastInfo(RaycastHit) public RaycastInfo(RaycastHit hit) Parameters hit RaycastHit RaycastInfo(Transform) public RaycastInfo(Transform hit) Parameters hit Transform Fields animal public Animal animal Field Value Animal collider public Collider collider Field Value Collider direction public Vector3 direction Field Value Vector3 distance public float distance Field Value float limb public ELimb limb Field Value ELimb material [Obsolete] public EPhysicsMaterial material Field Value EPhysicsMaterial materialName public string materialName Field Value string normal public Vector3 normal Field Value Vector3 player public Player player Field Value Player point public Vector3 point Field Value Vector3 section public byte section Field Value byte transform public Transform transform Field Value Transform vehicle public InteractableVehicle vehicle Field Value InteractableVehicle zombie public Zombie zombie Field Value Zombie"
  },
  "api/SDG.Unturned.ReadWrite.html": {
    "href": "api/SDG.Unturned.ReadWrite.html",
    "title": "Class ReadWrite | Unturned Analyse Doc",
    "keywords": "Class ReadWrite Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ReadWrite Inheritance object ReadWrite Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ReadWrite() public ReadWrite() Fields PATH public static readonly string PATH Field Value string Properties SupportsOpeningFileBrowser public static bool SupportsOpeningFileBrowser { get; } Property Value bool Methods MoveIfExists(string, string) NOTE: From and to are both relative to PATH. public static void MoveIfExists(string sourceFileName, string destFileName) Parameters sourceFileName string destFileName string OpenFileBrowser(string) public static void OpenFileBrowser(string folderPath) Parameters folderPath string cloudFileDelete(string) public static void cloudFileDelete(string path) Parameters path string cloudFileExists(string) public static bool cloudFileExists(string path) Parameters path string Returns bool cloudFileRead(string) public static byte[] cloudFileRead(string path) Parameters path string Returns byte[] cloudFileWrite(string, byte[], int) public static void cloudFileWrite(string path, byte[] bytes, int size) Parameters path string bytes byte[] size int copyFile(string, string) public static void copyFile(string source, string destination) Parameters source string destination string createFolder(string) public static void createFolder(string path) Parameters path string createFolder(string, bool) public static void createFolder(string path, bool usePath) Parameters path string usePath bool createHidden(string) public static void createHidden(string path) Parameters path string createHidden(string, bool) public static void createHidden(string path, bool usePath) Parameters path string usePath bool deleteFile(string, bool) public static void deleteFile(string path, bool useCloud) Parameters path string useCloud bool deleteFile(string, bool, bool) public static void deleteFile(string path, bool useCloud, bool usePath) Parameters path string useCloud bool usePath bool deleteFolder(string) public static void deleteFolder(string path) Parameters path string deleteFolder(string, bool) public static void deleteFolder(string path, bool usePath) Parameters path string usePath bool deserializeJSON<T>(string, bool) public static T deserializeJSON<T>(string path, bool useCloud) Parameters path string useCloud bool Returns T Type Parameters T deserializeJSON<T>(string, bool, bool) public static T deserializeJSON<T>(string path, bool useCloud, bool usePath) Parameters path string useCloud bool usePath bool Returns T Type Parameters T deserializeXML<T>(string, bool) public static T deserializeXML<T>(string path, bool useCloud) Parameters path string useCloud bool Returns T Type Parameters T deserializeXML<T>(string, bool, bool) public static T deserializeXML<T>(string path, bool useCloud, bool usePath) Parameters path string useCloud bool usePath bool Returns T Type Parameters T fileExists(string, bool) public static bool fileExists(string path, bool useCloud) Parameters path string useCloud bool Returns bool fileExists(string, bool, bool) public static bool fileExists(string path, bool useCloud, bool usePath) Parameters path string useCloud bool usePath bool Returns bool fileName(string) public static string fileName(string path) Parameters path string Returns string folderExists(string) public static bool folderExists(string path) Parameters path string Returns bool folderExists(string, bool) public static bool folderExists(string path, bool usePath) Parameters path string usePath bool Returns bool folderFound(string) public static string folderFound(string path) Parameters path string Returns string folderFound(string, bool) public static string folderFound(string path, bool usePath) Parameters path string usePath bool Returns string folderName(string) public static string folderName(string path) Parameters path string Returns string folderPath(string) public static string folderPath(string path) Parameters path string Returns string getFiles(string) public static string[] getFiles(string path) Parameters path string Returns string[] getFiles(string, bool) public static string[] getFiles(string path, bool usePath) Parameters path string usePath bool Returns string[] getFolders(string) public static string[] getFolders(string path) Parameters path string Returns string[] getFolders(string, bool) public static string[] getFolders(string path, bool usePath) Parameters path string usePath bool Returns string[] hasDirectoryWritePermission(string) public static bool hasDirectoryWritePermission(string path) Parameters path string Returns bool moveFolder(string, string) public static void moveFolder(string origin, string target) Parameters origin string target string moveFolder(string, string, bool) public static void moveFolder(string origin, string target, bool usePath) Parameters origin string target string usePath bool populateJSON(string, object, bool) Deserialize JSON onto an existing object instance. public static void populateJSON(string path, object target, bool usePath = true) Parameters path string target object usePath bool readBlock(string, bool, bool, byte) public static Block readBlock(string path, bool useCloud, bool usePath, byte prefix) Parameters path string useCloud bool usePath bool prefix byte Returns Block readBlock(string, bool, byte) public static Block readBlock(string path, bool useCloud, byte prefix) Parameters path string useCloud bool prefix byte Returns Block readBytes(string, bool) public static byte[] readBytes(string path, bool useCloud) Parameters path string useCloud bool Returns byte[] readBytes(string, bool, bool) public static byte[] readBytes(string path, bool useCloud, bool usePath) Parameters path string useCloud bool usePath bool Returns byte[] readData() public static byte[] readData() Returns byte[] readData(string, bool) public static Data readData(string path, bool useCloud) Parameters path string useCloud bool Returns Data readData(string, bool, bool) public static Data readData(string path, bool useCloud, bool usePath) Parameters path string useCloud bool usePath bool Returns Data readTextureFromFile(string, EReadTextureFromFileMode) Read GUI texture from a .jpg or .png file. public static Texture2D readTextureFromFile(string absolutePath, EReadTextureFromFileMode mode = EReadTextureFromFileMode.UI) Parameters absolutePath string mode EReadTextureFromFileMode Returns Texture2D readTextureFromFile(string, bool, EReadTextureFromFileMode) Read GUI texture from a .jpg or .png file. public static Texture2D readTextureFromFile(string path, bool useBasePath, EReadTextureFromFileMode mode = EReadTextureFromFileMode.UI) Parameters path string useBasePath bool mode EReadTextureFromFileMode Returns Texture2D renameFile(string, string) public static void renameFile(string path_0, string path_1) Parameters path_0 string path_1 string serializeJSON<T>(string, bool, bool, T) public static void serializeJSON<T>(string path, bool useCloud, bool usePath, T instance) Parameters path string useCloud bool usePath bool instance T Type Parameters T serializeJSON<T>(string, bool, T) public static void serializeJSON<T>(string path, bool useCloud, T instance) Parameters path string useCloud bool instance T Type Parameters T serializeXML<T>(string, bool, bool, T) public static void serializeXML<T>(string path, bool useCloud, bool usePath, T instance) Parameters path string useCloud bool usePath bool instance T Type Parameters T serializeXML<T>(string, bool, T) public static void serializeXML<T>(string path, bool useCloud, T instance) Parameters path string useCloud bool instance T Type Parameters T writeBlock(string, bool, Block) public static void writeBlock(string path, bool useCloud, Block block) Parameters path string useCloud bool block Block writeBlock(string, bool, bool, Block) public static void writeBlock(string path, bool useCloud, bool usePath, Block block) Parameters path string useCloud bool usePath bool block Block writeBytes(string, bool, bool, byte[]) public static void writeBytes(string path, bool useCloud, bool usePath, byte[] bytes) Parameters path string useCloud bool usePath bool bytes byte[] writeBytes(string, bool, bool, byte[], int) public static void writeBytes(string path, bool useCloud, bool usePath, byte[] bytes, int size) Parameters path string useCloud bool usePath bool bytes byte[] size int writeBytes(string, bool, byte[]) public static void writeBytes(string path, bool useCloud, byte[] bytes) Parameters path string useCloud bool bytes byte[] writeBytes(string, bool, byte[], int) public static void writeBytes(string path, bool useCloud, byte[] bytes, int size) Parameters path string useCloud bool bytes byte[] size int writeData(string, bool, Data) public static void writeData(string path, bool useCloud, Data data) Parameters path string useCloud bool data Data writeData(string, bool, bool, Data) public static void writeData(string path, bool useCloud, bool usePath, Data data) Parameters path string useCloud bool usePath bool data Data"
  },
  "api/SDG.Unturned.ReceivedChatMessage.html": {
    "href": "api/SDG.Unturned.ReceivedChatMessage.html",
    "title": "Struct ReceivedChatMessage | Unturned Analyse Doc",
    "keywords": "Struct ReceivedChatMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll Created when a chat entry is received from the server for display in the UI. public struct ReceivedChatMessage Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors ReceivedChatMessage(SteamPlayer, string, EChatMode, Color, bool, string) public ReceivedChatMessage(SteamPlayer speaker, string iconURL, EChatMode newMode, Color newColor, bool newRich, string newContents) Parameters speaker SteamPlayer iconURL string newMode EChatMode newColor Color newRich bool newContents string Fields color Default font color to use unless overridden by rich text formatting. public Color color Field Value Color contents Text to display for this message. public string contents Field Value string iconURL Web address of a 32x32 .png to use rather than a platform avatar. Only used if not null/empty. public string iconURL Field Value string mode How the message was sent through global, local or group. Mostly deprecated because that status isn't formatted into texts anymore. public EChatMode mode Field Value EChatMode receivedTimestamp When the entry was locally received from the server. public float receivedTimestamp Field Value float speaker Player who sent the message, or null if it was a plugin broadcast. Used to retrieve player avatar. public SteamPlayer speaker Field Value SteamPlayer useRichTextFormatting Whether this entry should enable rich text formatting. False by default because players abuse font size and ugly colors. public bool useRichTextFormatting Field Value bool Properties age How many seconds ago this message was locally received from the server. public float age { get; } Property Value float"
  },
  "api/SDG.Unturned.RedirectorAsset.html": {
    "href": "api/SDG.Unturned.RedirectorAsset.html",
    "title": "Class RedirectorAsset | Unturned Analyse Doc",
    "keywords": "Class RedirectorAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Special asset type that isn't (shouldn't be) returned by asset Find methods. Instead, if found when resolving an asset legacy ID or GUID, Find is called again with the target specified by this asset. public class RedirectorAsset : Asset, IAssetErrorContext Inheritance object Asset RedirectorAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RedirectorAsset() public RedirectorAsset() Fields assetCategoryOverride protected EAssetType assetCategoryOverride Field Value EAssetType Properties TargetGuid public Guid TargetGuid { get; } Property Value Guid assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.RegionActivated.html": {
    "href": "api/SDG.Unturned.RegionActivated.html",
    "title": "Delegate RegionActivated | Unturned Analyse Doc",
    "keywords": "Delegate RegionActivated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RegionActivated(byte x, byte y) Parameters x byte y byte Constructors RegionActivated(object, IntPtr) public RegionActivated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte x, byte y, AsyncCallback callback, object @object) Parameters x byte y byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte) public virtual void Invoke(byte x, byte y) Parameters x byte y byte"
  },
  "api/SDG.Unturned.RegionBounds.html": {
    "href": "api/SDG.Unturned.RegionBounds.html",
    "title": "Struct RegionBounds | Unturned Analyse Doc",
    "keywords": "Struct RegionBounds Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct RegionBounds Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors RegionBounds(RegionCoord, RegionCoord) public RegionBounds(RegionCoord newMin, RegionCoord newMax) Parameters newMin RegionCoord newMax RegionCoord RegionBounds(Bounds) public RegionBounds(Bounds worldBounds) Parameters worldBounds Bounds Fields max public RegionCoord max Field Value RegionCoord min public RegionCoord min Field Value RegionCoord Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.RegionCoord.html": {
    "href": "api/SDG.Unturned.RegionCoord.html",
    "title": "Struct RegionCoord | Unturned Analyse Doc",
    "keywords": "Struct RegionCoord Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct RegionCoord : IFormattedFileReadable, IFormattedFileWritable, IEquatable<RegionCoord> Implements IFormattedFileReadable IFormattedFileWritable IEquatable<RegionCoord> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors RegionCoord(byte, byte) public RegionCoord(byte new_x, byte new_y) Parameters new_x byte new_y byte RegionCoord(Vector3) public RegionCoord(Vector3 position) Parameters position Vector3 Fields ZERO public static RegionCoord ZERO Field Value RegionCoord x public byte x Field Value byte y public byte y Field Value byte Methods ClampIntoBounds() public void ClampIntoBounds() Equals(RegionCoord) public bool Equals(RegionCoord other) Parameters other RegionCoord Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Operators operator ==(RegionCoord, RegionCoord) public static bool operator ==(RegionCoord a, RegionCoord b) Parameters a RegionCoord b RegionCoord Returns bool operator !=(RegionCoord, RegionCoord) public static bool operator !=(RegionCoord a, RegionCoord b) Parameters a RegionCoord b RegionCoord Returns bool"
  },
  "api/SDG.Unturned.RegionCoordinate.html": {
    "href": "api/SDG.Unturned.RegionCoordinate.html",
    "title": "Struct RegionCoordinate | Unturned Analyse Doc",
    "keywords": "Struct RegionCoordinate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct RegionCoordinate Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors RegionCoordinate(byte, byte) public RegionCoordinate(byte x, byte y) Parameters x byte y byte Fields x public byte x Field Value byte y public byte y Field Value byte Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.Regions.html": {
    "href": "api/SDG.Unturned.Regions.html",
    "title": "Class Regions | Unturned Analyse Doc",
    "keywords": "Class Regions Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Regions Inheritance object Regions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Regions() public Regions() Fields REGION_SIZE public static readonly byte REGION_SIZE Field Value byte WORLD_SIZE public static readonly byte WORLD_SIZE Field Value byte Methods EnumerateClients(byte, byte, byte) [Obsolete(\"Replaced by GatherClientConnections\")] public static IEnumerable<ITransportConnection> EnumerateClients(byte x, byte y, byte distance) Parameters x byte y byte distance byte Returns IEnumerable<ITransportConnection> EnumerateClients_Remote(byte, byte, byte) [Obsolete(\"Replaced by GatherRemoteClientConnections\")] public static IEnumerable<ITransportConnection> EnumerateClients_Remote(byte x, byte y, byte distance) Parameters x byte y byte distance byte Returns IEnumerable<ITransportConnection> GatherClientConnections(byte, byte, byte) public static PooledTransportConnectionList GatherClientConnections(byte x, byte y, byte distance) Parameters x byte y byte distance byte Returns PooledTransportConnectionList GatherRemoteClientConnections(byte, byte, byte) public static PooledTransportConnectionList GatherRemoteClientConnections(byte x, byte y, byte distance) Parameters x byte y byte distance byte Returns PooledTransportConnectionList checkArea(byte, byte, byte, byte, byte) public static bool checkArea(byte x_0, byte y_0, byte x_1, byte y_1, byte area) Parameters x_0 byte y_0 byte x_1 byte y_1 byte area byte Returns bool checkSafe(int, int) public static bool checkSafe(int x, int y) Parameters x int y int Returns bool checkSafe(Vector3) public static bool checkSafe(Vector3 point) Parameters point Vector3 Returns bool clampPositionIntoBounds(ref Vector3) Clamp position into the maximum bounds expected by the game, not necessarily the level bounds. public static bool clampPositionIntoBounds(ref Vector3 position) Parameters position Vector3 Returns bool True if position was modified. getRegionsInRadius(Vector3, float, List<RegionCoordinate>) public static void getRegionsInRadius(Vector3 center, float radius, List<RegionCoordinate> result) Parameters center Vector3 radius float result List<RegionCoordinate> tryGetCoordinate(Vector3, out byte, out byte) public static bool tryGetCoordinate(Vector3 point, out byte x, out byte y) Parameters point Vector3 x byte y byte Returns bool tryGetPoint(int, int, out Vector3) public static bool tryGetPoint(int x, int y, out Vector3 point) Parameters x int y int point Vector3 Returns bool"
  },
  "api/SDG.Unturned.RepairBarricadeRequestHandler.html": {
    "href": "api/SDG.Unturned.RepairBarricadeRequestHandler.html",
    "title": "Delegate RepairBarricadeRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate RepairBarricadeRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RepairBarricadeRequestHandler(CSteamID instigatorSteamID, Transform barricadeTransform, ref float pendingTotalHealing, ref bool shouldAllow) Parameters instigatorSteamID CSteamID barricadeTransform Transform pendingTotalHealing float shouldAllow bool Constructors RepairBarricadeRequestHandler(object, IntPtr) public RepairBarricadeRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, ref float, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform barricadeTransform, ref float pendingTotalHealing, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID barricadeTransform Transform pendingTotalHealing float shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref float, ref bool, IAsyncResult) public virtual void EndInvoke(ref float pendingTotalHealing, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalHealing float shouldAllow bool result IAsyncResult Invoke(CSteamID, Transform, ref float, ref bool) public virtual void Invoke(CSteamID instigatorSteamID, Transform barricadeTransform, ref float pendingTotalHealing, ref bool shouldAllow) Parameters instigatorSteamID CSteamID barricadeTransform Transform pendingTotalHealing float shouldAllow bool"
  },
  "api/SDG.Unturned.RepairStructureRequestHandler.html": {
    "href": "api/SDG.Unturned.RepairStructureRequestHandler.html",
    "title": "Delegate RepairStructureRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate RepairStructureRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RepairStructureRequestHandler(CSteamID instigatorSteamID, Transform structureTransform, ref float pendingTotalHealing, ref bool shouldAllow) Parameters instigatorSteamID CSteamID structureTransform Transform pendingTotalHealing float shouldAllow bool Constructors RepairStructureRequestHandler(object, IntPtr) public RepairStructureRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, ref float, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform structureTransform, ref float pendingTotalHealing, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID structureTransform Transform pendingTotalHealing float shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref float, ref bool, IAsyncResult) public virtual void EndInvoke(ref float pendingTotalHealing, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalHealing float shouldAllow bool result IAsyncResult Invoke(CSteamID, Transform, ref float, ref bool) public virtual void Invoke(CSteamID instigatorSteamID, Transform structureTransform, ref float pendingTotalHealing, ref bool shouldAllow) Parameters instigatorSteamID CSteamID structureTransform Transform pendingTotalHealing float shouldAllow bool"
  },
  "api/SDG.Unturned.RepairVehicleRequestHandler.html": {
    "href": "api/SDG.Unturned.RepairVehicleRequestHandler.html",
    "title": "Delegate RepairVehicleRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate RepairVehicleRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RepairVehicleRequestHandler(CSteamID instigatorSteamID, InteractableVehicle vehicle, ref ushort pendingTotalHealing, ref bool shouldAllow) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle pendingTotalHealing ushort shouldAllow bool Constructors RepairVehicleRequestHandler(object, IntPtr) public RepairVehicleRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, InteractableVehicle, ref ushort, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, InteractableVehicle vehicle, ref ushort pendingTotalHealing, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle pendingTotalHealing ushort shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref ushort, ref bool, IAsyncResult) public virtual void EndInvoke(ref ushort pendingTotalHealing, ref bool shouldAllow, IAsyncResult result) Parameters pendingTotalHealing ushort shouldAllow bool result IAsyncResult Invoke(CSteamID, InteractableVehicle, ref ushort, ref bool) public virtual void Invoke(CSteamID instigatorSteamID, InteractableVehicle vehicle, ref ushort pendingTotalHealing, ref bool shouldAllow) Parameters instigatorSteamID CSteamID vehicle InteractableVehicle pendingTotalHealing ushort shouldAllow bool"
  },
  "api/SDG.Unturned.RepairedBarricadeHandler.html": {
    "href": "api/SDG.Unturned.RepairedBarricadeHandler.html",
    "title": "Delegate RepairedBarricadeHandler | Unturned Analyse Doc",
    "keywords": "Delegate RepairedBarricadeHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RepairedBarricadeHandler(CSteamID instigatorSteamID, Transform barricadeTransform, float totalHealing) Parameters instigatorSteamID CSteamID barricadeTransform Transform totalHealing float Constructors RepairedBarricadeHandler(object, IntPtr) public RepairedBarricadeHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform barricadeTransform, float totalHealing, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID barricadeTransform Transform totalHealing float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID, Transform, float) public virtual void Invoke(CSteamID instigatorSteamID, Transform barricadeTransform, float totalHealing) Parameters instigatorSteamID CSteamID barricadeTransform Transform totalHealing float"
  },
  "api/SDG.Unturned.RepairedStructureHandler.html": {
    "href": "api/SDG.Unturned.RepairedStructureHandler.html",
    "title": "Delegate RepairedStructureHandler | Unturned Analyse Doc",
    "keywords": "Delegate RepairedStructureHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void RepairedStructureHandler(CSteamID instigatorSteamID, Transform structureTransform, float totalHealing) Parameters instigatorSteamID CSteamID structureTransform Transform totalHealing float Constructors RepairedStructureHandler(object, IntPtr) public RepairedStructureHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, Transform, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigatorSteamID, Transform structureTransform, float totalHealing, AsyncCallback callback, object @object) Parameters instigatorSteamID CSteamID structureTransform Transform totalHealing float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(CSteamID, Transform, float) public virtual void Invoke(CSteamID instigatorSteamID, Transform structureTransform, float totalHealing) Parameters instigatorSteamID CSteamID structureTransform Transform totalHealing float"
  },
  "api/SDG.Unturned.ReputationUpdated.html": {
    "href": "api/SDG.Unturned.ReputationUpdated.html",
    "title": "Delegate ReputationUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ReputationUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ReputationUpdated(int newReputation) Parameters newReputation int Constructors ReputationUpdated(object, IntPtr) public ReputationUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int newReputation, AsyncCallback callback, object @object) Parameters newReputation int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int) public virtual void Invoke(int newReputation) Parameters newReputation int"
  },
  "api/SDG.Unturned.ResourceAsset.html": {
    "href": "api/SDG.Unturned.ResourceAsset.html",
    "title": "Class ResourceAsset | Unturned Analyse Doc",
    "keywords": "Class ResourceAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ResourceAsset : Asset, IAssetErrorContext Inheritance object Asset ResourceAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ResourceAsset() public ResourceAsset() Fields _debrisGameObject protected GameObject _debrisGameObject Field Value GameObject _modelGameObject protected GameObject _modelGameObject Field Value GameObject _resourceName protected string _resourceName Field Value string _skyboxGameObject protected GameObject _skyboxGameObject Field Value GameObject _stumpGameObject protected GameObject _stumpGameObject Field Value GameObject bladeID Weapon must have matching blade ID to damage tree. Both weapons and trees default to zero so they can be damaged by default. public byte bladeID Field Value byte chart public EObjectChart chart Field Value EObjectChart christmasRedirect Tree to use during the Christmas event instead. public AssetReference<ResourceAsset> christmasRedirect Field Value AssetReference<ResourceAsset> explosion public ushort explosion Field Value ushort forageRewardExperience Amount of experience to reward foraging player. public uint forageRewardExperience Field Value uint halloweenRedirect Tree to use during the Halloween event instead. public AssetReference<ResourceAsset> halloweenRedirect Field Value AssetReference<ResourceAsset> hasDebris public bool hasDebris Field Value bool health public ushort health Field Value ushort interactabilityText Forageable resource message. public string interactabilityText Field Value string isForage public bool isForage Field Value bool log public ushort log Field Value ushort reset public float reset Field Value float rewardID public ushort rewardID Field Value ushort rewardMax public byte rewardMax Field Value byte rewardMin public byte rewardMin Field Value byte rewardXP public uint rewardXP Field Value uint scale [Obsolete(\"Replaced by MinRandomScale and MaxRandomScale.\")] public float scale Field Value float shouldExcludeFromLevelBatching public bool shouldExcludeFromLevelBatching Field Value bool stick public ushort stick Field Value ushort verticalOffset public float verticalOffset Field Value float Properties DebrisVerticalOffset Distance along tree's local up axis to offset debris spawn position. Defaults to 1.0. public float DebrisVerticalOffset { get; protected set; } Property Value float FriendlyName public override string FriendlyName { get; } Property Value string MaxRandomAngleDeviation Before FoliageResourceInfoAsset had randomization properties (which trees don't currently use as of 2024-12-11 because rotation/scale aren't saved) each tree has some random rotation and scale variation based on its position. This property controls the rotation away from upright. public float MaxRandomAngleDeviation { get; protected set; } Property Value float MaxRandomUniformScale public float MaxRandomUniformScale { get; protected set; } Property Value float MinRandomAngleDeviation public float MinRandomAngleDeviation { get; protected set; } Property Value float MinRandomUniformScale public float MinRandomUniformScale { get; protected set; } Property Value float ShouldIgnoreCollisionBetweenStumpAndDebris If true, prevent collisions between falling tree and the stump. (i.e., debris can fall through stump) Defaults to true. public bool ShouldIgnoreCollisionBetweenStumpAndDebris { get; protected set; } Property Value bool assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType debrisGameObject public GameObject debrisGameObject { get; } Property Value GameObject explosionGuid public Guid explosionGuid { get; } Property Value Guid holidayRestriction Only activated during this holiday. public ENPCHoliday holidayRestriction { get; protected set; } Property Value ENPCHoliday modelGameObject public GameObject modelGameObject { get; } Property Value GameObject resourceName public string resourceName { get; } Property Value string skyboxGameObject public GameObject skyboxGameObject { get; } Property Value GameObject skyboxMaterial public Material skyboxMaterial { get; } Property Value Material stumpGameObject public GameObject stumpGameObject { get; } Property Value GameObject vulnerableToAllMeleeWeapons public bool vulnerableToAllMeleeWeapons { get; protected set; } Property Value bool vulnerableToFists public bool vulnerableToFists { get; protected set; } Property Value bool Methods FindExplosionEffectAsset() public EffectAsset FindExplosionEffectAsset() Returns EffectAsset PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local applyDefaultLODs(LODGroup, bool) protected void applyDefaultLODs(LODGroup lod, bool fade) Parameters lod LODGroup fade bool getHolidayRedirect() Get asset ref to replace this one for holiday, or null if it should not be redirected. public AssetReference<ResourceAsset> getHolidayRedirect() Returns AssetReference<ResourceAsset>"
  },
  "api/SDG.Unturned.ResourceHash.html": {
    "href": "api/SDG.Unturned.ResourceHash.html",
    "title": "Class ResourceHash | Unturned Analyse Doc",
    "keywords": "Class ResourceHash Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ResourceHash Inheritance object ResourceHash Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ResourceHash() public ResourceHash() Fields localHash public static byte[] localHash Field Value byte[] Methods GatherFilePaths(string) public static List<string> GatherFilePaths(string dataPath) Parameters dataPath string Unturned_Data folder path Returns List<string> Initialize() public static void Initialize()"
  },
  "api/SDG.Unturned.ResourceManager.html": {
    "href": "api/SDG.Unturned.ResourceManager.html",
    "title": "Class ResourceManager | Unturned Analyse Doc",
    "keywords": "Class ResourceManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ResourceManager : SteamCaller Inheritance object SteamCaller ResourceManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors ResourceManager() public ResourceManager() Fields RESOURCE_REGIONS public static readonly byte RESOURCE_REGIONS Field Value byte onDamageResourceRequested public static DamageResourceRequestHandler onDamageResourceRequested Field Value DamageResourceRequestHandler Methods ReceiveClearRegionResources(byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellClearRegionResources\")] public static void ReceiveClearRegionResources(byte x, byte y) Parameters x byte y byte ReceiveForageRequest(in ServerInvocationContext, byte, byte, ushort) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10, legacyName = \"askForage\")] public static void ReceiveForageRequest(in ServerInvocationContext context, byte x, byte y, ushort index) Parameters context ServerInvocationContext x byte y byte index ushort ReceiveResourceAlive(byte, byte, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellResourceAlive\")] public static void ReceiveResourceAlive(byte x, byte y, ushort index) Parameters x byte y byte index ushort ReceiveResourceDead(byte, byte, ushort, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellResourceDead\")] public static void ReceiveResourceDead(byte x, byte y, ushort index, Vector3 ragdoll) Parameters x byte y byte index ushort ragdoll Vector3 ReceiveResources(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveResources(in ClientInvocationContext context) Parameters context ClientInvocationContext ServerSetResourceAlive(byte, byte, ushort) public static void ServerSetResourceAlive(byte x, byte y, ushort index) Parameters x byte y byte index ushort ServerSetResourceDead(byte, byte, ushort, Vector3) public static void ServerSetResourceDead(byte x, byte y, ushort index, Vector3 baseForce) Parameters x byte y byte index ushort baseForce Vector3 askClearAllResources() Revive trees worldwide. Used between arena rounds. public static void askClearAllResources() askClearRegionResources(byte, byte) Revive all trees in a specific region. public static void askClearRegionResources(byte x, byte y) Parameters x byte y byte askForage(CSteamID, byte, byte, ushort) [Obsolete] public void askForage(CSteamID steamID, byte x, byte y, ushort index) Parameters steamID CSteamID x byte y byte index ushort damage(Transform, Vector3, float, float, float, out EPlayerKill, out uint, CSteamID, EDamageOrigin, bool) public static void damage(Transform resource, Vector3 direction, float damage, float times, float drop, out EPlayerKill kill, out uint xp, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown, bool trackKill = true) Parameters resource Transform direction Vector3 damage float times float drop float kill EPlayerKill xp uint instigatorSteamID CSteamID damageOrigin EDamageOrigin trackKill bool forage(Transform) public static void forage(Transform resource) Parameters resource Transform getResource(byte, byte, ushort) public static Transform getResource(byte x, byte y, ushort index) Parameters x byte y byte index ushort Returns Transform getResourceSpawnpoint(byte, byte, ushort) public static ResourceSpawnpoint getResourceSpawnpoint(byte x, byte y, ushort index) Parameters x byte y byte index ushort Returns ResourceSpawnpoint getResourcesInRadius(Vector3, float, List<RegionCoordinate>, List<Transform>) public static void getResourcesInRadius(Vector3 center, float sqrRadius, List<RegionCoordinate> search, List<Transform> result) Parameters center Vector3 sqrRadius float search List<RegionCoordinate> result List<Transform> tellClearRegionResources(CSteamID, byte, byte) [Obsolete] public void tellClearRegionResources(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte tellResourceAlive(CSteamID, byte, byte, ushort) [Obsolete] public void tellResourceAlive(CSteamID steamID, byte x, byte y, ushort index) Parameters steamID CSteamID x byte y byte index ushort tellResourceDead(CSteamID, byte, byte, ushort, Vector3) [Obsolete] public void tellResourceDead(CSteamID steamID, byte x, byte y, ushort index, Vector3 ragdoll) Parameters steamID CSteamID x byte y byte index ushort ragdoll Vector3 tellResources(CSteamID, byte, byte, bool[]) [Obsolete] public void tellResources(CSteamID steamID, byte x, byte y, bool[] resources) Parameters steamID CSteamID x byte y byte resources bool[] tryGetRegion(Transform, out byte, out byte, out ushort) public static bool tryGetRegion(Transform resource, out byte x, out byte y, out ushort index) Parameters resource Transform x byte y byte index ushort Returns bool"
  },
  "api/SDG.Unturned.ResourceManager_NetMethods.html": {
    "href": "api/SDG.Unturned.ResourceManager_NetMethods.html",
    "title": "Class ResourceManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class ResourceManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(ResourceManager))] public static class ResourceManager_NetMethods Inheritance object ResourceManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveClearRegionResources_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClearRegionResources\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClearRegionResources_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveClearRegionResources_Write(NetPakWriter, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveClearRegionResources\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveClearRegionResources_Write(NetPakWriter writer, byte x, byte y) Parameters writer NetPakWriter x byte y byte ReceiveForageRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveForageRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveForageRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveForageRequest_Write(NetPakWriter, byte, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveForageRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveForageRequest_Write(NetPakWriter writer, byte x, byte y, ushort index) Parameters writer NetPakWriter x byte y byte index ushort ReceiveResourceAlive_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveResourceAlive\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveResourceAlive_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveResourceAlive_Write(NetPakWriter, byte, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveResourceAlive\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveResourceAlive_Write(NetPakWriter writer, byte x, byte y, ushort index) Parameters writer NetPakWriter x byte y byte index ushort ReceiveResourceDead_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveResourceDead\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveResourceDead_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveResourceDead_Write(NetPakWriter, byte, byte, ushort, Vector3) [NetInvokableGeneratedMethod(\"ReceiveResourceDead\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveResourceDead_Write(NetPakWriter writer, byte x, byte y, ushort index, Vector3 ragdoll) Parameters writer NetPakWriter x byte y byte index ushort ragdoll Vector3"
  },
  "api/SDG.Unturned.ResourceRegion.html": {
    "href": "api/SDG.Unturned.ResourceRegion.html",
    "title": "Class ResourceRegion | Unturned Analyse Doc",
    "keywords": "Class ResourceRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ResourceRegion Inheritance object ResourceRegion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ResourceRegion() public ResourceRegion() Fields isNetworked public bool isNetworked Field Value bool respawnResourceIndex public ushort respawnResourceIndex Field Value ushort"
  },
  "api/SDG.Unturned.ResourceSpawnpoint.html": {
    "href": "api/SDG.Unturned.ResourceSpawnpoint.html",
    "title": "Class ResourceSpawnpoint | Unturned Analyse Doc",
    "keywords": "Class ResourceSpawnpoint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ResourceSpawnpoint Inheritance object ResourceSpawnpoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ResourceSpawnpoint(byte, ushort, Guid, Vector3, bool, NetId) public ResourceSpawnpoint(byte newType, ushort newID, Guid newGuid, Vector3 newPoint, bool newGenerated, NetId netId) Parameters newType byte newID ushort newGuid Guid newPoint Vector3 newGenerated bool netId NetId ResourceSpawnpoint(byte, ushort, Vector3, bool, NetId) public ResourceSpawnpoint(byte newType, ushort newID, Vector3 newPoint, bool newGenerated, NetId netId) Parameters newType byte newID ushort newPoint Vector3 newGenerated bool netId NetId ResourceSpawnpoint(ushort, Guid, Vector3, bool, NetId) public ResourceSpawnpoint(ushort newID, Guid guid, Vector3 newPoint, bool newGenerated, NetId netId) Parameters newID ushort guid Guid newPoint Vector3 newGenerated bool netId NetId ResourceSpawnpoint(ushort, Vector3, bool, NetId) public ResourceSpawnpoint(ushort newID, Vector3 newPoint, bool newGenerated, NetId netId) Parameters newID ushort newPoint Vector3 newGenerated bool netId NetId Fields health public ushort health Field Value ushort id [Obsolete(\"Trees are now saved by asset GUID. Please use the asset property rather than finding asset by legacy ID.\")] public ushort id Field Value ushort type [Obsolete(\"Unused index into LevelGround.resources for early versions of the level editor.\")] public byte type Field Value byte Properties angle public Quaternion angle { get; } Property Value Quaternion asset public ResourceAsset asset { get; } Property Value ResourceAsset canBeDamaged Can this tree be damaged? Allows holiday restrictions to be taken into account. (Otherwise holiday trees could be destroyed out of season.) public bool canBeDamaged { get; } Property Value bool guid public Guid guid { get; protected set; } Property Value Guid isDead public bool isDead { get; } Property Value bool isEnabled public bool isEnabled { get; } Property Value bool isGenerated public bool isGenerated { get; } Property Value bool isSkyboxEnabled public bool isSkyboxEnabled { get; } Property Value bool lastDead public float lastDead { get; } Property Value float model public Transform model { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 scale public Vector3 scale { get; } Property Value Vector3 skybox public Transform skybox { get; } Property Value Transform stump public Transform stump { get; } Property Value Transform Methods askDamage(ushort) public void askDamage(ushort amount) Parameters amount ushort checkCanReset(float) public bool checkCanReset(float multiplier) Parameters multiplier float Returns bool destroy() public void destroy() disable() public void disable() disableSkybox() public void disableSkybox() enable() public void enable() enableSkybox() public void enableSkybox() forceFullEnable() public void forceFullEnable() kill(Vector3) public void kill(Vector3 ragdoll) Parameters ragdoll Vector3 revive() public void revive() wipe() public void wipe()"
  },
  "api/SDG.Unturned.ReunObjectAdd.html": {
    "href": "api/SDG.Unturned.ReunObjectAdd.html",
    "title": "Class ReunObjectAdd | Unturned Analyse Doc",
    "keywords": "Class ReunObjectAdd Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ReunObjectAdd : IReun Inheritance object ReunObjectAdd Implements IReun Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ReunObjectAdd(int, ObjectAsset, ItemAsset, Vector3, Quaternion, Vector3) public ReunObjectAdd(int newStep, ObjectAsset newObjectAsset, ItemAsset newItemAsset, Vector3 newPosition, Quaternion newRotation, Vector3 newScale) Parameters newStep int newObjectAsset ObjectAsset newItemAsset ItemAsset newPosition Vector3 newRotation Quaternion newScale Vector3 Properties step public int step { get; } Property Value int Methods redo() public Transform redo() Returns Transform undo() public void undo()"
  },
  "api/SDG.Unturned.ReunObjectRemove.html": {
    "href": "api/SDG.Unturned.ReunObjectRemove.html",
    "title": "Class ReunObjectRemove | Unturned Analyse Doc",
    "keywords": "Class ReunObjectRemove Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ReunObjectRemove : IReun Inheritance object ReunObjectRemove Implements IReun Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ReunObjectRemove(int, Transform, ObjectAsset, ItemAsset, Vector3, Quaternion, Vector3) public ReunObjectRemove(int newStep, Transform newModel, ObjectAsset newObjectAsset, ItemAsset newItemAsset, Vector3 newPosition, Quaternion newRotation, Vector3 newScale) Parameters newStep int newModel Transform newObjectAsset ObjectAsset newItemAsset ItemAsset newPosition Vector3 newRotation Quaternion newScale Vector3 Properties step public int step { get; } Property Value int Methods redo() public Transform redo() Returns Transform undo() public void undo()"
  },
  "api/SDG.Unturned.ReunObjectTransform.html": {
    "href": "api/SDG.Unturned.ReunObjectTransform.html",
    "title": "Class ReunObjectTransform | Unturned Analyse Doc",
    "keywords": "Class ReunObjectTransform Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ReunObjectTransform : IReun Inheritance object ReunObjectTransform Implements IReun Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ReunObjectTransform(int, Transform, Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3) public ReunObjectTransform(int newStep, Transform newModel, Vector3 newFromPosition, Quaternion newFromRotation, Vector3 newFromScale, Vector3 newToPosition, Quaternion newToRotation, Vector3 newToScale) Parameters newStep int newModel Transform newFromPosition Vector3 newFromRotation Quaternion newFromScale Vector3 newToPosition Vector3 newToRotation Quaternion newToScale Vector3 Properties step public int step { get; } Property Value int Methods redo() public Transform redo() Returns Transform undo() public void undo()"
  },
  "api/SDG.Unturned.RichTextUtil.html": {
    "href": "api/SDG.Unturned.RichTextUtil.html",
    "title": "Class RichTextUtil | Unturned Analyse Doc",
    "keywords": "Class RichTextUtil Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class RichTextUtil Inheritance object RichTextUtil Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods isTextValidForSign(string) Should player be allowed to write given text on a sign? Keep in mind that newer signs use TMP, whereas older signs use uGUI. public static bool isTextValidForSign(string text) Parameters text string Returns bool makeShadowContent(GUIContent) Shadow text needs the color tags removed, otherwise the shadow uses those colors. public static GUIContent makeShadowContent(GUIContent content) Parameters content GUIContent Returns GUIContent replaceColorTags(string) Remove all color rich formatting so that shadow text displays correctly. public static string replaceColorTags(string text) Parameters text string Returns string replaceNewlineMarkup(ref string) Replace br tags with newlines. public static void replaceNewlineMarkup(ref string s) Parameters s string wrapWithColor(string, string) Wrap text with color tags. public static string wrapWithColor(string text, string color) Parameters text string color string Returns string wrapWithColor(string, Color) Wrap text with color tags. public static string wrapWithColor(string text, Color color) Parameters text string color Color Returns string wrapWithColor(string, Color32) Wrap text with color tags. public static string wrapWithColor(string text, Color32 color) Parameters text string color Color32 Returns string"
  },
  "api/SDG.Unturned.River.html": {
    "href": "api/SDG.Unturned.River.html",
    "title": "Class River | Unturned Analyse Doc",
    "keywords": "Class River Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class River Inheritance object River Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors River(string) public River(string newPath) Parameters newPath string River(string, bool) public River(string newPath, bool usePath) Parameters newPath string usePath bool River(string, bool, bool, bool) public River(string newPath, bool usePath, bool useCloud, bool isReading) Parameters newPath string usePath bool useCloud bool isReading bool Methods closeRiver() public void closeRiver() getHash() public byte[] getHash() Returns byte[] readBoolean() public bool readBoolean() Returns bool readByte() public byte readByte() Returns byte readBytes() public byte[] readBytes() Returns byte[] readColor() public Color readColor() Returns Color readGUID() public Guid readGUID() Returns Guid readInt16() public short readInt16() Returns short readInt32() public int readInt32() Returns int readInt64() public long readInt64() Returns long readSingle() public float readSingle() Returns float readSingleQuaternion() public Quaternion readSingleQuaternion() Returns Quaternion readSingleVector3() public Vector3 readSingleVector3() Returns Vector3 readSteamID() public CSteamID readSteamID() Returns CSteamID readString() public string readString() Returns string readUInt16() public ushort readUInt16() Returns ushort readUInt32() public uint readUInt32() Returns uint readUInt64() public ulong readUInt64() Returns ulong writeBoolean(bool) public void writeBoolean(bool value) Parameters value bool writeByte(byte) public void writeByte(byte value) Parameters value byte writeBytes(byte[]) public void writeBytes(byte[] values) Parameters values byte[] writeColor(Color) public void writeColor(Color value) Parameters value Color writeGUID(Guid) public void writeGUID(Guid GUID) Parameters GUID Guid writeInt16(short) public void writeInt16(short value) Parameters value short writeInt32(int) public void writeInt32(int value) Parameters value int writeInt64(long) public void writeInt64(long value) Parameters value long writeSingle(float) public void writeSingle(float value) Parameters value float writeSingleQuaternion(Quaternion) public void writeSingleQuaternion(Quaternion value) Parameters value Quaternion writeSingleVector3(Vector3) public void writeSingleVector3(Vector3 value) Parameters value Vector3 writeSteamID(CSteamID) public void writeSteamID(CSteamID steamID) Parameters steamID CSteamID writeString(string) public void writeString(string value) Parameters value string writeUInt16(ushort) public void writeUInt16(ushort value) Parameters value ushort writeUInt32(uint) public void writeUInt32(uint value) Parameters value uint writeUInt64(ulong) public void writeUInt64(ulong value) Parameters value ulong"
  },
  "api/SDG.Unturned.Rk4Spring.html": {
    "href": "api/SDG.Unturned.Rk4Spring.html",
    "title": "Struct Rk4Spring | Unturned Analyse Doc",
    "keywords": "Struct Rk4Spring Namespace SDG.Unturned Assembly Assembly-CSharp.dll Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ public struct Rk4Spring Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Rk4Spring(float, float) public Rk4Spring(float stiffness, float damping) Parameters stiffness float damping float Fields currentPosition public float currentPosition Field Value float damping Higher values reduce bounciness and settle at the target position faster. e.g. a value of zero will bounce back and forth for a long time (indefinitely?) public float damping Field Value float stiffness Higher values return to the target position faster. public float stiffness Field Value float targetPosition public float targetPosition Field Value float Methods Update(float) public void Update(float deltaTime) Parameters deltaTime float"
  },
  "api/SDG.Unturned.Rk4Spring2.html": {
    "href": "api/SDG.Unturned.Rk4Spring2.html",
    "title": "Struct Rk4Spring2 | Unturned Analyse Doc",
    "keywords": "Struct Rk4Spring2 Namespace SDG.Unturned Assembly Assembly-CSharp.dll Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ public struct Rk4Spring2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Rk4Spring2(float, float) public Rk4Spring2(float stiffness, float damping) Parameters stiffness float damping float Fields currentPosition public Vector2 currentPosition Field Value Vector2 damping Higher values reduce bounciness and settle at the target position faster. e.g. a value of zero will bounce back and forth for a long time (indefinitely?) public float damping Field Value float stiffness Higher values return to the target position faster. public float stiffness Field Value float targetPosition public Vector2 targetPosition Field Value Vector2 Methods Update(float) public void Update(float deltaTime) Parameters deltaTime float"
  },
  "api/SDG.Unturned.Rk4Spring3.html": {
    "href": "api/SDG.Unturned.Rk4Spring3.html",
    "title": "Struct Rk4Spring3 | Unturned Analyse Doc",
    "keywords": "Struct Rk4Spring3 Namespace SDG.Unturned Assembly Assembly-CSharp.dll Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ public struct Rk4Spring3 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Rk4Spring3(float, float) public Rk4Spring3(float stiffness, float damping) Parameters stiffness float damping float Fields currentPosition public Vector3 currentPosition Field Value Vector3 damping Higher values reduce bounciness and settle at the target position faster. e.g. a value of zero will bounce back and forth for a long time (indefinitely?) public float damping Field Value float stiffness Higher values return to the target position faster. public float stiffness Field Value float targetPosition public Vector3 targetPosition Field Value Vector3 Methods Update(float) public void Update(float deltaTime) Parameters deltaTime float"
  },
  "api/SDG.Unturned.Rk4SpringQ.html": {
    "href": "api/SDG.Unturned.Rk4SpringQ.html",
    "title": "Struct Rk4SpringQ | Unturned Analyse Doc",
    "keywords": "Struct Rk4SpringQ Namespace SDG.Unturned Assembly Assembly-CSharp.dll Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ public struct Rk4SpringQ Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Rk4SpringQ(float, float) public Rk4SpringQ(float stiffness, float damping) Parameters stiffness float damping float Fields currentRotation public Quaternion currentRotation Field Value Quaternion damping Higher values reduce bounciness and settle at the target position faster. e.g. a value of zero will bounce back and forth for a long time (indefinitely?) public float damping Field Value float stiffness Higher values return to the target position faster. public float stiffness Field Value float targetRotation public Quaternion targetRotation Field Value Quaternion Methods Update(float) public void Update(float deltaTime) Parameters deltaTime float"
  },
  "api/SDG.Unturned.Road.html": {
    "href": "api/SDG.Unturned.Road.html",
    "title": "Class Road | Unturned Analyse Doc",
    "keywords": "Class Road Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Road Inheritance object Road Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Road(byte, ushort) public Road(byte newMaterial, ushort newRoadIndex) Parameters newMaterial byte newRoadIndex ushort Road(byte, ushort, bool, List<RoadJoint>) public Road(byte newMaterial, ushort newRoadIndex, bool newLoop, List<RoadJoint> newJoints) Parameters newMaterial byte newRoadIndex ushort newLoop bool newJoints List<RoadJoint> Fields material public byte material Field Value byte Properties isLoop public bool isLoop { get; set; } Property Value bool joints public List<RoadJoint> joints { get; } Property Value List<RoadJoint> paths public List<RoadPath> paths { get; } Property Value List<RoadPath> road public Transform road { get; } Property Value Transform roadIndex Only set in play mode for determing if we should cache brute force lengths. public ushort roadIndex { get; protected set; } Property Value ushort trackSampledLength public float trackSampledLength { get; protected set; } Property Value float Methods addPoint(Transform, Vector3) [Obsolete] public Transform addPoint(Transform origin, Vector3 point) Parameters origin Transform point Vector3 Returns Transform addVertex(int, Vector3) public Transform addVertex(int vertexIndex, Vector3 point) Parameters vertexIndex int point Vector3 Returns Transform buildMesh() public void buildMesh() getLengthEstimate() public float getLengthEstimate() Returns float getLengthEstimate(int) public float getLengthEstimate(int index) Parameters index int Returns float getPosition(int, float) public Vector3 getPosition(int index, float t) Parameters index int t float Returns Vector3 getPosition(float) public Vector3 getPosition(float t) Parameters t float Returns Vector3 getPosition(float, out int) public Vector3 getPosition(float t, out int index) Parameters t float index int Returns Vector3 getTrackData(float, out Vector3, out Vector3, out Vector3) public void getTrackData(float trackPosition, out Vector3 position, out Vector3 normal, out Vector3 direction) Parameters trackPosition float position Vector3 normal Vector3 direction Vector3 getTrackPosition(int, float, out Vector3, out Vector3) public void getTrackPosition(int index, float t, out Vector3 position, out Vector3 normal) Parameters index int t float position Vector3 normal Vector3 getTrackPosition(float, out int, out Vector3, out Vector3) public void getTrackPosition(float t, out int index, out Vector3 position, out Vector3 normal) Parameters t float index int position Vector3 normal Vector3 getVelocity(int, float) public Vector3 getVelocity(int index, float t) Parameters index int t float Returns Vector3 getVelocity(float) public Vector3 getVelocity(float t) Parameters t float Returns Vector3 movePoint(Transform, Vector3) [Obsolete] public void movePoint(Transform select, Vector3 point) Parameters select Transform point Vector3 moveTangent(int, int, Vector3) public void moveTangent(int vertexIndex, int tangentIndex, Vector3 point) Parameters vertexIndex int tangentIndex int point Vector3 moveVertex(int, Vector3) public void moveVertex(int vertexIndex, Vector3 point) Parameters vertexIndex int point Vector3 remove() public void remove() removePoint(Transform) [Obsolete] public void removePoint(Transform select) Parameters select Transform removeVertex(int) public void removeVertex(int vertexIndex) Parameters vertexIndex int setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool updatePoints() public void updatePoints()"
  },
  "api/SDG.Unturned.RoadJoint.html": {
    "href": "api/SDG.Unturned.RoadJoint.html",
    "title": "Class RoadJoint | Unturned Analyse Doc",
    "keywords": "Class RoadJoint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RoadJoint Inheritance object RoadJoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RoadJoint(Vector3) public RoadJoint(Vector3 vertex) Parameters vertex Vector3 RoadJoint(Vector3, Vector3[], ERoadMode, float, bool) public RoadJoint(Vector3 vertex, Vector3[] tangents, ERoadMode mode, float offset, bool ignoreTerrain) Parameters vertex Vector3 tangents Vector3[] mode ERoadMode offset float ignoreTerrain bool Fields ignoreTerrain public bool ignoreTerrain Field Value bool mode public ERoadMode mode Field Value ERoadMode offset public float offset Field Value float vertex public Vector3 vertex Field Value Vector3 Methods getTangent(int) public Vector3 getTangent(int index) Parameters index int Returns Vector3 setTangent(int, Vector3) public void setTangent(int index, Vector3 tangent) Parameters index int tangent Vector3"
  },
  "api/SDG.Unturned.RoadMaterial.html": {
    "href": "api/SDG.Unturned.RoadMaterial.html",
    "title": "Class RoadMaterial | Unturned Analyse Doc",
    "keywords": "Class RoadMaterial Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RoadMaterial Inheritance object RoadMaterial Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RoadMaterial(Texture2D) public RoadMaterial(Texture2D texture) Parameters texture Texture2D Fields depth public float depth Field Value float height public float height Field Value float isConcrete public bool isConcrete Field Value bool offset public float offset Field Value float width public float width Field Value float Properties material public Material material { get; } Property Value Material shader public static Shader shader { get; } Property Value Shader"
  },
  "api/SDG.Unturned.RoadPath.html": {
    "href": "api/SDG.Unturned.RoadPath.html",
    "title": "Class RoadPath | Unturned Analyse Doc",
    "keywords": "Class RoadPath Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RoadPath Inheritance object RoadPath Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RoadPath(Transform) public RoadPath(Transform vertex) Parameters vertex Transform Fields tangents public Transform[] tangents Field Value Transform[] vertex public Transform vertex Field Value Transform Methods highlightTangent(int) public void highlightTangent(int index) Parameters index int highlightVertex() public void highlightVertex() remove() public void remove() setTangent(int, Vector3) public void setTangent(int index, Vector3 tangent) Parameters index int tangent Vector3 unhighlightTangent(int) public void unhighlightTangent(int index) Parameters index int unhighlightVertex() public void unhighlightVertex()"
  },
  "api/SDG.Unturned.RoadSample.html": {
    "href": "api/SDG.Unturned.RoadSample.html",
    "title": "Class RoadSample | Unturned Analyse Doc",
    "keywords": "Class RoadSample Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RoadSample Inheritance object RoadSample Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RoadSample() public RoadSample() Fields index public int index Field Value int time public float time Field Value float"
  },
  "api/SDG.Unturned.Rocket.html": {
    "href": "api/SDG.Unturned.Rocket.html",
    "title": "Class Rocket | Unturned Analyse Doc",
    "keywords": "Class Rocket Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Rocket : MonoBehaviour Inheritance object Rocket Constructors Rocket() public Rocket() Fields animalDamage public float animalDamage Field Value float barricadeDamage public float barricadeDamage Field Value float explosion Kept because lots of modders have been using this script in Unity, so removing legacy effect id would break their content. public ushort explosion Field Value ushort explosionEffectGuid public Guid explosionEffectGuid Field Value Guid explosionLaunchSpeed public float explosionLaunchSpeed Field Value float ignoreTransform public Transform ignoreTransform Field Value Transform killer public CSteamID killer Field Value CSteamID objectDamage public float objectDamage Field Value float penetrateBuildables public bool penetrateBuildables Field Value bool playerDamage public float playerDamage Field Value float ragdollEffect public ERagdollEffect ragdollEffect Field Value ERagdollEffect range public float range Field Value float resourceDamage public float resourceDamage Field Value float structureDamage public float structureDamage Field Value float vehicleDamage public float vehicleDamage Field Value float zombieDamage public float zombieDamage Field Value float"
  },
  "api/SDG.Unturned.RubbleInfo.html": {
    "href": "api/SDG.Unturned.RubbleInfo.html",
    "title": "Class RubbleInfo | Unturned Analyse Doc",
    "keywords": "Class RubbleInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RubbleInfo Inheritance object RubbleInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RubbleInfo() public RubbleInfo() Fields aliveGameObject public GameObject aliveGameObject Field Value GameObject deadGameObject public GameObject deadGameObject Field Value GameObject effectTransform public Transform effectTransform Field Value Transform health public ushort health Field Value ushort lastDead public float lastDead Field Value float ragdolls public RubbleRagdollInfo[] ragdolls Field Value RubbleRagdollInfo[] section public Transform section Field Value Transform Properties isDead public bool isDead { get; } Property Value bool Methods askDamage(ushort) public void askDamage(ushort amount) Parameters amount ushort"
  },
  "api/SDG.Unturned.RubbleRagdollInfo.html": {
    "href": "api/SDG.Unturned.RubbleRagdollInfo.html",
    "title": "Class RubbleRagdollInfo | Unturned Analyse Doc",
    "keywords": "Class RubbleRagdollInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class RubbleRagdollInfo Inheritance object RubbleRagdollInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RubbleRagdollInfo() public RubbleRagdollInfo() Fields forceTransform public Transform forceTransform Field Value Transform ragdollGameObject public GameObject ragdollGameObject Field Value GameObject"
  },
  "api/SDG.Unturned.RuntimeGizmos.html": {
    "href": "api/SDG.Unturned.RuntimeGizmos.html",
    "title": "Class RuntimeGizmos | Unturned Analyse Doc",
    "keywords": "Class RuntimeGizmos Namespace SDG.Unturned Assembly Assembly-CSharp.dll In-game debug drawing utility similar to Unity's editor Gizmos. public class RuntimeGizmos : MonoBehaviour Inheritance object RuntimeGizmos Properties HasQueuedElements public bool HasQueuedElements { get; } Property Value bool Methods Arrow(Vector3, Vector3, float, Color, float, EGizmoLayer) public void Arrow(Vector3 origin, Vector3 direction, float length, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters origin Vector3 direction Vector3 length float color Color lifespan float layer EGizmoLayer ArrowFromTo(Vector3, Vector3, Color, float, EGizmoLayer) public void ArrowFromTo(Vector3 begin, Vector3 end, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters begin Vector3 end Vector3 color Color lifespan float layer EGizmoLayer Box(Matrix4x4, Vector3, Color, float, EGizmoLayer) public void Box(Matrix4x4 matrix, Vector3 size, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters matrix Matrix4x4 size Vector3 color Color lifespan float layer EGizmoLayer Box(Matrix4x4, Vector3, Vector3, Color, float, EGizmoLayer) public void Box(Matrix4x4 matrix, Vector3 center, Vector3 size, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters matrix Matrix4x4 center Vector3 Local space relative to matrix. size Vector3 color Color lifespan float layer EGizmoLayer Box(Vector3, Quaternion, Vector3, Color, float, EGizmoLayer) public void Box(Vector3 center, Quaternion rotation, Vector3 size, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters center Vector3 rotation Quaternion size Vector3 color Color lifespan float layer EGizmoLayer Box(Vector3, Vector3, Color, float, EGizmoLayer) public void Box(Vector3 center, Vector3 size, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters center Vector3 size Vector3 color Color lifespan float layer EGizmoLayer Capsule(Vector3, Vector3, float, Color, float, EGizmoLayer) public void Capsule(Vector3 begin, Vector3 end, float radius, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters begin Vector3 end Vector3 radius float color Color lifespan float layer EGizmoLayer Circle(Vector3, Vector3, Vector3, float, Color, float, int, EGizmoLayer) public void Circle(Vector3 center, Vector3 axisU, Vector3 axisV, float radius, Color color, float lifespan = 0, int resolution = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters center Vector3 axisU Vector3 axisV Vector3 radius float color Color lifespan float resolution int layer EGizmoLayer Cube(Vector3, float, Color, float, EGizmoLayer) public void Cube(Vector3 center, float size, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters center Vector3 size float color Color lifespan float layer EGizmoLayer Cube(Vector3, Quaternion, float, Color, float, EGizmoLayer) public void Cube(Vector3 center, Quaternion rotation, float size, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters center Vector3 rotation Quaternion size float color Color lifespan float layer EGizmoLayer Get() public static RuntimeGizmos Get() Returns RuntimeGizmos GridXZ(Vector3, float, int, Color, float, EGizmoLayer) Wireframe grid on the XZ plane. public void GridXZ(Vector3 center, float size, int cells, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters center Vector3 size float cells int color Color lifespan float layer EGizmoLayer Label(Vector3, string, float, EGizmoLayer) public void Label(Vector3 position, string content, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters position Vector3 content string lifespan float layer EGizmoLayer Label(Vector3, string, Color, float, EGizmoLayer) public void Label(Vector3 position, string content, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters position Vector3 content string color Color lifespan float layer EGizmoLayer Line(Vector3, Vector3, Color, float, EGizmoLayer) public void Line(Vector3 begin, Vector3 end, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters begin Vector3 end Vector3 color Color lifespan float layer EGizmoLayer LineToward(Vector3, Vector3, float, Color, float, EGizmoLayer) public void LineToward(Vector3 begin, Vector3 end, float length, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters begin Vector3 end Vector3 length float color Color lifespan float layer EGizmoLayer Linecast(Vector3, Vector3, RaycastHit, Color, Color, float, EGizmoLayer) public void Linecast(Vector3 start, Vector3 end, RaycastHit hit, Color rayColor, Color hitColor, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters start Vector3 end Vector3 hit RaycastHit rayColor Color hitColor Color lifespan float layer EGizmoLayer Raycast(Ray, float, RaycastHit, Color, Color, float, EGizmoLayer) public void Raycast(Ray ray, float maxDistance, RaycastHit hit, Color rayColor, Color hitColor, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters ray Ray maxDistance float hit RaycastHit rayColor Color hitColor Color lifespan float layer EGizmoLayer Render() public void Render() Sphere(Matrix4x4, float, Color, float, EGizmoLayer) public void Sphere(Matrix4x4 matrix, float radius, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters matrix Matrix4x4 radius float color Color lifespan float layer EGizmoLayer Sphere(Vector3, float, Color, float, EGizmoLayer) public void Sphere(Vector3 center, float radius, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters center Vector3 radius float color Color lifespan float layer EGizmoLayer Spherecast(Ray, float, float, Color, float, EGizmoLayer) public void Spherecast(Ray ray, float radius, float maxDistance, Color color, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters ray Ray radius float maxDistance float color Color lifespan float layer EGizmoLayer Spherecast(Ray, float, float, RaycastHit, Color, Color, float, EGizmoLayer) public void Spherecast(Ray ray, float radius, float maxDistance, RaycastHit hit, Color rayColor, Color hitColor, float lifespan = 0, EGizmoLayer layer = EGizmoLayer.World) Parameters ray Ray radius float maxDistance float hit RaycastHit rayColor Color hitColor Color lifespan float layer EGizmoLayer"
  },
  "api/SDG.Unturned.SHA1Stream.html": {
    "href": "api/SDG.Unturned.SHA1Stream.html",
    "title": "Class SHA1Stream | Unturned Analyse Doc",
    "keywords": "Class SHA1Stream Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SHA1Stream : HashStream, IDisposable Inheritance object MarshalByRefObject Stream HashStream SHA1Stream Implements IDisposable Inherited Members HashStream.Flush() HashStream.Read(byte[], int, int) HashStream.Seek(long, SeekOrigin) HashStream.SetLength(long) HashStream.Write(byte[], int, int) HashStream.Hash HashStream.CanRead HashStream.CanSeek HashStream.CanWrite HashStream.Length HashStream.Position Stream.Null Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.Close() Stream.Dispose() Stream.Dispose(bool) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.ReadByte() Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SHA1Stream(Stream) public SHA1Stream(Stream underlyingStream) Parameters underlyingStream Stream"
  },
  "api/SDG.Unturned.SafetyUpdated.html": {
    "href": "api/SDG.Unturned.SafetyUpdated.html",
    "title": "Delegate SafetyUpdated | Unturned Analyse Doc",
    "keywords": "Delegate SafetyUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SafetyUpdated(bool isSafe) Parameters isSafe bool Constructors SafetyUpdated(object, IntPtr) public SafetyUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isSafe, AsyncCallback callback, object @object) Parameters isSafe bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isSafe) Parameters isSafe bool"
  },
  "api/SDG.Unturned.SafezoneBubble.html": {
    "href": "api/SDG.Unturned.SafezoneBubble.html",
    "title": "Class SafezoneBubble | Unturned Analyse Doc",
    "keywords": "Class SafezoneBubble Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SafezoneBubble Inheritance object SafezoneBubble Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SafezoneBubble(Vector3, float) public SafezoneBubble(Vector3 newOrigin, float newSqrRadius) Parameters newOrigin Vector3 newSqrRadius float Fields origin public Vector3 origin Field Value Vector3 sqrRadius public float sqrRadius Field Value float"
  },
  "api/SDG.Unturned.SafezoneManager.html": {
    "href": "api/SDG.Unturned.SafezoneManager.html",
    "title": "Class SafezoneManager | Unturned Analyse Doc",
    "keywords": "Class SafezoneManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SafezoneManager : MonoBehaviour Inheritance object SafezoneManager Constructors SafezoneManager() public SafezoneManager() Methods checkPointValid(Vector3) public static bool checkPointValid(Vector3 point) Parameters point Vector3 Returns bool deregisterBubble(SafezoneBubble) public static void deregisterBubble(SafezoneBubble bubble) Parameters bubble SafezoneBubble registerBubble(Vector3, float) public static SafezoneBubble registerBubble(Vector3 origin, float radius) Parameters origin Vector3 radius float Returns SafezoneBubble"
  },
  "api/SDG.Unturned.SafezoneNode.html": {
    "href": "api/SDG.Unturned.SafezoneNode.html",
    "title": "Class SafezoneNode | Unturned Analyse Doc",
    "keywords": "Class SafezoneNode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SafezoneNode : Node Inheritance object Node SafezoneNode Inherited Members Node._point Node._type Node._model Node.move(Vector3) Node.setEnabled(bool) Node.remove() Node.point Node.type Node.model object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SafezoneNode(Vector3) public SafezoneNode(Vector3 newPoint) Parameters newPoint Vector3 SafezoneNode(Vector3, float, bool, bool, bool) public SafezoneNode(Vector3 newPoint, float newRadius, bool newHeight, bool newNoWeapons, bool newNoBuildables) Parameters newPoint Vector3 newRadius float newHeight bool newNoWeapons bool newNoBuildables bool Fields MAX_SIZE public static readonly float MAX_SIZE Field Value float MIN_SIZE public static readonly float MIN_SIZE Field Value float isHeight public bool isHeight Field Value bool noBuildables public bool noBuildables Field Value bool noWeapons public bool noWeapons Field Value bool Properties radius This value is confusing because in the level editor it is the normalized radius, but in-game it is the square radius. public float radius { get; set; } Property Value float Methods CalculateNormalizedRadiusFromRadius(float) public static float CalculateNormalizedRadiusFromRadius(float radius) Parameters radius float Returns float CalculateRadiusFromNormalizedRadius(float) public static float CalculateRadiusFromNormalizedRadius(float normalizedRadius) Parameters normalizedRadius float Returns float"
  },
  "api/SDG.Unturned.SafezoneVolume.html": {
    "href": "api/SDG.Unturned.SafezoneVolume.html",
    "title": "Class SafezoneVolume | Unturned Analyse Doc",
    "keywords": "Class SafezoneVolume Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SafezoneVolume : LevelVolume<SafezoneVolume, SafezoneVolumeManager>, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler, ITransformedHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase LevelVolume<SafezoneVolume, SafezoneVolumeManager> SafezoneVolume Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler ITransformedHandler Inherited Members LevelVolume<SafezoneVolume, SafezoneVolumeManager>.falloffDistance LevelVolume<SafezoneVolume, SafezoneVolumeManager>.editorGameObject LevelVolume<SafezoneVolume, SafezoneVolumeManager>.editorMeshFilter LevelVolume<SafezoneVolume, SafezoneVolumeManager>.editorMeshRenderer LevelVolume<SafezoneVolume, SafezoneVolumeManager>.forceShouldAddCollider LevelVolume<SafezoneVolume, SafezoneVolumeManager>.supportsBoxShape LevelVolume<SafezoneVolume, SafezoneVolumeManager>.supportsSphereShape LevelVolume<SafezoneVolume, SafezoneVolumeManager>.supportsFalloff LevelVolume<SafezoneVolume, SafezoneVolumeManager>.CreateMenu() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.beginSelection(InteractionData) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.endSelection(InteractionData) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.OnTransformed(Vector3, Quaternion, Vector3, Vector3, Quaternion, Vector3, bool, bool) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.IsPositionInsideVolume(Vector3) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.IsPositionInsideVolumeWithAlpha(Vector3, out float) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetBoxSize() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetBoxExtents() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetInnerBoxSize() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetInnerBoxExtents() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetLocalInnerBoxSize() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetLocalInnerBoxExtents() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetSphereRadius() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetLocalSphereRadius() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetWorldSpaceInnerSphereRadius() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.GetLocalInnerSphereRadius() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.SetSphereRadius(float) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.CalculateWorldBounds() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.CalculateLocalBounds() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.UpdateEditorVisibility(ELevelVolumeVisibility) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.OnEnable() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.OnDisable() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.readHierarchyItem(IFormattedFileReader) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.writeHierarchyItem(IFormattedFileWriter) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.Awake() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.Start() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.OnDestroy() LevelVolume<SafezoneVolume, SafezoneVolumeManager>.AppendBaseMenu(ISleekElement) LevelVolume<SafezoneVolume, SafezoneVolumeManager>.Shape DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors SafezoneVolume() public SafezoneVolume() Fields noBuildables public bool noBuildables Field Value bool noWeapons public bool noWeapons Field Value bool Methods CreateMenu() public override ISleekElement CreateMenu() Returns ISleekElement Start() protected override void Start() readHierarchyItem(IFormattedFileReader) protected override void readHierarchyItem(IFormattedFileReader reader) Parameters reader IFormattedFileReader writeHierarchyItem(IFormattedFileWriter) protected override void writeHierarchyItem(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter"
  },
  "api/SDG.Unturned.SafezoneVolumeManager.html": {
    "href": "api/SDG.Unturned.SafezoneVolumeManager.html",
    "title": "Class SafezoneVolumeManager | Unturned Analyse Doc",
    "keywords": "Class SafezoneVolumeManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SafezoneVolumeManager : VolumeManager<SafezoneVolume, SafezoneVolumeManager> Inheritance object VolumeManagerBase VolumeManager<SafezoneVolume, SafezoneVolumeManager> SafezoneVolumeManager Inherited Members VolumeManager<SafezoneVolume, SafezoneVolumeManager>.allowInstantiation VolumeManager<SafezoneVolume, SafezoneVolumeManager>.supportsFalloff VolumeManager<SafezoneVolume, SafezoneVolumeManager>.allVolumes VolumeManager<SafezoneVolume, SafezoneVolumeManager>.Get() VolumeManager<SafezoneVolume, SafezoneVolumeManager>.GetAllVolumes() VolumeManager<SafezoneVolume, SafezoneVolumeManager>.GetRandomVolumeOrNull() VolumeManager<SafezoneVolume, SafezoneVolumeManager>.ForceUpdateEditorVisibility() VolumeManager<SafezoneVolume, SafezoneVolumeManager>.GetFirstOverlappingVolume(Vector3) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.IsPositionInsideAnyVolume(Vector3) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.Raycast(Ray, out RaycastHit, float) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.EnumerateAllVolumes() VolumeManager<SafezoneVolume, SafezoneVolumeManager>.Raycast(Ray, out RaycastHit, out SafezoneVolume, float) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.AddVolume(SafezoneVolume) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.RemoveVolume(SafezoneVolume) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.OnUpdateGizmos(RuntimeGizmos) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.SetDebugColor(Color) VolumeManager<SafezoneVolume, SafezoneVolumeManager>.Visibility VolumeManager<SafezoneVolume, SafezoneVolumeManager>.DefaultVisibility VolumeManagerBase.Raycast(Ray, out RaycastHit, float) VolumeManagerBase.InstantiateVolume(Vector3, Quaternion, Vector3) VolumeManagerBase.EnumerateAllVolumes() VolumeManagerBase.FriendlyName VolumeManagerBase.Visibility object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SafezoneVolumeManager() public SafezoneVolumeManager()"
  },
  "api/SDG.Unturned.SalvageBarricadeRequestHandler.html": {
    "href": "api/SDG.Unturned.SalvageBarricadeRequestHandler.html",
    "title": "Delegate SalvageBarricadeRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate SalvageBarricadeRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete] public delegate void SalvageBarricadeRequestHandler(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ref bool shouldAllow) Parameters steamID CSteamID x byte y byte plant ushort index ushort shouldAllow bool Constructors SalvageBarricadeRequestHandler(object, IntPtr) public SalvageBarricadeRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, byte, byte, ushort, ushort, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters steamID CSteamID x byte y byte plant ushort index ushort shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(CSteamID, byte, byte, ushort, ushort, ref bool) public virtual void Invoke(CSteamID steamID, byte x, byte y, ushort plant, ushort index, ref bool shouldAllow) Parameters steamID CSteamID x byte y byte plant ushort index ushort shouldAllow bool"
  },
  "api/SDG.Unturned.SalvageStructureRequestHandler.html": {
    "href": "api/SDG.Unturned.SalvageStructureRequestHandler.html",
    "title": "Delegate SalvageStructureRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate SalvageStructureRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete] public delegate void SalvageStructureRequestHandler(CSteamID steamID, byte x, byte y, ushort index, ref bool shouldAllow) Parameters steamID CSteamID x byte y byte index ushort shouldAllow bool Constructors SalvageStructureRequestHandler(object, IntPtr) public SalvageStructureRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, byte, byte, ushort, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID steamID, byte x, byte y, ushort index, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters steamID CSteamID x byte y byte index ushort shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(CSteamID, byte, byte, ushort, ref bool) public virtual void Invoke(CSteamID steamID, byte x, byte y, ushort index, ref bool shouldAllow) Parameters steamID CSteamID x byte y byte index ushort shouldAllow bool"
  },
  "api/SDG.Unturned.SaveHandler.html": {
    "href": "api/SDG.Unturned.SaveHandler.html",
    "title": "Delegate SaveHandler | Unturned Analyse Doc",
    "keywords": "Delegate SaveHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SaveHandler() Constructors SaveHandler(object, IntPtr) public SaveHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.SaveManager.html": {
    "href": "api/SDG.Unturned.SaveManager.html",
    "title": "Class SaveManager | Unturned Analyse Doc",
    "keywords": "Class SaveManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SaveManager : SteamCaller Inheritance object SteamCaller SaveManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors SaveManager() public SaveManager() Fields onPostSave public static SaveHandler onPostSave Field Value SaveHandler onPreSave public static SaveHandler onPreSave Field Value SaveHandler Methods save() public static void save()"
  },
  "api/SDG.Unturned.ScopedObjectUndo.html": {
    "href": "api/SDG.Unturned.ScopedObjectUndo.html",
    "title": "Class ScopedObjectUndo | Unturned Analyse Doc",
    "keywords": "Class ScopedObjectUndo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ScopedObjectUndo : IDisposable Inheritance object ScopedObjectUndo Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ScopedObjectUndo(object) public ScopedObjectUndo(object modifiedObject) Parameters modifiedObject object Methods Dispose() public void Dispose()"
  },
  "api/SDG.Unturned.ScreenEx.html": {
    "href": "api/SDG.Unturned.ScreenEx.html",
    "title": "Class ScreenEx | Unturned Analyse Doc",
    "keywords": "Class ScreenEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll Extensions to the built-in Screen class. We have run into multiple problems with the Screen.resolutions property over the years, so this class aims to protect against bad data. public static class ScreenEx Inheritance object ScreenEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetCurrentAspectRatio() public static float GetCurrentAspectRatio() Returns float GetHighestRecommendedResolution() public static Resolution GetHighestRecommendedResolution() Returns Resolution GetRecommendedResolutions() public static Resolution[] GetRecommendedResolutions() Returns Resolution[] GetWidthForLayout() public static int GetWidthForLayout() Returns int"
  },
  "api/SDG.Unturned.Scrolling.html": {
    "href": "api/SDG.Unturned.Scrolling.html",
    "title": "Class Scrolling | Unturned Analyse Doc",
    "keywords": "Class Scrolling Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Scrolling : MonoBehaviour Inheritance object Scrolling Constructors Scrolling() public Scrolling() Fields material public Material material Field Value Material x public float x Field Value float y public float y Field Value float"
  },
  "api/SDG.Unturned.SearchFilterUtil.html": {
    "href": "api/SDG.Unturned.SearchFilterUtil.html",
    "title": "Class SearchFilterUtil | Unturned Analyse Doc",
    "keywords": "Class SearchFilterUtil Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class SearchFilterUtil Inheritance object SearchFilterUtil Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods parseKeyValue(string, string, out string) public static bool parseKeyValue(string filter, string key, out string value) Parameters filter string key string value string Returns bool"
  },
  "api/SDG.Unturned.Seated.html": {
    "href": "api/SDG.Unturned.Seated.html",
    "title": "Delegate Seated | Unturned Analyse Doc",
    "keywords": "Delegate Seated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Seated(bool isDriver, bool inVehicle, bool wasVehicle, InteractableVehicle oldVehicle, InteractableVehicle newVehicle) Parameters isDriver bool inVehicle bool wasVehicle bool oldVehicle InteractableVehicle newVehicle InteractableVehicle Constructors Seated(object, IntPtr) public Seated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, bool, bool, InteractableVehicle, InteractableVehicle, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isDriver, bool inVehicle, bool wasVehicle, InteractableVehicle oldVehicle, InteractableVehicle newVehicle, AsyncCallback callback, object @object) Parameters isDriver bool inVehicle bool wasVehicle bool oldVehicle InteractableVehicle newVehicle InteractableVehicle callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool, bool, bool, InteractableVehicle, InteractableVehicle) public virtual void Invoke(bool isDriver, bool inVehicle, bool wasVehicle, InteractableVehicle oldVehicle, InteractableVehicle newVehicle) Parameters isDriver bool inVehicle bool wasVehicle bool oldVehicle InteractableVehicle newVehicle InteractableVehicle"
  },
  "api/SDG.Unturned.SelectedItem.html": {
    "href": "api/SDG.Unturned.SelectedItem.html",
    "title": "Delegate SelectedItem | Unturned Analyse Doc",
    "keywords": "Delegate SelectedItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SelectedItem(byte page, byte x, byte y) Parameters page byte x byte y byte Constructors SelectedItem(object, IntPtr) public SelectedItem(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte page, byte x, byte y, AsyncCallback callback, object @object) Parameters page byte x byte y byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte, byte) public virtual void Invoke(byte page, byte x, byte y) Parameters page byte x byte y byte"
  },
  "api/SDG.Unturned.SelectionTool.ESelectionMode.html": {
    "href": "api/SDG.Unturned.SelectionTool.ESelectionMode.html",
    "title": "Enum SelectionTool.ESelectionMode | Unturned Analyse Doc",
    "keywords": "Enum SelectionTool.ESelectionMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum SelectionTool.ESelectionMode Fields POSITION = 0 ROTATION = 1 SCALE = 2"
  },
  "api/SDG.Unturned.SelectionTool.html": {
    "href": "api/SDG.Unturned.SelectionTool.html",
    "title": "Class SelectionTool | Unturned Analyse Doc",
    "keywords": "Class SelectionTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SelectionTool : IDevkitTool Inheritance object SelectionTool Implements IDevkitTool Derived NodesEditor VolumesEditor Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SelectionTool() public SelectionTool() Fields areaSelection protected HashSet<DevkitSelection> areaSelection Field Value HashSet<DevkitSelection> beginAreaSelect protected Vector3 beginAreaSelect Field Value Vector3 beginAreaSelectTime protected float beginAreaSelectTime Field Value float copyBuffer protected List<GameObject> copyBuffer Field Value List<GameObject> copySelectionDelay protected List<GameObject> copySelectionDelay Field Value List<GameObject> handlePosition protected Vector3 handlePosition Field Value Vector3 handleRotation protected Quaternion handleRotation Field Value Quaternion hasReferenceRotation protected bool hasReferenceRotation Field Value bool hasReferenceScale protected bool hasReferenceScale Field Value bool isAreaSelecting protected bool isAreaSelecting Field Value bool isDragging protected bool isDragging Field Value bool pendingClickSelection protected DevkitSelection pendingClickSelection Field Value DevkitSelection referencePosition protected Vector3 referencePosition Field Value Vector3 referenceRotation protected Quaternion referenceRotation Field Value Quaternion referenceScale protected Vector3 referenceScale Field Value Vector3 Properties mode public SelectionTool.ESelectionMode mode { get; set; } Property Value SelectionTool.ESelectionMode Methods EnumerateBoxSelectableObjects() protected virtual IEnumerable<GameObject> EnumerateBoxSelectableObjects() Returns IEnumerable<GameObject> HasBoxSelectableObjects() protected virtual bool HasBoxSelectableObjects() Returns bool RaycastSelectableObjects(Ray, out RaycastHit) protected virtual bool RaycastSelectableObjects(Ray ray, out RaycastHit hitInfo) Parameters ray Ray hitInfo RaycastHit Returns bool RequestInstantiation(Vector3) protected virtual void RequestInstantiation(Vector3 position) Parameters position Vector3 dequip() public virtual void dequip() equip() public virtual void equip() handleGLRender() protected void handleGLRender() moveHandle(Vector3, Quaternion, Vector3, bool, bool) protected void moveHandle(Vector3 position, Quaternion rotation, Vector3 scale, bool doRotation, bool hasScale) Parameters position Vector3 rotation Quaternion scale Vector3 doRotation bool hasScale bool transformSelection() protected void transformSelection() update() public virtual void update()"
  },
  "api/SDG.Unturned.ServerConfigData.html": {
    "href": "api/SDG.Unturned.ServerConfigData.html",
    "title": "Class ServerConfigData | Unturned Analyse Doc",
    "keywords": "Class ServerConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerConfigData Inheritance object ServerConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerConfigData() public ServerConfigData() Fields BattlEye_Secure public bool BattlEye_Secure Field Value bool Chat_Always_Use_Rich_Text Should vanilla text chat messages always use rich text? Servers with plugins may want to enable because IMGUI does not fade out rich text. Kept because plugins might be setting this directly, but it no longer does anything. [Obsolete(\"uGUI supports rich text fade out.\")] public bool Chat_Always_Use_Rich_Text Field Value bool Enable_Kick_Input_Spam Should we kick players after detecting spammed calls to askInput? public bool Enable_Kick_Input_Spam Field Value bool Enable_Kick_Input_Timeout Should we kick players if they do not submit inputs for a long time? public bool Enable_Kick_Input_Timeout Field Value bool Enable_Scheduled_Shutdown Should the server automatically shutdown at a configured time? public bool Enable_Scheduled_Shutdown Field Value bool Enable_Update_Shutdown Should the server automatically shutdown when a new version is detected? public bool Enable_Update_Shutdown Field Value bool Fake_Lag_Damage_Penalty_Multiplier PvP damage multiplier while under fake lag penalty. public float Fake_Lag_Damage_Penalty_Multiplier Field Value float Fake_Lag_Log_Warnings Whether fake lag detection should log to command output. False positives are relatively likely when client framerate hitches (e.g. loading dense region), so this is best used for tuning threshold rather than bans. public bool Fake_Lag_Log_Warnings Field Value bool Fake_Lag_Threshold_Seconds Ordinarily the server should be receiving multiple input packets per second from a client. If more than this amount of time passes between input packets we flag the client as potentially using a lag switch, and modify their stats (e.g. reduce player damage) for a corresponding duration. Minimum value is PlayerInput.MIN_FAKE_LAG_THRESHOLD_SECONDS. public float Fake_Lag_Threshold_Seconds Field Value float Join_Rate_Limit_Window_Seconds If ready-to-connect messages are received more than twice from the same client in less than this many seconds they will be kicked. public float Join_Rate_Limit_Window_Seconds Field Value float Max_Packets_Per_Second public float Max_Packets_Per_Second Field Value float Max_Ping_Milliseconds public uint Max_Ping_Milliseconds Field Value uint Rate_Limit_Kick_Threshold If a rate-limited method is called this many times within cooldown window the client will be kicked. For example a value of 1 means the client will be kicked the first time they call the method off-cooldown. (not recommended) public int Rate_Limit_Kick_Threshold Field Value int Scheduled_Shutdown_Time When the server should shutdown if Enable_Scheduled_Shutdown is true. public string Scheduled_Shutdown_Time Field Value string Scheduled_Shutdown_Warnings Broadcast \"shutting down for scheduled maintenance\" warnings at these intervals. public string[] Scheduled_Shutdown_Warnings Field Value string[] Timeout_Game_Seconds public float Timeout_Game_Seconds Field Value float Timeout_Queue_Seconds public float Timeout_Queue_Seconds Field Value float Update_Shutdown_Warnings Broadcast \"shutting down for update\" warnings at these intervals. public string[] Update_Shutdown_Warnings Field Value string[] Update_Steam_Beta_Name Unfortunately the server does not have a way to automatically determine the current beta branch. public string Update_Steam_Beta_Name Field Value string Use_FakeIP If true, opt-in to SteamNetworkingSockets \"FakeIP\" system. https://partner.steamgames.com/doc/api/ISteamNetworkingSockets#1 public bool Use_FakeIP Field Value bool VAC_Secure public bool VAC_Secure Field Value bool Validate_EconInfo_Hash Should the EconInfo.json hash be checked by the server? public bool Validate_EconInfo_Hash Field Value bool"
  },
  "api/SDG.Unturned.ServerConnectParameters.html": {
    "href": "api/SDG.Unturned.ServerConnectParameters.html",
    "title": "Class ServerConnectParameters | Unturned Analyse Doc",
    "keywords": "Class ServerConnectParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll Parameters for connecting to a game server. Admittedly there are other parameters to the Connect method, but those are for detecting advertisement discrepencies and can be null. public class ServerConnectParameters Inheritance object ServerConnectParameters Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerConnectParameters(CSteamID, string) public ServerConnectParameters(CSteamID steamId, string password) Parameters steamId CSteamID password string ServerConnectParameters(IPv4Address, ushort, ushort, string) public ServerConnectParameters(IPv4Address address, ushort queryPort, ushort connectionPort, string password) Parameters address IPv4Address queryPort ushort connectionPort ushort password string Fields address Server's public IP address of a Steam \"Fake IP\" address. public IPv4Address address Field Value IPv4Address connectionPort Port for game traffic. i.e., Steam manages the query port socket while we manage the connection port socket. The game assumes it's the query port plus one. NOTE HOWEVER after the introduction of \"Fake IP\" support (2023-12-07) the connection port is the same as the query port for fake IPs. In keeping with the spirit of fake values to simplify existing code, we act as if the connection port is plus one except in the appropriate ClientTransport code when the fake IP is detected. public ushort connectionPort Field Value ushort password public string password Field Value string queryPort Port for Steam's \"A2S\" query system. This the port we refer to when sharing a server's address (e.g., 127.0.0.1:queryport). public ushort queryPort Field Value ushort steamId Referred to as \"Server Code\" in menus. Used if address is zero. public CSteamID steamId Field Value CSteamID"
  },
  "api/SDG.Unturned.ServerFormattingChatMessageHandler.html": {
    "href": "api/SDG.Unturned.ServerFormattingChatMessageHandler.html",
    "title": "Delegate ServerFormattingChatMessageHandler | Unturned Analyse Doc",
    "keywords": "Delegate ServerFormattingChatMessageHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerFormattingChatMessageHandler(SteamPlayer speaker, EChatMode mode, ref string text) Parameters speaker SteamPlayer mode EChatMode text string Constructors ServerFormattingChatMessageHandler(object, IntPtr) public ServerFormattingChatMessageHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, EChatMode, ref string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer speaker, EChatMode mode, ref string text, AsyncCallback callback, object @object) Parameters speaker SteamPlayer mode EChatMode text string callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref string, IAsyncResult) public virtual void EndInvoke(ref string text, IAsyncResult result) Parameters text string result IAsyncResult Invoke(SteamPlayer, EChatMode, ref string) public virtual void Invoke(SteamPlayer speaker, EChatMode mode, ref string text) Parameters speaker SteamPlayer mode EChatMode text string"
  },
  "api/SDG.Unturned.ServerInstanceMethod-1.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-1.html",
    "title": "Class ServerInstanceMethod<T> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T> : ServerInstanceMethodBase Type Parameters T Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T> Invoke(NetId, ENetReliability, T) public void Invoke(NetId netId, ENetReliability reliability, T arg) Parameters netId NetId reliability ENetReliability arg T"
  },
  "api/SDG.Unturned.ServerInstanceMethod-2.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-2.html",
    "title": "Class ServerInstanceMethod<T1, T2> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T1, T2> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T1, T2> : ServerInstanceMethodBase Type Parameters T1 T2 Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T1, T2> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T1, T2> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T1, T2> Invoke(NetId, ENetReliability, T1, T2) public void Invoke(NetId netId, ENetReliability reliability, T1 arg1, T2 arg2) Parameters netId NetId reliability ENetReliability arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ServerInstanceMethod-3.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-3.html",
    "title": "Class ServerInstanceMethod<T1, T2, T3> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T1, T2, T3> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T1, T2, T3> : ServerInstanceMethodBase Type Parameters T1 T2 T3 Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T1, T2, T3> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T1, T2, T3> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T1, T2, T3> Invoke(NetId, ENetReliability, T1, T2, T3) public void Invoke(NetId netId, ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3) Parameters netId NetId reliability ENetReliability arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ServerInstanceMethod-4.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-4.html",
    "title": "Class ServerInstanceMethod<T1, T2, T3, T4> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T1, T2, T3, T4> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T1, T2, T3, T4> : ServerInstanceMethodBase Type Parameters T1 T2 T3 T4 Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T1, T2, T3, T4> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T1, T2, T3, T4> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T1, T2, T3, T4> Invoke(NetId, ENetReliability, T1, T2, T3, T4) public void Invoke(NetId netId, ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters netId NetId reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ServerInstanceMethod-5.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-5.html",
    "title": "Class ServerInstanceMethod<T1, T2, T3, T4, T5> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T1, T2, T3, T4, T5> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T1, T2, T3, T4, T5> : ServerInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T1, T2, T3, T4, T5> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T1, T2, T3, T4, T5> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T1, T2, T3, T4, T5> Invoke(NetId, ENetReliability, T1, T2, T3, T4, T5) public void Invoke(NetId netId, ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters netId NetId reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ServerInstanceMethod-6.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-6.html",
    "title": "Class ServerInstanceMethod<T1, T2, T3, T4, T5, T6> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T1, T2, T3, T4, T5, T6> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T1, T2, T3, T4, T5, T6> : ServerInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T1, T2, T3, T4, T5, T6> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T1, T2, T3, T4, T5, T6> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T1, T2, T3, T4, T5, T6> Invoke(NetId, ENetReliability, T1, T2, T3, T4, T5, T6) public void Invoke(NetId netId, ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters netId NetId reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ServerInstanceMethod-7.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-7.html",
    "title": "Class ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> : ServerInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> Invoke(NetId, ENetReliability, T1, T2, T3, T4, T5, T6, T7) public void Invoke(NetId netId, ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters netId NetId reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ServerInstanceMethod-8.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod-8.html",
    "title": "Class ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> : ServerInstanceMethodBase Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Invoke(NetId, ENetReliability, T1, T2, T3, T4, T5, T6, T7, T8) public void Invoke(NetId netId, ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters netId NetId reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ServerInstanceMethod.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethod.html",
    "title": "Class ServerInstanceMethod | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethod Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerInstanceMethod : ServerInstanceMethodBase Inheritance object ServerMethodHandle ServerInstanceMethodBase ServerInstanceMethod Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(Type, string) public static ServerInstanceMethod Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerInstanceMethod Invoke(NetId, ENetReliability) public void Invoke(NetId netId, ENetReliability reliability) Parameters netId NetId reliability ENetReliability Invoke(NetId, ENetReliability, Action<NetPakWriter>) public void Invoke(NetId netId, ENetReliability reliability, Action<NetPakWriter> callback) Parameters netId NetId reliability ENetReliability callback Action<NetPakWriter>"
  },
  "api/SDG.Unturned.ServerInstanceMethodBase.html": {
    "href": "api/SDG.Unturned.ServerInstanceMethodBase.html",
    "title": "Class ServerInstanceMethodBase | Unturned Analyse Doc",
    "keywords": "Class ServerInstanceMethodBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class ServerInstanceMethodBase : ServerMethodHandle Inheritance object ServerMethodHandle ServerInstanceMethodBase Derived ServerInstanceMethod ServerInstanceMethod<T> ServerInstanceMethod<T1, T2> ServerInstanceMethod<T1, T2, T3> ServerInstanceMethod<T1, T2, T3, T4> ServerInstanceMethod<T1, T2, T3, T4, T5> ServerInstanceMethod<T1, T2, T3, T4, T5, T6> ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members ServerMethodHandle.serverMethodInfo ServerMethodHandle.ToString() ServerMethodHandle.GetInternal<THandle, TWriteDelegate>(Type, string, Func<ServerMethodInfo, TWriteDelegate, THandle>) ServerMethodHandle.GetWriterWithStaticHeader() ServerMethodHandle.SendAndLoopbackIfLocal(ENetReliability, NetPakWriter) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerInstanceMethodBase(ServerMethodInfo) protected ServerInstanceMethodBase(ServerMethodInfo serverMethodInfo) Parameters serverMethodInfo ServerMethodInfo Methods GetWriterWithInstanceHeader(NetId) protected NetPakWriter GetWriterWithInstanceHeader(NetId netId) Parameters netId NetId Returns NetPakWriter"
  },
  "api/SDG.Unturned.ServerInvocationContext.EOrigin.html": {
    "href": "api/SDG.Unturned.ServerInvocationContext.EOrigin.html",
    "title": "Enum ServerInvocationContext.EOrigin | Unturned Analyse Doc",
    "keywords": "Enum ServerInvocationContext.EOrigin Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum ServerInvocationContext.EOrigin Fields Loopback = 1 Obsolete = 2 Remote = 0"
  },
  "api/SDG.Unturned.ServerInvocationContext.html": {
    "href": "api/SDG.Unturned.ServerInvocationContext.html",
    "title": "Struct ServerInvocationContext | Unturned Analyse Doc",
    "keywords": "Struct ServerInvocationContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll Optional parameter for error logging and responding to the invoker. public readonly struct ServerInvocationContext Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields origin public readonly ServerInvocationContext.EOrigin origin Field Value ServerInvocationContext.EOrigin reader public readonly NetPakReader reader Field Value NetPakReader Methods GetCallingPlayer() public SteamPlayer GetCallingPlayer() Returns SteamPlayer GetPlayer() public Player GetPlayer() Returns Player GetTransportConnection() public ITransportConnection GetTransportConnection() Returns ITransportConnection Kick(string) public void Kick(string reason) Parameters reason string LogWarning(string) [Conditional(\"UNITY_EDITOR\")] [Conditional(\"DEVELOPMENT_BUILD\")] [Conditional(\"DEBUG_NETINVOKABLES\")] public void LogWarning(string message) Parameters message string ReadParameterFailed(string) [Conditional(\"UNITY_EDITOR\")] [Conditional(\"DEVELOPMENT_BUILD\")] [Conditional(\"DEBUG_NETINVOKABLES\")] public void ReadParameterFailed(string parameterName) Parameters parameterName string"
  },
  "api/SDG.Unturned.ServerListComparer_AnticheatDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_AnticheatDefault.html",
    "title": "Class ServerListComparer_AnticheatDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_AnticheatDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_AnticheatDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_AnticheatDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_AnticheatInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_AnticheatDefault() public ServerListComparer_AnticheatDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_AnticheatInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_AnticheatInverted.html",
    "title": "Class ServerListComparer_AnticheatInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_AnticheatInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_AnticheatInverted : ServerListComparer_AnticheatDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_AnticheatDefault ServerListComparer_AnticheatInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_AnticheatInverted() public ServerListComparer_AnticheatInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_Base.html": {
    "href": "api/SDG.Unturned.ServerListComparer_Base.html",
    "title": "Class ServerListComparer_Base | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_Base Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class ServerListComparer_Base : IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_AnticheatDefault ServerListComparer_CheatsDefault ServerListComparer_CombatDefault ServerListComparer_FullnessDefault ServerListComparer_GoldDefault ServerListComparer_MapAscending ServerListComparer_MaxPlayersDefault ServerListComparer_MonetizationDefault ServerListComparer_NameAscending ServerListComparer_PasswordDefault ServerListComparer_PerspectiveDefault ServerListComparer_PingAscending ServerListComparer_PlayersDefault ServerListComparer_PluginsDefault ServerListComparer_UtilityScore ServerListComparer_WorkshopDefault Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_Base() protected ServerListComparer_Base() Methods Compare(SteamServerAdvertisement, SteamServerAdvertisement) public int Compare(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected abstract int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_CheatsDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_CheatsDefault.html",
    "title": "Class ServerListComparer_CheatsDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_CheatsDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_CheatsDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_CheatsDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_CheatsInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_CheatsDefault() public ServerListComparer_CheatsDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_CheatsInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_CheatsInverted.html",
    "title": "Class ServerListComparer_CheatsInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_CheatsInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_CheatsInverted : ServerListComparer_CheatsDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_CheatsDefault ServerListComparer_CheatsInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_CheatsInverted() public ServerListComparer_CheatsInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_CombatDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_CombatDefault.html",
    "title": "Class ServerListComparer_CombatDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_CombatDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_CombatDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_CombatDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_CombatInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_CombatDefault() public ServerListComparer_CombatDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_CombatInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_CombatInverted.html",
    "title": "Class ServerListComparer_CombatInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_CombatInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_CombatInverted : ServerListComparer_CombatDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_CombatDefault ServerListComparer_CombatInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_CombatInverted() public ServerListComparer_CombatInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_FullnessDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_FullnessDefault.html",
    "title": "Class ServerListComparer_FullnessDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_FullnessDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by normalized player count high to low. public class ServerListComparer_FullnessDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_FullnessDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_FullnessInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_FullnessDefault() public ServerListComparer_FullnessDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_FullnessInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_FullnessInverted.html",
    "title": "Class ServerListComparer_FullnessInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_FullnessInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by normalized player count low to high. public class ServerListComparer_FullnessInverted : ServerListComparer_FullnessDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_FullnessDefault ServerListComparer_FullnessInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_FullnessInverted() public ServerListComparer_FullnessInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_GoldDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_GoldDefault.html",
    "title": "Class ServerListComparer_GoldDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_GoldDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_GoldDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_GoldDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_GoldInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_GoldDefault() public ServerListComparer_GoldDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_GoldInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_GoldInverted.html",
    "title": "Class ServerListComparer_GoldInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_GoldInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_GoldInverted : ServerListComparer_GoldDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_GoldDefault ServerListComparer_GoldInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_GoldInverted() public ServerListComparer_GoldInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_MapAscending.html": {
    "href": "api/SDG.Unturned.ServerListComparer_MapAscending.html",
    "title": "Class ServerListComparer_MapAscending | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_MapAscending Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by map name A to Z. public class ServerListComparer_MapAscending : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_MapAscending Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_MapDescending Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_MapAscending() public ServerListComparer_MapAscending() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_MapDescending.html": {
    "href": "api/SDG.Unturned.ServerListComparer_MapDescending.html",
    "title": "Class ServerListComparer_MapDescending | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_MapDescending Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by map name Z to A. public class ServerListComparer_MapDescending : ServerListComparer_MapAscending, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_MapAscending ServerListComparer_MapDescending Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_MapDescending() public ServerListComparer_MapDescending() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_MaxPlayersDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_MaxPlayersDefault.html",
    "title": "Class ServerListComparer_MaxPlayersDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_MaxPlayersDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by max player count high to low. public class ServerListComparer_MaxPlayersDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_MaxPlayersDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_MaxPlayersInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_MaxPlayersDefault() public ServerListComparer_MaxPlayersDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_MaxPlayersInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_MaxPlayersInverted.html",
    "title": "Class ServerListComparer_MaxPlayersInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_MaxPlayersInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by max player count low to high. public class ServerListComparer_MaxPlayersInverted : ServerListComparer_MaxPlayersDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_MaxPlayersDefault ServerListComparer_MaxPlayersInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_MaxPlayersInverted() public ServerListComparer_MaxPlayersInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_MonetizationDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_MonetizationDefault.html",
    "title": "Class ServerListComparer_MonetizationDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_MonetizationDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_MonetizationDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_MonetizationDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_MonetizationInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_MonetizationDefault() public ServerListComparer_MonetizationDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_MonetizationInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_MonetizationInverted.html",
    "title": "Class ServerListComparer_MonetizationInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_MonetizationInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_MonetizationInverted : ServerListComparer_MonetizationDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_MonetizationDefault ServerListComparer_MonetizationInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_MonetizationInverted() public ServerListComparer_MonetizationInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_NameAscending.html": {
    "href": "api/SDG.Unturned.ServerListComparer_NameAscending.html",
    "title": "Class ServerListComparer_NameAscending | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_NameAscending Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by name A to Z. public class ServerListComparer_NameAscending : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_NameAscending Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_NameDescending Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_NameAscending() public ServerListComparer_NameAscending() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_NameDescending.html": {
    "href": "api/SDG.Unturned.ServerListComparer_NameDescending.html",
    "title": "Class ServerListComparer_NameDescending | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_NameDescending Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by name Z to A. public class ServerListComparer_NameDescending : ServerListComparer_NameAscending, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_NameAscending ServerListComparer_NameDescending Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_NameDescending() public ServerListComparer_NameDescending() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PasswordDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PasswordDefault.html",
    "title": "Class ServerListComparer_PasswordDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PasswordDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_PasswordDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PasswordDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_PasswordInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PasswordDefault() public ServerListComparer_PasswordDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PasswordInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PasswordInverted.html",
    "title": "Class ServerListComparer_PasswordInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PasswordInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_PasswordInverted : ServerListComparer_PasswordDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PasswordDefault ServerListComparer_PasswordInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PasswordInverted() public ServerListComparer_PasswordInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PerspectiveDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PerspectiveDefault.html",
    "title": "Class ServerListComparer_PerspectiveDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PerspectiveDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_PerspectiveDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PerspectiveDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_PerspectiveInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PerspectiveDefault() public ServerListComparer_PerspectiveDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PerspectiveInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PerspectiveInverted.html",
    "title": "Class ServerListComparer_PerspectiveInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PerspectiveInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_PerspectiveInverted : ServerListComparer_PerspectiveDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PerspectiveDefault ServerListComparer_PerspectiveInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PerspectiveInverted() public ServerListComparer_PerspectiveInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PingAscending.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PingAscending.html",
    "title": "Class ServerListComparer_PingAscending | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PingAscending Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by ping low to high. public class ServerListComparer_PingAscending : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PingAscending Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_PingDescending Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PingAscending() public ServerListComparer_PingAscending() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PingDescending.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PingDescending.html",
    "title": "Class ServerListComparer_PingDescending | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PingDescending Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by ping high to low. public class ServerListComparer_PingDescending : ServerListComparer_PingAscending, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PingAscending ServerListComparer_PingDescending Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PingDescending() public ServerListComparer_PingDescending() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PlayersDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PlayersDefault.html",
    "title": "Class ServerListComparer_PlayersDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PlayersDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by player count high to low. public class ServerListComparer_PlayersDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PlayersDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_PlayersInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PlayersDefault() public ServerListComparer_PlayersDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PlayersInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PlayersInverted.html",
    "title": "Class ServerListComparer_PlayersInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PlayersInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll Sort servers by player count low to high. public class ServerListComparer_PlayersInverted : ServerListComparer_PlayersDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PlayersDefault ServerListComparer_PlayersInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PlayersInverted() public ServerListComparer_PlayersInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PluginsDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PluginsDefault.html",
    "title": "Class ServerListComparer_PluginsDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PluginsDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_PluginsDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PluginsDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_PluginsInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PluginsDefault() public ServerListComparer_PluginsDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_PluginsInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_PluginsInverted.html",
    "title": "Class ServerListComparer_PluginsInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_PluginsInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_PluginsInverted : ServerListComparer_PluginsDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_PluginsDefault ServerListComparer_PluginsInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_PluginsInverted() public ServerListComparer_PluginsInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_UtilityScore.html": {
    "href": "api/SDG.Unturned.ServerListComparer_UtilityScore.html",
    "title": "Class ServerListComparer_UtilityScore | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_UtilityScore Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_UtilityScore : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_UtilityScore Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_UtilityScore() public ServerListComparer_UtilityScore() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_WorkshopDefault.html": {
    "href": "api/SDG.Unturned.ServerListComparer_WorkshopDefault.html",
    "title": "Class ServerListComparer_WorkshopDefault | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_WorkshopDefault Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_WorkshopDefault : ServerListComparer_Base, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_WorkshopDefault Implements IComparer<SteamServerAdvertisement> Derived ServerListComparer_WorkshopInverted Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_WorkshopDefault() public ServerListComparer_WorkshopDefault() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListComparer_WorkshopInverted.html": {
    "href": "api/SDG.Unturned.ServerListComparer_WorkshopInverted.html",
    "title": "Class ServerListComparer_WorkshopInverted | Unturned Analyse Doc",
    "keywords": "Class ServerListComparer_WorkshopInverted Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListComparer_WorkshopInverted : ServerListComparer_WorkshopDefault, IComparer<SteamServerAdvertisement> Inheritance object ServerListComparer_Base ServerListComparer_WorkshopDefault ServerListComparer_WorkshopInverted Implements IComparer<SteamServerAdvertisement> Inherited Members ServerListComparer_Base.Compare(SteamServerAdvertisement, SteamServerAdvertisement) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListComparer_WorkshopInverted() public ServerListComparer_WorkshopInverted() Methods CompareDetails(SteamServerAdvertisement, SteamServerAdvertisement) protected override int CompareDetails(SteamServerAdvertisement lhs, SteamServerAdvertisement rhs) Parameters lhs SteamServerAdvertisement rhs SteamServerAdvertisement Returns int"
  },
  "api/SDG.Unturned.ServerListCurationAsset.html": {
    "href": "api/SDG.Unturned.ServerListCurationAsset.html",
    "title": "Class ServerListCurationAsset | Unturned Analyse Doc",
    "keywords": "Class ServerListCurationAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListCurationAsset : Asset, IAssetErrorContext Inheritance object Asset ServerListCurationAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListCurationAsset() public ServerListCurationAsset() Properties FriendlyName public override string FriendlyName { get; } Property Value string Icon Optional image bundled alongside the asset file. public Texture2D Icon { get; protected set; } Property Value Texture2D Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.ServerListFilters.html": {
    "href": "api/SDG.Unturned.ServerListFilters.html",
    "title": "Class ServerListFilters | Unturned Analyse Doc",
    "keywords": "Class ServerListFilters Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerListFilters Inheritance object ServerListFilters Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerListFilters() public ServerListFilters() Fields attendance Nelson 2024-09-20: Changing default to any (from has players) because the default server list sort will now push empty servers to the bottom. public EAttendance attendance Field Value EAttendance battlEyeProtection public EBattlEyeProtectionFilter battlEyeProtection Field Value EBattlEyeProtectionFilter camera public ECameraMode camera Field Value ECameraMode cheats public ECheats cheats Field Value ECheats combat public ECombat combat Field Value ECombat gold public EServerListGoldFilter gold Field Value EServerListGoldFilter listSource public ESteamServerList listSource Field Value ESteamServerList mapNames public HashSet<string> mapNames Field Value HashSet<string> maxPing If >0, servers with ping higher than this will not be shown. public int maxPing Field Value int monetization public EServerMonetizationTag monetization Field Value EServerMonetizationTag notFull If true, only servers with available player slots are shown. Nelson 2024-09-20: Changing default to false because the default server list sort will now push them down from the top a little bit. public bool notFull Field Value bool password public EPassword password Field Value EPassword plugins public EPlugins plugins Field Value EPlugins presetId Assigned when a named preset is created. 0 is the default and should be replaced by a preset when loaded. -1 indicates the preset was modified. -2 and below are the default presets. public int presetId Field Value int presetName public string presetName Field Value string serverName public string serverName Field Value string vacProtection public EVACProtectionFilter vacProtection Field Value EVACProtectionFilter workshop public EWorkshop workshop Field Value EWorkshop Methods ClearMaps() public void ClearMaps() CopyFrom(ServerListFilters) public void CopyFrom(ServerListFilters source) Parameters source ServerListFilters GetLevels(List<LevelInfo>) public void GetLevels(List<LevelInfo> levels) Parameters levels List<LevelInfo> GetMapDisplayText() public string GetMapDisplayText() Returns string Read(byte, Block) public void Read(byte version, Block block) Parameters version byte block Block ToggleMap(LevelInfo) public bool ToggleMap(LevelInfo levelInfo) Parameters levelInfo LevelInfo Returns bool True if level was added to the list of maps. Write(Block) public void Write(Block block) Parameters block Block"
  },
  "api/SDG.Unturned.ServerMethodHandle.html": {
    "href": "api/SDG.Unturned.ServerMethodHandle.html",
    "title": "Class ServerMethodHandle | Unturned Analyse Doc",
    "keywords": "Class ServerMethodHandle Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class ServerMethodHandle Inheritance object ServerMethodHandle Derived ServerInstanceMethodBase ServerStaticMethod ServerStaticMethod<T> ServerStaticMethod<T1, T2> ServerStaticMethod<T1, T2, T3> ServerStaticMethod<T1, T2, T3, T4> ServerStaticMethod<T1, T2, T3, T4, T5> ServerStaticMethod<T1, T2, T3, T4, T5, T6> ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerMethodHandle(ServerMethodInfo) protected ServerMethodHandle(ServerMethodInfo serverMethodInfo) Parameters serverMethodInfo ServerMethodInfo Fields serverMethodInfo protected ServerMethodInfo serverMethodInfo Field Value ServerMethodInfo Methods GetInternal<THandle, TWriteDelegate>(Type, string, Func<ServerMethodInfo, TWriteDelegate, THandle>) protected static THandle GetInternal<THandle, TWriteDelegate>(Type declaringType, string methodName, Func<ServerMethodInfo, TWriteDelegate, THandle> makeHandle) where THandle : ServerMethodHandle where TWriteDelegate : Delegate Parameters declaringType Type methodName string makeHandle Func<ServerMethodInfo, TWriteDelegate, THandle> Returns THandle Type Parameters THandle TWriteDelegate GetWriterWithStaticHeader() protected NetPakWriter GetWriterWithStaticHeader() Returns NetPakWriter SendAndLoopbackIfLocal(ENetReliability, NetPakWriter) protected void SendAndLoopbackIfLocal(ENetReliability reliability, NetPakWriter writer) Parameters reliability ENetReliability writer NetPakWriter ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.ServerMethodInfo.html": {
    "href": "api/SDG.Unturned.ServerMethodInfo.html",
    "title": "Class ServerMethodInfo | Unturned Analyse Doc",
    "keywords": "Class ServerMethodInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerMethodInfo Inheritance object ServerMethodInfo Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerMethodInfo() public ServerMethodInfo() Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.ServerMethodReceive.html": {
    "href": "api/SDG.Unturned.ServerMethodReceive.html",
    "title": "Delegate ServerMethodReceive | Unturned Analyse Doc",
    "keywords": "Delegate ServerMethodReceive Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerMethodReceive(in ServerInvocationContext context) Parameters context ServerInvocationContext Constructors ServerMethodReceive(object, IntPtr) public ServerMethodReceive(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, AsyncCallback callback, object @object) Parameters context ServerInvocationContext callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext) public virtual void Invoke(in ServerInvocationContext context) Parameters context ServerInvocationContext"
  },
  "api/SDG.Unturned.ServerSavedata.html": {
    "href": "api/SDG.Unturned.ServerSavedata.html",
    "title": "Class ServerSavedata | Unturned Analyse Doc",
    "keywords": "Class ServerSavedata Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ServerSavedata Inheritance object ServerSavedata Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ServerSavedata() public ServerSavedata() Properties directory public static string directory { get; } Property Value string directoryName public static string directoryName { get; } Property Value string Methods GetBackupFilePath(string) If the file already exists when writing we will move it to this path. (public issue #4636) public static string GetBackupFilePath(string filePath) Parameters filePath string Returns string createFolder(string) public static void createFolder(string path) Parameters path string deleteFile(string) public static void deleteFile(string path) Parameters path string deleteFolder(string) public static void deleteFolder(string path) Parameters path string deserializeJSON<T>(string) public static T deserializeJSON<T>(string path) Parameters path string Returns T Type Parameters T fileExists(string) public static bool fileExists(string path) Parameters path string Returns bool folderExists(string) public static bool folderExists(string path) Parameters path string Returns bool openRiver(string, bool) public static River openRiver(string path, bool isReading) Parameters path string isReading bool Returns River populateJSON(string, object) public static void populateJSON(string path, object target) Parameters path string target object readBlock(string, byte) public static Block readBlock(string path, byte prefix) Parameters path string prefix byte Returns Block readData(string) public static Data readData(string path) Parameters path string Returns Data serializeJSON<T>(string, T) public static void serializeJSON<T>(string path, T instance) Parameters path string instance T Type Parameters T transformPath(string) public static string transformPath(string path) Parameters path string Returns string writeBlock(string, Block) public static void writeBlock(string path, Block block) Parameters path string block Block writeData(string, Data) public static void writeData(string path, Data data) Parameters path string data Data"
  },
  "api/SDG.Unturned.ServerSendingChatMessageHandler.html": {
    "href": "api/SDG.Unturned.ServerSendingChatMessageHandler.html",
    "title": "Delegate ServerSendingChatMessageHandler | Unturned Analyse Doc",
    "keywords": "Delegate ServerSendingChatMessageHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerSendingChatMessageHandler(ref string text, ref Color color, SteamPlayer fromPlayer, SteamPlayer toPlayer, EChatMode mode, ref string iconURL, ref bool useRichTextFormatting) Parameters text string color Color fromPlayer SteamPlayer toPlayer SteamPlayer mode EChatMode iconURL string useRichTextFormatting bool Constructors ServerSendingChatMessageHandler(object, IntPtr) public ServerSendingChatMessageHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ref string, ref Color, SteamPlayer, SteamPlayer, EChatMode, ref string, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ref string text, ref Color color, SteamPlayer fromPlayer, SteamPlayer toPlayer, EChatMode mode, ref string iconURL, ref bool useRichTextFormatting, AsyncCallback callback, object @object) Parameters text string color Color fromPlayer SteamPlayer toPlayer SteamPlayer mode EChatMode iconURL string useRichTextFormatting bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref string, ref Color, ref string, ref bool, IAsyncResult) public virtual void EndInvoke(ref string text, ref Color color, ref string iconURL, ref bool useRichTextFormatting, IAsyncResult result) Parameters text string color Color iconURL string useRichTextFormatting bool result IAsyncResult Invoke(ref string, ref Color, SteamPlayer, SteamPlayer, EChatMode, ref string, ref bool) public virtual void Invoke(ref string text, ref Color color, SteamPlayer fromPlayer, SteamPlayer toPlayer, EChatMode mode, ref string iconURL, ref bool useRichTextFormatting) Parameters text string color Color fromPlayer SteamPlayer toPlayer SteamPlayer mode EChatMode iconURL string useRichTextFormatting bool"
  },
  "api/SDG.Unturned.ServerSpawningItemDropHandler.html": {
    "href": "api/SDG.Unturned.ServerSpawningItemDropHandler.html",
    "title": "Delegate ServerSpawningItemDropHandler | Unturned Analyse Doc",
    "keywords": "Delegate ServerSpawningItemDropHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerSpawningItemDropHandler(Item item, ref Vector3 location, ref bool shouldAllow) Parameters item Item location Vector3 shouldAllow bool Constructors ServerSpawningItemDropHandler(object, IntPtr) public ServerSpawningItemDropHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Item, ref Vector3, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Item item, ref Vector3 location, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters item Item location Vector3 shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 location, ref bool shouldAllow, IAsyncResult result) Parameters location Vector3 shouldAllow bool result IAsyncResult Invoke(Item, ref Vector3, ref bool) public virtual void Invoke(Item item, ref Vector3 location, ref bool shouldAllow) Parameters item Item location Vector3 shouldAllow bool"
  },
  "api/SDG.Unturned.ServerStaticMethod-1.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-1.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T>.ReceiveDelegate(T arg) Parameters arg T Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T arg, AsyncCallback callback, object @object) Parameters arg T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T) public virtual void Invoke(T arg) Parameters arg T"
  },
  "api/SDG.Unturned.ServerStaticMethod-1.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-1.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T>.ReceiveDelegateWithContext(in ServerInvocationContext context, T arg) Parameters context ServerInvocationContext arg T Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T arg, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg T callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T) public virtual void Invoke(in ServerInvocationContext context, T arg) Parameters context ServerInvocationContext arg T"
  },
  "api/SDG.Unturned.ServerStaticMethod-1.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-1.html",
    "title": "Class ServerStaticMethod<T> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T> : ServerMethodHandle Type Parameters T Inheritance object ServerMethodHandle ServerStaticMethod<T> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T> Get(ServerStaticMethod<T>.ReceiveDelegate action) Parameters action ServerStaticMethod<T>.ReceiveDelegate Returns ServerStaticMethod<T> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T> Get(ServerStaticMethod<T>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T>.ReceiveDelegateWithContext Returns ServerStaticMethod<T> Get(Type, string) public static ServerStaticMethod<T> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T> Invoke(ENetReliability, T) public void Invoke(ENetReliability reliability, T arg) Parameters reliability ENetReliability arg T"
  },
  "api/SDG.Unturned.ServerStaticMethod-2.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-2.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T1, T2>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2>.ReceiveDelegate(T1 arg1, T2 arg2) Parameters arg1 T1 arg2 T2 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2) public virtual void Invoke(T1 arg1, T2 arg2) Parameters arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ServerStaticMethod-2.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-2.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T1, T2>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2>.ReceiveDelegateWithContext(in ServerInvocationContext context, T1 arg1, T2 arg2) Parameters context ServerInvocationContext arg1 T1 arg2 T2 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T1, T2, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T1 arg1, T2 arg2, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg1 T1 arg2 T2 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T1, T2) public virtual void Invoke(in ServerInvocationContext context, T1 arg1, T2 arg2) Parameters context ServerInvocationContext arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ServerStaticMethod-2.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-2.html",
    "title": "Class ServerStaticMethod<T1, T2> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T1, T2> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T1, T2> : ServerMethodHandle Type Parameters T1 T2 Inheritance object ServerMethodHandle ServerStaticMethod<T1, T2> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T1, T2> Get(ServerStaticMethod<T1, T2>.ReceiveDelegate action) Parameters action ServerStaticMethod<T1, T2>.ReceiveDelegate Returns ServerStaticMethod<T1, T2> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T1, T2> Get(ServerStaticMethod<T1, T2>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T1, T2>.ReceiveDelegateWithContext Returns ServerStaticMethod<T1, T2> Get(Type, string) public static ServerStaticMethod<T1, T2> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T1, T2> Invoke(ENetReliability, T1, T2) public void Invoke(ENetReliability reliability, T1 arg1, T2 arg2) Parameters reliability ENetReliability arg1 T1 arg2 T2"
  },
  "api/SDG.Unturned.ServerStaticMethod-3.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-3.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3) Parameters arg1 T1 arg2 T2 arg3 T3 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3) Parameters arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ServerStaticMethod-3.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-3.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T1, T2, T3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T1, T2, T3) public virtual void Invoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ServerStaticMethod-3.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-3.html",
    "title": "Class ServerStaticMethod<T1, T2, T3> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T1, T2, T3> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T1, T2, T3> : ServerMethodHandle Type Parameters T1 T2 T3 Inheritance object ServerMethodHandle ServerStaticMethod<T1, T2, T3> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T1, T2, T3> Get(ServerStaticMethod<T1, T2, T3>.ReceiveDelegate action) Parameters action ServerStaticMethod<T1, T2, T3>.ReceiveDelegate Returns ServerStaticMethod<T1, T2, T3> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T1, T2, T3> Get(ServerStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext Returns ServerStaticMethod<T1, T2, T3> Get(Type, string) public static ServerStaticMethod<T1, T2, T3> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T1, T2, T3> Invoke(ENetReliability, T1, T2, T3) public void Invoke(ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3) Parameters reliability ENetReliability arg1 T1 arg2 T2 arg3 T3"
  },
  "api/SDG.Unturned.ServerStaticMethod-4.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-4.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ServerStaticMethod-4.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-4.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T1, T2, T3, T4, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T1, T2, T3, T4) public virtual void Invoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ServerStaticMethod-4.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-4.html",
    "title": "Class ServerStaticMethod<T1, T2, T3, T4> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T1, T2, T3, T4> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T1, T2, T3, T4> : ServerMethodHandle Type Parameters T1 T2 T3 T4 Inheritance object ServerMethodHandle ServerStaticMethod<T1, T2, T3, T4> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T1, T2, T3, T4> Get(ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegate action) Parameters action ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegate Returns ServerStaticMethod<T1, T2, T3, T4> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T1, T2, T3, T4> Get(ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext Returns ServerStaticMethod<T1, T2, T3, T4> Get(Type, string) public static ServerStaticMethod<T1, T2, T3, T4> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T1, T2, T3, T4> Invoke(ENetReliability, T1, T2, T3, T4) public void Invoke(ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4"
  },
  "api/SDG.Unturned.ServerStaticMethod-5.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-5.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ServerStaticMethod-5.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-5.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T1, T2, T3, T4, T5, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T1, T2, T3, T4, T5) public virtual void Invoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ServerStaticMethod-5.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-5.html",
    "title": "Class ServerStaticMethod<T1, T2, T3, T4, T5> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T1, T2, T3, T4, T5> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T1, T2, T3, T4, T5> : ServerMethodHandle Type Parameters T1 T2 T3 T4 T5 Inheritance object ServerMethodHandle ServerStaticMethod<T1, T2, T3, T4, T5> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T1, T2, T3, T4, T5> Get(ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate Returns ServerStaticMethod<T1, T2, T3, T4, T5> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T1, T2, T3, T4, T5> Get(ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext Returns ServerStaticMethod<T1, T2, T3, T4, T5> Get(Type, string) public static ServerStaticMethod<T1, T2, T3, T4, T5> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T1, T2, T3, T4, T5> Invoke(ENetReliability, T1, T2, T3, T4, T5) public void Invoke(ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5"
  },
  "api/SDG.Unturned.ServerStaticMethod-6.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-6.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ServerStaticMethod-6.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-6.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T1, T2, T3, T4, T5, T6, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T1, T2, T3, T4, T5, T6) public virtual void Invoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ServerStaticMethod-6.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-6.html",
    "title": "Class ServerStaticMethod<T1, T2, T3, T4, T5, T6> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T1, T2, T3, T4, T5, T6> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T1, T2, T3, T4, T5, T6> : ServerMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 Inheritance object ServerMethodHandle ServerStaticMethod<T1, T2, T3, T4, T5, T6> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6> Get(ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6> Get(ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6> Get(Type, string) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6> Invoke(ENetReliability, T1, T2, T3, T4, T5, T6) public void Invoke(ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6"
  },
  "api/SDG.Unturned.ServerStaticMethod-7.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-7.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ServerStaticMethod-7.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-7.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T1, T2, T3, T4, T5, T6, T7, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T1, T2, T3, T4, T5, T6, T7) public virtual void Invoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ServerStaticMethod-7.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-7.html",
    "title": "Class ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> : ServerMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 Inheritance object ServerMethodHandle ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(Type, string) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> Invoke(ENetReliability, T1, T2, T3, T4, T5, T6, T7) public void Invoke(ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7"
  },
  "api/SDG.Unturned.ServerStaticMethod-8.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-8.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, AsyncCallback callback, object @object) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(T1, T2, T3, T4, T5, T6, T7, T8) public virtual void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ServerStaticMethod-8.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-8.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, AsyncCallback callback, object @object) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext, T1, T2, T3, T4, T5, T6, T7, T8) public virtual void Invoke(in ServerInvocationContext context, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters context ServerInvocationContext arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ServerStaticMethod-8.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod-8.html",
    "title": "Class ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> : ServerMethodHandle Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 Inheritance object ServerMethodHandle ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(ReceiveDelegateWithContext) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(Type, string) public static ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> Invoke(ENetReliability, T1, T2, T3, T4, T5, T6, T7, T8) public void Invoke(ENetReliability reliability, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters reliability ENetReliability arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8"
  },
  "api/SDG.Unturned.ServerStaticMethod.ReceiveDelegate.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod.ReceiveDelegate.html",
    "title": "Delegate ServerStaticMethod.ReceiveDelegate | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod.ReceiveDelegate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod.ReceiveDelegate() Constructors ReceiveDelegate(object, IntPtr) public ReceiveDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.ServerStaticMethod.ReceiveDelegateWithContext.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod.ReceiveDelegateWithContext.html",
    "title": "Delegate ServerStaticMethod.ReceiveDelegateWithContext | Unturned Analyse Doc",
    "keywords": "Delegate ServerStaticMethod.ReceiveDelegateWithContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ServerStaticMethod.ReceiveDelegateWithContext(in ServerInvocationContext context) Parameters context ServerInvocationContext Constructors ReceiveDelegateWithContext(object, IntPtr) public ReceiveDelegateWithContext(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(in ServerInvocationContext, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in ServerInvocationContext context, AsyncCallback callback, object @object) Parameters context ServerInvocationContext callback AsyncCallback object object Returns IAsyncResult EndInvoke(in ServerInvocationContext, IAsyncResult) public virtual void EndInvoke(in ServerInvocationContext context, IAsyncResult result) Parameters context ServerInvocationContext result IAsyncResult Invoke(in ServerInvocationContext) public virtual void Invoke(in ServerInvocationContext context) Parameters context ServerInvocationContext"
  },
  "api/SDG.Unturned.ServerStaticMethod.html": {
    "href": "api/SDG.Unturned.ServerStaticMethod.html",
    "title": "Class ServerStaticMethod | Unturned Analyse Doc",
    "keywords": "Class ServerStaticMethod Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class ServerStaticMethod : ServerMethodHandle Inheritance object ServerMethodHandle ServerStaticMethod Inherited Members ServerMethodHandle.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Get(ReceiveDelegate) public static ServerStaticMethod Get(ServerStaticMethod.ReceiveDelegate action) Parameters action ServerStaticMethod.ReceiveDelegate Returns ServerStaticMethod Get(ReceiveDelegateWithContext) public static ServerStaticMethod Get(ServerStaticMethod.ReceiveDelegateWithContext action) Parameters action ServerStaticMethod.ReceiveDelegateWithContext Returns ServerStaticMethod Get(Type, string) public static ServerStaticMethod Get(Type declaringType, string methodName) Parameters declaringType Type methodName string Returns ServerStaticMethod Invoke(ENetReliability) public void Invoke(ENetReliability reliability) Parameters reliability ENetReliability Invoke(ENetReliability, Action<NetPakWriter>) public void Invoke(ENetReliability reliability, Action<NetPakWriter> callback) Parameters reliability ENetReliability callback Action<NetPakWriter>"
  },
  "api/SDG.Unturned.ServerTextChatMessenger.html": {
    "href": "api/SDG.Unturned.ServerTextChatMessenger.html",
    "title": "Class ServerTextChatMessenger | Unturned Analyse Doc",
    "keywords": "Class ServerTextChatMessenger Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows Unity events to broadcast text chat messages from the server. public class ServerTextChatMessenger : MonoBehaviour Inheritance object ServerTextChatMessenger Constructors ServerTextChatMessenger() public ServerTextChatMessenger() Fields DefaultColor Text color when rich text does not override with color tags. public Color DefaultColor Field Value Color DefaultText Text to use when SendDefaultTextChatMessage is invoked. public string DefaultText Field Value string IconURL URL of a png or jpg image file to show next to the message. public string IconURL Field Value string UseRichTextFormatting Should rich text tags be parsed? e.g. bold, italic, color public bool UseRichTextFormatting Field Value bool Methods ExecuteDefaultTextChatCommand() public void ExecuteDefaultTextChatCommand() ExecuteTextChatCommand(string) public void ExecuteTextChatCommand(string command) Parameters command string SendDefaultTextChatMessage() public void SendDefaultTextChatMessage() SendTextChatMessage(string) public void SendTextChatMessage(string text) Parameters text string"
  },
  "api/SDG.Unturned.Setup.html": {
    "href": "api/SDG.Unturned.Setup.html",
    "title": "Class Setup | Unturned Analyse Doc",
    "keywords": "Class Setup Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Setup : MonoBehaviour Inheritance object Setup Constructors Setup() public Setup() Fields awakeDedicator public bool awakeDedicator Field Value bool awakeLogs public bool awakeLogs Field Value bool awakeModuleHook public bool awakeModuleHook Field Value bool awakeProvider public bool awakeProvider Field Value bool postProcess public UnturnedPostProcess postProcess Field Value UnturnedPostProcess startModuleHook public bool startModuleHook Field Value bool startProvider public bool startProvider Field Value bool"
  },
  "api/SDG.Unturned.ShaderConsolidator.html": {
    "href": "api/SDG.Unturned.ShaderConsolidator.html",
    "title": "Class ShaderConsolidator | Unturned Analyse Doc",
    "keywords": "Class ShaderConsolidator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ShaderConsolidator Inheritance object ShaderConsolidator Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods findConsolidatedShader(Shader) Apply shader name redirects until a final name is found, and then load shader for compatible version of Unity. public static Shader findConsolidatedShader(Shader originalShader) Parameters originalShader Shader Returns Shader redirectShaderName(string) Apply shader name redirects until a final name is found. Used to fix renamed shaders loaded from old asset bundles. public static string redirectShaderName(string shaderName) Parameters shaderName string Returns string"
  },
  "api/SDG.Unturned.ShirtUpdated.html": {
    "href": "api/SDG.Unturned.ShirtUpdated.html",
    "title": "Delegate ShirtUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ShirtUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ShirtUpdated(ushort newShirt, byte newShirtQuality, byte[] newShirtState) Parameters newShirt ushort newShirtQuality byte newShirtState byte[] Constructors ShirtUpdated(object, IntPtr) public ShirtUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, byte, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort newShirt, byte newShirtQuality, byte[] newShirtState, AsyncCallback callback, object @object) Parameters newShirt ushort newShirtQuality byte newShirtState byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort, byte, byte[]) public virtual void Invoke(ushort newShirt, byte newShirtQuality, byte[] newShirtState) Parameters newShirt ushort newShirtQuality byte newShirtState byte[]"
  },
  "api/SDG.Unturned.SiphonVehicleRequestHandler.html": {
    "href": "api/SDG.Unturned.SiphonVehicleRequestHandler.html",
    "title": "Delegate SiphonVehicleRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate SiphonVehicleRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SiphonVehicleRequestHandler(InteractableVehicle vehicle, Player instigatingPlayer, ref bool shouldAllow, ref ushort desiredAmount) Parameters vehicle InteractableVehicle instigatingPlayer Player shouldAllow bool desiredAmount ushort Constructors SiphonVehicleRequestHandler(object, IntPtr) public SiphonVehicleRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableVehicle, Player, ref bool, ref ushort, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool shouldAllow, ref ushort desiredAmount, AsyncCallback callback, object @object) Parameters vehicle InteractableVehicle instigatingPlayer Player shouldAllow bool desiredAmount ushort callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref ushort, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, ref ushort desiredAmount, IAsyncResult result) Parameters shouldAllow bool desiredAmount ushort result IAsyncResult Invoke(InteractableVehicle, Player, ref bool, ref ushort) public virtual void Invoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool shouldAllow, ref ushort desiredAmount) Parameters vehicle InteractableVehicle instigatingPlayer Player shouldAllow bool desiredAmount ushort"
  },
  "api/SDG.Unturned.Skill.html": {
    "href": "api/SDG.Unturned.Skill.html",
    "title": "Class Skill | Unturned Analyse Doc",
    "keywords": "Class Skill Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Skill Inheritance object Skill Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Skill(byte, byte, uint, float) public Skill(byte newLevel, byte newMax, uint newCost, float newDifficulty) Parameters newLevel byte newMax byte newCost uint newDifficulty float Fields costMultiplier Multiplier for XP upgrade cost. public float costMultiplier Field Value float level public byte level Field Value byte max Vanilla maximum level. public byte max Field Value byte maxUnlockableLevel If set, maximum skill level attainable through gameplay. public int maxUnlockableLevel Field Value int Properties cost public uint cost { get; } Property Value uint mastery public float mastery { get; } Property Value float Methods GetClampedMaxUnlockableLevel() Get maximum level, or maxUnlockableLevel if set. public int GetClampedMaxUnlockableLevel() Returns int NormalizeLevel(int) public float NormalizeLevel(int inputLevel) Parameters inputLevel int Returns float setLevelToMax() public void setLevelToMax()"
  },
  "api/SDG.Unturned.SkillsUpdated.html": {
    "href": "api/SDG.Unturned.SkillsUpdated.html",
    "title": "Delegate SkillsUpdated | Unturned Analyse Doc",
    "keywords": "Delegate SkillsUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SkillsUpdated() Constructors SkillsUpdated(object, IntPtr) public SkillsUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.SkinAsset.html": {
    "href": "api/SDG.Unturned.SkinAsset.html",
    "title": "Class SkinAsset | Unturned Analyse Doc",
    "keywords": "Class SkinAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SkinAsset : Asset, IAssetErrorContext Inheritance object Asset SkinAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SkinAsset() public SkinAsset() SkinAsset(bool, Material, Dictionary<ushort, Material>, Material, Material) public SkinAsset(bool isPattern, Material primarySkin, Dictionary<ushort, Material> secondarySkins, Material attachmentSkin, Material tertiarySkin) Parameters isPattern bool primarySkin Material secondarySkins Dictionary<ushort, Material> attachmentSkin Material tertiarySkin Material Fields _attachmentSkin protected Material _attachmentSkin Field Value Material _hasBarrel protected bool _hasBarrel Field Value bool _hasGrip protected bool _hasGrip Field Value bool _hasMagazine protected bool _hasMagazine Field Value bool _hasSight protected bool _hasSight Field Value bool _hasTactical protected bool _hasTactical Field Value bool _isPattern protected bool _isPattern Field Value bool _primarySkin protected Material _primarySkin Field Value Material _secondarySkins protected Dictionary<ushort, Material> _secondarySkins Field Value Dictionary<ushort, Material> _tertiarySkin protected Material _tertiarySkin Field Value Material hasStatTrackerTransformOverride public bool hasStatTrackerTransformOverride Field Value bool overrideMeshes public List<Mesh> overrideMeshes Field Value List<Mesh> statTrackerPosition public Vector3 statTrackerPosition Field Value Vector3 statTrackerRotation public Quaternion statTrackerRotation Field Value Quaternion Properties assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType attachmentSkin public Material attachmentSkin { get; } Property Value Material hasBarrel public bool hasBarrel { get; } Property Value bool hasGrip public bool hasGrip { get; } Property Value bool hasMagazine public bool hasMagazine { get; } Property Value bool hasSight public bool hasSight { get; } Property Value bool hasTactical public bool hasTactical { get; } Property Value bool isPattern public bool isPattern { get; } Property Value bool lightingTime Used by dawn and dusk skins which pull per-level lighting colors. public ELightingTime? lightingTime { get; } Property Value ELightingTime? primarySkin public Material primarySkin { get; } Property Value Material ragdollEffect public ERagdollEffect ragdollEffect { get; protected set; } Property Value ERagdollEffect secondarySkins public Dictionary<ushort, Material> secondarySkins { get; } Property Value Dictionary<ushort, Material> tertiarySkin public Material tertiarySkin { get; } Property Value Material Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local SetMaterialProperties(Material) Note: unfortunately it appears the stupid skin system always instantiated materials, but never destroys them... will need to clean this up, but it will be tricky because the game does not hold a reference to them. public void SetMaterialProperties(Material instance) Parameters instance Material"
  },
  "api/SDG.Unturned.SkinIconInfo.html": {
    "href": "api/SDG.Unturned.SkinIconInfo.html",
    "title": "Struct SkinIconInfo | Unturned Analyse Doc",
    "keywords": "Struct SkinIconInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct SkinIconInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SkinIconInfo(ushort, ESkinIconSize) public SkinIconInfo(ushort newID, ESkinIconSize newSize) Parameters newID ushort newSize ESkinIconSize Fields id public ushort id Field Value ushort size public ESkinIconSize size Field Value ESkinIconSize"
  },
  "api/SDG.Unturned.SkyFog.html": {
    "href": "api/SDG.Unturned.SkyFog.html",
    "title": "Class SkyFog | Unturned Analyse Doc",
    "keywords": "Class SkyFog Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class SkyFog : PostProcessEffectSettings Inheritance object SkyFog Constructors SkyFog() public SkyFog()"
  },
  "api/SDG.Unturned.SkyFogRenderer.html": {
    "href": "api/SDG.Unturned.SkyFogRenderer.html",
    "title": "Class SkyFogRenderer | Unturned Analyse Doc",
    "keywords": "Class SkyFogRenderer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public sealed class SkyFogRenderer : PostProcessEffectRenderer<SkyFog> Inheritance object SkyFogRenderer Constructors SkyFogRenderer() public SkyFogRenderer() Methods Init() public override void Init() Render(PostProcessRenderContext) public override void Render(PostProcessRenderContext context) Parameters context PostProcessRenderContext"
  },
  "api/SDG.Unturned.SleekBlueprint.Clicked.html": {
    "href": "api/SDG.Unturned.SleekBlueprint.Clicked.html",
    "title": "Delegate SleekBlueprint.Clicked | Unturned Analyse Doc",
    "keywords": "Delegate SleekBlueprint.Clicked Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SleekBlueprint.Clicked(Blueprint blueprint) Parameters blueprint Blueprint Constructors Clicked(object, IntPtr) public Clicked(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Blueprint, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Blueprint blueprint, AsyncCallback callback, object @object) Parameters blueprint Blueprint callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Blueprint) public virtual void Invoke(Blueprint blueprint) Parameters blueprint Blueprint"
  },
  "api/SDG.Unturned.SleekBlueprint.html": {
    "href": "api/SDG.Unturned.SleekBlueprint.html",
    "title": "Class SleekBlueprint | Unturned Analyse Doc",
    "keywords": "Class SleekBlueprint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekBlueprint : SleekWrapper Inheritance object SleekBlueprint Constructors SleekBlueprint(Blueprint) public SleekBlueprint(Blueprint newBlueprint) Parameters newBlueprint Blueprint Properties blueprint public Blueprint blueprint { get; } Property Value Blueprint Events onClickedCraftAllButton public event SleekBlueprint.Clicked onClickedCraftAllButton Event Type SleekBlueprint.Clicked onClickedCraftButton public event SleekBlueprint.Clicked onClickedCraftButton Event Type SleekBlueprint.Clicked"
  },
  "api/SDG.Unturned.SleekBoomboxSong.html": {
    "href": "api/SDG.Unturned.SleekBoomboxSong.html",
    "title": "Class SleekBoomboxSong | Unturned Analyse Doc",
    "keywords": "Class SleekBoomboxSong Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekBoomboxSong : SleekWrapper Inheritance object SleekBoomboxSong Constructors SleekBoomboxSong(StereoSongAsset, PlayerBarricadeStereoUI) public SleekBoomboxSong(StereoSongAsset songAsset, PlayerBarricadeStereoUI owningUI) Parameters songAsset StereoSongAsset owningUI PlayerBarricadeStereoUI Fields songAsset public StereoSongAsset songAsset Field Value StereoSongAsset"
  },
  "api/SDG.Unturned.SleekBoost.html": {
    "href": "api/SDG.Unturned.SleekBoost.html",
    "title": "Class SleekBoost | Unturned Analyse Doc",
    "keywords": "Class SleekBoost Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekBoost : SleekWrapper Inheritance object SleekBoost Constructors SleekBoost(byte) public SleekBoost(byte boost) Parameters boost byte Events onClickedButton public event ClickedButton onClickedButton Event Type ClickedButton"
  },
  "api/SDG.Unturned.SleekBoxIcon.html": {
    "href": "api/SDG.Unturned.SleekBoxIcon.html",
    "title": "Class SleekBoxIcon | Unturned Analyse Doc",
    "keywords": "Class SleekBoxIcon Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekBoxIcon : SleekWrapper Inheritance object SleekBoxIcon Constructors SleekBoxIcon(Texture2D) public SleekBoxIcon(Texture2D newIcon) Parameters newIcon Texture2D SleekBoxIcon(Texture2D, int) public SleekBoxIcon(Texture2D newIcon, int newSize) Parameters newIcon Texture2D newSize int Properties fontSize public ESleekFontSize fontSize { get; set; } Property Value ESleekFontSize icon public Texture2D icon { set; } Property Value Texture2D iconColor public SleekColor iconColor { get; set; } Property Value SleekColor text public string text { get; set; } Property Value string tooltip public string tooltip { get; set; } Property Value string"
  },
  "api/SDG.Unturned.SleekButtonIcon.html": {
    "href": "api/SDG.Unturned.SleekButtonIcon.html",
    "title": "Class SleekButtonIcon | Unturned Analyse Doc",
    "keywords": "Class SleekButtonIcon Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekButtonIcon : SleekWrapper Inheritance object SleekButtonIcon Constructors SleekButtonIcon(Texture2D) public SleekButtonIcon(Texture2D newIcon) Parameters newIcon Texture2D SleekButtonIcon(Texture2D, bool) public SleekButtonIcon(Texture2D newIcon, bool newScale) Parameters newIcon Texture2D newScale bool SleekButtonIcon(Texture2D, int) public SleekButtonIcon(Texture2D newIcon, int newSize) Parameters newIcon Texture2D newSize int SleekButtonIcon(Texture2D, int, bool) public SleekButtonIcon(Texture2D newIcon, int newSize, bool newScale) Parameters newIcon Texture2D newSize int newScale bool Properties backgroundColor public SleekColor backgroundColor { get; set; } Property Value SleekColor enableRichText public bool enableRichText { get; set; } Property Value bool fontSize public ESleekFontSize fontSize { get; set; } Property Value ESleekFontSize icon public Texture2D icon { set; } Property Value Texture2D iconColor public SleekColor iconColor { get; set; } Property Value SleekColor iconPositionOffset public int iconPositionOffset { set; } Property Value int isClickable public bool isClickable { get; set; } Property Value bool shadowStyle public ETextContrastContext shadowStyle { get; set; } Property Value ETextContrastContext text public string text { get; set; } Property Value string textColor public SleekColor textColor { get; set; } Property Value SleekColor tooltip public string tooltip { get; set; } Property Value string Events onClickedButton public event ClickedButton onClickedButton Event Type ClickedButton onRightClickedButton public event ClickedButton onRightClickedButton Event Type ClickedButton"
  },
  "api/SDG.Unturned.SleekButtonIconConfirm.html": {
    "href": "api/SDG.Unturned.SleekButtonIconConfirm.html",
    "title": "Class SleekButtonIconConfirm | Unturned Analyse Doc",
    "keywords": "Class SleekButtonIconConfirm Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekButtonIconConfirm : SleekWrapper Inheritance object SleekButtonIconConfirm Constructors SleekButtonIconConfirm(Texture2D, string, string, string, string) public SleekButtonIconConfirm(Texture2D newIcon, string newConfirm, string newConfirmTooltip, string newDeny, string newDenyTooltip) Parameters newIcon Texture2D newConfirm string newConfirmTooltip string newDeny string newDenyTooltip string SleekButtonIconConfirm(Texture2D, string, string, string, string, int) public SleekButtonIconConfirm(Texture2D newIcon, string newConfirm, string newConfirmTooltip, string newDeny, string newDenyTooltip, int iconSize) Parameters newIcon Texture2D newConfirm string newConfirmTooltip string newDeny string newDenyTooltip string iconSize int Fields onConfirmed public Confirm onConfirmed Field Value Confirm onDenied public Deny onDenied Field Value Deny Properties fontSize public ESleekFontSize fontSize { get; set; } Property Value ESleekFontSize iconColor public SleekColor iconColor { get; set; } Property Value SleekColor isClickable public bool isClickable { get; set; } Property Value bool text public string text { get; set; } Property Value string tooltip public string tooltip { get; set; } Property Value string Methods reset() public void reset()"
  },
  "api/SDG.Unturned.SleekButtonState.html": {
    "href": "api/SDG.Unturned.SleekButtonState.html",
    "title": "Class SleekButtonState | Unturned Analyse Doc",
    "keywords": "Class SleekButtonState Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekButtonState : SleekWrapper Inheritance object SleekButtonState Derived SleekButtonStateEnum<T> Constructors SleekButtonState(int, params GUIContent[]) public SleekButtonState(int iconSize, params GUIContent[] newStates) Parameters iconSize int newStates GUIContent[] SleekButtonState(params GUIContent[]) public SleekButtonState(params GUIContent[] newStates) Parameters newStates GUIContent[] Fields onSwappedState public SwappedState onSwappedState Field Value SwappedState Properties UseContentTooltip If true, button tooltip will be overridden with tooltip from states array. public bool UseContentTooltip { get; set; } Property Value bool isInteractable public bool isInteractable { get; set; } Property Value bool state public int state { get; set; } Property Value int states public GUIContent[] states { get; } Property Value GUIContent[] tooltip public string tooltip { get; set; } Property Value string Methods onClickedState(ISleekElement) protected virtual void onClickedState(ISleekElement button) Parameters button ISleekElement onRightClickedState(ISleekElement) protected virtual void onRightClickedState(ISleekElement button) Parameters button ISleekElement setContent(params GUIContent[]) public void setContent(params GUIContent[] newStates) Parameters newStates GUIContent[]"
  },
  "api/SDG.Unturned.SleekButtonStateEnum-1.html": {
    "href": "api/SDG.Unturned.SleekButtonStateEnum-1.html",
    "title": "Class SleekButtonStateEnum<T> | Unturned Analyse Doc",
    "keywords": "Class SleekButtonStateEnum<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekButtonStateEnum<T> : SleekButtonState where T : struct, Enum Type Parameters T Inheritance object SleekButtonState SleekButtonStateEnum<T> Inherited Members SleekButtonState.onSwappedState SleekButtonState.setContent(params GUIContent[]) SleekButtonState.states SleekButtonState.state SleekButtonState.tooltip SleekButtonState.isInteractable SleekButtonState.UseContentTooltip Constructors SleekButtonStateEnum() public SleekButtonStateEnum() Fields OnSwappedEnum public Action<SleekButtonStateEnum<T>, T> OnSwappedEnum Field Value Action<SleekButtonStateEnum<T>, T> Methods GetEnum() public T GetEnum() Returns T SetEnum(T) public void SetEnum(T value) Parameters value T onClickedState(ISleekElement) protected override void onClickedState(ISleekElement button) Parameters button ISleekElement onRightClickedState(ISleekElement) protected override void onRightClickedState(ISleekElement button) Parameters button ISleekElement"
  },
  "api/SDG.Unturned.SleekCameraImage.html": {
    "href": "api/SDG.Unturned.SleekCameraImage.html",
    "title": "Class SleekCameraImage | Unturned Analyse Doc",
    "keywords": "Class SleekCameraImage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekCameraImage : SleekWrapper Inheritance object SleekCameraImage Constructors SleekCameraImage() public SleekCameraImage() Fields internalImage public ISleekImage internalImage Field Value ISleekImage Methods OnDestroy() public override void OnDestroy() OnUpdate() public override void OnUpdate() SetCamera(Camera) public void SetCamera(Camera camera) Parameters camera Camera"
  },
  "api/SDG.Unturned.SleekCharacter.html": {
    "href": "api/SDG.Unturned.SleekCharacter.html",
    "title": "Class SleekCharacter | Unturned Analyse Doc",
    "keywords": "Class SleekCharacter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekCharacter : SleekWrapper Inheritance object SleekCharacter Constructors SleekCharacter(byte) public SleekCharacter(byte newIndex) Parameters newIndex byte Fields onClickedCharacter public ClickedCharacter onClickedCharacter Field Value ClickedCharacter Methods updateCharacter(Character) public void updateCharacter(Character character) Parameters character Character"
  },
  "api/SDG.Unturned.SleekChatEntryV1.html": {
    "href": "api/SDG.Unturned.SleekChatEntryV1.html",
    "title": "Class SleekChatEntryV1 | Unturned Analyse Doc",
    "keywords": "Class SleekChatEntryV1 Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekChatEntryV1 : SleekWrapper Inheritance object SleekChatEntryV1 Constructors SleekChatEntryV1() public SleekChatEntryV1() Fields _representingChatMessage protected ReceivedChatMessage _representingChatMessage Field Value ReceivedChatMessage shouldFadeOutWithAge Does this label fade out as the chat message gets older? public bool shouldFadeOutWithAge Field Value bool Properties representingChatMessage Chat message values to show. public ReceivedChatMessage representingChatMessage { get; set; } Property Value ReceivedChatMessage Methods OnUpdate() public override void OnUpdate()"
  },
  "api/SDG.Unturned.SleekChatEntryV2.html": {
    "href": "api/SDG.Unturned.SleekChatEntryV2.html",
    "title": "Class SleekChatEntryV2 | Unturned Analyse Doc",
    "keywords": "Class SleekChatEntryV2 Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekChatEntryV2 : SleekWrapper Inheritance object SleekChatEntryV2 Constructors SleekChatEntryV2() public SleekChatEntryV2() Fields _representingChatMessage protected ReceivedChatMessage _representingChatMessage Field Value ReceivedChatMessage forceVisibleWhileBrowsingChatHistory public bool forceVisibleWhileBrowsingChatHistory Field Value bool shouldFadeOutWithAge Does this label fade out as the chat message gets older? public bool shouldFadeOutWithAge Field Value bool Properties representingChatMessage Chat message values to show. public ReceivedChatMessage representingChatMessage { get; set; } Property Value ReceivedChatMessage Methods OnUpdate() public override void OnUpdate()"
  },
  "api/SDG.Unturned.SleekColorPicker.html": {
    "href": "api/SDG.Unturned.SleekColorPicker.html",
    "title": "Class SleekColorPicker | Unturned Analyse Doc",
    "keywords": "Class SleekColorPicker Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekColorPicker : SleekWrapper Inheritance object SleekColorPicker Constructors SleekColorPicker() public SleekColorPicker() Fields onColorPicked public ColorPicked onColorPicked Field Value ColorPicked Properties state public Color state { get; set; } Property Value Color Methods SetAllowAlpha(bool) public void SetAllowAlpha(bool allowAlpha) Parameters allowAlpha bool"
  },
  "api/SDG.Unturned.SleekCuratedLevelLink.html": {
    "href": "api/SDG.Unturned.SleekCuratedLevelLink.html",
    "title": "Class SleekCuratedLevelLink | Unturned Analyse Doc",
    "keywords": "Class SleekCuratedLevelLink Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekCuratedLevelLink : SleekWrapper Inheritance object SleekCuratedLevelLink Constructors SleekCuratedLevelLink(CuratedMapLink) public SleekCuratedLevelLink(CuratedMapLink curatedMap) Parameters curatedMap CuratedMapLink Methods OnDestroy() public override void OnDestroy()"
  },
  "api/SDG.Unturned.SleekCustomServerListPresetButton.html": {
    "href": "api/SDG.Unturned.SleekCustomServerListPresetButton.html",
    "title": "Class SleekCustomServerListPresetButton | Unturned Analyse Doc",
    "keywords": "Class SleekCustomServerListPresetButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekCustomServerListPresetButton : SleekWrapper Inheritance object SleekCustomServerListPresetButton Constructors SleekCustomServerListPresetButton(ServerListFilters) public SleekCustomServerListPresetButton(ServerListFilters preset) Parameters preset ServerListFilters"
  },
  "api/SDG.Unturned.SleekDefaultServerListPresetButton.html": {
    "href": "api/SDG.Unturned.SleekDefaultServerListPresetButton.html",
    "title": "Class SleekDefaultServerListPresetButton | Unturned Analyse Doc",
    "keywords": "Class SleekDefaultServerListPresetButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekDefaultServerListPresetButton : SleekWrapper Inheritance object SleekDefaultServerListPresetButton Constructors SleekDefaultServerListPresetButton(ServerListFilters, Local, Bundle) public SleekDefaultServerListPresetButton(ServerListFilters preset, Local localization, Bundle icons) Parameters preset ServerListFilters localization Local icons Bundle"
  },
  "api/SDG.Unturned.SleekDismissWorkshopArticleButton.html": {
    "href": "api/SDG.Unturned.SleekDismissWorkshopArticleButton.html",
    "title": "Class SleekDismissWorkshopArticleButton | Unturned Analyse Doc",
    "keywords": "Class SleekDismissWorkshopArticleButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekDismissWorkshopArticleButton : SleekWrapper Inheritance object SleekDismissWorkshopArticleButton Constructors SleekDismissWorkshopArticleButton() public SleekDismissWorkshopArticleButton() Fields articleId public ulong articleId Field Value ulong targetContent public ISleekElement targetContent Field Value ISleekElement Properties UseManualLayout public override bool UseManualLayout { set; } Property Value bool"
  },
  "api/SDG.Unturned.SleekEconIcon.html": {
    "href": "api/SDG.Unturned.SleekEconIcon.html",
    "title": "Class SleekEconIcon | Unturned Analyse Doc",
    "keywords": "Class SleekEconIcon Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekEconIcon : SleekWrapper Inheritance object SleekEconIcon Constructors SleekEconIcon() public SleekEconIcon() Properties color public SleekColor color { get; set; } Property Value SleekColor Methods OnDestroy() public override void OnDestroy() SetIsBoxMythicalIcon() public void SetIsBoxMythicalIcon() SetItemDefId(int) public void SetItemDefId(int itemdefid) Parameters itemdefid int"
  },
  "api/SDG.Unturned.SleekEditorLevel.html": {
    "href": "api/SDG.Unturned.SleekEditorLevel.html",
    "title": "Class SleekEditorLevel | Unturned Analyse Doc",
    "keywords": "Class SleekEditorLevel Namespace SDG.Unturned Assembly Assembly-CSharp.dll Button in the list of levels for the map editor. public class SleekEditorLevel : SleekLevel Inheritance object SleekLevel SleekEditorLevel Inherited Members SleekLevel.onClickedLevel SleekLevel.button SleekLevel.icon SleekLevel.nameLabel SleekLevel.infoLabel SleekLevel.onClickedButton(ISleekElement) SleekLevel.OnDestroy() SleekLevel.level Constructors SleekEditorLevel(LevelInfo) public SleekEditorLevel(LevelInfo level) Parameters level LevelInfo"
  },
  "api/SDG.Unturned.SleekFilterLevel.html": {
    "href": "api/SDG.Unturned.SleekFilterLevel.html",
    "title": "Class SleekFilterLevel | Unturned Analyse Doc",
    "keywords": "Class SleekFilterLevel Namespace SDG.Unturned Assembly Assembly-CSharp.dll Button in the list of levels for server browser filters. public class SleekFilterLevel : SleekLevel Inheritance object SleekLevel SleekFilterLevel Inherited Members SleekLevel.onClickedLevel SleekLevel.button SleekLevel.icon SleekLevel.nameLabel SleekLevel.infoLabel SleekLevel.onClickedButton(ISleekElement) SleekLevel.OnDestroy() SleekLevel.level Constructors SleekFilterLevel(LevelInfo) public SleekFilterLevel(LevelInfo level) Parameters level LevelInfo Fields toggle protected ISleekToggle toggle Field Value ISleekToggle Properties IsIncludedInFilter public bool IsIncludedInFilter { get; set; } Property Value bool Methods OnToggleValueChanged(ISleekToggle, bool) protected void OnToggleValueChanged(ISleekToggle toggle, bool value) Parameters toggle ISleekToggle value bool"
  },
  "api/SDG.Unturned.SleekFullscreenBox.html": {
    "href": "api/SDG.Unturned.SleekFullscreenBox.html",
    "title": "Class SleekFullscreenBox | Unturned Analyse Doc",
    "keywords": "Class SleekFullscreenBox Namespace SDG.Unturned Assembly Assembly-CSharp.dll Almost every menu has a container element for its contents which spans the entire screen. This element is then animated into and out of view. In the IMGUI implementation this was fine because containers off-screen were not processed, but with uGUI they were still considered active. To solve the uGUI performance overhead this class was introduced to disable visibility after animating out of view. public class SleekFullscreenBox : SleekWrapper Inheritance object SleekFullscreenBox Derived EditorLevelObjectsUI MenuConfigurationAudioUI MenuPlayMapFiltersUI MenuPlayOnlineSafetyUI MenuPlayServerBookmarksUI MenuPlayServerCurationUI MenuPlayServerListFiltersUI MenuPlayServersUI PlayerBarricadeMannequinUI PlayerBarricadeStereoUI Constructors SleekFullscreenBox() public SleekFullscreenBox() Methods AnimateIntoView() public void AnimateIntoView() AnimateOutOfView(float, float) public void AnimateOutOfView(float x, float y) Parameters x float y float OnUpdate() public override void OnUpdate()"
  },
  "api/SDG.Unturned.SleekHitmarker.html": {
    "href": "api/SDG.Unturned.SleekHitmarker.html",
    "title": "Class SleekHitmarker | Unturned Analyse Doc",
    "keywords": "Class SleekHitmarker Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekHitmarker : SleekWrapper Inheritance object SleekHitmarker Constructors SleekHitmarker() public SleekHitmarker() Methods ApplyClassicPositions() public void ApplyClassicPositions() PlayAnimation() public void PlayAnimation() SetStyle(EPlayerHit) public void SetStyle(EPlayerHit hit) Parameters hit EPlayerHit"
  },
  "api/SDG.Unturned.SleekInventory.html": {
    "href": "api/SDG.Unturned.SleekInventory.html",
    "title": "Class SleekInventory | Unturned Analyse Doc",
    "keywords": "Class SleekInventory Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekInventory : SleekWrapper Inheritance object SleekInventory Constructors SleekInventory() public SleekInventory() Fields extraTooltip Hack, we put this string on a newline for box probabilities. public string extraTooltip Field Value string onClickedInventory public ClickedInventory onClickedInventory Field Value ClickedInventory Properties instance public ulong instance { get; protected set; } Property Value ulong item public int item { get; protected set; } Property Value int itemAsset public ItemAsset itemAsset { get; } Property Value ItemAsset quantity public ushort quantity { get; protected set; } Property Value ushort vehicleAsset public VehicleAsset vehicleAsset { get; } Property Value VehicleAsset Methods updateInventory(ulong, int, ushort, bool, bool) public void updateInventory(ulong newInstance, int newItem, ushort newQuantity, bool isClickable, bool isLarge) Parameters newInstance ulong newItem int newQuantity ushort isClickable bool isLarge bool"
  },
  "api/SDG.Unturned.SleekItem.html": {
    "href": "api/SDG.Unturned.SleekItem.html",
    "title": "Class SleekItem | Unturned Analyse Doc",
    "keywords": "Class SleekItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekItem : SleekWrapper Inheritance object SleekItem Constructors SleekItem() public SleekItem() SleekItem(ItemJar) public SleekItem(ItemJar jar) Parameters jar ItemJar Fields onClickedItem public ClickedItem onClickedItem Field Value ClickedItem onDraggedItem public DraggedItem onDraggedItem Field Value DraggedItem Properties hotkey public int hotkey { get; } Property Value int jar public ItemJar jar { get; } Property Value ItemJar Methods SetIsDragItem() Set this item as the dragging preview. public void SetIsDragItem() disable() public void disable() enable() public void enable() setEnabled(bool) public void setEnabled(bool enabled) Parameters enabled bool updateHotkey(byte) public void updateHotkey(byte index) Parameters index byte updateItem(ItemJar) public void updateItem(ItemJar newJar) Parameters newJar ItemJar"
  },
  "api/SDG.Unturned.SleekItemIcon.html": {
    "href": "api/SDG.Unturned.SleekItemIcon.html",
    "title": "Class SleekItemIcon | Unturned Analyse Doc",
    "keywords": "Class SleekItemIcon Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekItemIcon : SleekWrapper Inheritance object SleekItemIcon Constructors SleekItemIcon() public SleekItemIcon() Properties color public SleekColor color { get; set; } Property Value SleekColor isAngled public bool isAngled { set; } Property Value bool rot public byte rot { set; } Property Value byte Methods Clear() Hide existing icon until refresh. Experimented with doing this for every refresh, but it looks bad in particular for hotbar. public void Clear() OnDestroy() public override void OnDestroy() Refresh(ushort, byte, byte[]) public void Refresh(ushort id, byte quality, byte[] state) Parameters id ushort quality byte state byte[] Refresh(ushort, byte, byte[], ItemAsset) public void Refresh(ushort id, byte quality, byte[] state, ItemAsset itemAsset) Parameters id ushort quality byte state byte[] itemAsset ItemAsset Refresh(ushort, byte, byte[], ItemAsset, int, int) public void Refresh(ushort id, byte quality, byte[] state, ItemAsset itemAsset, int widthOverride, int heightOverride) Parameters id ushort quality byte state byte[] itemAsset ItemAsset widthOverride int heightOverride int"
  },
  "api/SDG.Unturned.SleekItems.html": {
    "href": "api/SDG.Unturned.SleekItems.html",
    "title": "Class SleekItems | Unturned Analyse Doc",
    "keywords": "Class SleekItems Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekItems : SleekWrapper Inheritance object SleekItems Constructors SleekItems(byte) public SleekItems(byte newPage) Parameters newPage byte Fields onGrabbedItem public GrabbedItem onGrabbedItem Field Value GrabbedItem onPlacedItem public PlacedItem onPlacedItem Field Value PlacedItem onSelectedItem public SelectedItem onSelectedItem Field Value SelectedItem Properties areItemsEnabled public bool areItemsEnabled { get; set; } Property Value bool height public byte height { get; } Property Value byte isGridRaycastTarget public bool isGridRaycastTarget { get; set; } Property Value bool items public List<SleekItem> items { get; } Property Value List<SleekItem> page public byte page { get; } Property Value byte width public byte width { get; } Property Value byte Methods OnUpdate() public override void OnUpdate() addItem(ItemJar) public void addItem(ItemJar jar) Parameters jar ItemJar clear() public void clear() removeItem(ItemJar) public void removeItem(ItemJar jar) Parameters jar ItemJar resetHotkeyDisplay() Reset all items hotkey label. public void resetHotkeyDisplay() resize(byte, byte) public void resize(byte newWidth, byte newHeight) Parameters newWidth byte newHeight byte updateHotkey(ItemJar, byte) public void updateHotkey(ItemJar jar, byte button) Parameters jar ItemJar button byte updateItem(ItemJar) public void updateItem(ItemJar jar) Parameters jar ItemJar"
  },
  "api/SDG.Unturned.SleekJars.html": {
    "href": "api/SDG.Unturned.SleekJars.html",
    "title": "Class SleekJars | Unturned Analyse Doc",
    "keywords": "Class SleekJars Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekJars : SleekWrapper Inheritance object SleekJars Constructors SleekJars(float, List<InventorySearch>, float) public SleekJars(float radius, List<InventorySearch> search, float startAngle = 0) Parameters radius float search List<InventorySearch> startAngle float Fields onClickedJar public ClickedJar onClickedJar Field Value ClickedJar"
  },
  "api/SDG.Unturned.SleekLevel.html": {
    "href": "api/SDG.Unturned.SleekLevel.html",
    "title": "Class SleekLevel | Unturned Analyse Doc",
    "keywords": "Class SleekLevel Namespace SDG.Unturned Assembly Assembly-CSharp.dll Button in a list of levels. public class SleekLevel : SleekWrapper Inheritance object SleekLevel Derived SleekEditorLevel SleekFilterLevel Constructors SleekLevel(LevelInfo) public SleekLevel(LevelInfo level) Parameters level LevelInfo Fields button protected ISleekButton button Field Value ISleekButton icon protected ISleekImage icon Field Value ISleekImage infoLabel protected ISleekLabel infoLabel Field Value ISleekLabel nameLabel protected ISleekLabel nameLabel Field Value ISleekLabel onClickedLevel public ClickedLevel onClickedLevel Field Value ClickedLevel Properties level public LevelInfo level { get; } Property Value LevelInfo Methods OnDestroy() public override void OnDestroy() onClickedButton(ISleekElement) protected void onClickedButton(ISleekElement button) Parameters button ISleekElement"
  },
  "api/SDG.Unturned.SleekList-1.CreateElement.html": {
    "href": "api/SDG.Unturned.SleekList-1.CreateElement.html",
    "title": "Delegate SleekList<T>.CreateElement | Unturned Analyse Doc",
    "keywords": "Delegate SleekList<T>.CreateElement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate ISleekElement SleekList<T>.CreateElement(T item) Parameters item T Returns ISleekElement Constructors CreateElement(object, IntPtr) public CreateElement(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(T item, AsyncCallback callback, object @object) Parameters item T callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual ISleekElement EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns ISleekElement Invoke(T) public virtual ISleekElement Invoke(T item) Parameters item T Returns ISleekElement"
  },
  "api/SDG.Unturned.SleekList-1.html": {
    "href": "api/SDG.Unturned.SleekList-1.html",
    "title": "Class SleekList<T> | Unturned Analyse Doc",
    "keywords": "Class SleekList<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekList<T> : SleekWrapper where T : class Type Parameters T Inheritance object SleekList<T> Constructors SleekList() public SleekList() Fields itemHeight public int itemHeight Field Value int itemPadding public int itemPadding Field Value int onCreateElement public SleekList<T>.CreateElement onCreateElement Field Value SleekList<T>.CreateElement Properties ElementCount public int ElementCount { get; } Property Value int IndexOfCreateElementItem Kind of hacky... Used by player list for group connections. public int IndexOfCreateElementItem { get; } Property Value int scrollView public ISleekScrollView scrollView { get; } Property Value ISleekScrollView Methods ForEachElement<TElement>(Action<TElement>) public void ForEachElement<TElement>(Action<TElement> action) where TElement : ISleekElement Parameters action Action<TElement> Type Parameters TElement ForceRebuildElements() public void ForceRebuildElements() GetElement(int) public ISleekElement GetElement(int index) Parameters index int Returns ISleekElement NotifyDataChanged() public void NotifyDataChanged() OnUpdate() public override void OnUpdate() SetData(List<T>) public void SetData(List<T> data) Parameters data List<T>"
  },
  "api/SDG.Unturned.SleekLoadingScreenProgressBar.html": {
    "href": "api/SDG.Unturned.SleekLoadingScreenProgressBar.html",
    "title": "Class SleekLoadingScreenProgressBar | Unturned Analyse Doc",
    "keywords": "Class SleekLoadingScreenProgressBar Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekLoadingScreenProgressBar : SleekWrapper Inheritance object SleekLoadingScreenProgressBar Constructors SleekLoadingScreenProgressBar() public SleekLoadingScreenProgressBar() Properties DescriptionText public string DescriptionText { get; set; } Property Value string ProgressPercentage public float ProgressPercentage { get; set; } Property Value float"
  },
  "api/SDG.Unturned.SleekManageWorkshopEntry.html": {
    "href": "api/SDG.Unturned.SleekManageWorkshopEntry.html",
    "title": "Class SleekManageWorkshopEntry | Unturned Analyse Doc",
    "keywords": "Class SleekManageWorkshopEntry Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekManageWorkshopEntry : SleekWrapper Inheritance object SleekManageWorkshopEntry Constructors SleekManageWorkshopEntry(PublishedFileId_t) public SleekManageWorkshopEntry(PublishedFileId_t fileId) Parameters fileId PublishedFileId_t Fields fileId public PublishedFileId_t fileId Field Value PublishedFileId_t Methods OnClickedBrowseFilesButton(ISleekElement) protected void OnClickedBrowseFilesButton(ISleekElement button) Parameters button ISleekElement getEnabled() protected bool getEnabled() Returns bool onClickedViewButton(ISleekElement) protected void onClickedViewButton(ISleekElement viewButton) Parameters viewButton ISleekElement onToggledEnabled(ISleekToggle, bool) protected void onToggledEnabled(ISleekToggle toggle, bool state) Parameters toggle ISleekToggle state bool setEnabled(bool) protected void setEnabled(bool newEnabled) Parameters newEnabled bool"
  },
  "api/SDG.Unturned.SleekNew.html": {
    "href": "api/SDG.Unturned.SleekNew.html",
    "title": "Class SleekNew | Unturned Analyse Doc",
    "keywords": "Class SleekNew Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekNew : SleekWrapper Inheritance object SleekNew Constructors SleekNew(bool) public SleekNew(bool isUpdate = false) Parameters isUpdate bool"
  },
  "api/SDG.Unturned.SleekPlayer.ESleekPlayerDisplayContext.html": {
    "href": "api/SDG.Unturned.SleekPlayer.ESleekPlayerDisplayContext.html",
    "title": "Enum SleekPlayer.ESleekPlayerDisplayContext | Unturned Analyse Doc",
    "keywords": "Enum SleekPlayer.ESleekPlayerDisplayContext Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum SleekPlayer.ESleekPlayerDisplayContext Fields GROUP_ROSTER = 1 NONE = 0 PLAYER_LIST = 2"
  },
  "api/SDG.Unturned.SleekPlayer.html": {
    "href": "api/SDG.Unturned.SleekPlayer.html",
    "title": "Class SleekPlayer | Unturned Analyse Doc",
    "keywords": "Class SleekPlayer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekPlayer : SleekWrapper Inheritance object SleekPlayer Constructors SleekPlayer(SteamPlayer, bool, ESleekPlayerDisplayContext) public SleekPlayer(SteamPlayer newPlayer, bool isButton, SleekPlayer.ESleekPlayerDisplayContext context) Parameters newPlayer SteamPlayer isButton bool context SleekPlayer.ESleekPlayerDisplayContext Properties player public SteamPlayer player { get; } Property Value SteamPlayer Methods OnDestroy() public override void OnDestroy()"
  },
  "api/SDG.Unturned.SleekProgress.html": {
    "href": "api/SDG.Unturned.SleekProgress.html",
    "title": "Class SleekProgress | Unturned Analyse Doc",
    "keywords": "Class SleekProgress Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekProgress : SleekWrapper Inheritance object SleekProgress Constructors SleekProgress(string) public SleekProgress(string newSuffix) Parameters newSuffix string Fields suffix public string suffix Field Value string Properties color public Color color { get; set; } Property Value Color measure public int measure { set; } Property Value int state public float state { get; set; } Property Value float"
  },
  "api/SDG.Unturned.SleekReadMoreButton.html": {
    "href": "api/SDG.Unturned.SleekReadMoreButton.html",
    "title": "Class SleekReadMoreButton | Unturned Analyse Doc",
    "keywords": "Class SleekReadMoreButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekReadMoreButton : SleekWrapper Inheritance object SleekReadMoreButton Constructors SleekReadMoreButton() public SleekReadMoreButton() Fields offText public string offText Field Value string onText public string onText Field Value string targetContent public ISleekElement targetContent Field Value ISleekElement Properties UseManualLayout public override bool UseManualLayout { set; } Property Value bool Methods Refresh() public void Refresh()"
  },
  "api/SDG.Unturned.SleekScopeOverlay.html": {
    "href": "api/SDG.Unturned.SleekScopeOverlay.html",
    "title": "Class SleekScopeOverlay | Unturned Analyse Doc",
    "keywords": "Class SleekScopeOverlay Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekScopeOverlay : SleekWrapper Inheritance object SleekScopeOverlay Constructors SleekScopeOverlay() public SleekScopeOverlay() Fields scopeImage public ISleekImage scopeImage Field Value ISleekImage Methods OnDestroy() public override void OnDestroy() OnUpdate() public override void OnUpdate()"
  },
  "api/SDG.Unturned.SleekServer.html": {
    "href": "api/SDG.Unturned.SleekServer.html",
    "title": "Class SleekServer | Unturned Analyse Doc",
    "keywords": "Class SleekServer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekServer : SleekWrapper Inheritance object SleekServer Constructors SleekServer(ESteamServerList, SteamServerAdvertisement) public SleekServer(ESteamServerList list, SteamServerAdvertisement newInfo) Parameters list ESteamServerList newInfo SteamServerAdvertisement Fields onClickedServer public ClickedServer onClickedServer Field Value ClickedServer Properties isCurrentlyFavorited Is the server this widget represents currently favorited? Can be false on the favorites list. public bool isCurrentlyFavorited { get; } Property Value bool Methods SynchronizeVisibleColumns() public void SynchronizeVisibleColumns()"
  },
  "api/SDG.Unturned.SleekServerBookmark.html": {
    "href": "api/SDG.Unturned.SleekServerBookmark.html",
    "title": "Class SleekServerBookmark | Unturned Analyse Doc",
    "keywords": "Class SleekServerBookmark Namespace SDG.Unturned Assembly Assembly-CSharp.dll Entry in the MenuPlayServerBookmarksUI list. public class SleekServerBookmark : SleekWrapper Inheritance object SleekServerBookmark"
  },
  "api/SDG.Unturned.SleekServerCurationItem.html": {
    "href": "api/SDG.Unturned.SleekServerCurationItem.html",
    "title": "Class SleekServerCurationItem | Unturned Analyse Doc",
    "keywords": "Class SleekServerCurationItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll Entry in the MenuPlayServerCurationUI list. public class SleekServerCurationItem : SleekWrapper Inheritance object SleekServerCurationItem Methods OnDestroy() public override void OnDestroy() SynchronizeBlockCount() public void SynchronizeBlockCount()"
  },
  "api/SDG.Unturned.SleekServerCurationRule.html": {
    "href": "api/SDG.Unturned.SleekServerCurationRule.html",
    "title": "Class SleekServerCurationRule | Unturned Analyse Doc",
    "keywords": "Class SleekServerCurationRule Namespace SDG.Unturned Assembly Assembly-CSharp.dll Entry in the MenuPlayServerCurationRulesUI list. public class SleekServerCurationRule : SleekWrapper Inheritance object SleekServerCurationRule Methods SynchronizeBlockCount() public void SynchronizeBlockCount()"
  },
  "api/SDG.Unturned.SleekSkill.html": {
    "href": "api/SDG.Unturned.SleekSkill.html",
    "title": "Class SleekSkill | Unturned Analyse Doc",
    "keywords": "Class SleekSkill Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekSkill : SleekWrapper Inheritance object SleekSkill Constructors SleekSkill(byte, byte, Skill) public SleekSkill(byte speciality, byte index, Skill skill) Parameters speciality byte index byte skill Skill Events onClickedButton public event ClickedButton onClickedButton Event Type ClickedButton"
  },
  "api/SDG.Unturned.SleekSlot.html": {
    "href": "api/SDG.Unturned.SleekSlot.html",
    "title": "Class SleekSlot | Unturned Analyse Doc",
    "keywords": "Class SleekSlot Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekSlot : SleekWrapper Inheritance object SleekSlot Constructors SleekSlot(byte) public SleekSlot(byte newPage) Parameters newPage byte Fields onGrabbedItem public GrabbedItem onGrabbedItem Field Value GrabbedItem onPlacedItem public PlacedItem onPlacedItem Field Value PlacedItem onSelectedItem public SelectedItem onSelectedItem Field Value SelectedItem Properties isImageRaycastTarget public bool isImageRaycastTarget { get; set; } Property Value bool isItemEnabled public bool isItemEnabled { get; set; } Property Value bool item public SleekItem item { get; } Property Value SleekItem page public byte page { get; } Property Value byte Methods applyItem(ItemJar) public void applyItem(ItemJar jar) Parameters jar ItemJar select() public void select() updateItem(ItemJar) public void updateItem(ItemJar jar) Parameters jar ItemJar"
  },
  "api/SDG.Unturned.SleekStockpileLinkButton.html": {
    "href": "api/SDG.Unturned.SleekStockpileLinkButton.html",
    "title": "Class SleekStockpileLinkButton | Unturned Analyse Doc",
    "keywords": "Class SleekStockpileLinkButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekStockpileLinkButton : SleekWrapper Inheritance object SleekStockpileLinkButton Constructors SleekStockpileLinkButton() public SleekStockpileLinkButton() Fields itemdefid public int itemdefid Field Value int Properties UseManualLayout public override bool UseManualLayout { set; } Property Value bool"
  },
  "api/SDG.Unturned.SleekValue.html": {
    "href": "api/SDG.Unturned.SleekValue.html",
    "title": "Class SleekValue | Unturned Analyse Doc",
    "keywords": "Class SleekValue Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekValue : SleekWrapper Inheritance object SleekValue Constructors SleekValue() public SleekValue() Fields onValued public Valued onValued Field Value Valued Properties state public float state { get; set; } Property Value float"
  },
  "api/SDG.Unturned.SleekVendor.html": {
    "href": "api/SDG.Unturned.SleekVendor.html",
    "title": "Class SleekVendor | Unturned Analyse Doc",
    "keywords": "Class SleekVendor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekVendor : SleekWrapper Inheritance object SleekVendor Constructors SleekVendor(VendorElement) public SleekVendor(VendorElement newElement) Parameters newElement VendorElement Methods formatCost(uint) protected string formatCost(uint value) Parameters value uint Returns string updateAmount() public void updateAmount() Events onClickedButton public event ClickedButton onClickedButton Event Type ClickedButton"
  },
  "api/SDG.Unturned.SleekWebImage.html": {
    "href": "api/SDG.Unturned.SleekWebImage.html",
    "title": "Class SleekWebImage | Unturned Analyse Doc",
    "keywords": "Class SleekWebImage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekWebImage : SleekWrapper Inheritance object SleekWebImage Constructors SleekWebImage() public SleekWebImage() Fields maxImageDimensionsHeight If useImageDimensions is on and image height exceeds this value, scale down respecting aspect ratio. public float maxImageDimensionsHeight Field Value float maxImageDimensionsWidth If useImageDimensions is on and image width exceeds this value, scale down respecting aspect ratio. public float maxImageDimensionsWidth Field Value float useImageDimensions If true, SizeOffset_X and SizeOffset_Y are used when image is available. Defaults to false. public bool useImageDimensions Field Value bool Properties color public SleekColor color { get; set; } Property Value SleekColor Methods Clear() public void Clear() OnDestroy() public override void OnDestroy() Refresh(string, bool) public void Refresh(string url, bool shouldCache = true) Parameters url string shouldCache bool"
  },
  "api/SDG.Unturned.SleekWebLinkButton.html": {
    "href": "api/SDG.Unturned.SleekWebLinkButton.html",
    "title": "Class SleekWebLinkButton | Unturned Analyse Doc",
    "keywords": "Class SleekWebLinkButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekWebLinkButton : SleekWrapper Inheritance object SleekWebLinkButton Constructors SleekWebLinkButton() public SleekWebLinkButton() Fields useLinkFiltering public bool useLinkFiltering Field Value bool Properties Text public string Text { get; set; } Property Value string Url public string Url { get; set; } Property Value string UseManualLayout public override bool UseManualLayout { set; } Property Value bool"
  },
  "api/SDG.Unturned.SleekWorkshopSubscriptionButton.html": {
    "href": "api/SDG.Unturned.SleekWorkshopSubscriptionButton.html",
    "title": "Class SleekWorkshopSubscriptionButton | Unturned Analyse Doc",
    "keywords": "Class SleekWorkshopSubscriptionButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekWorkshopSubscriptionButton : SleekWrapper Inheritance object SleekWorkshopSubscriptionButton Constructors SleekWorkshopSubscriptionButton() public SleekWorkshopSubscriptionButton() Fields fileId public PublishedFileId_t fileId Field Value PublishedFileId_t subscribeText public string subscribeText Field Value string subscribeTooltip public string subscribeTooltip Field Value string unsubscribeText public string unsubscribeText Field Value string unsubscribeTooltip public string unsubscribeTooltip Field Value string Properties UseManualLayout public override bool UseManualLayout { set; } Property Value bool Methods handleClickedButton(ISleekElement) protected void handleClickedButton(ISleekElement thisButton) Parameters thisButton ISleekElement synchronizeText() public void synchronizeText()"
  },
  "api/SDG.Unturned.SleekYouTubeVideoButton.html": {
    "href": "api/SDG.Unturned.SleekYouTubeVideoButton.html",
    "title": "Class SleekYouTubeVideoButton | Unturned Analyse Doc",
    "keywords": "Class SleekYouTubeVideoButton Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SleekYouTubeVideoButton : SleekWrapper Inheritance object SleekYouTubeVideoButton Constructors SleekYouTubeVideoButton(Bundle) public SleekYouTubeVideoButton(Bundle icons) Parameters icons Bundle Methods Refresh(string) public void Refresh(string videoId) Parameters videoId string"
  },
  "api/SDG.Unturned.SlotTypeExtension.html": {
    "href": "api/SDG.Unturned.SlotTypeExtension.html",
    "title": "Class SlotTypeExtension | Unturned Analyse Doc",
    "keywords": "Class SlotTypeExtension Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class SlotTypeExtension Inheritance object SlotTypeExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods canEquipAsPrimary(ESlotType) public static bool canEquipAsPrimary(this ESlotType slotType) Parameters slotType ESlotType Returns bool canEquipAsSecondary(ESlotType) public static bool canEquipAsSecondary(this ESlotType slotType) Parameters slotType ESlotType Returns bool canEquipFromBag(ESlotType) public static bool canEquipFromBag(this ESlotType slotType) Parameters slotType ESlotType Returns bool canEquipInPage(ESlotType, byte) public static bool canEquipInPage(this ESlotType slotType, byte page) Parameters slotType ESlotType page byte Returns bool"
  },
  "api/SDG.Unturned.Snow.html": {
    "href": "api/SDG.Unturned.Snow.html",
    "title": "Class Snow | Unturned Analyse Doc",
    "keywords": "Class Snow Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Snow : MonoBehaviour Inheritance object Snow Constructors Snow() public Snow() Fields Sparkle_Map public Texture2D Sparkle_Map Field Value Texture2D"
  },
  "api/SDG.Unturned.SnowUpdated.html": {
    "href": "api/SDG.Unturned.SnowUpdated.html",
    "title": "Delegate SnowUpdated | Unturned Analyse Doc",
    "keywords": "Delegate SnowUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SnowUpdated(ELightingSnow snow) Parameters snow ELightingSnow Constructors SnowUpdated(object, IntPtr) public SnowUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ELightingSnow, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ELightingSnow snow, AsyncCallback callback, object @object) Parameters snow ELightingSnow callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ELightingSnow) public virtual void Invoke(ELightingSnow snow) Parameters snow ELightingSnow"
  },
  "api/SDG.Unturned.SpawnAsset.html": {
    "href": "api/SDG.Unturned.SpawnAsset.html",
    "title": "Class SpawnAsset | Unturned Analyse Doc",
    "keywords": "Class SpawnAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SpawnAsset : Asset, IAssetErrorContext Inheritance object Asset SpawnAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpawnAsset() public SpawnAsset() Fields _roots protected List<SpawnTable> _roots Field Value List<SpawnTable> _tables protected List<SpawnTable> _tables Field Value List<SpawnTable> Properties areTablesDirty Do tables need to be sorted and normalized? public bool areTablesDirty { get; protected set; } Property Value bool assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType hasBeenOverridden public bool hasBeenOverridden { get; protected set; } Property Value bool insertRoots Parent spawn assets this would like to be inserted into. public List<SpawnTable> insertRoots { get; protected set; } Property Value List<SpawnTable> roots public List<SpawnTable> roots { get; } Property Value List<SpawnTable> tables public List<SpawnTable> tables { get; } Property Value List<SpawnTable> Methods EditorAddChild(Asset) public void EditorAddChild(Asset newChild) Parameters newChild Asset EditorRemoveChildAtIndex(int) Remove from tables, and if referencing a child table remove us from their roots. public void EditorRemoveChildAtIndex(int childIndex) Parameters childIndex int EditorRemoveParentAtIndex(int) Remove from roots, and if reference is valid remove us from their children. public void EditorRemoveParentAtIndex(int parentIndex) Parameters parentIndex int PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local markOverridden() Zero weights of child spawn tables. Called when inserting a root marked isOverride. public void markOverridden() markTablesDirty() public void markTablesDirty() resolve(out ushort, out bool) [Obsolete] public void resolve(out ushort id, out bool isSpawn) Parameters id ushort isSpawn bool setTableWeightAtIndex(int, int) public void setTableWeightAtIndex(int tableIndex, int weight) Parameters tableIndex int weight int sortAndNormalizeWeights() Sort children by weight ascending, and calculate their normalized chance as a percentage of total weight. public void sortAndNormalizeWeights()"
  },
  "api/SDG.Unturned.SpawnTable.html": {
    "href": "api/SDG.Unturned.SpawnTable.html",
    "title": "Class SpawnTable | Unturned Analyse Doc",
    "keywords": "Class SpawnTable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SpawnTable Inheritance object SpawnTable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpawnTable() public SpawnTable() Fields hasNotifiedChild Has this spawn been added as a root of its child spawn table? Used for debugging spawn hierarchy in editor. public bool hasNotifiedChild Field Value bool isLink public bool isLink Field Value bool isOverride Can be enabled by spawn tables that insert themselves into other spawn tables using the roots list. If true, zeros the weight of child tables in the parent spawn table. public bool isOverride Field Value bool weight public int weight Field Value int Methods FindAsset(EAssetType) Helper method for plugins because IDs are internal. public Asset FindAsset(EAssetType legacyAssetType) Parameters legacyAssetType EAssetType Returns Asset"
  },
  "api/SDG.Unturned.SpawnTableReward.html": {
    "href": "api/SDG.Unturned.SpawnTableReward.html",
    "title": "Struct SpawnTableReward | Unturned Analyse Doc",
    "keywords": "Struct SpawnTableReward Namespace SDG.Unturned Assembly Assembly-CSharp.dll Nelson 2023-08-11: this probably should be rewritten a bit if used in the future because the error context currently assumes this is an item reward for consumables. public struct SpawnTableReward Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SpawnTableReward(ushort, int, int) public SpawnTableReward(ushort tableID, int min, int max) Parameters tableID ushort min int max int Fields max public int max Field Value int min public int min Field Value int tableID public ushort tableID Field Value ushort Methods count() public int count() Returns int count(float) public int count(float multiplier) Parameters multiplier float Returns int grantItems(Player, EItemOrigin, bool) Resolve table as items and grant random number to player. public void grantItems(Player player, EItemOrigin itemOrigin, bool shouldAutoEquip) Parameters player Player itemOrigin EItemOrigin shouldAutoEquip bool grantItems(Player, EItemOrigin, bool, float) Resolve table as items and grant random number to player. public void grantItems(Player player, EItemOrigin itemOrigin, bool shouldAutoEquip, float countMultiplier) Parameters player Player itemOrigin EItemOrigin shouldAutoEquip bool countMultiplier float spawn() Enumerate random number of valid assetIDs. public SpawnTableRewardEnumerator spawn() Returns SpawnTableRewardEnumerator spawn(float) public SpawnTableRewardEnumerator spawn(float multiplier) Parameters multiplier float Returns SpawnTableRewardEnumerator"
  },
  "api/SDG.Unturned.SpawnTableRewardEnumerator.html": {
    "href": "api/SDG.Unturned.SpawnTableRewardEnumerator.html",
    "title": "Struct SpawnTableRewardEnumerator | Unturned Analyse Doc",
    "keywords": "Struct SpawnTableRewardEnumerator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct SpawnTableRewardEnumerator : IEnumerable<ushort>, IEnumerable, IEnumerator<ushort>, IEnumerator, IDisposable Implements IEnumerable<ushort> IEnumerable IEnumerator<ushort> IEnumerator IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SpawnTableRewardEnumerator(ushort, int) public SpawnTableRewardEnumerator(ushort tableID, int count) Parameters tableID ushort count int Fields assetID public ushort assetID Field Value ushort count public int count Field Value int index public int index Field Value int tableID public ushort tableID Field Value ushort Properties Current public ushort Current { get; } Property Value ushort Methods Dispose() public void Dispose() GetEnumerator() public IEnumerator<ushort> GetEnumerator() Returns IEnumerator<ushort> MoveNext() public bool MoveNext() Returns bool Reset() public void Reset()"
  },
  "api/SDG.Unturned.SpawnTableTool.html": {
    "href": "api/SDG.Unturned.SpawnTableTool.html",
    "title": "Class SpawnTableTool | Unturned Analyse Doc",
    "keywords": "Class SpawnTableTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SpawnTableTool Inheritance object SpawnTableTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpawnTableTool() public SpawnTableTool() Methods LogAllSpawnTables() public static void LogAllSpawnTables() Resolve(SpawnAsset, EAssetType, Func<string>) Returning an Asset rather than the older IDs allows GUIDs to be used. legacyTargetAssetType is required for compatibility with spawn tables using legacy 16-bit IDs. If set to None and the spawn asset uses legacy IDs a warning is logged explaining GUIDs are necessary. public static Asset Resolve(SpawnAsset spawnAsset, EAssetType legacyTargetAssetType, Func<string> errorContextCallback) Parameters spawnAsset SpawnAsset legacyTargetAssetType EAssetType errorContextCallback Func<string> Returns Asset Resolve(SpawnAsset, Func<string>) Doesn't support spawn assets with legacy 16-bit IDs. public static Asset Resolve(SpawnAsset spawnAsset, Func<string> errorContextCallback) Parameters spawnAsset SpawnAsset errorContextCallback Func<string> Returns Asset Resolve(Guid, EAssetType, Func<string>) public static Asset Resolve(Guid spawnAssetGuid, EAssetType legacyTargetAssetType, Func<string> errorContextCallback) Parameters spawnAssetGuid Guid legacyTargetAssetType EAssetType errorContextCallback Func<string> Returns Asset Resolve(ushort, EAssetType, Func<string>) public static Asset Resolve(ushort spawnAssetLegacyId, EAssetType legacyTargetAssetType, Func<string> errorContextCallback) Parameters spawnAssetLegacyId ushort legacyTargetAssetType EAssetType errorContextCallback Func<string> Returns Asset ResolveLegacyId(SpawnAsset, EAssetType, Func<string>) For backwards compatibility with features that still need a legacy ID rather than asset. public static ushort ResolveLegacyId(SpawnAsset spawnAsset, EAssetType legacyTargetAssetType, Func<string> errorContextCallback) Parameters spawnAsset SpawnAsset legacyTargetAssetType EAssetType errorContextCallback Func<string> Returns ushort ResolveLegacyId(Guid, EAssetType, Func<string>) For backwards compatibility with features that still need a legacy ID rather than asset. public static ushort ResolveLegacyId(Guid spawnAssetGuid, EAssetType legacyTargetAssetType, Func<string> errorContextCallback) Parameters spawnAssetGuid Guid legacyTargetAssetType EAssetType errorContextCallback Func<string> Returns ushort ResolveLegacyId(ushort, EAssetType, Func<string>) For backwards compatibility with features that still need a legacy ID rather than asset. public static ushort ResolveLegacyId(ushort spawnAssetLegacyId, EAssetType legacyTargetAssetType, Func<string> errorContextCallback) Parameters spawnAssetLegacyId ushort legacyTargetAssetType EAssetType errorContextCallback Func<string> Returns ushort export(ushort, bool) public static void export(ushort id, bool isLegacy) Parameters id ushort isLegacy bool resolve(ushort) [Obsolete(\"Please update to the newer Resolve methods with legacyTargetAssetType parameter which support GUIDs\")] public static ushort resolve(ushort id) Parameters id ushort Returns ushort"
  },
  "api/SDG.Unturned.SpecialitySkillPair.html": {
    "href": "api/SDG.Unturned.SpecialitySkillPair.html",
    "title": "Class SpecialitySkillPair | Unturned Analyse Doc",
    "keywords": "Class SpecialitySkillPair Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SpecialitySkillPair Inheritance object SpecialitySkillPair Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpecialitySkillPair(int, int) public SpecialitySkillPair(int newSpeciality, int newSkill) Parameters newSpeciality int newSkill int Properties skill public int skill { get; } Property Value int speciality public int speciality { get; } Property Value int"
  },
  "api/SDG.Unturned.StaminaUpdated.html": {
    "href": "api/SDG.Unturned.StaminaUpdated.html",
    "title": "Delegate StaminaUpdated | Unturned Analyse Doc",
    "keywords": "Delegate StaminaUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void StaminaUpdated(byte newStamina) Parameters newStamina byte Constructors StaminaUpdated(object, IntPtr) public StaminaUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte newStamina, AsyncCallback callback, object @object) Parameters newStamina byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte) public virtual void Invoke(byte newStamina) Parameters newStamina byte"
  },
  "api/SDG.Unturned.StanceUpdated.html": {
    "href": "api/SDG.Unturned.StanceUpdated.html",
    "title": "Delegate StanceUpdated | Unturned Analyse Doc",
    "keywords": "Delegate StanceUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void StanceUpdated() Constructors StanceUpdated(object, IntPtr) public StanceUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.StandardShaderUtils.html": {
    "href": "api/SDG.Unturned.StandardShaderUtils.html",
    "title": "Class StandardShaderUtils | Unturned Analyse Doc",
    "keywords": "Class StandardShaderUtils Namespace SDG.Unturned Assembly Assembly-CSharp.dll Standard shader mode changes are based on built-in StandardShaderGUI.cs public static class StandardShaderUtils Inheritance object StandardShaderUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods fixupEmission(Material) Based on fixup routine in StandardShaderGUI SetMaterialKeywords. public static void fixupEmission(Material material) Parameters material Material isMaterialUsingStandardShader(Material) public static bool isMaterialUsingStandardShader(Material material) Parameters material Material Returns bool isModeFade(Material) public static bool isModeFade(Material material) Parameters material Material Returns bool isModeTransparent(Material) public static bool isModeTransparent(Material material) Parameters material Material Returns bool isNameStandard(string) Does shader name match any of the standard shaders? Standard, StandardSpecular and the Unturned \"Decalable\" variants all share nearly identical parameters. public static bool isNameStandard(string name) Parameters name string Returns bool maybeFixupMaterial(Material) Conditionally fixup older standard materials. public static bool maybeFixupMaterial(Material material) Parameters material Material Returns bool True if material was edited. setModeToCutout(Material) public static void setModeToCutout(Material material) Parameters material Material setModeToFade(Material) public static void setModeToFade(Material material) Parameters material Material setModeToOpaque(Material) public static void setModeToOpaque(Material material) Parameters material Material setModeToTransparent(Material) public static void setModeToTransparent(Material material) Parameters material Material"
  },
  "api/SDG.Unturned.StatTracker.html": {
    "href": "api/SDG.Unturned.StatTracker.html",
    "title": "Class StatTracker | Unturned Analyse Doc",
    "keywords": "Class StatTracker Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StatTracker : MonoBehaviour Inheritance object StatTracker Constructors StatTracker() public StatTracker() Fields oldStatValue protected int oldStatValue Field Value int statTrackerCallback public GetStatTrackerValueHandler statTrackerCallback Field Value GetStatTrackerValueHandler Properties statTrackerHook public Transform statTrackerHook { get; protected set; } Property Value Transform statTrackerText public TextMeshPro statTrackerText { get; protected set; } Property Value TextMeshPro Methods Awake() protected void Awake() Update() protected void Update() updateStatTracker(bool) public void updateStatTracker(bool viewmodel) Parameters viewmodel bool"
  },
  "api/SDG.Unturned.StateUpdated.html": {
    "href": "api/SDG.Unturned.StateUpdated.html",
    "title": "Delegate StateUpdated | Unturned Analyse Doc",
    "keywords": "Delegate StateUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void StateUpdated() Constructors StateUpdated(object, IntPtr) public StateUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.StaticResourceRef-1.html": {
    "href": "api/SDG.Unturned.StaticResourceRef-1.html",
    "title": "Class StaticResourceRef<T> | Unturned Analyse Doc",
    "keywords": "Class StaticResourceRef<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll Assets cannot be loaded from Resources during static initialization, so this reference defers the load until the first time user tries to use it. public class StaticResourceRef<T> where T : Object Type Parameters T Inheritance object StaticResourceRef<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StaticResourceRef(string) public StaticResourceRef(string path) Parameters path string Methods GetOrLoad() public T GetOrLoad() Returns T Operators implicit operator T(StaticResourceRef<T>) public static implicit operator T(StaticResourceRef<T> resource) Parameters resource StaticResourceRef<T> Returns T"
  },
  "api/SDG.Unturned.StatusData.html": {
    "href": "api/SDG.Unturned.StatusData.html",
    "title": "Class StatusData | Unturned Analyse Doc",
    "keywords": "Class StatusData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StatusData Inheritance object StatusData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StatusData() public StatusData() Fields Achievements public AchievementStatusData Achievements Field Value AchievementStatusData Game public GameStatusData Game Field Value GameStatusData Maps public MapsStatusData Maps Field Value MapsStatusData Menu public MenuStatusData Menu Field Value MenuStatusData News public NewsStatusData News Field Value NewsStatusData"
  },
  "api/SDG.Unturned.SteamAdminID.html": {
    "href": "api/SDG.Unturned.SteamAdminID.html",
    "title": "Class SteamAdminID | Unturned Analyse Doc",
    "keywords": "Class SteamAdminID Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamAdminID Inheritance object SteamAdminID Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamAdminID(CSteamID, CSteamID) public SteamAdminID(CSteamID newPlayerID, CSteamID newJudgeID) Parameters newPlayerID CSteamID newJudgeID CSteamID Fields judgeID public CSteamID judgeID Field Value CSteamID Properties playerID public CSteamID playerID { get; } Property Value CSteamID"
  },
  "api/SDG.Unturned.SteamAdminlist.html": {
    "href": "api/SDG.Unturned.SteamAdminlist.html",
    "title": "Class SteamAdminlist | Unturned Analyse Doc",
    "keywords": "Class SteamAdminlist Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamAdminlist Inheritance object SteamAdminlist Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamAdminlist() public SteamAdminlist() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte ownerID public static CSteamID ownerID Field Value CSteamID Properties list public static List<SteamAdminID> list { get; } Property Value List<SteamAdminID> Methods admin(CSteamID, CSteamID) public static void admin(CSteamID playerID, CSteamID judgeID) Parameters playerID CSteamID judgeID CSteamID checkAC(CSteamID) public static bool checkAC(CSteamID playerID) Parameters playerID CSteamID Returns bool checkAdmin(CSteamID) public static bool checkAdmin(CSteamID playerID) Parameters playerID CSteamID Returns bool load() public static void load() save() public static void save() unadmin(CSteamID) public static void unadmin(CSteamID playerID) Parameters playerID CSteamID"
  },
  "api/SDG.Unturned.SteamBBCodeUtils.html": {
    "href": "api/SDG.Unturned.SteamBBCodeUtils.html",
    "title": "Class SteamBBCodeUtils | Unturned Analyse Doc",
    "keywords": "Class SteamBBCodeUtils Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class SteamBBCodeUtils Inheritance object SteamBBCodeUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods removeCodeFormatting(ref string) Unfortunately in-game rich text does not have code formatting yet, so remove the tags while preserving text. public static void removeCodeFormatting(ref string bbcode) Parameters bbcode string removeYouTubePreviews(ref string) In-game rich text does not support embedded YouTube videos, but they look great in the web browser, so we simply remove them from the in-game text. public static void removeYouTubePreviews(ref string bbcode) Parameters bbcode string"
  },
  "api/SDG.Unturned.SteamBlacklist.html": {
    "href": "api/SDG.Unturned.SteamBlacklist.html",
    "title": "Class SteamBlacklist | Unturned Analyse Doc",
    "keywords": "Class SteamBlacklist Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamBlacklist Inheritance object SteamBlacklist Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamBlacklist() public SteamBlacklist() Fields PERMANENT public static readonly uint PERMANENT Field Value uint SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_ADDED_HWID public const byte SAVEDATA_VERSION_ADDED_HWID = 4 Field Value byte TEMPORARY public static readonly uint TEMPORARY Field Value uint Properties list public static List<SteamBlacklistID> list { get; } Property Value List<SteamBlacklistID> Methods ban(CSteamID, CSteamID, string, uint) [Obsolete] public static void ban(CSteamID playerID, CSteamID judgeID, string reason, uint duration) Parameters playerID CSteamID judgeID CSteamID reason string duration uint ban(CSteamID, uint, CSteamID, string, uint) [Obsolete(\"Now accepts list of HWIDs\")] public static void ban(CSteamID playerID, uint ip, CSteamID judgeID, string reason, uint duration) Parameters playerID CSteamID ip uint judgeID CSteamID reason string duration uint ban(CSteamID, uint, IEnumerable<byte[]>, CSteamID, string, uint) public static void ban(CSteamID playerID, uint ip, IEnumerable<byte[]> hwids, CSteamID judgeID, string reason, uint duration) Parameters playerID CSteamID ip uint hwids IEnumerable<byte[]> judgeID CSteamID reason string duration uint checkBanned(CSteamID, out SteamBlacklistID) [Obsolete] public static bool checkBanned(CSteamID playerID, out SteamBlacklistID blacklistID) Parameters playerID CSteamID blacklistID SteamBlacklistID Returns bool checkBanned(CSteamID, uint, out SteamBlacklistID) [Obsolete(\"Now checks HWID\")] public static bool checkBanned(CSteamID playerID, uint ip, out SteamBlacklistID blacklistID) Parameters playerID CSteamID ip uint blacklistID SteamBlacklistID Returns bool checkBanned(CSteamID, uint, IEnumerable<byte[]>, out SteamBlacklistID) public static bool checkBanned(CSteamID playerID, uint ip, IEnumerable<byte[]> hwids, out SteamBlacklistID blacklistID) Parameters playerID CSteamID ip uint hwids IEnumerable<byte[]> blacklistID SteamBlacklistID Returns bool load() public static void load() save() public static void save() unban(CSteamID) public static bool unban(CSteamID playerID) Parameters playerID CSteamID Returns bool"
  },
  "api/SDG.Unturned.SteamBlacklistID.html": {
    "href": "api/SDG.Unturned.SteamBlacklistID.html",
    "title": "Class SteamBlacklistID | Unturned Analyse Doc",
    "keywords": "Class SteamBlacklistID Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamBlacklistID Inheritance object SteamBlacklistID Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamBlacklistID(CSteamID, uint, CSteamID, string, uint, uint, byte[][]) public SteamBlacklistID(CSteamID newPlayerID, uint newIP, CSteamID newJudgeID, string newReason, uint newDuration, uint newBanned, byte[][] newHwids) Parameters newPlayerID CSteamID newIP uint newJudgeID CSteamID newReason string newDuration uint newBanned uint newHwids byte[][] Fields banned public uint banned Field Value uint duration public uint duration Field Value uint judgeID public CSteamID judgeID Field Value CSteamID reason public string reason Field Value string Properties ip public uint ip { get; } Property Value uint isExpired public bool isExpired { get; } Property Value bool playerID public CSteamID playerID { get; } Property Value CSteamID Methods DoesAnyHwidMatch(IEnumerable<byte[]>) public bool DoesAnyHwidMatch(IEnumerable<byte[]> clientHwids) Parameters clientHwids IEnumerable<byte[]> Returns bool getTime() public uint getTime() Returns uint"
  },
  "api/SDG.Unturned.SteamCall.html": {
    "href": "api/SDG.Unturned.SteamCall.html",
    "title": "Class SteamCall | Unturned Analyse Doc",
    "keywords": "Class SteamCall Namespace SDG.Unturned Assembly Assembly-CSharp.dll [AttributeUsage(AttributeTargets.Method)] public class SteamCall : Attribute, _Attribute Inheritance object Attribute SteamCall Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SteamCall(ESteamCallValidation) public SteamCall(ESteamCallValidation validation) Parameters validation ESteamCallValidation Fields deferMode public ENetInvocationDeferMode deferMode Field Value ENetInvocationDeferMode legacyName Backwards compatibility for older invoke by name code e.g. plugins. public string legacyName Field Value string rateLimitIndex Index into per-connection rate limiting array. public int rateLimitIndex Field Value int ratelimitHz Maximum number of calls per-second per-player. public int ratelimitHz Field Value int ratelimitSeconds Minimum seconds between calls per-player. Initialized from ratelimitHz when gathering RPCs. public float ratelimitSeconds Field Value float validation public ESteamCallValidation validation Field Value ESteamCallValidation"
  },
  "api/SDG.Unturned.SteamCaller.html": {
    "href": "api/SDG.Unturned.SteamCaller.html",
    "title": "Class SteamCaller | Unturned Analyse Doc",
    "keywords": "Class SteamCaller Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamCaller : MonoBehaviour Inheritance object SteamCaller Derived AnimalManager BarricadeManager ChatManager EffectManager GroupManager ItemManager LevelManager LightingManager ObjectManager PlayerCaller PlayerManager ResourceManager SaveManager StructureManager VehicleManager ZombieManager Constructors SteamCaller() public SteamCaller() Fields _channel protected SteamChannel _channel Field Value SteamChannel Properties channel public SteamChannel channel { get; } Property Value SteamChannel"
  },
  "api/SDG.Unturned.SteamChannel.html": {
    "href": "api/SDG.Unturned.SteamChannel.html",
    "title": "Class SteamChannel | Unturned Analyse Doc",
    "keywords": "Class SteamChannel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamChannel : MonoBehaviour Inheritance object SteamChannel Constructors SteamChannel() public SteamChannel() Fields CHANNEL_ID_HEADER_SIZE If changing header size remember to update PlayerManager and allocPlayerChannelId. public const int CHANNEL_ID_HEADER_SIZE = 1 Field Value int RPC_HEADER_SIZE public const int RPC_HEADER_SIZE = 2 Field Value int VOICE_DATA_OFFSET How far to shift compressed voice data. [Obsolete] public const int VOICE_DATA_OFFSET = 6 Field Value int VOICE_HEADER_SIZE [Obsolete] public const int VOICE_HEADER_SIZE = 3 Field Value int id public int id Field Value int isOwner [Obsolete(\"Renamed to IsLocalPlayer\")] public bool isOwner Field Value bool onTriggerReceive Don't use this. Originally added so that Rocketmod didn't have to inject into the game's assembly. [Obsolete(\"Will be deprecated soon. Please discuss on the issue tracker and we will find an alternative.\")] public static TriggerReceive onTriggerReceive Field Value TriggerReceive onTriggerSend Don't use this. Originally added so that Rocketmod didn't have to inject into the game's assembly. [Obsolete(\"Will be deprecated soon. Please discuss on the issue tracker and we will find an alternative.\")] public static TriggerSend onTriggerSend Field Value TriggerSend owner public SteamPlayer owner Field Value SteamPlayer Properties IsLocalPlayer If true, this object is owned by a locally-controlled player. For example, some code is not run for \"remote\" players. Always true in singleplayer. Always false on dedicated server. public bool IsLocalPlayer { get; } Property Value bool calls public SteamChannelMethod[] calls { get; protected set; } Property Value SteamChannelMethod[] longBinaryData [Obsolete] public bool longBinaryData { get; set; } Property Value bool Methods EnumerateClients_RemoteNotOwner() [Obsolete(\"Replaced by GatherRemoteClientConnectionsExcludingOwner\")] public IEnumerable<ITransportConnection> EnumerateClients_RemoteNotOwner() Returns IEnumerable<ITransportConnection> EnumerateClients_RemoteNotOwnerWithinSphere(Vector3, float) [Obsolete(\"Replaced by GatherRemoteClientConnectionsWithinSphereExcludingOwner\")] public IEnumerable<ITransportConnection> EnumerateClients_RemoteNotOwnerWithinSphere(Vector3 position, float radius) Parameters position Vector3 radius float Returns IEnumerable<ITransportConnection> EnumerateClients_WithinSphereOrOwner(Vector3, float) [Obsolete(\"Replaced by GatherOwnerAndClientConnectionsWithinSphere\")] public IEnumerable<ITransportConnection> EnumerateClients_WithinSphereOrOwner(Vector3 position, float radius) Parameters position Vector3 radius float Returns IEnumerable<ITransportConnection> GatherOwnerAndClientConnectionsWithinSphere(Vector3, float) public PooledTransportConnectionList GatherOwnerAndClientConnectionsWithinSphere(Vector3 position, float radius) Parameters position Vector3 radius float Returns PooledTransportConnectionList GatherRemoteClientConnectionsExcludingOwner() Replacement for ESteamCall.NOT_OWNER. public PooledTransportConnectionList GatherRemoteClientConnectionsExcludingOwner() Returns PooledTransportConnectionList GatherRemoteClientConnectionsWithinSphereExcludingOwner(Vector3, float) public PooledTransportConnectionList GatherRemoteClientConnectionsWithinSphereExcludingOwner(Vector3 position, float radius) Parameters position Vector3 radius float Returns PooledTransportConnectionList GetOwnerTransportConnection() Use on server when invoking client methods on the owning player. public ITransportConnection GetOwnerTransportConnection() Returns ITransportConnection checkOwner(CSteamID) [Obsolete] public bool checkOwner(CSteamID steamID) Parameters steamID CSteamID Returns bool checkServer(CSteamID) [Obsolete] public bool checkServer(CSteamID steamID) Parameters steamID CSteamID Returns bool closeWrite(string, ESteamCall, ESteamPacket) [Obsolete] public void closeWrite(string name, ESteamCall mode, ESteamPacket type) Parameters name string mode ESteamCall type ESteamPacket closeWrite(string, ESteamCall, byte, ESteamPacket) [Obsolete] public void closeWrite(string name, ESteamCall mode, byte bound, ESteamPacket type) Parameters name string mode ESteamCall bound byte type ESteamPacket closeWrite(string, ESteamCall, byte, byte, byte, ESteamPacket) [Obsolete] public void closeWrite(string name, ESteamCall mode, byte x, byte y, byte area, ESteamPacket type) Parameters name string mode ESteamCall x byte y byte area byte type ESteamPacket closeWrite(string, CSteamID, ESteamPacket) [Obsolete] public void closeWrite(string name, CSteamID steamID, ESteamPacket type) Parameters name string steamID CSteamID type ESteamPacket decodeVoicePacket(byte[], out uint, out bool) Decode voice parameters from byte array. [Obsolete] public void decodeVoicePacket(byte[] packet, out uint compressedSize, out bool usingWalkieTalkie) Parameters packet byte[] compressedSize uint usingWalkieTalkie bool encodeVoicePacket(byte, out int, out byte[], byte[], ushort, bool) Encode byte array of voice data to send. [Obsolete] public void encodeVoicePacket(byte callIndex, out int size, out byte[] packet, byte[] bytes, ushort length, bool usingWalkieTalkie) Parameters callIndex byte size int packet byte[] bytes byte[] length ushort usingWalkieTalkie bool getCall(string) [Obsolete] public int getCall(string name) Parameters name string Returns int getPacket(ESteamPacket, int, out int, out byte[]) [Obsolete] public void getPacket(ESteamPacket type, int index, out int size, out byte[] packet) Parameters type ESteamPacket index int size int packet byte[] getPacket(ESteamPacket, int, out int, out byte[], params object[]) [Obsolete] public void getPacket(ESteamPacket type, int index, out int size, out byte[] packet, params object[] arguments) Parameters type ESteamPacket index int size int packet byte[] arguments object[] markDirty() Calls array needs rebuilding the next time it is used. Should be invoked when adding/removing components with RPCs. public void markDirty() openWrite() [Obsolete] public void openWrite() read(Type) [Obsolete] public object read(Type type) Parameters type Type Returns object read(Type, Type, Type) [Obsolete] public object[] read(Type type_0, Type type_1, Type type_2) Parameters type_0 Type type_1 Type type_2 Type Returns object[] read(Type, Type, Type, Type) [Obsolete] public object[] read(Type type_0, Type type_1, Type type_2, Type type_3) Parameters type_0 Type type_1 Type type_2 Type type_3 Type Returns object[] read(Type, Type, Type, Type, Type, Type) [Obsolete] public object[] read(Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5) Parameters type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type Returns object[] read(Type, Type, Type, Type, Type, Type, Type) [Obsolete] public object[] read(Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5, Type type_6) Parameters type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type type_6 Type Returns object[] read(params Type[]) [Obsolete] public object[] read(params Type[] types) Parameters types Type[] Returns object[] receive(CSteamID, byte[], int, int) [Obsolete] public bool receive(CSteamID steamID, byte[] packet, int offset, int size) Parameters steamID CSteamID packet byte[] offset int size int Returns bool True if the call succeeded, or false if the sender should be refused. send(ESteamCall, ESteamPacket, int, byte[]) [Obsolete] public void send(ESteamCall mode, ESteamPacket type, int size, byte[] packet) Parameters mode ESteamCall type ESteamPacket size int packet byte[] send(ESteamCall, byte, ESteamPacket, int, byte[]) [Obsolete] public void send(ESteamCall mode, byte bound, ESteamPacket type, int size, byte[] packet) Parameters mode ESteamCall bound byte type ESteamPacket size int packet byte[] send(ESteamCall, byte, byte, byte, ESteamPacket, int, byte[]) [Obsolete] public void send(ESteamCall mode, byte x, byte y, byte area, ESteamPacket type, int size, byte[] packet) Parameters mode ESteamCall x byte y byte area byte type ESteamPacket size int packet byte[] send(ESteamCall, Vector3, float, ESteamPacket, int, byte[]) [Obsolete] public void send(ESteamCall mode, Vector3 point, float radius, ESteamPacket type, int size, byte[] packet) Parameters mode ESteamCall point Vector3 radius float type ESteamPacket size int packet byte[] send(string, ESteamCall, ESteamPacket, params object[]) [Obsolete] public void send(string name, ESteamCall mode, ESteamPacket type, params object[] arguments) Parameters name string mode ESteamCall type ESteamPacket arguments object[] send(string, ESteamCall, byte, ESteamPacket, params object[]) [Obsolete] public void send(string name, ESteamCall mode, byte bound, ESteamPacket type, params object[] arguments) Parameters name string mode ESteamCall bound byte type ESteamPacket arguments object[] send(string, ESteamCall, byte, byte, byte, ESteamPacket, params object[]) [Obsolete] public void send(string name, ESteamCall mode, byte x, byte y, byte area, ESteamPacket type, params object[] arguments) Parameters name string mode ESteamCall x byte y byte area byte type ESteamPacket arguments object[] send(string, ESteamCall, Vector3, float, ESteamPacket, params object[]) [Obsolete] public void send(string name, ESteamCall mode, Vector3 point, float radius, ESteamPacket type, params object[] arguments) Parameters name string mode ESteamCall point Vector3 radius float type ESteamPacket arguments object[] send(string, CSteamID, ESteamPacket, params object[]) [Obsolete] public void send(string name, CSteamID steamID, ESteamPacket type, params object[] arguments) Parameters name string steamID CSteamID type ESteamPacket arguments object[] sendAside(string, CSteamID, ESteamPacket, params object[]) [Obsolete] public void sendAside(string name, CSteamID steamID, ESteamPacket type, params object[] arguments) Parameters name string steamID CSteamID type ESteamPacket arguments object[] sendVoicePacket(SteamPlayer, byte[], int) [Obsolete] public void sendVoicePacket(SteamPlayer player, byte[] packet, int packetSize) Parameters player SteamPlayer packet byte[] packetSize int setup() public void setup() write(object) [Obsolete] public void write(object objects) Parameters objects object write(object, object, object) [Obsolete] public void write(object object_0, object object_1, object object_2) Parameters object_0 object object_1 object object_2 object write(object, object, object, object) [Obsolete] public void write(object object_0, object object_1, object object_2, object object_3) Parameters object_0 object object_1 object object_2 object object_3 object write(object, object, object, object, object, object) [Obsolete] public void write(object object_0, object object_1, object object_2, object object_3, object object_4, object object_5) Parameters object_0 object object_1 object object_2 object object_3 object object_4 object object_5 object write(object, object, object, object, object, object, object) [Obsolete] public void write(object object_0, object object_1, object object_2, object object_3, object object_4, object object_5, object object_6) Parameters object_0 object object_1 object object_2 object object_3 object object_4 object object_5 object object_6 object write(params object[]) [Obsolete] public void write(params object[] objects) Parameters objects object[]"
  },
  "api/SDG.Unturned.SteamChannelMethod.EContextType.html": {
    "href": "api/SDG.Unturned.SteamChannelMethod.EContextType.html",
    "title": "Enum SteamChannelMethod.EContextType | Unturned Analyse Doc",
    "keywords": "Enum SteamChannelMethod.EContextType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum SteamChannelMethod.EContextType Fields Client = 1 None = 0 Server = 2"
  },
  "api/SDG.Unturned.SteamChannelMethod.html": {
    "href": "api/SDG.Unturned.SteamChannelMethod.html",
    "title": "Class SteamChannelMethod | Unturned Analyse Doc",
    "keywords": "Class SteamChannelMethod Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamChannelMethod Inheritance object SteamChannelMethod Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamChannelMethod(Component, MethodInfo, string, Type[], int, EContextType, int, SteamCall) public SteamChannelMethod(Component newComponent, MethodInfo newMethod, string legacyMethodName, Type[] newTypes, int typesReadOffset, SteamChannelMethod.EContextType contextType, int contextParameterIndex, SteamCall attribute) Parameters newComponent Component newMethod MethodInfo legacyMethodName string newTypes Type[] typesReadOffset int contextType SteamChannelMethod.EContextType contextParameterIndex int attribute SteamCall Fields contextParameterIndex Index of the context parameter, if not None. public int contextParameterIndex Field Value int contextType public SteamChannelMethod.EContextType contextType Field Value SteamChannelMethod.EContextType typesReadOffset public int typesReadOffset Field Value int Properties attribute Reflected attribute that was used to find this method. Contains extra information about how to call it. public SteamCall attribute { get; protected set; } Property Value SteamCall component public Component component { get; protected set; } Property Value Component legacyMethodName public string legacyMethodName { get; protected set; } Property Value string method public MethodInfo method { get; protected set; } Property Value MethodInfo types public Type[] types { get; protected set; } Property Value Type[]"
  },
  "api/SDG.Unturned.SteamConnectedClientBase.html": {
    "href": "api/SDG.Unturned.SteamConnectedClientBase.html",
    "title": "Class SteamConnectedClientBase | Unturned Analyse Doc",
    "keywords": "Class SteamConnectedClientBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll Some new code common to SteamPending and SteamPlayer. public class SteamConnectedClientBase Inheritance object SteamConnectedClientBase Derived SteamPending SteamPlayer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamConnectedClientBase() public SteamConnectedClientBase() Properties averagePingRequestsReceivedPerSecond Average number of ping requests received from this client per second. Begins tracking 10 seconds after the first ping request was received, or -1 if average is unknown yet. public float averagePingRequestsReceivedPerSecond { get; } Property Value float numPingRequestsReceived Number of ping requests the server has received from this client. public int numPingRequestsReceived { get; } Property Value int realtimeSinceFirstPingRequest Realtime passed since the first ping request was received from this client. public float realtimeSinceFirstPingRequest { get; } Property Value float transportConnection Only set on server. Associates player with their connection. public ITransportConnection transportConnection { get; protected set; } Property Value ITransportConnection Methods incrementNumPingRequestsReceived() Called when a ping request is received from this client. public void incrementNumPingRequestsReceived()"
  },
  "api/SDG.Unturned.SteamConnectionInfo.html": {
    "href": "api/SDG.Unturned.SteamConnectionInfo.html",
    "title": "Class SteamConnectionInfo | Unturned Analyse Doc",
    "keywords": "Class SteamConnectionInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamConnectionInfo Inheritance object SteamConnectionInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamConnectionInfo(string, string) public SteamConnectionInfo(string newIPPort, string newPassword) Parameters newIPPort string newPassword string SteamConnectionInfo(string, ushort, string) public SteamConnectionInfo(string newIP, ushort newPort, string newPassword) Parameters newIP string newPort ushort newPassword string SteamConnectionInfo(uint, ushort, string) public SteamConnectionInfo(uint newIP, ushort newPort, string newPassword) Parameters newIP uint newPort ushort newPassword string Fields _ip public uint _ip Field Value uint _password public string _password Field Value string _port public ushort _port Field Value ushort Properties ip public uint ip { get; } Property Value uint password public string password { get; } Property Value string port public ushort port { get; } Property Value ushort"
  },
  "api/SDG.Unturned.SteamContent.html": {
    "href": "api/SDG.Unturned.SteamContent.html",
    "title": "Class SteamContent | Unturned Analyse Doc",
    "keywords": "Class SteamContent Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamContent Inheritance object SteamContent Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamContent(PublishedFileId_t, string, ESteamUGCType) public SteamContent(PublishedFileId_t newPublishedFileID, string newPath, ESteamUGCType newType) Parameters newPublishedFileID PublishedFileId_t newPath string newType ESteamUGCType Properties path public string path { get; } Property Value string publishedFileID public PublishedFileId_t publishedFileID { get; } Property Value PublishedFileId_t type public ESteamUGCType type { get; } Property Value ESteamUGCType"
  },
  "api/SDG.Unturned.SteamGameServerNetworkingUtils.html": {
    "href": "api/SDG.Unturned.SteamGameServerNetworkingUtils.html",
    "title": "Class SteamGameServerNetworkingUtils | Unturned Analyse Doc",
    "keywords": "Class SteamGameServerNetworkingUtils Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete(\"Should not be specific to SteamGameServerNetworking after NetTransport rewrite\")] public static class SteamGameServerNetworkingUtils Inheritance object SteamGameServerNetworkingUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods getIPv4Address(CSteamID, out uint) Get real IPv4 address of remote player NOT the relay server. [Obsolete(\"Should not be specific to SteamGameServerNetworking\")] public static bool getIPv4Address(CSteamID steamIDRemote, out uint address) Parameters steamIDRemote CSteamID address uint Returns bool True if address was available, and not flagged as a relay server. getIPv4AddressOrZero(CSteamID) See above, returns zero if failed. [Obsolete(\"Should not be specific to SteamGameServerNetworking\")] public static uint getIPv4AddressOrZero(CSteamID steamIDRemote) Parameters steamIDRemote CSteamID Returns uint"
  },
  "api/SDG.Unturned.SteamGroup.html": {
    "href": "api/SDG.Unturned.SteamGroup.html",
    "title": "Class SteamGroup | Unturned Analyse Doc",
    "keywords": "Class SteamGroup Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamGroup Inheritance object SteamGroup Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamGroup(CSteamID, string, Texture2D) public SteamGroup(CSteamID newSteamID, string newName, Texture2D newIcon) Parameters newSteamID CSteamID newName string newIcon Texture2D Properties icon public Texture2D icon { get; } Property Value Texture2D name public string name { get; } Property Value string steamID public CSteamID steamID { get; } Property Value CSteamID"
  },
  "api/SDG.Unturned.SteamIPAddress_tEx.html": {
    "href": "api/SDG.Unturned.SteamIPAddress_tEx.html",
    "title": "Class SteamIPAddress_tEx | Unturned Analyse Doc",
    "keywords": "Class SteamIPAddress_tEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class SteamIPAddress_tEx Inheritance object SteamIPAddress_tEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods TryGetIPv4Address(SteamIPAddress_t, out uint) Steam APIs returned uint32 IPv4 addresses in the past, so Unturned code depends on them in some places. Ideally these uses should be updated for IPv6 support going forward. For the meantime this method converts from the new format to the old format for backwards compatibility. public static bool TryGetIPv4Address(this SteamIPAddress_t steamIPAddress, out uint address) Parameters steamIPAddress SteamIPAddress_t address uint Returns bool"
  },
  "api/SDG.Unturned.SteamPacker.html": {
    "href": "api/SDG.Unturned.SteamPacker.html",
    "title": "Class SteamPacker | Unturned Analyse Doc",
    "keywords": "Class SteamPacker Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamPacker Inheritance object SteamPacker Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamPacker() public SteamPacker() Fields block [Obsolete] public static Block block Field Value Block Properties longBinaryData [Obsolete] public static bool longBinaryData { get; set; } Property Value bool Methods closeRead() [Obsolete] public static void closeRead() closeWrite(out int) [Obsolete] public static byte[] closeWrite(out int size) Parameters size int Returns byte[] getBytes(int, out int, params object[]) public static byte[] getBytes(int prefix, out int size, params object[] objects) Parameters prefix int size int objects object[] Returns byte[] getObjects(CSteamID, int, int, byte[], params Type[]) [Obsolete] public static object[] getObjects(CSteamID steamID, int offset, int prefix, byte[] bytes, params Type[] types) Parameters steamID CSteamID offset int prefix int bytes byte[] types Type[] Returns object[] getObjects(CSteamID, int, int, int, byte[], params Type[]) [Obsolete] public static object[] getObjects(CSteamID steamID, int offset, int prefix, int size, byte[] bytes, params Type[] types) Parameters steamID CSteamID offset int prefix int size int bytes byte[] types Type[] Returns object[] openRead(int, byte[]) [Obsolete] public static void openRead(int prefix, byte[] bytes) Parameters prefix int bytes byte[] openRead(int, int, byte[]) [Obsolete] public static void openRead(int prefix, int size, byte[] bytes) Parameters prefix int size int bytes byte[] openWrite(int) [Obsolete] public static void openWrite(int prefix) Parameters prefix int read(Type) [Obsolete] public static object read(Type type) Parameters type Type Returns object read(Type, Type, Type) [Obsolete] public static object[] read(Type type_0, Type type_1, Type type_2) Parameters type_0 Type type_1 Type type_2 Type Returns object[] read(Type, Type, Type, Type) [Obsolete] public static object[] read(Type type_0, Type type_1, Type type_2, Type type_3) Parameters type_0 Type type_1 Type type_2 Type type_3 Type Returns object[] read(Type, Type, Type, Type, Type, Type) [Obsolete] public static object[] read(Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5) Parameters type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type Returns object[] read(Type, Type, Type, Type, Type, Type, Type) [Obsolete] public static object[] read(Type type_0, Type type_1, Type type_2, Type type_3, Type type_4, Type type_5, Type type_6) Parameters type_0 Type type_1 Type type_2 Type type_3 Type type_4 Type type_5 Type type_6 Type Returns object[] read(params Type[]) [Obsolete] public static object[] read(params Type[] types) Parameters types Type[] Returns object[] write(object) [Obsolete] public static void write(object objects) Parameters objects object write(object, object) [Obsolete] public static void write(object object_0, object object_1) Parameters object_0 object object_1 object write(object, object, object) [Obsolete] public static void write(object object_0, object object_1, object object_2) Parameters object_0 object object_1 object object_2 object write(object, object, object, object) [Obsolete] public static void write(object object_0, object object_1, object object_2, object object_3) Parameters object_0 object object_1 object object_2 object object_3 object write(object, object, object, object, object, object) [Obsolete] public static void write(object object_0, object object_1, object object_2, object object_3, object object_4, object object_5) Parameters object_0 object object_1 object object_2 object object_3 object object_4 object object_5 object write(object, object, object, object, object, object, object) [Obsolete] public static void write(object object_0, object object_1, object object_2, object object_3, object object_4, object object_5, object object_6) Parameters object_0 object object_1 object object_2 object object_3 object object_4 object object_5 object object_6 object write(params object[]) [Obsolete] public static void write(params object[] objects) Parameters objects object[]"
  },
  "api/SDG.Unturned.SteamPending.html": {
    "href": "api/SDG.Unturned.SteamPending.html",
    "title": "Class SteamPending | Unturned Analyse Doc",
    "keywords": "Class SteamPending Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamPending : SteamConnectedClientBase Inheritance object SteamConnectedClientBase SteamPending Inherited Members SteamConnectedClientBase.incrementNumPingRequestsReceived() SteamConnectedClientBase.numPingRequestsReceived SteamConnectedClientBase.realtimeSinceFirstPingRequest SteamConnectedClientBase.averagePingRequestsReceivedPerSecond SteamConnectedClientBase.transportConnection object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamPending() public SteamPending() SteamPending(ITransportConnection, SteamPlayerID, bool, byte, byte, byte, Color, Color, Color, bool, ulong, ulong, ulong, ulong, ulong, ulong, ulong, ulong[], EPlayerSkillset, string, CSteamID, EClientPlatform) public SteamPending(ITransportConnection transportConnection, SteamPlayerID newPlayerID, bool newPro, byte newFace, byte newHair, byte newBeard, Color newSkin, Color newColor, Color newMarkerColor, bool newHand, ulong newPackageShirt, ulong newPackagePants, ulong newPackageHat, ulong newPackageBackpack, ulong newPackageVest, ulong newPackageMask, ulong newPackageGlasses, ulong[] newPackageSkins, EPlayerSkillset newSkillset, string newLanguage, CSteamID newLobbyID, EClientPlatform clientPlatform) Parameters transportConnection ITransportConnection newPlayerID SteamPlayerID newPro bool newFace byte newHair byte newBeard byte newSkin Color newColor Color newMarkerColor Color newHand bool newPackageShirt ulong newPackagePants ulong newPackageHat ulong newPackageBackpack ulong newPackageVest ulong newPackageMask ulong newPackageGlasses ulong newPackageSkins ulong[] newSkillset EPlayerSkillset newLanguage string newLobbyID CSteamID clientPlatform EClientPlatform Fields assignedAdmin public bool assignedAdmin Field Value bool assignedPro public bool assignedPro Field Value bool backpackItem public int backpackItem Field Value int dynamicInventoryDetails public Dictionary<ulong, DynamicEconDetails> dynamicInventoryDetails Field Value Dictionary<ulong, DynamicEconDetails> glassesItem public int glassesItem Field Value int hasAuthentication public bool hasAuthentication Field Value bool hasGroup public bool hasGroup Field Value bool hasProof public bool hasProof Field Value bool hatItem public int hatItem Field Value int inventoryDetails public SteamItemDetails_t[] inventoryDetails Field Value SteamItemDetails_t[] inventoryResult public SteamInventoryResult_t inventoryResult Field Value SteamInventoryResult_t lastReceivedPingRequestRealtime public float lastReceivedPingRequestRealtime Field Value float maskItem public int maskItem Field Value int packageBackpack public ulong packageBackpack Field Value ulong packageGlasses public ulong packageGlasses Field Value ulong packageHat public ulong packageHat Field Value ulong packageMask public ulong packageMask Field Value ulong packagePants public ulong packagePants Field Value ulong packageShirt public ulong packageShirt Field Value ulong packageSkins public ulong[] packageSkins Field Value ulong[] packageVest public ulong packageVest Field Value ulong pantsItem public int pantsItem Field Value int shirtItem public int shirtItem Field Value int skinDynamicProps public string[] skinDynamicProps Field Value string[] skinItems public int[] skinItems Field Value int[] skinTags public string[] skinTags Field Value string[] vestItem public int vestItem Field Value int Properties beard public byte beard { get; } Property Value byte canAcceptYet public bool canAcceptYet { get; } Property Value bool color public Color color { get; } Property Value Color face public byte face { get; } Property Value byte hair public byte hair { get; } Property Value byte hand public bool hand { get; } Property Value bool hasSentVerifyPacket public bool hasSentVerifyPacket { get; } Property Value bool isPro public bool isPro { get; } Property Value bool language public string language { get; } Property Value string lobbyID public CSteamID lobbyID { get; } Property Value CSteamID markerColor public Color markerColor { get; } Property Value Color playerID public SteamPlayerID playerID { get; } Property Value SteamPlayerID realtimeSinceSentVerifyPacket public float realtimeSinceSentVerifyPacket { get; } Property Value float skillset public EPlayerSkillset skillset { get; } Property Value EPlayerSkillset skin public Color skin { get; } Property Value Color Methods getInventoryItem(ulong) public int getInventoryItem(ulong package) Parameters package ulong Returns int inventoryDetailsReady() public void inventoryDetailsReady() sendVerifyPacket() public void sendVerifyPacket()"
  },
  "api/SDG.Unturned.SteamPlayer.html": {
    "href": "api/SDG.Unturned.SteamPlayer.html",
    "title": "Class SteamPlayer | Unturned Analyse Doc",
    "keywords": "Class SteamPlayer Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamPlayer : SteamConnectedClientBase Inheritance object SteamConnectedClientBase SteamPlayer Inherited Members SteamConnectedClientBase.incrementNumPingRequestsReceived() SteamConnectedClientBase.numPingRequestsReceived SteamConnectedClientBase.realtimeSinceFirstPingRequest SteamConnectedClientBase.averagePingRequestsReceivedPerSecond SteamConnectedClientBase.transportConnection object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SteamPlayer(ITransportConnection, NetId, SteamPlayerID, Transform, bool, bool, int, byte, byte, byte, Color, Color, Color, bool, int, int, int, int, int, int, int, int[], string[], string[], EPlayerSkillset, string, CSteamID, EClientPlatform) public SteamPlayer(ITransportConnection transportConnection, NetId netId, SteamPlayerID newPlayerID, Transform newModel, bool newPro, bool newAdmin, int newChannel, byte newFace, byte newHair, byte newBeard, Color newSkin, Color newColor, Color newMarkerColor, bool newHand, int newShirtItem, int newPantsItem, int newHatItem, int newBackpackItem, int newVestItem, int newMaskItem, int newGlassesItem, int[] newSkinItems, string[] newSkinTags, string[] newSkinDynamicProps, EPlayerSkillset newSkillset, string newLanguage, CSteamID newLobbyID, EClientPlatform clientPlatform) Parameters transportConnection ITransportConnection netId NetId newPlayerID SteamPlayerID newModel Transform newPro bool newAdmin bool newChannel int newFace byte newHair byte newBeard byte newSkin Color newColor Color newMarkerColor Color newHand bool newShirtItem int newPantsItem int newHatItem int newBackpackItem int newVestItem int newMaskItem int newGlassesItem int newSkinItems int[] newSkinTags string[] newSkinDynamicProps string[] newSkillset EPlayerSkillset newLanguage string newLobbyID CSteamID clientPlatform EClientPlatform Fields OnSteamAuthTicketForWebApiReceived public static Action<SteamPlayer, string, byte[]> OnSteamAuthTicketForWebApiReceived Field Value Action<SteamPlayer, string, byte[]> backpackItem public int backpackItem Field Value int face public byte face Field Value byte glassesItem public int glassesItem Field Value int hatItem public int hatItem Field Value int isTextChatLocallyMuted public bool isTextChatLocallyMuted Field Value bool isVoiceChatLocallyMuted public bool isVoiceChatLocallyMuted Field Value bool itemSkins public Dictionary<ushort, int> itemSkins Field Value Dictionary<ushort, int> lastChat public float lastChat Field Value float lastReceivedPingRequestRealtime public float lastReceivedPingRequestRealtime Field Value float maskItem public int maskItem Field Value int modifiedItems public HashSet<ushort> modifiedItems Field Value HashSet<ushort> nextVote public float nextVote Field Value float pantsItem public int pantsItem Field Value int rpcAllowedTimes Next time method is allowed to be called. public float[] rpcAllowedTimes Field Value float[] rpcCredits [Obsolete(\"This field should not have been externally used and will be removed in a future version.\")] public float rpcCredits Field Value float shirtItem public int shirtItem Field Value int skinDynamicProps public string[] skinDynamicProps Field Value string[] skinItems public int[] skinItems Field Value int[] skinTags public string[] skinTags Field Value string[] timeLastPacketWasReceivedFromClient public float timeLastPacketWasReceivedFromClient Field Value float timeLastPingRequestWasSentToClient public float timeLastPingRequestWasSentToClient Field Value float vehicleSkins [Obsolete(\"This will be removed in a future version!\")] public Dictionary<ushort, int> vehicleSkins Field Value Dictionary<ushort, int> vestItem public int vestItem Field Value int Properties IsLeftHanded public bool IsLeftHanded { get; } Property Value bool IsLocalServerHost True for offline or listen server host. public bool IsLocalServerHost { get; } Property Value bool beard public byte beard { get; } Property Value byte channel public int channel { get; } Property Value int color public Color color { get; } Property Value Color hair public byte hair { get; } Property Value byte hand [Obsolete(\"Renamed to IsLeftHanded\")] public bool hand { get; } Property Value bool isAdmin public bool isAdmin { get; set; } Property Value bool isPro public bool isPro { get; } Property Value bool joined public float joined { get; } Property Value float language public string language { get; } Property Value string lobbyID public CSteamID lobbyID { get; } Property Value CSteamID markerColor public Color markerColor { get; } Property Value Color model public Transform model { get; } Property Value Transform ping public float ping { get; } Property Value float player public Player player { get; } Property Value Player playerID public SteamPlayerID playerID { get; } Property Value SteamPlayerID skillset public EPlayerSkillset skillset { get; } Property Value EPlayerSkillset skin public Color skin { get; } Property Value Color Methods Equals(SteamPlayer) public bool Equals(SteamPlayer otherClient) Parameters otherClient SteamPlayer Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int GetNetId() public NetId GetNetId() Returns NetId GetVehicleSkinItemDefId(InteractableVehicle, out int) Get Steam item definition ID equipped for given vehicle. public bool GetVehicleSkinItemDefId(InteractableVehicle vehicle, out int itemdefid) Parameters vehicle InteractableVehicle itemdefid int Returns bool True if a skin was available. ReceiveGetSteamAuthTicketForWebApiRequest(string) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveGetSteamAuthTicketForWebApiRequest(string identity) Parameters identity string ReceiveGetSteamAuthTicketForWebApiResponse(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE)] public static void ReceiveGetSteamAuthTicketForWebApiResponse(in ServerInvocationContext context) Parameters context ServerInvocationContext RequestSteamAuthTicketForWebApi(string) Can be used by plugins to verify player is on a particular server. OnSteamAuthTicketForWebApiReceived will be invoked when the response is received. Note that the client doesn't send anything if the request to Steam fails, so plugins may wish to kick players if a certain amount of time passes. (e.g., if a cheat is canceling the request) public void RequestSteamAuthTicketForWebApi(string identity) Parameters identity string SetTextChatLocallyMuted(bool) public void SetTextChatLocallyMuted(bool newTextChatLocallyMuted) Parameters newTextChatLocallyMuted bool SetVoiceChatLocallyMuted(bool) public void SetVoiceChatLocallyMuted(bool newVoiceChatLocallyMuted) Parameters newVoiceChatLocallyMuted bool ToString() public override string ToString() Returns string commitModifiedDynamicProps() public void commitModifiedDynamicProps() getAddress() Get real address of remote player NOT a relay server. public IPAddress getAddress() Returns IPAddress Null if address was unavailable. getAddressString(bool) Get string representation of remote end point. public string getAddressString(bool withPort) Parameters withPort bool Returns string Null if address was unavailable. getDynamicEconDetails(ushort, out DynamicEconDetails) Build econ details struct from tags and dynamic_props. Note that details cannot be modified because it's a struct and has copies of the data. public bool getDynamicEconDetails(ushort itemID, out DynamicEconDetails details) Parameters itemID ushort details DynamicEconDetails Returns bool getDynamicEconDetailsForItemDef(int, out DynamicEconDetails) public bool getDynamicEconDetailsForItemDef(int itemdefid, out DynamicEconDetails details) Parameters itemdefid int details DynamicEconDetails Returns bool getIPv4Address(out uint) Get real IPv4 address of remote player NOT the relay server. public bool getIPv4Address(out uint address) Parameters address uint Returns bool True if address was available, and not flagged as a relay server. getIPv4AddressOrZero() See above, returns zero if failed. public uint getIPv4AddressOrZero() Returns uint getItemSkinItemDefID(ushort, out int) public bool getItemSkinItemDefID(ushort itemID, out int itemdefid) Parameters itemID ushort itemdefid int Returns bool getParticleEffectForItemDef(int) public ushort getParticleEffectForItemDef(int itemdefid) Parameters itemdefid int Returns ushort getRagdollEffect(ushort, out ERagdollEffect) public bool getRagdollEffect(ushort itemID, out ERagdollEffect effect) Parameters itemID ushort effect ERagdollEffect Returns bool getStatTrackerValue(ushort, out EStatTrackerType, out int) public bool getStatTrackerValue(ushort itemID, out EStatTrackerType type, out int kills) Parameters itemID ushort type EStatTrackerType kills int Returns bool getTagsAndDynamicPropsForItem(int, out string, out string) public bool getTagsAndDynamicPropsForItem(int item, out string tags, out string dynamic_props) Parameters item int tags string dynamic_props string Returns bool getVehicleSkinItemDefID(ushort, out int) [Obsolete(\"This will be removed in a future version!\")] public bool getVehicleSkinItemDefID(ushort vehicleID, out int itemdefid) Parameters vehicleID ushort itemdefid int Returns bool incrementStatTrackerValue(ushort, EPlayerStat) public void incrementStatTrackerValue(ushort itemID, EPlayerStat stat) Parameters itemID ushort stat EPlayerStat isMemberOfSameGroupAs(Player) public bool isMemberOfSameGroupAs(Player other) Parameters other Player Returns bool True if both players exist, are both members of groups, and are both members of the same group. isMemberOfSameGroupAs(SteamPlayer) public bool isMemberOfSameGroupAs(SteamPlayer other) Parameters other SteamPlayer Returns bool True if both players exist, are both members of groups, and are both members of the same group. lag(float) Add a recent ping sample to the average ping window. Updates ping based on the average of several recent ping samples. public void lag(float value) Parameters value float Most recent ping value."
  },
  "api/SDG.Unturned.SteamPlayerID.html": {
    "href": "api/SDG.Unturned.SteamPlayerID.html",
    "title": "Class SteamPlayerID | Unturned Analyse Doc",
    "keywords": "Class SteamPlayerID Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamPlayerID Inheritance object SteamPlayerID Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SteamPlayerID(CSteamID, byte, string, string, string, CSteamID) public SteamPlayerID(CSteamID newSteamID, byte newCharacterID, string newPlayerName, string newCharacterName, string newNickName, CSteamID newGroup) Parameters newSteamID CSteamID newCharacterID byte newPlayerName string newCharacterName string newNickName string newGroup CSteamID SteamPlayerID(CSteamID, byte, string, string, string, CSteamID, byte[]) public SteamPlayerID(CSteamID newSteamID, byte newCharacterID, string newPlayerName, string newCharacterName, string newNickName, CSteamID newGroup, byte[] newHwid) Parameters newSteamID CSteamID newCharacterID byte newPlayerName string newCharacterName string newNickName string newGroup CSteamID newHwid byte[] SteamPlayerID(CSteamID, byte, string, string, string, CSteamID, byte[][]) public SteamPlayerID(CSteamID newSteamID, byte newCharacterID, string newPlayerName, string newCharacterName, string newNickName, CSteamID newGroup, byte[][] newHwids) Parameters newSteamID CSteamID newCharacterID byte newPlayerName string newCharacterName string newNickName string newGroup CSteamID newHwids byte[][] Fields characterID In vanilla this field is ONLY used for the per-character saves on servers. If that changes check that it does not affect the savedata options. public byte characterID Field Value byte group public CSteamID group Field Value CSteamID Properties characterName public string characterName { get; set; } Property Value string hwid [Obsolete(\"Each client has multiple HWIDs, call GetHwids instead, this property returns the first HWID\")] public byte[] hwid { get; } Property Value byte[] nickName public string nickName { get; set; } Property Value string playerName public string playerName { get; } Property Value string steamID public CSteamID steamID { get; } Property Value CSteamID Methods Equals(SteamPlayerID) public bool Equals(SteamPlayerID otherPlayerID) Parameters otherPlayerID SteamPlayerID Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int GetHwids() 20-byte SHA1 salted hashes of client's hardware ID(s). Providing multiple HWIDs makes it more difficult to bypass HWID bans because spoofing a single component only changes one of the bans. For example spoofing the MAC address will not spoof the Windows GUID. Randomized if system did not support hwid, or perhaps player is cheating. Should not be called on the client side, but just in case there is a default zeroed array. public IEnumerable<byte[]> GetHwids() Returns IEnumerable<byte[]> ToString() public override string ToString() Returns string Operators operator +(SteamPlayerID, string) public static string operator +(SteamPlayerID playerID, string text) Parameters playerID SteamPlayerID text string Returns string operator ==(SteamPlayerID, SteamPlayerID) public static bool operator ==(SteamPlayerID playerID_0, SteamPlayerID playerID_1) Parameters playerID_0 SteamPlayerID playerID_1 SteamPlayerID Returns bool operator !=(SteamPlayerID, SteamPlayerID) public static bool operator !=(SteamPlayerID playerID_0, SteamPlayerID playerID_1) Parameters playerID_0 SteamPlayerID playerID_1 SteamPlayerID Returns bool"
  },
  "api/SDG.Unturned.SteamPlayer_NetMethods.html": {
    "href": "api/SDG.Unturned.SteamPlayer_NetMethods.html",
    "title": "Class SteamPlayer_NetMethods | Unturned Analyse Doc",
    "keywords": "Class SteamPlayer_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(SteamPlayer))] public static class SteamPlayer_NetMethods Inheritance object SteamPlayer_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveGetSteamAuthTicketForWebApiRequest_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveGetSteamAuthTicketForWebApiRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveGetSteamAuthTicketForWebApiRequest_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveGetSteamAuthTicketForWebApiRequest_Write(NetPakWriter, string) [NetInvokableGeneratedMethod(\"ReceiveGetSteamAuthTicketForWebApiRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveGetSteamAuthTicketForWebApiRequest_Write(NetPakWriter writer, string identity) Parameters writer NetPakWriter identity string"
  },
  "api/SDG.Unturned.SteamPublished.html": {
    "href": "api/SDG.Unturned.SteamPublished.html",
    "title": "Class SteamPublished | Unturned Analyse Doc",
    "keywords": "Class SteamPublished Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamPublished Inheritance object SteamPublished Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamPublished(string, PublishedFileId_t) public SteamPublished(string newName, PublishedFileId_t newID) Parameters newName string newID PublishedFileId_t Properties id public PublishedFileId_t id { get; } Property Value PublishedFileId_t name public string name { get; } Property Value string"
  },
  "api/SDG.Unturned.SteamServerAdvertisement.EInfoSource.html": {
    "href": "api/SDG.Unturned.SteamServerAdvertisement.EInfoSource.html",
    "title": "Enum SteamServerAdvertisement.EInfoSource | Unturned Analyse Doc",
    "keywords": "Enum SteamServerAdvertisement.EInfoSource Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum SteamServerAdvertisement.EInfoSource Fields DirectConnect = 0 Join server by IP. FavoriteServerList = 2 FriendServerList = 3 HistoryServerList = 4 InternetServerList = 1 LanServerList = 5"
  },
  "api/SDG.Unturned.SteamServerAdvertisement.EPluginFramework.html": {
    "href": "api/SDG.Unturned.SteamServerAdvertisement.EPluginFramework.html",
    "title": "Enum SteamServerAdvertisement.EPluginFramework | Unturned Analyse Doc",
    "keywords": "Enum SteamServerAdvertisement.EPluginFramework Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum SteamServerAdvertisement.EPluginFramework Fields None = 0 OpenMod = 2 Rocket = 1 Unknown = 3"
  },
  "api/SDG.Unturned.SteamServerAdvertisement.html": {
    "href": "api/SDG.Unturned.SteamServerAdvertisement.html",
    "title": "Class SteamServerAdvertisement | Unturned Analyse Doc",
    "keywords": "Class SteamServerAdvertisement Namespace SDG.Unturned Assembly Assembly-CSharp.dll Information about a game server retrieved through Steam's \"A2S\" query system. Available when joining using the Steam server list API (in-game server browser) or querying the Server's A2S port directly (connect by IP menu), but not when joining by Steam ID. public class SteamServerAdvertisement Inheritance object SteamServerAdvertisement Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamServerAdvertisement(CSteamID) public SteamServerAdvertisement(CSteamID steamId) Parameters steamId CSteamID SteamServerAdvertisement(gameserveritem_t, EInfoSource) public SteamServerAdvertisement(gameserveritem_t data, SteamServerAdvertisement.EInfoSource infoSource) Parameters data gameserveritem_t infoSource SteamServerAdvertisement.EInfoSource SteamServerAdvertisement(string, EGameMode, bool, bool, bool) public SteamServerAdvertisement(string newName, EGameMode newMode, bool newVACSecure, bool newBattlEyeEnabled, bool newPro) Parameters newName string newMode EGameMode newVACSecure bool newBattlEyeEnabled bool newPro bool Fields connectionPort public ushort connectionPort Field Value ushort queryPort public ushort queryPort Field Value ushort Properties IsBattlEyeSecure public bool IsBattlEyeSecure { get; } Property Value bool IsVACSecure public bool IsVACSecure { get; } Property Value bool cameraMode public ECameraMode cameraMode { get; } Property Value ECameraMode descText public string descText { get; protected set; } Property Value string hasCheats public bool hasCheats { get; } Property Value bool ip public uint ip { get; } Property Value uint isPassworded public bool isPassworded { get; } Property Value bool isPro public bool isPro { get; } Property Value bool isPvP public bool isPvP { get; } Property Value bool isWorkshop public bool isWorkshop { get; } Property Value bool map public string map { get; } Property Value string maxPlayers public int maxPlayers { get; } Property Value int mode public EGameMode mode { get; } Property Value EGameMode monetization public EServerMonetizationTag monetization { get; } Property Value EServerMonetizationTag name public string name { get; } Property Value string networkTransport ID of network transport implementation to use. public string networkTransport { get; protected set; } Property Value string ping public int ping { get; } Property Value int players public int players { get; } Property Value int pluginFramework Known plugin systems. public SteamServerAdvertisement.EPluginFramework pluginFramework { get; protected set; } Property Value SteamServerAdvertisement.EPluginFramework steamID public CSteamID steamID { get; } Property Value CSteamID thumbnailURL public string thumbnailURL { get; protected set; } Property Value string Methods IsAddressUsingSteamFakeIP() Probably just checks whether IP is link-local, but may as well use Steam's utility function. public bool IsAddressUsingSteamFakeIP() Returns bool ToString() public override string ToString() Returns string hasTagKey(string, string, int) protected bool hasTagKey(string tags, string key, int thumbnailIndex) Parameters tags string key string thumbnailIndex int Returns bool parseTagValue(string, string, string) Parses value between two keys thing would parse thing protected string parseTagValue(string tags, string startKey, string endKey) Parameters tags string startKey string endKey string Returns string"
  },
  "api/SDG.Unturned.SteamWhitelist.html": {
    "href": "api/SDG.Unturned.SteamWhitelist.html",
    "title": "Class SteamWhitelist | Unturned Analyse Doc",
    "keywords": "Class SteamWhitelist Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamWhitelist Inheritance object SteamWhitelist Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamWhitelist() public SteamWhitelist() Fields SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte Properties list public static List<SteamWhitelistID> list { get; } Property Value List<SteamWhitelistID> Methods checkWhitelisted(CSteamID) public static bool checkWhitelisted(CSteamID steamID) Parameters steamID CSteamID Returns bool load() public static void load() save() public static void save() unwhitelist(CSteamID) public static bool unwhitelist(CSteamID steamID) Parameters steamID CSteamID Returns bool whitelist(CSteamID, string, CSteamID) public static void whitelist(CSteamID steamID, string tag, CSteamID judgeID) Parameters steamID CSteamID tag string judgeID CSteamID"
  },
  "api/SDG.Unturned.SteamWhitelistID.html": {
    "href": "api/SDG.Unturned.SteamWhitelistID.html",
    "title": "Class SteamWhitelistID | Unturned Analyse Doc",
    "keywords": "Class SteamWhitelistID Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SteamWhitelistID Inheritance object SteamWhitelistID Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SteamWhitelistID(CSteamID, string, CSteamID) public SteamWhitelistID(CSteamID newSteamID, string newTag, CSteamID newJudgeID) Parameters newSteamID CSteamID newTag string newJudgeID CSteamID Fields judgeID public CSteamID judgeID Field Value CSteamID tag public string tag Field Value string Properties steamID public CSteamID steamID { get; } Property Value CSteamID"
  },
  "api/SDG.Unturned.StereoSongAsset.html": {
    "href": "api/SDG.Unturned.StereoSongAsset.html",
    "title": "Class StereoSongAsset | Unturned Analyse Doc",
    "keywords": "Class StereoSongAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StereoSongAsset : Asset, IAssetErrorContext Inheritance object Asset StereoSongAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StereoSongAsset() public StereoSongAsset() Fields isLoop Whether audio source should loop. public bool isLoop Field Value bool songContentRef Older *.content asset bundle reference. public ContentReference<AudioClip> songContentRef Field Value ContentReference<AudioClip> songMbRef Newer *.masterbundle reference. public MasterBundleReference<AudioClip> songMbRef Field Value MasterBundleReference<AudioClip> titleText Text from *.dat localization file. public string titleText Field Value string Properties linkURL Optional URL to open in web browser. public string linkURL { get; protected set; } Property Value string Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local construct() protected virtual void construct()"
  },
  "api/SDG.Unturned.StickyGrenade.html": {
    "href": "api/SDG.Unturned.StickyGrenade.html",
    "title": "Class StickyGrenade | Unturned Analyse Doc",
    "keywords": "Class StickyGrenade Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StickyGrenade : TriggerGrenadeBase Inheritance object TriggerGrenadeBase StickyGrenade Inherited Members TriggerGrenadeBase.ignoreTransform Constructors StickyGrenade() public StickyGrenade() Methods GrenadeTriggered() protected override void GrenadeTriggered()"
  },
  "api/SDG.Unturned.Structure.html": {
    "href": "api/SDG.Unturned.Structure.html",
    "title": "Class Structure | Unturned Analyse Doc",
    "keywords": "Class Structure Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Structure Inheritance object Structure Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Structure(ItemStructureAsset, ushort) public Structure(ItemStructureAsset newAsset, ushort newHealth) Parameters newAsset ItemStructureAsset newHealth ushort Structure(ushort) [Obsolete] public Structure(ushort newID) Parameters newID ushort Structure(ushort, ushort, ItemStructureAsset) [Obsolete] public Structure(ushort newID, ushort newHealth, ItemStructureAsset newAsset) Parameters newID ushort newHealth ushort newAsset ItemStructureAsset Fields health public ushort health Field Value ushort Properties asset public ItemStructureAsset asset { get; } Property Value ItemStructureAsset id [Obsolete] public ushort id { get; } Property Value ushort isDead public bool isDead { get; } Property Value bool isRepaired public bool isRepaired { get; } Property Value bool Methods ToString() public override string ToString() Returns string askDamage(ushort) public void askDamage(ushort amount) Parameters amount ushort askRepair(ushort) public void askRepair(ushort amount) Parameters amount ushort"
  },
  "api/SDG.Unturned.StructureData.html": {
    "href": "api/SDG.Unturned.StructureData.html",
    "title": "Class StructureData | Unturned Analyse Doc",
    "keywords": "Class StructureData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StructureData Inheritance object StructureData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StructureData(Structure, Vector3, byte, byte, byte, ulong, ulong, uint, uint) [Obsolete] public StructureData(Structure newStructure, Vector3 newPoint, byte newAngle_X, byte newAngle_Y, byte newAngle_Z, ulong newOwner, ulong newGroup, uint newObjActiveDate, uint newInstanceID) Parameters newStructure Structure newPoint Vector3 newAngle_X byte newAngle_Y byte newAngle_Z byte newOwner ulong newGroup ulong newObjActiveDate uint newInstanceID uint StructureData(Structure, Vector3, Quaternion, ulong, ulong, uint, uint) public StructureData(Structure newStructure, Vector3 newPoint, Quaternion newRotation, ulong newOwner, ulong newGroup, uint newObjActiveDate, uint newInstanceID) Parameters newStructure Structure newPoint Vector3 newRotation Quaternion newOwner ulong newGroup ulong newObjActiveDate uint newInstanceID uint Fields angle_x [Obsolete(\"Replaced by rotation quaternion, but you should probably not be accessing either of these directly.\")] public byte angle_x Field Value byte angle_y [Obsolete(\"Replaced by rotation quaternion, but you should probably not be accessing either of these directly.\")] public byte angle_y Field Value byte angle_z [Obsolete(\"Replaced by rotation quaternion, but you should probably not be accessing either of these directly.\")] public byte angle_z Field Value byte group public ulong group Field Value ulong objActiveDate public uint objActiveDate Field Value uint owner public ulong owner Field Value ulong point public Vector3 point Field Value Vector3 rotation public Quaternion rotation Field Value Quaternion Properties instanceID public uint instanceID { get; } Property Value uint structure public Structure structure { get; } Property Value Structure"
  },
  "api/SDG.Unturned.StructureDrop.SalvageRequestHandler.html": {
    "href": "api/SDG.Unturned.StructureDrop.SalvageRequestHandler.html",
    "title": "Delegate StructureDrop.SalvageRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate StructureDrop.SalvageRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void StructureDrop.SalvageRequestHandler(StructureDrop structure, SteamPlayer instigatorClient, ref bool shouldAllow) Parameters structure StructureDrop instigatorClient SteamPlayer shouldAllow bool Constructors SalvageRequestHandler(object, IntPtr) public SalvageRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(StructureDrop, SteamPlayer, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(StructureDrop structure, SteamPlayer instigatorClient, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters structure StructureDrop instigatorClient SteamPlayer shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(StructureDrop, SteamPlayer, ref bool) public virtual void Invoke(StructureDrop structure, SteamPlayer instigatorClient, ref bool shouldAllow) Parameters structure StructureDrop instigatorClient SteamPlayer shouldAllow bool"
  },
  "api/SDG.Unturned.StructureDrop.html": {
    "href": "api/SDG.Unturned.StructureDrop.html",
    "title": "Class StructureDrop | Unturned Analyse Doc",
    "keywords": "Class StructureDrop Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StructureDrop Inheritance object StructureDrop Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StructureDrop(Transform, uint) [Obsolete] public StructureDrop(Transform newModel, uint newInstanceID) Parameters newModel Transform newInstanceID uint Properties asset public ItemStructureAsset asset { get; protected set; } Property Value ItemStructureAsset instanceID public uint instanceID { get; } Property Value uint model public Transform model { get; } Property Value Transform Methods GetNetId() public NetId GetNetId() Returns NetId GetServersideData() public StructureData GetServersideData() Returns StructureData ReceiveHealth(byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveHealth(byte hp) Parameters hp byte ReceiveOwnerAndGroup(ulong, ulong) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveOwnerAndGroup(ulong newOwner, ulong newGroup) Parameters newOwner ulong newGroup ulong ReceiveSalvageRequest(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10)] public void ReceiveSalvageRequest(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTransform(in ClientInvocationContext, byte, byte, Vector3, Quaternion) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, deferMode = ENetInvocationDeferMode.Queue)] public void ReceiveTransform(in ClientInvocationContext context, byte old_x, byte old_y, Vector3 point, Quaternion rotation) Parameters context ClientInvocationContext old_x byte old_y byte point Vector3 rotation Quaternion ReceiveTransformRequest(in ServerInvocationContext, Vector3, Quaternion) Not using rate limit attribute because this is potentially called for hundreds of structures at once, and only admins will actually be allowed to apply the transform. [SteamCall(ESteamCallValidation.SERVERSIDE)] public void ReceiveTransformRequest(in ServerInvocationContext context, Vector3 point, Quaternion rotation) Parameters context ServerInvocationContext point Vector3 rotation Quaternion Events OnSalvageRequested_Global public static event StructureDrop.SalvageRequestHandler OnSalvageRequested_Global Event Type StructureDrop.SalvageRequestHandler"
  },
  "api/SDG.Unturned.StructureDrop_NetMethods.html": {
    "href": "api/SDG.Unturned.StructureDrop_NetMethods.html",
    "title": "Class StructureDrop_NetMethods | Unturned Analyse Doc",
    "keywords": "Class StructureDrop_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(StructureDrop))] public static class StructureDrop_NetMethods Inheritance object StructureDrop_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveHealth_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveHealth\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveHealth_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveHealth_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveHealth\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveHealth_Write(NetPakWriter writer, byte hp) Parameters writer NetPakWriter hp byte ReceiveOwnerAndGroup_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveOwnerAndGroup\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveOwnerAndGroup_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveOwnerAndGroup_Write(NetPakWriter, ulong, ulong) [NetInvokableGeneratedMethod(\"ReceiveOwnerAndGroup\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveOwnerAndGroup_Write(NetPakWriter writer, ulong newOwner, ulong newGroup) Parameters writer NetPakWriter newOwner ulong newGroup ulong ReceiveSalvageRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSalvageRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSalvageRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTransformRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTransformRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTransformRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveTransformRequest_Write(NetPakWriter, Vector3, Quaternion) [NetInvokableGeneratedMethod(\"ReceiveTransformRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTransformRequest_Write(NetPakWriter writer, Vector3 point, Quaternion rotation) Parameters writer NetPakWriter point Vector3 rotation Quaternion ReceiveTransform_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveTransform\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveTransform_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveTransform_Write(NetPakWriter, byte, byte, Vector3, Quaternion) [NetInvokableGeneratedMethod(\"ReceiveTransform\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveTransform_Write(NetPakWriter writer, byte old_x, byte old_y, Vector3 point, Quaternion rotation) Parameters writer NetPakWriter old_x byte old_y byte point Vector3 rotation Quaternion"
  },
  "api/SDG.Unturned.StructureManager.html": {
    "href": "api/SDG.Unturned.StructureManager.html",
    "title": "Class StructureManager | Unturned Analyse Doc",
    "keywords": "Class StructureManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StructureManager : SteamCaller Inheritance object SteamCaller StructureManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors StructureManager() public StructureManager() Fields HEIGHT public static readonly float HEIGHT Field Value float OnRepairRequested public static RepairStructureRequestHandler OnRepairRequested Field Value RepairStructureRequestHandler OnRepaired public static RepairedStructureHandler OnRepaired Field Value RepairedStructureHandler PILLAR public static readonly float PILLAR Field Value float SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_INITIAL public const byte SAVEDATA_VERSION_INITIAL = 8 Field Value byte SAVEDATA_VERSION_REPLACE_EULER_ANGLES_WITH_QUATERNION public const byte SAVEDATA_VERSION_REPLACE_EULER_ANGLES_WITH_QUATERNION = 9 Field Value byte STRUCTURE_REGIONS public static readonly byte STRUCTURE_REGIONS Field Value byte WALL public static readonly float WALL Field Value float onDamageStructureRequested public static DamageStructureRequestHandler onDamageStructureRequested Field Value DamageStructureRequestHandler onDeployStructureRequested public static DeployStructureRequestHandler onDeployStructureRequested Field Value DeployStructureRequestHandler onSalvageStructureRequested [Obsolete(\"Please use StructureDrop.OnSalvageRequested_Global instead\")] public static SalvageStructureRequestHandler onSalvageStructureRequested Field Value SalvageStructureRequestHandler onStructureSpawned public static StructureSpawnedHandler onStructureSpawned Field Value StructureSpawnedHandler onTransformRequested public static TransformStructureRequestHandler onTransformRequested Field Value TransformStructureRequestHandler Properties instance Exposed for Rocket transition to modules backwards compatibility. public static StructureManager instance { get; } Property Value StructureManager regions public static StructureRegion[,] regions { get; } Property Value StructureRegion[,] Methods EnumerateClients_Remote(byte, byte) [Obsolete(\"Replaced by GatherRemoteClientConnections\")] public static IEnumerable<ITransportConnection> EnumerateClients_Remote(byte x, byte y) Parameters x byte y byte Returns IEnumerable<ITransportConnection> FindStructureByRootTransform(Transform) public static StructureDrop FindStructureByRootTransform(Transform transform) Parameters transform Transform Returns StructureDrop GatherRemoteClientConnections(byte, byte) public static PooledTransportConnectionList GatherRemoteClientConnections(byte x, byte y) Parameters x byte y byte Returns PooledTransportConnectionList ReceiveClearRegionStructures(byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellClearRegionStructures\")] public static void ReceiveClearRegionStructures(byte x, byte y) Parameters x byte y byte ReceiveDestroyStructure(in ClientInvocationContext, NetId, Vector3, bool) Not an instance method because structure might not exist yet, in which case we cancel instantiation. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveDestroyStructure(in ClientInvocationContext context, NetId netId, Vector3 ragdoll, bool wasPickedUp) Parameters context ClientInvocationContext netId NetId ragdoll Vector3 wasPickedUp bool ReceiveMultipleStructures(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveMultipleStructures(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSingleStructure(byte, byte, Guid, Vector3, Quaternion, ulong, ulong, NetId) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellStructure\")] public static void ReceiveSingleStructure(byte x, byte y, Guid id, Vector3 point, Quaternion rotation, ulong owner, ulong group, NetId netId) Parameters x byte y byte id Guid point Vector3 rotation Quaternion owner ulong group ulong netId NetId ServerSetStructureTransform(Transform, Vector3, Quaternion) public static bool ServerSetStructureTransform(Transform transform, Vector3 position, Quaternion rotation) Parameters transform Transform position Vector3 rotation Quaternion Returns bool askClearAllStructures() public static void askClearAllStructures() askClearRegionStructures(byte, byte) public static void askClearRegionStructures(byte x, byte y) Parameters x byte y byte askSalvageStructure(CSteamID, byte, byte, ushort) [Obsolete] public void askSalvageStructure(CSteamID steamID, byte x, byte y, ushort index) Parameters steamID CSteamID x byte y byte index ushort askStructures(CSteamID, byte, byte) [Obsolete] public void askStructures(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte askTransformStructure(CSteamID, byte, byte, uint, Vector3, byte, byte, byte) [Obsolete] public void askTransformStructure(CSteamID steamID, byte x, byte y, uint instanceID, Vector3 point, byte angle_x, byte angle_y, byte angle_z) Parameters steamID CSteamID x byte y byte instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte changeOwnerAndGroup(Transform, ulong, ulong) public static void changeOwnerAndGroup(Transform transform, ulong newOwner, ulong newGroup) Parameters transform Transform newOwner ulong newGroup ulong damage(Transform, Vector3, float, float, bool, CSteamID, EDamageOrigin) public static void damage(Transform transform, Vector3 direction, float damage, float times, bool armor, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters transform Transform direction Vector3 damage float times float armor bool instigatorSteamID CSteamID damageOrigin EDamageOrigin destroyStructure(StructureDrop, byte, byte, Vector3) public static void destroyStructure(StructureDrop structure, byte x, byte y, Vector3 ragdoll) Parameters structure StructureDrop x byte y byte ragdoll Vector3 destroyStructure(StructureDrop, byte, byte, Vector3, bool) Remove structure instance on server and client. public static void destroyStructure(StructureDrop structure, byte x, byte y, Vector3 ragdoll, bool wasPickedUp) Parameters structure StructureDrop x byte y byte ragdoll Vector3 wasPickedUp bool destroyStructure(StructureRegion, byte, byte, ushort, Vector3) [Obsolete(\"Please replace the methods which take an index\")] public static void destroyStructure(StructureRegion region, byte x, byte y, ushort index, Vector3 ragdoll) Parameters region StructureRegion x byte y byte index ushort ragdoll Vector3 dropReplicatedStructure(Structure, Vector3, Quaternion, ulong, ulong) Spawn a new structure and replicate it. public static bool dropReplicatedStructure(Structure structure, Vector3 point, Quaternion rotation, ulong owner, ulong group) Parameters structure Structure point Vector3 rotation Quaternion owner ulong group ulong Returns bool dropStructure(Structure, Vector3, float, float, float, ulong, ulong) Legacy function for UseableStructure. public static bool dropStructure(Structure structure, Vector3 point, float angle_x, float angle_y, float angle_z, ulong owner, ulong group) Parameters structure Structure point Vector3 angle_x float angle_y float angle_z float owner ulong group ulong Returns bool getStructuresInRadius(Vector3, float, List<RegionCoordinate>, List<Transform>) public static void getStructuresInRadius(Vector3 center, float sqrRadius, List<RegionCoordinate> search, List<Transform> result) Parameters center Vector3 sqrRadius float search List<RegionCoordinate> result List<Transform> load() public static void load() repair(Transform, float, float) public static void repair(Transform structure, float damage, float times) Parameters structure Transform damage float times float repair(Transform, float, float, CSteamID) public static void repair(Transform transform, float damage, float times, CSteamID instigatorSteamID = null) Parameters transform Transform damage float times float instigatorSteamID CSteamID salvageStructure(Transform) public static void salvageStructure(Transform transform) Parameters transform Transform save() public static void save() tellClearRegionStructures(CSteamID, byte, byte) [Obsolete] public void tellClearRegionStructures(CSteamID steamID, byte x, byte y) Parameters steamID CSteamID x byte y byte tellStructure(CSteamID, byte, byte, ushort, Vector3, byte, byte, byte, ulong, ulong, uint) [Obsolete] public void tellStructure(CSteamID steamID, byte x, byte y, ushort id, Vector3 point, byte angle_x, byte angle_y, byte angle_z, ulong owner, ulong group, uint instanceID) Parameters steamID CSteamID x byte y byte id ushort point Vector3 angle_x byte angle_y byte angle_z byte owner ulong group ulong instanceID uint tellStructureHealth(CSteamID, byte, byte, ushort, byte) [Obsolete] public void tellStructureHealth(CSteamID steamID, byte x, byte y, ushort index, byte hp) Parameters steamID CSteamID x byte y byte index ushort hp byte tellStructureOwnerAndGroup(CSteamID, byte, byte, ushort, ulong, ulong) [Obsolete] public void tellStructureOwnerAndGroup(CSteamID steamID, byte x, byte y, ushort index, ulong newOwner, ulong newGroup) Parameters steamID CSteamID x byte y byte index ushort newOwner ulong newGroup ulong tellStructures(CSteamID) [Obsolete] public void tellStructures(CSteamID steamID) Parameters steamID CSteamID tellTakeStructure(CSteamID, byte, byte, ushort, Vector3) [Obsolete] public void tellTakeStructure(CSteamID steamID, byte x, byte y, ushort index, Vector3 ragdoll) Parameters steamID CSteamID x byte y byte index ushort ragdoll Vector3 tellTransformStructure(CSteamID, byte, byte, uint, Vector3, byte, byte, byte) [Obsolete] public void tellTransformStructure(CSteamID steamID, byte x, byte y, uint instanceID, Vector3 point, byte angle_x, byte angle_y, byte angle_z) Parameters steamID CSteamID x byte y byte instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte transformStructure(Transform, Vector3, Quaternion) public static void transformStructure(Transform transform, Vector3 point, Quaternion rotation) Parameters transform Transform point Vector3 rotation Quaternion tryGetInfo(Transform, out byte, out byte, out ushort, out StructureRegion) [Obsolete(\"Please use FindStructureByRootTransform instead\")] public static bool tryGetInfo(Transform structure, out byte x, out byte y, out ushort index, out StructureRegion region) Parameters structure Transform x byte y byte index ushort region StructureRegion Returns bool tryGetInfo(Transform, out byte, out byte, out ushort, out StructureRegion, out StructureDrop) [Obsolete(\"Please use FindStructureByRootTransform instead\")] public static bool tryGetInfo(Transform structure, out byte x, out byte y, out ushort index, out StructureRegion region, out StructureDrop drop) Parameters structure Transform x byte y byte index ushort region StructureRegion drop StructureDrop Returns bool tryGetRegion(byte, byte, out StructureRegion) public static bool tryGetRegion(byte x, byte y, out StructureRegion region) Parameters x byte y byte region StructureRegion Returns bool tryGetRegion(Transform, out byte, out byte, out StructureRegion) public static bool tryGetRegion(Transform structure, out byte x, out byte y, out StructureRegion region) Parameters structure Transform x byte y byte region StructureRegion Returns bool"
  },
  "api/SDG.Unturned.StructureManager_NetMethods.html": {
    "href": "api/SDG.Unturned.StructureManager_NetMethods.html",
    "title": "Class StructureManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class StructureManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(StructureManager))] public static class StructureManager_NetMethods Inheritance object StructureManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveClearRegionStructures_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveClearRegionStructures\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveClearRegionStructures_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveClearRegionStructures_Write(NetPakWriter, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveClearRegionStructures\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveClearRegionStructures_Write(NetPakWriter writer, byte x, byte y) Parameters writer NetPakWriter x byte y byte ReceiveDestroyStructure_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDestroyStructure\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDestroyStructure_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDestroyStructure_Write(NetPakWriter, NetId, Vector3, bool) [NetInvokableGeneratedMethod(\"ReceiveDestroyStructure\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDestroyStructure_Write(NetPakWriter writer, NetId netId, Vector3 ragdoll, bool wasPickedUp) Parameters writer NetPakWriter netId NetId ragdoll Vector3 wasPickedUp bool ReceiveSingleStructure_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSingleStructure\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSingleStructure_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSingleStructure_Write(NetPakWriter, byte, byte, Guid, Vector3, Quaternion, ulong, ulong, NetId) [NetInvokableGeneratedMethod(\"ReceiveSingleStructure\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSingleStructure_Write(NetPakWriter writer, byte x, byte y, Guid id, Vector3 point, Quaternion rotation, ulong owner, ulong group, NetId netId) Parameters writer NetPakWriter x byte y byte id Guid point Vector3 rotation Quaternion owner ulong group ulong netId NetId"
  },
  "api/SDG.Unturned.StructureRegion.html": {
    "href": "api/SDG.Unturned.StructureRegion.html",
    "title": "Class StructureRegion | Unturned Analyse Doc",
    "keywords": "Class StructureRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StructureRegion Inheritance object StructureRegion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StructureRegion() public StructureRegion() Fields isNetworked public bool isNetworked Field Value bool Properties drops public List<StructureDrop> drops { get; } Property Value List<StructureDrop> structures [Obsolete(\"Maintaining two separate lists was error prone, but still kept for backwards compat\")] public List<StructureData> structures { get; } Property Value List<StructureData> Methods FindStructureByRootTransform(Transform) public StructureDrop FindStructureByRootTransform(Transform transform) Parameters transform Transform Returns StructureDrop destroy() [Obsolete(\"Renamed to DestroyAll\")] public void destroy() findStructureByInstanceID(uint) [Obsolete(\"Dead code, please contact if you need this and we will make a plan\")] public StructureData findStructureByInstanceID(uint instanceID) Parameters instanceID uint Returns StructureData"
  },
  "api/SDG.Unturned.StructureSpawnedHandler.html": {
    "href": "api/SDG.Unturned.StructureSpawnedHandler.html",
    "title": "Delegate StructureSpawnedHandler | Unturned Analyse Doc",
    "keywords": "Delegate StructureSpawnedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void StructureSpawnedHandler(StructureRegion region, StructureDrop drop) Parameters region StructureRegion drop StructureDrop Constructors StructureSpawnedHandler(object, IntPtr) public StructureSpawnedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(StructureRegion, StructureDrop, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(StructureRegion region, StructureDrop drop, AsyncCallback callback, object @object) Parameters region StructureRegion drop StructureDrop callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(StructureRegion, StructureDrop) public virtual void Invoke(StructureRegion region, StructureDrop drop) Parameters region StructureRegion drop StructureDrop"
  },
  "api/SDG.Unturned.StructureTool.html": {
    "href": "api/SDG.Unturned.StructureTool.html",
    "title": "Class StructureTool | Unturned Analyse Doc",
    "keywords": "Class StructureTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StructureTool : MonoBehaviour Inheritance object StructureTool Constructors StructureTool() public StructureTool() Methods getStructure(ushort, byte) public static Transform getStructure(ushort id, byte hp) Parameters id ushort hp byte Returns Transform getStructure(ushort, byte, ulong, ulong, ItemStructureAsset) public static Transform getStructure(ushort id, byte hp, ulong owner, ulong group, ItemStructureAsset asset) Parameters id ushort hp byte owner ulong group ulong asset ItemStructureAsset Returns Transform"
  },
  "api/SDG.Unturned.StructuresConfigData.html": {
    "href": "api/SDG.Unturned.StructuresConfigData.html",
    "title": "Class StructuresConfigData | Unturned Analyse Doc",
    "keywords": "Class StructuresConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class StructuresConfigData Inheritance object StructuresConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StructuresConfigData(EGameMode) public StructuresConfigData(EGameMode mode) Parameters mode EGameMode Fields Armor_Hightier_Multiplier public float Armor_Hightier_Multiplier Field Value float Armor_Lowtier_Multiplier public float Armor_Lowtier_Multiplier Field Value float Decay_Time public uint Decay_Time Field Value uint Gun_Highcal_Damage_Multiplier public float Gun_Highcal_Damage_Multiplier Field Value float Gun_Lowcal_Damage_Multiplier public float Gun_Lowcal_Damage_Multiplier Field Value float Melee_Damage_Multiplier public float Melee_Damage_Multiplier Field Value float Melee_Repair_Multiplier public float Melee_Repair_Multiplier Field Value float Methods getArmorMultiplier(EArmorTier) public float getArmorMultiplier(EArmorTier armorTier) Parameters armorTier EArmorTier Returns float"
  },
  "api/SDG.Unturned.SubcontentInfo.html": {
    "href": "api/SDG.Unturned.SubcontentInfo.html",
    "title": "Class SubcontentInfo | Unturned Analyse Doc",
    "keywords": "Class SubcontentInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SubcontentInfo Inheritance object SubcontentInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SubcontentInfo() public SubcontentInfo() Fields content public string content Field Value string isImage public bool isImage Field Value bool isLink public bool isLink Field Value bool url public string url Field Value string"
  },
  "api/SDG.Unturned.SurvivalGameMode.html": {
    "href": "api/SDG.Unturned.SurvivalGameMode.html",
    "title": "Class SurvivalGameMode | Unturned Analyse Doc",
    "keywords": "Class SurvivalGameMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class SurvivalGameMode : GameMode Inheritance object GameMode SurvivalGameMode Inherited Members GameMode.getPlayerGameObject(SteamPlayerID) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SurvivalGameMode() public SurvivalGameMode() Methods ToString() public override string ToString() Returns string"
  },
  "api/SDG.Unturned.SwappedState.html": {
    "href": "api/SDG.Unturned.SwappedState.html",
    "title": "Delegate SwappedState | Unturned Analyse Doc",
    "keywords": "Delegate SwappedState Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void SwappedState(SleekButtonState button, int index) Parameters button SleekButtonState index int Constructors SwappedState(object, IntPtr) public SwappedState(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekButtonState, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekButtonState button, int index, AsyncCallback callback, object @object) Parameters button SleekButtonState index int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekButtonState, int) public virtual void Invoke(SleekButtonState button, int index) Parameters button SleekButtonState index int"
  },
  "api/SDG.Unturned.SystemActionEx.html": {
    "href": "api/SDG.Unturned.SystemActionEx.html",
    "title": "Class SystemActionEx | Unturned Analyse Doc",
    "keywords": "Class SystemActionEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class SystemActionEx Inheritance object SystemActionEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods TryInvoke(Action, string) public static void TryInvoke(this Action action, string debugName) Parameters action Action debugName string TryInvoke<T>(Action<T>, string, T) public static void TryInvoke<T>(this Action<T> action, string debugName, T obj) Parameters action Action<T> debugName string obj T Type Parameters T TryInvoke<T1, T2>(Action<T1, T2>, string, T1, T2) public static void TryInvoke<T1, T2>(this Action<T1, T2> action, string debugName, T1 arg1, T2 arg2) Parameters action Action<T1, T2> debugName string arg1 T1 arg2 T2 Type Parameters T1 T2 TryInvoke<T1, T2, T3>(Action<T1, T2, T3>, string, T1, T2, T3) public static void TryInvoke<T1, T2, T3>(this Action<T1, T2, T3> action, string debugName, T1 arg1, T2 arg2, T3 arg3) Parameters action Action<T1, T2, T3> debugName string arg1 T1 arg2 T2 arg3 T3 Type Parameters T1 T2 T3 TryInvoke<T1, T2, T3, T4>(Action<T1, T2, T3, T4>, string, T1, T2, T3, T4) public static void TryInvoke<T1, T2, T3, T4>(this Action<T1, T2, T3, T4> action, string debugName, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters action Action<T1, T2, T3, T4> debugName string arg1 T1 arg2 T2 arg3 T3 arg4 T4 Type Parameters T1 T2 T3 T4"
  },
  "api/SDG.Unturned.TMP_PluginInputFieldListener.html": {
    "href": "api/SDG.Unturned.TMP_PluginInputFieldListener.html",
    "title": "Class TMP_PluginInputFieldListener | Unturned Analyse Doc",
    "keywords": "Class TMP_PluginInputFieldListener Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TMP_PluginInputFieldListener : MonoBehaviour Inheritance object TMP_PluginInputFieldListener Constructors TMP_PluginInputFieldListener() public TMP_PluginInputFieldListener() Fields targetInputField public TMP_InputField targetInputField Field Value TMP_InputField Methods Start() protected void Start()"
  },
  "api/SDG.Unturned.TacticalLaserScale.html": {
    "href": "api/SDG.Unturned.TacticalLaserScale.html",
    "title": "Class TacticalLaserScale | Unturned Analyse Doc",
    "keywords": "Class TacticalLaserScale Namespace SDG.Unturned Assembly Assembly-CSharp.dll Component for the tactical laser attachment's red dot. Resizes itself per-camera to maintain a constant on-screen size. public class TacticalLaserScale : MonoBehaviour Inheritance object TacticalLaserScale Constructors TacticalLaserScale() public TacticalLaserScale() Fields scaleMultiplier public float scaleMultiplier Field Value float scalingCurve Used to tune the scale by distance so that far away laser is not quite as comically large. public AnimationCurve scalingCurve Field Value AnimationCurve Methods OnWillRenderObject() public void OnWillRenderObject()"
  },
  "api/SDG.Unturned.TakeItemRequestHandler.html": {
    "href": "api/SDG.Unturned.TakeItemRequestHandler.html",
    "title": "Delegate TakeItemRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate TakeItemRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TakeItemRequestHandler(Player player, byte x, byte y, uint instanceID, byte to_x, byte to_y, byte to_rot, byte to_page, ItemData itemData, ref bool shouldAllow) Parameters player Player x byte y byte instanceID uint to_x byte to_y byte to_rot byte to_page byte itemData ItemData shouldAllow bool Constructors TakeItemRequestHandler(object, IntPtr) public TakeItemRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, byte, byte, uint, byte, byte, byte, byte, ItemData, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, byte x, byte y, uint instanceID, byte to_x, byte to_y, byte to_rot, byte to_page, ItemData itemData, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters player Player x byte y byte instanceID uint to_x byte to_y byte to_rot byte to_page byte itemData ItemData shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(Player, byte, byte, uint, byte, byte, byte, byte, ItemData, ref bool) public virtual void Invoke(Player player, byte x, byte y, uint instanceID, byte to_x, byte to_y, byte to_rot, byte to_page, ItemData itemData, ref bool shouldAllow) Parameters player Player x byte y byte instanceID uint to_x byte to_y byte to_rot byte to_page byte itemData ItemData shouldAllow bool"
  },
  "api/SDG.Unturned.Talked.html": {
    "href": "api/SDG.Unturned.Talked.html",
    "title": "Delegate Talked | Unturned Analyse Doc",
    "keywords": "Delegate Talked Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Talked(bool isTalking) Parameters isTalking bool Constructors Talked(object, IntPtr) public Talked(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isTalking, AsyncCallback callback, object @object) Parameters isTalking bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isTalking) Parameters isTalking bool"
  },
  "api/SDG.Unturned.TempNodeBase.html": {
    "href": "api/SDG.Unturned.TempNodeBase.html",
    "title": "Class TempNodeBase | Unturned Analyse Doc",
    "keywords": "Class TempNodeBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TempNodeBase : DevkitHierarchyWorldItem, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable, IDevkitInteractableBeginSelectionHandler, IDevkitInteractableEndSelectionHandler Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem TempNodeBase Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable IDevkitInteractableBeginSelectionHandler IDevkitInteractableEndSelectionHandler Derived Spawnpoint AirdropDevkitNode LocationDevkitNode Inherited Members DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.readHierarchyItem(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors TempNodeBase() public TempNodeBase() Fields isSelected public bool isSelected Field Value bool Methods beginSelection(InteractionData) public void beginSelection(InteractionData data) Parameters data InteractionData endSelection(InteractionData) public void endSelection(InteractionData data) Parameters data InteractionData"
  },
  "api/SDG.Unturned.TempNodeSystemBase.html": {
    "href": "api/SDG.Unturned.TempNodeSystemBase.html",
    "title": "Class TempNodeSystemBase | Unturned Analyse Doc",
    "keywords": "Class TempNodeSystemBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class TempNodeSystemBase Inheritance object TempNodeSystemBase Derived SpawnpointSystemV2 AirdropDevkitNodeSystem LocationDevkitNodeSystem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TempNodeSystemBase() protected TempNodeSystemBase()"
  },
  "api/SDG.Unturned.TemperatureBubble.html": {
    "href": "api/SDG.Unturned.TemperatureBubble.html",
    "title": "Class TemperatureBubble | Unturned Analyse Doc",
    "keywords": "Class TemperatureBubble Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TemperatureBubble Inheritance object TemperatureBubble Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TemperatureBubble(Transform, float, EPlayerTemperature) public TemperatureBubble(Transform newOrigin, float newSqrRadius, EPlayerTemperature newTemperature) Parameters newOrigin Transform newSqrRadius float newTemperature EPlayerTemperature Fields origin public Transform origin Field Value Transform sqrRadius public float sqrRadius Field Value float temperature public EPlayerTemperature temperature Field Value EPlayerTemperature"
  },
  "api/SDG.Unturned.TemperatureManager.html": {
    "href": "api/SDG.Unturned.TemperatureManager.html",
    "title": "Class TemperatureManager | Unturned Analyse Doc",
    "keywords": "Class TemperatureManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TemperatureManager : MonoBehaviour Inheritance object TemperatureManager Constructors TemperatureManager() public TemperatureManager() Methods checkPointTemperature(Vector3, bool) public static EPlayerTemperature checkPointTemperature(Vector3 point, bool proofFire) Parameters point Vector3 proofFire bool Returns EPlayerTemperature deregisterBubble(TemperatureBubble) public static void deregisterBubble(TemperatureBubble bubble) Parameters bubble TemperatureBubble registerBubble(Transform, float, EPlayerTemperature) public static TemperatureBubble registerBubble(Transform origin, float radius, EPlayerTemperature temperature) Parameters origin Transform radius float temperature EPlayerTemperature Returns TemperatureBubble"
  },
  "api/SDG.Unturned.TemperatureTrigger.html": {
    "href": "api/SDG.Unturned.TemperatureTrigger.html",
    "title": "Class TemperatureTrigger | Unturned Analyse Doc",
    "keywords": "Class TemperatureTrigger Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TemperatureTrigger : MonoBehaviour Inheritance object TemperatureTrigger Constructors TemperatureTrigger() public TemperatureTrigger() Fields temperature public EPlayerTemperature temperature Field Value EPlayerTemperature"
  },
  "api/SDG.Unturned.TemperatureUpdated.html": {
    "href": "api/SDG.Unturned.TemperatureUpdated.html",
    "title": "Delegate TemperatureUpdated | Unturned Analyse Doc",
    "keywords": "Delegate TemperatureUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TemperatureUpdated(EPlayerTemperature newTemperature) Parameters newTemperature EPlayerTemperature Constructors TemperatureUpdated(object, IntPtr) public TemperatureUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EPlayerTemperature, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EPlayerTemperature newTemperature, AsyncCallback callback, object @object) Parameters newTemperature EPlayerTemperature callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EPlayerTemperature) public virtual void Invoke(EPlayerTemperature newTemperature) Parameters newTemperature EPlayerTemperature"
  },
  "api/SDG.Unturned.TerrainEditor.DevkitLandscapeToolModeChangedHandler.html": {
    "href": "api/SDG.Unturned.TerrainEditor.DevkitLandscapeToolModeChangedHandler.html",
    "title": "Delegate TerrainEditor.DevkitLandscapeToolModeChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate TerrainEditor.DevkitLandscapeToolModeChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TerrainEditor.DevkitLandscapeToolModeChangedHandler(TerrainEditor.EDevkitLandscapeToolMode oldMode, TerrainEditor.EDevkitLandscapeToolMode newMode) Parameters oldMode TerrainEditor.EDevkitLandscapeToolMode newMode TerrainEditor.EDevkitLandscapeToolMode Constructors DevkitLandscapeToolModeChangedHandler(object, IntPtr) public DevkitLandscapeToolModeChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EDevkitLandscapeToolMode, EDevkitLandscapeToolMode, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(TerrainEditor.EDevkitLandscapeToolMode oldMode, TerrainEditor.EDevkitLandscapeToolMode newMode, AsyncCallback callback, object @object) Parameters oldMode TerrainEditor.EDevkitLandscapeToolMode newMode TerrainEditor.EDevkitLandscapeToolMode callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EDevkitLandscapeToolMode, EDevkitLandscapeToolMode) public virtual void Invoke(TerrainEditor.EDevkitLandscapeToolMode oldMode, TerrainEditor.EDevkitLandscapeToolMode newMode) Parameters oldMode TerrainEditor.EDevkitLandscapeToolMode newMode TerrainEditor.EDevkitLandscapeToolMode"
  },
  "api/SDG.Unturned.TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler.html": {
    "href": "api/SDG.Unturned.TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler.html",
    "title": "Delegate TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler(LandscapeTile oldSelectedTile, LandscapeTile newSelectedTile) Parameters oldSelectedTile LandscapeTile newSelectedTile LandscapeTile Constructors DevkitLandscapeToolSelectedTileChangedHandler(object, IntPtr) public DevkitLandscapeToolSelectedTileChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(LandscapeTile, LandscapeTile, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(LandscapeTile oldSelectedTile, LandscapeTile newSelectedTile, AsyncCallback callback, object @object) Parameters oldSelectedTile LandscapeTile newSelectedTile LandscapeTile callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(LandscapeTile, LandscapeTile) public virtual void Invoke(LandscapeTile oldSelectedTile, LandscapeTile newSelectedTile) Parameters oldSelectedTile LandscapeTile newSelectedTile LandscapeTile"
  },
  "api/SDG.Unturned.TerrainEditor.EDevkitLandscapeToolHeightmapMode.html": {
    "href": "api/SDG.Unturned.TerrainEditor.EDevkitLandscapeToolHeightmapMode.html",
    "title": "Enum TerrainEditor.EDevkitLandscapeToolHeightmapMode | Unturned Analyse Doc",
    "keywords": "Enum TerrainEditor.EDevkitLandscapeToolHeightmapMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum TerrainEditor.EDevkitLandscapeToolHeightmapMode Fields ADJUST = 0 FLATTEN = 1 RAMP = 3 SMOOTH = 2"
  },
  "api/SDG.Unturned.TerrainEditor.EDevkitLandscapeToolMode.html": {
    "href": "api/SDG.Unturned.TerrainEditor.EDevkitLandscapeToolMode.html",
    "title": "Enum TerrainEditor.EDevkitLandscapeToolMode | Unturned Analyse Doc",
    "keywords": "Enum TerrainEditor.EDevkitLandscapeToolMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum TerrainEditor.EDevkitLandscapeToolMode Fields HEIGHTMAP = 0 SPLATMAP = 1 TILE = 2"
  },
  "api/SDG.Unturned.TerrainEditor.EDevkitLandscapeToolSplatmapMode.html": {
    "href": "api/SDG.Unturned.TerrainEditor.EDevkitLandscapeToolSplatmapMode.html",
    "title": "Enum TerrainEditor.EDevkitLandscapeToolSplatmapMode | Unturned Analyse Doc",
    "keywords": "Enum TerrainEditor.EDevkitLandscapeToolSplatmapMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum TerrainEditor.EDevkitLandscapeToolSplatmapMode Fields AUTO = 1 CUT = 3 PAINT = 0 SMOOTH = 2"
  },
  "api/SDG.Unturned.TerrainEditor.html": {
    "href": "api/SDG.Unturned.TerrainEditor.html",
    "title": "Class TerrainEditor | Unturned Analyse Doc",
    "keywords": "Class TerrainEditor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TerrainEditor : IDevkitTool Inheritance object TerrainEditor Implements IDevkitTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TerrainEditor() public TerrainEditor() Fields _selectedTile protected static LandscapeTile _selectedTile Field Value LandscapeTile _splatmapMaterialTarget protected static AssetReference<LandscapeMaterialAsset> _splatmapMaterialTarget Field Value AssetReference<LandscapeMaterialAsset> _toolMode protected static TerrainEditor.EDevkitLandscapeToolMode _toolMode Field Value TerrainEditor.EDevkitLandscapeToolMode brushWorldPosition protected Vector3 brushWorldPosition Field Value Vector3 changePlanePosition protected Vector3 changePlanePosition Field Value Vector3 flattenPlanePosition protected Vector3 flattenPlanePosition Field Value Vector3 heightmapMode public static TerrainEditor.EDevkitLandscapeToolHeightmapMode heightmapMode Field Value TerrainEditor.EDevkitLandscapeToolHeightmapMode heightmapRampBeginPosition protected Vector3 heightmapRampBeginPosition Field Value Vector3 heightmapRampEndPosition protected Vector3 heightmapRampEndPosition Field Value Vector3 heightmapSmoothSampleAverage protected float heightmapSmoothSampleAverage Field Value float heightmapSmoothSampleCount protected int heightmapSmoothSampleCount Field Value int heightmapSmoothTarget protected float heightmapSmoothTarget Field Value float isBrushVisible protected bool isBrushVisible Field Value bool isChangingBrushFalloff protected bool isChangingBrushFalloff Field Value bool isChangingBrushRadius protected bool isChangingBrushRadius Field Value bool isChangingBrushStrength protected bool isChangingBrushStrength Field Value bool isChangingWeightTarget protected bool isChangingWeightTarget Field Value bool isPointerOnLandscape Whether the pointer is currently in a spot that can be painted. protected bool isPointerOnLandscape Field Value bool isPointerOnTilePlane protected bool isPointerOnTilePlane Field Value bool isSamplingFlattenTarget protected bool isSamplingFlattenTarget Field Value bool isSamplingLayer protected bool isSamplingLayer Field Value bool isSamplingRampPositions protected bool isSamplingRampPositions Field Value bool isTileVisible protected bool isTileVisible Field Value bool pointerTileCoord protected LandscapeCoord pointerTileCoord Field Value LandscapeCoord pointerWorldPosition protected Vector3 pointerWorldPosition Field Value Vector3 previewSamples protected List<LandscapePreviewSample> previewSamples Field Value List<LandscapePreviewSample> splatmapMaterialTargetAsset protected static LandscapeMaterialAsset splatmapMaterialTargetAsset Field Value LandscapeMaterialAsset splatmapMode public static TerrainEditor.EDevkitLandscapeToolSplatmapMode splatmapMode Field Value TerrainEditor.EDevkitLandscapeToolSplatmapMode splatmapSmoothSampleAverage protected Dictionary<AssetReference<LandscapeMaterialAsset>, float> splatmapSmoothSampleAverage Field Value Dictionary<AssetReference<LandscapeMaterialAsset>, float> splatmapSmoothSampleCount protected int splatmapSmoothSampleCount Field Value int tilePlanePosition protected Vector3 tilePlanePosition Field Value Vector3 Properties brushFalloff protected virtual float brushFalloff { get; set; } Property Value float brushRadius protected virtual float brushRadius { get; set; } Property Value float brushStrength protected virtual float brushStrength { get; set; } Property Value float heightmapAdjustSensitivity public virtual float heightmapAdjustSensitivity { get; } Property Value float heightmapBrushFalloff public virtual float heightmapBrushFalloff { get; set; } Property Value float heightmapBrushRadius public virtual float heightmapBrushRadius { get; set; } Property Value float heightmapBrushStrength public virtual float heightmapBrushStrength { get; set; } Property Value float heightmapFlattenSensitivity public virtual float heightmapFlattenSensitivity { get; } Property Value float heightmapFlattenTarget public virtual float heightmapFlattenTarget { get; set; } Property Value float heightmapMaxPreviewSamples public virtual uint heightmapMaxPreviewSamples { get; set; } Property Value uint isChangingBrush protected virtual bool isChangingBrush { get; } Property Value bool maxPreviewSamples protected virtual uint maxPreviewSamples { get; set; } Property Value uint selectedTile public static LandscapeTile selectedTile { get; set; } Property Value LandscapeTile splatmapBrushFalloff public virtual float splatmapBrushFalloff { get; set; } Property Value float splatmapBrushRadius public virtual float splatmapBrushRadius { get; set; } Property Value float splatmapBrushStrength public virtual float splatmapBrushStrength { get; set; } Property Value float splatmapMaterialTarget public static AssetReference<LandscapeMaterialAsset> splatmapMaterialTarget { get; set; } Property Value AssetReference<LandscapeMaterialAsset> splatmapMaxPreviewSamples public virtual uint splatmapMaxPreviewSamples { get; set; } Property Value uint splatmapPaintSensitivity public virtual float splatmapPaintSensitivity { get; } Property Value float splatmapUseWeightTarget public virtual bool splatmapUseWeightTarget { get; set; } Property Value bool splatmapWeightTarget public virtual float splatmapWeightTarget { get; set; } Property Value float toolMode public static TerrainEditor.EDevkitLandscapeToolMode toolMode { get; set; } Property Value TerrainEditor.EDevkitLandscapeToolMode Methods HandleHeightmapReadBrushAverage(LandscapeCoord, HeightmapCoord, Vector3, float) protected void HandleHeightmapReadBrushAverage(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float HandleHeightmapReadPixelSmooth(LandscapeCoord, HeightmapCoord, Vector3, float) protected void HandleHeightmapReadPixelSmooth(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float HandleSplatmapReadPixelSmooth(LandscapeCoord, SplatmapCoord, Vector3, float[]) protected void HandleSplatmapReadPixelSmooth(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] beginChangeHotkeyTransaction() protected virtual void beginChangeHotkeyTransaction() blendSplatmapWeights(float[], int, float, float) protected void blendSplatmapWeights(float[] currentWeights, int targetMaterialLayer, float targetWeight, float speed) Parameters currentWeights float[] targetMaterialLayer int targetWeight float speed float dequip() public virtual void dequip() endChangeHotkeyTransaction() protected virtual void endChangeHotkeyTransaction() equip() public virtual void equip() getBrushAlpha(float) Get brush strength multiplier where strength decreases past falloff. Use this method so that different falloffs e.g. linear, curved can be added. protected float getBrushAlpha(float normalizedDistance) Parameters normalizedDistance float Percentage of brushRadius. Returns float getSplatmapTargetMaterialLayerIndex(LandscapeTile, AssetReference<LandscapeMaterialAsset>) protected int getSplatmapTargetMaterialLayerIndex(LandscapeTile tile, AssetReference<LandscapeMaterialAsset> targetMaterial) Parameters tile LandscapeTile targetMaterial AssetReference<LandscapeMaterialAsset> Returns int handleGLCircleOffset(ref Vector3) protected void handleGLCircleOffset(ref Vector3 position) Parameters position Vector3 handleGLRender() protected void handleGLRender() handleHeightmapGetVerticesBrush(LandscapeCoord, HeightmapCoord, Vector3) protected void handleHeightmapGetVerticesBrush(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 handleHeightmapGetVerticesRamp(LandscapeCoord, HeightmapCoord, Vector3) protected void handleHeightmapGetVerticesRamp(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 handleHeightmapWriteAdjust(LandscapeCoord, HeightmapCoord, Vector3, float) protected float handleHeightmapWriteAdjust(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float Returns float handleHeightmapWriteFlatten(LandscapeCoord, HeightmapCoord, Vector3, float) protected float handleHeightmapWriteFlatten(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float Returns float handleHeightmapWriteRamp(LandscapeCoord, HeightmapCoord, Vector3, float) protected float handleHeightmapWriteRamp(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float Returns float handleHeightmapWriteSmooth(LandscapeCoord, HeightmapCoord, Vector3, float) protected float handleHeightmapWriteSmooth(LandscapeCoord tileCoord, HeightmapCoord heightmapCoord, Vector3 worldPosition, float currentHeight) Parameters tileCoord LandscapeCoord heightmapCoord HeightmapCoord worldPosition Vector3 currentHeight float Returns float handleSplatmapGetVerticesBrush(LandscapeCoord, SplatmapCoord, Vector3) protected void handleSplatmapGetVerticesBrush(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 handleSplatmapReadBrushAverage(LandscapeCoord, SplatmapCoord, Vector3, float[]) protected void handleSplatmapReadBrushAverage(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] handleSplatmapReadWeights(LandscapeCoord, SplatmapCoord, Vector3, float[]) protected void handleSplatmapReadWeights(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] handleSplatmapWriteAuto(LandscapeCoord, SplatmapCoord, Vector3, float[]) protected void handleSplatmapWriteAuto(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] handleSplatmapWriteCut(Vector3, bool) protected bool handleSplatmapWriteCut(Vector3 worldPosition, bool currentlyVisible) Parameters worldPosition Vector3 currentlyVisible bool Returns bool handleSplatmapWritePaint(LandscapeCoord, SplatmapCoord, Vector3, float[]) protected void handleSplatmapWritePaint(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] handleSplatmapWriteSmooth(LandscapeCoord, SplatmapCoord, Vector3, float[]) protected void handleSplatmapWriteSmooth(LandscapeCoord tileCoord, SplatmapCoord splatmapCoord, Vector3 worldPosition, float[] currentWeights) Parameters tileCoord LandscapeCoord splatmapCoord SplatmapCoord worldPosition Vector3 currentWeights float[] update() public virtual void update() Events selectedTileChanged public static event TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler selectedTileChanged Event Type TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler toolModeChanged public static event TerrainEditor.DevkitLandscapeToolModeChangedHandler toolModeChanged Event Type TerrainEditor.DevkitLandscapeToolModeChangedHandler"
  },
  "api/SDG.Unturned.TextChatEventHook.EModeFilter.html": {
    "href": "api/SDG.Unturned.TextChatEventHook.EModeFilter.html",
    "title": "Enum TextChatEventHook.EModeFilter | Unturned Analyse Doc",
    "keywords": "Enum TextChatEventHook.EModeFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum TextChatEventHook.EModeFilter Fields Any = 0 Message can be in any chat channel. Global = 1 Message must be in Global channel. Local = 2 Message must be in Local channel."
  },
  "api/SDG.Unturned.TextChatEventHook.EPhraseFilter.html": {
    "href": "api/SDG.Unturned.TextChatEventHook.EPhraseFilter.html",
    "title": "Enum TextChatEventHook.EPhraseFilter | Unturned Analyse Doc",
    "keywords": "Enum TextChatEventHook.EPhraseFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum TextChatEventHook.EPhraseFilter Fields Contains = 1 Message must contain phrase text. EndsWith = 2 Message must end with phrase text. StartsWith = 0 Message must start with phrase text."
  },
  "api/SDG.Unturned.TextChatEventHook.html": {
    "href": "api/SDG.Unturned.TextChatEventHook.html",
    "title": "Class TextChatEventHook | Unturned Analyse Doc",
    "keywords": "Class TextChatEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to any GameObject to receive text chat events. public class TextChatEventHook : MonoBehaviour Inheritance object TextChatEventHook Constructors TextChatEventHook() public TextChatEventHook() Fields ModeFilter Filter to apply to message type. public TextChatEventHook.EModeFilter ModeFilter Field Value TextChatEventHook.EModeFilter OnTriggered Invoked when a player message passes the filters. public UnityEvent OnTriggered Field Value UnityEvent Phrase Substring to search for in message. public string Phrase Field Value string PhraseFilter Filter to apply to message text. public TextChatEventHook.EPhraseFilter PhraseFilter Field Value TextChatEventHook.EPhraseFilter SqrDetectionRadius Sphere radius (squared) around this transform to detect player messages. e.g. 16 is 4 meters public float SqrDetectionRadius Field Value float Methods OnDisable() protected void OnDisable() OnEnable() protected void OnEnable() onChatted(SteamPlayer, EChatMode, ref Color, ref bool, string, ref bool) protected void onChatted(SteamPlayer player, EChatMode mode, ref Color chatted, ref bool isRich, string text, ref bool isVisible) Parameters player SteamPlayer mode EChatMode chatted Color isRich bool text string isVisible bool passesModeFilter(EChatMode) protected bool passesModeFilter(EChatMode mode) Parameters mode EChatMode Returns bool passesPhraseFilter(string) protected bool passesPhraseFilter(string text) Parameters text string Returns bool passesPositionFilter(Vector3) protected bool passesPositionFilter(Vector3 playerPosition) Parameters playerPosition Vector3 Returns bool"
  },
  "api/SDG.Unturned.TextMeshProUtils.html": {
    "href": "api/SDG.Unturned.TextMeshProUtils.html",
    "title": "Class TextMeshProUtils | Unturned Analyse Doc",
    "keywords": "Class TextMeshProUtils Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class TextMeshProUtils Inheritance object TextMeshProUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields DefaultFontName public const string DefaultFontName = \"LiberationSans SDF\" Field Value string Properties DefaultFont public static StaticResourceRef<TMP_FontAsset> DefaultFont { get; } Property Value StaticResourceRef<TMP_FontAsset> Methods FixupFont(TMP_InputField) public static void FixupFont(TMP_InputField component) Parameters component TMP_InputField FixupFont(TextMeshPro) public static void FixupFont(TextMeshPro component) Parameters component TextMeshPro FixupFont(TextMeshProUGUI) public static void FixupFont(TextMeshProUGUI component) Parameters component TextMeshProUGUI"
  },
  "api/SDG.Unturned.ThreadUtil.html": {
    "href": "api/SDG.Unturned.ThreadUtil.html",
    "title": "Class ThreadUtil | Unturned Analyse Doc",
    "keywords": "Class ThreadUtil Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ThreadUtil Inheritance object ThreadUtil Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties gameThread public static Thread gameThread { get; } Property Value Thread Methods IsGameThread(Thread) Extension method for Thread class. Plugins use this. I might have accidentally removed it due to zero refs and Pustalorc was mad: https://github.com/SmartlyDressedGames/Unturned-3.x-Community/discussions/4131 public static bool IsGameThread(this Thread thread) Parameters thread Thread Returns bool assertIsGameThread() Throw an exception if current thread is not the game thread. public static void assertIsGameThread() setupGameThread() Called once by Setup. public static void setupGameThread()"
  },
  "api/SDG.Unturned.ThreadedConsoleInputOutput.html": {
    "href": "api/SDG.Unturned.ThreadedConsoleInputOutput.html",
    "title": "Class ThreadedConsoleInputOutput | Unturned Analyse Doc",
    "keywords": "Class ThreadedConsoleInputOutput Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ThreadedConsoleInputOutput : ConsoleInputOutputBase, ICommandInputOutput Inheritance object ConsoleInputOutputBase ThreadedConsoleInputOutput Implements ICommandInputOutput Derived ThreadedWindowsConsoleInputOutput Inherited Members ConsoleInputOutputBase.defaultShouldRedirectInput ConsoleInputOutputBase.defaultShouldRedirectOutput ConsoleInputOutputBase.defaultShouldProxyRedirectedOutput ConsoleInputOutputBase.shouldRedirectInput ConsoleInputOutputBase.shouldRedirectOutput ConsoleInputOutputBase.shouldProxyRedirectedOutput ConsoleInputOutputBase.wantsToTerminate ConsoleInputOutputBase.isTerminating ConsoleInputOutputBase.desiredTitle ConsoleInputOutputBase.outputInformation(string) ConsoleInputOutputBase.outputWarning(string) ConsoleInputOutputBase.outputError(string) ConsoleInputOutputBase.notifyInputCommitted(string) ConsoleInputOutputBase.synchronizeTitle(string) ConsoleInputOutputBase.onTitleChanged(string) ConsoleInputOutputBase.handleCancelEvent(object, ConsoleCancelEventArgs) ConsoleInputOutputBase.handleTermination() ConsoleInputOutputBase.inputCommitted object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ThreadedConsoleInputOutput() public ThreadedConsoleInputOutput() Methods initialize(CommandWindow) Called when this implementation is setup by command window. public override void initialize(CommandWindow commandWindow) Parameters commandWindow CommandWindow outputToConsole(string, ConsoleColor) protected override void outputToConsole(string value, ConsoleColor color) Parameters value string color ConsoleColor shutdown(CommandWindow) Called when this implementation is deleted or application quits. public override void shutdown(CommandWindow commandWindow) Parameters commandWindow CommandWindow update() Called each Unity update. public override void update()"
  },
  "api/SDG.Unturned.ThreadedWindowsConsoleInputOutput.html": {
    "href": "api/SDG.Unturned.ThreadedWindowsConsoleInputOutput.html",
    "title": "Class ThreadedWindowsConsoleInputOutput | Unturned Analyse Doc",
    "keywords": "Class ThreadedWindowsConsoleInputOutput Namespace SDG.Unturned Assembly Assembly-CSharp.dll Windows-specific extensions of Windows console input. Uses the Win32 API to force a console to be created and destroyed. public class ThreadedWindowsConsoleInputOutput : ThreadedConsoleInputOutput, ICommandInputOutput Inheritance object ConsoleInputOutputBase ThreadedConsoleInputOutput ThreadedWindowsConsoleInputOutput Implements ICommandInputOutput Inherited Members ThreadedConsoleInputOutput.update() ThreadedConsoleInputOutput.outputToConsole(string, ConsoleColor) ConsoleInputOutputBase.defaultShouldRedirectInput ConsoleInputOutputBase.defaultShouldRedirectOutput ConsoleInputOutputBase.defaultShouldProxyRedirectedOutput ConsoleInputOutputBase.shouldRedirectInput ConsoleInputOutputBase.shouldRedirectOutput ConsoleInputOutputBase.shouldProxyRedirectedOutput ConsoleInputOutputBase.wantsToTerminate ConsoleInputOutputBase.isTerminating ConsoleInputOutputBase.desiredTitle ConsoleInputOutputBase.outputInformation(string) ConsoleInputOutputBase.outputWarning(string) ConsoleInputOutputBase.outputError(string) ConsoleInputOutputBase.notifyInputCommitted(string) ConsoleInputOutputBase.synchronizeTitle(string) ConsoleInputOutputBase.onTitleChanged(string) ConsoleInputOutputBase.handleCancelEvent(object, ConsoleCancelEventArgs) ConsoleInputOutputBase.handleTermination() ConsoleInputOutputBase.inputCommitted object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ThreadedWindowsConsoleInputOutput() public ThreadedWindowsConsoleInputOutput() Methods initialize(CommandWindow) Called when this implementation is setup by command window. public override void initialize(CommandWindow commandWindow) Parameters commandWindow CommandWindow shutdown(CommandWindow) Called when this implementation is deleted or application quits. public override void shutdown(CommandWindow commandWindow) Parameters commandWindow CommandWindow"
  },
  "api/SDG.Unturned.TimeOfDayChanged.html": {
    "href": "api/SDG.Unturned.TimeOfDayChanged.html",
    "title": "Delegate TimeOfDayChanged | Unturned Analyse Doc",
    "keywords": "Delegate TimeOfDayChanged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TimeOfDayChanged() Constructors TimeOfDayChanged(object, IntPtr) public TimeOfDayChanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.TimeSliceHash-1.html": {
    "href": "api/SDG.Unturned.TimeSliceHash-1.html",
    "title": "Class TimeSliceHash<T> | Unturned Analyse Doc",
    "keywords": "Class TimeSliceHash<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll Utility to hash a stream of bytes over several frames. public class TimeSliceHash<T> : IDisposable where T : HashAlgorithm, new() Type Parameters T Inheritance object TimeSliceHash<T> Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeSliceHash(Stream) public TimeSliceHash(Stream stream) Parameters stream Stream Properties progress [0, 1] percentage progress through the stream. public float progress { get; } Property Value float Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool advance() Advance 1MB further into the stream. public bool advance() Returns bool True if there is more data, false if complete. computeHash() Get the computed hash after processing stream. public byte[] computeHash() Returns byte[]"
  },
  "api/SDG.Unturned.TimerEventHook.html": {
    "href": "api/SDG.Unturned.TimerEventHook.html",
    "title": "Class TimerEventHook | Unturned Analyse Doc",
    "keywords": "Class TimerEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TimerEventHook : MonoBehaviour Inheritance object TimerEventHook Constructors TimerEventHook() public TimerEventHook() Fields DefaultDuration Number of seconds to use when SetDefaultTimer is invoked. public float DefaultDuration Field Value float DefaultLooping Should timer loop when SetDefaultTimer is invoked? public bool DefaultLooping Field Value bool OnTimerTriggered Invoked when timer expires. public UnityEvent OnTimerTriggered Field Value UnityEvent Methods CancelTimer() Stop pending timer from triggering. public void CancelTimer() SetDefaultTimer() public void SetDefaultTimer() SetTimer(float) public void SetTimer(float duration) Parameters duration float SetTimer(float, bool) public void SetTimer(float duration, bool looping) Parameters duration float looping bool"
  },
  "api/SDG.Unturned.TokenSearchFilter.html": {
    "href": "api/SDG.Unturned.TokenSearchFilter.html",
    "title": "Struct TokenSearchFilter | Unturned Analyse Doc",
    "keywords": "Struct TokenSearchFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll Splits string and compares substrings ignoring case. Tokens containing a colon ':' are ignored so that they can represent special filters like MasterBundleSearchFilter. public struct TokenSearchFilter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors TokenSearchFilter(string[]) public TokenSearchFilter(string[] tokens) Parameters tokens string[] Methods ignores(string) public bool ignores(string name) Parameters name string Returns bool matches(string) public bool matches(string name) Parameters name string Returns bool parse(string) public static TokenSearchFilter? parse(string filter) Parameters filter string Returns TokenSearchFilter?"
  },
  "api/SDG.Unturned.TrackSample.html": {
    "href": "api/SDG.Unturned.TrackSample.html",
    "title": "Class TrackSample | Unturned Analyse Doc",
    "keywords": "Class TrackSample Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TrackSample Inheritance object TrackSample Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TrackSample() public TrackSample() Fields direction public Vector3 direction Field Value Vector3 distance public float distance Field Value float normal public Vector3 normal Field Value Vector3 position public Vector3 position Field Value Vector3"
  },
  "api/SDG.Unturned.TrackedQuestUpdated.html": {
    "href": "api/SDG.Unturned.TrackedQuestUpdated.html",
    "title": "Delegate TrackedQuestUpdated | Unturned Analyse Doc",
    "keywords": "Delegate TrackedQuestUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TrackedQuestUpdated(PlayerQuests sender) Parameters sender PlayerQuests Constructors TrackedQuestUpdated(object, IntPtr) public TrackedQuestUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerQuests, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerQuests sender, AsyncCallback callback, object @object) Parameters sender PlayerQuests callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerQuests) public virtual void Invoke(PlayerQuests sender) Parameters sender PlayerQuests"
  },
  "api/SDG.Unturned.TrainCar.html": {
    "href": "api/SDG.Unturned.TrainCar.html",
    "title": "Class TrainCar | Unturned Analyse Doc",
    "keywords": "Class TrainCar Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TrainCar Inheritance object TrainCar Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TrainCar() public TrainCar() Fields currentBackDirection public Vector3 currentBackDirection Field Value Vector3 currentBackNormal public Vector3 currentBackNormal Field Value Vector3 currentBackPosition public Vector3 currentBackPosition Field Value Vector3 currentFrontDirection public Vector3 currentFrontDirection Field Value Vector3 currentFrontNormal public Vector3 currentFrontNormal Field Value Vector3 currentFrontPosition public Vector3 currentFrontPosition Field Value Vector3 root public Transform root Field Value Transform rootRigidbody Rigidbody component on the root game object. public Rigidbody rootRigidbody Field Value Rigidbody trackBack public Transform trackBack Field Value Transform trackFront public Transform trackFront Field Value Transform trackPositionOffset public float trackPositionOffset Field Value float"
  },
  "api/SDG.Unturned.TransformBarricadeRequestHandler.html": {
    "href": "api/SDG.Unturned.TransformBarricadeRequestHandler.html",
    "title": "Delegate TransformBarricadeRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate TransformBarricadeRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TransformBarricadeRequestHandler(CSteamID instigator, byte x, byte y, ushort plant, uint instanceID, ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow) Parameters instigator CSteamID x byte y byte plant ushort instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool Constructors TransformBarricadeRequestHandler(object, IntPtr) public TransformBarricadeRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, byte, byte, ushort, uint, ref Vector3, ref byte, ref byte, ref byte, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigator, byte x, byte y, ushort plant, uint instanceID, ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigator CSteamID x byte y byte plant ushort instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref byte, ref byte, ref byte, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow, IAsyncResult result) Parameters point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool result IAsyncResult Invoke(CSteamID, byte, byte, ushort, uint, ref Vector3, ref byte, ref byte, ref byte, ref bool) public virtual void Invoke(CSteamID instigator, byte x, byte y, ushort plant, uint instanceID, ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow) Parameters instigator CSteamID x byte y byte plant ushort instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool"
  },
  "api/SDG.Unturned.TransformHandles.EMode.html": {
    "href": "api/SDG.Unturned.TransformHandles.EMode.html",
    "title": "Enum TransformHandles.EMode | Unturned Analyse Doc",
    "keywords": "Enum TransformHandles.EMode Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum TransformHandles.EMode Fields Position = 0 Position and plane handles for each axis. PositionBounds = 3 Position handles on each side of box. Rotation = 1 Disc handles for each axis. Scale = 2 Scale handles for each axis. ScaleBounds = 4 Scale handles on each side of box which both move and resize the box."
  },
  "api/SDG.Unturned.TransformHandles.PreTransformEventHandler.html": {
    "href": "api/SDG.Unturned.TransformHandles.PreTransformEventHandler.html",
    "title": "Delegate TransformHandles.PreTransformEventHandler | Unturned Analyse Doc",
    "keywords": "Delegate TransformHandles.PreTransformEventHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TransformHandles.PreTransformEventHandler(Matrix4x4 worldToPivot) Parameters worldToPivot Matrix4x4 Constructors PreTransformEventHandler(object, IntPtr) public PreTransformEventHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Matrix4x4, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Matrix4x4 worldToPivot, AsyncCallback callback, object @object) Parameters worldToPivot Matrix4x4 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Matrix4x4) public virtual void Invoke(Matrix4x4 worldToPivot) Parameters worldToPivot Matrix4x4"
  },
  "api/SDG.Unturned.TransformHandles.TransformedEventHandler.html": {
    "href": "api/SDG.Unturned.TransformHandles.TransformedEventHandler.html",
    "title": "Delegate TransformHandles.TransformedEventHandler | Unturned Analyse Doc",
    "keywords": "Delegate TransformHandles.TransformedEventHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TransformHandles.TransformedEventHandler(Matrix4x4 pivotToWorld) Parameters pivotToWorld Matrix4x4 Constructors TransformedEventHandler(object, IntPtr) public TransformedEventHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Matrix4x4, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Matrix4x4 pivotToWorld, AsyncCallback callback, object @object) Parameters pivotToWorld Matrix4x4 callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Matrix4x4) public virtual void Invoke(Matrix4x4 pivotToWorld) Parameters pivotToWorld Matrix4x4"
  },
  "api/SDG.Unturned.TransformHandles.TranslatedAndRotatedEventHandler.html": {
    "href": "api/SDG.Unturned.TransformHandles.TranslatedAndRotatedEventHandler.html",
    "title": "Delegate TransformHandles.TranslatedAndRotatedEventHandler | Unturned Analyse Doc",
    "keywords": "Delegate TransformHandles.TranslatedAndRotatedEventHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TransformHandles.TranslatedAndRotatedEventHandler(Vector3 worldPositionDelta, Quaternion worldRotationDelta, Vector3 pivotPosition, bool modifyRotation) Parameters worldPositionDelta Vector3 worldRotationDelta Quaternion pivotPosition Vector3 modifyRotation bool Constructors TranslatedAndRotatedEventHandler(object, IntPtr) public TranslatedAndRotatedEventHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Vector3, Quaternion, Vector3, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Vector3 worldPositionDelta, Quaternion worldRotationDelta, Vector3 pivotPosition, bool modifyRotation, AsyncCallback callback, object @object) Parameters worldPositionDelta Vector3 worldRotationDelta Quaternion pivotPosition Vector3 modifyRotation bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Vector3, Quaternion, Vector3, bool) public virtual void Invoke(Vector3 worldPositionDelta, Quaternion worldRotationDelta, Vector3 pivotPosition, bool modifyRotation) Parameters worldPositionDelta Vector3 worldRotationDelta Quaternion pivotPosition Vector3 modifyRotation bool"
  },
  "api/SDG.Unturned.TransformHandles.html": {
    "href": "api/SDG.Unturned.TransformHandles.html",
    "title": "Class TransformHandles | Unturned Analyse Doc",
    "keywords": "Class TransformHandles Namespace SDG.Unturned Assembly Assembly-CSharp.dll Merging the devkit, legacy, and housing transform handles into one place. public class TransformHandles Inheritance object TransformHandles Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TransformHandles() public TransformHandles() Fields snapPositionInterval public float snapPositionInterval Field Value float snapRotationIntervalDegrees public float snapRotationIntervalDegrees Field Value float wantsToSnap public bool wantsToSnap Field Value bool Methods ExternallyTransformPivot(Vector3, Quaternion, bool) Somewhat hacky, useful to make the \"copy-paste transform\" feature easier to implement. Invoke tranformed callback as if pivot were manually dragged to the new position and rotation. public void ExternallyTransformPivot(Vector3 position, Quaternion rotation, bool modifyRotation) Parameters position Vector3 rotation Quaternion modifyRotation bool GetPivotPosition() public Vector3 GetPivotPosition() Returns Vector3 GetPivotRotation() public Quaternion GetPivotRotation() Returns Quaternion MouseDown(Ray) public void MouseDown(Ray mouseRay) Parameters mouseRay Ray MouseMove(Ray) public void MouseMove(Ray mouseRay) Parameters mouseRay Ray MouseUp() public void MouseUp() Raycast(Ray) Called before raycasting into the regular physics scene to give transform tool priority. public bool Raycast(Ray mouseRay) Parameters mouseRay Ray Returns bool Render(Ray) public void Render(Ray mouseRay) Parameters mouseRay Ray SetPreferredMode(EMode) Preferred mode only takes effect while not dragging. Bounds modes fall back to non-bounds modes if bounds are not set. public void SetPreferredMode(TransformHandles.EMode preferredMode) Parameters preferredMode TransformHandles.EMode SetPreferredPivot(Vector3, Quaternion) Pivot only takes effect while not dragging. This is to help ensure the caller does not depend on the internal pivot values. public void SetPreferredPivot(Vector3 position, Quaternion rotation) Parameters position Vector3 rotation Quaternion UpdateBoundsFromSelection(IEnumerable<GameObject>) public void UpdateBoundsFromSelection(IEnumerable<GameObject> selection) Parameters selection IEnumerable<GameObject> Events OnPreTransform Invoked when handle is clicked so that tool can save selection transform relative to pivot. This avoids floating point precision loss of applying delta for each Transformed event. public event TransformHandles.PreTransformEventHandler OnPreTransform Event Type TransformHandles.PreTransformEventHandler OnTransformed Invoked when handle is dragged and value actually changes. public event TransformHandles.TransformedEventHandler OnTransformed Event Type TransformHandles.TransformedEventHandler OnTranslatedAndRotated Invoked when handle is dragged and value actually changes. public event TransformHandles.TranslatedAndRotatedEventHandler OnTranslatedAndRotated Event Type TransformHandles.TranslatedAndRotatedEventHandler"
  },
  "api/SDG.Unturned.TransformRecursiveFind.html": {
    "href": "api/SDG.Unturned.TransformRecursiveFind.html",
    "title": "Class TransformRecursiveFind | Unturned Analyse Doc",
    "keywords": "Class TransformRecursiveFind Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class TransformRecursiveFind Inheritance object TransformRecursiveFind Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods FindChildRecursive(Transform, string) public static Transform FindChildRecursive(this Transform parent, string name) Parameters parent Transform name string Returns Transform FindChildRecursiveWithExclusion(Transform, string, Transform) Same as FindChildRecursive, but skip specific child. public static Transform FindChildRecursiveWithExclusion(this Transform parent, string name, Transform excludedChild) Parameters parent Transform name string excludedChild Transform Returns Transform"
  },
  "api/SDG.Unturned.TransformSnapshotInfo.html": {
    "href": "api/SDG.Unturned.TransformSnapshotInfo.html",
    "title": "Struct TransformSnapshotInfo | Unturned Analyse Doc",
    "keywords": "Struct TransformSnapshotInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct TransformSnapshotInfo : ISnapshotInfo<TransformSnapshotInfo> Implements ISnapshotInfo<TransformSnapshotInfo> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors TransformSnapshotInfo(Vector3, Quaternion) public TransformSnapshotInfo(Vector3 pos, Quaternion rot) Parameters pos Vector3 rot Quaternion Fields pos public Vector3 pos Field Value Vector3 rot public Quaternion rot Field Value Quaternion Methods lerp(TransformSnapshotInfo, float, out TransformSnapshotInfo) public void lerp(TransformSnapshotInfo target, float delta, out TransformSnapshotInfo result) Parameters target TransformSnapshotInfo delta float result TransformSnapshotInfo"
  },
  "api/SDG.Unturned.TransformStructureRequestHandler.html": {
    "href": "api/SDG.Unturned.TransformStructureRequestHandler.html",
    "title": "Delegate TransformStructureRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate TransformStructureRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void TransformStructureRequestHandler(CSteamID instigator, byte x, byte y, uint instanceID, ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow) Parameters instigator CSteamID x byte y byte instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool Constructors TransformStructureRequestHandler(object, IntPtr) public TransformStructureRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(CSteamID, byte, byte, uint, ref Vector3, ref byte, ref byte, ref byte, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(CSteamID instigator, byte x, byte y, uint instanceID, ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigator CSteamID x byte y byte instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref Vector3, ref byte, ref byte, ref byte, ref bool, IAsyncResult) public virtual void EndInvoke(ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow, IAsyncResult result) Parameters point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool result IAsyncResult Invoke(CSteamID, byte, byte, uint, ref Vector3, ref byte, ref byte, ref byte, ref bool) public virtual void Invoke(CSteamID instigator, byte x, byte y, uint instanceID, ref Vector3 point, ref byte angle_x, ref byte angle_y, ref byte angle_z, ref bool shouldAllow) Parameters instigator CSteamID x byte y byte instanceID uint point Vector3 angle_x byte angle_y byte angle_z byte shouldAllow bool"
  },
  "api/SDG.Unturned.TriggerEffectParameters.html": {
    "href": "api/SDG.Unturned.TriggerEffectParameters.html",
    "title": "Struct TriggerEffectParameters | Unturned Analyse Doc",
    "keywords": "Struct TriggerEffectParameters Namespace SDG.Unturned Assembly Assembly-CSharp.dll Payload for the EffectManager.triggerEffect method. public struct TriggerEffectParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors TriggerEffectParameters(AssetReference<EffectAsset>) public TriggerEffectParameters(AssetReference<EffectAsset> assetRef) Parameters assetRef AssetReference<EffectAsset> TriggerEffectParameters(EffectAsset) public TriggerEffectParameters(EffectAsset asset) Parameters asset EffectAsset TriggerEffectParameters(Guid) public TriggerEffectParameters(Guid assetGuid) Parameters assetGuid Guid TriggerEffectParameters(ushort) [Obsolete(\"Please find asset by GUID\")] public TriggerEffectParameters(ushort id) Parameters id ushort Fields asset Required effect to spawn. public EffectAsset asset Field Value EffectAsset direction World-space direction to orient the Z axis along. Defaults to up. [Obsolete(\"Please use GetDirection and SetDirection instead now that rotation quaternion is supported. This field will be removed.\")] public Vector3 direction Field Value Vector3 position World-space position to spawn at. public Vector3 position Field Value Vector3 relevantDistance Players within this radius will be sent the effect unless the effect overrides it. Defaults to 128. public float relevantDistance Field Value float relevantPlayerID Only send the effect to the given player, if set. [Obsolete(\"Please use SetRelevantPlayer instead! This field will be removed.\")] public CSteamID relevantPlayerID Field Value CSteamID reliable Should the RPC be called in reliable mode? Unreliable effects might not be received. public bool reliable Field Value bool scale Local-space scale. Defaults to one. public Vector3 scale Field Value Vector3 shouldReplicate If running as server should this effect be replicated to clients? Defaults to true. Set to false for code that is called on client AND server. public bool shouldReplicate Field Value bool wasInstigatedByPlayer Was a player directly responsible for triggering this effect? For example grenade explosions are instigated by players, whereas zombie acid explosions are not. Used to prevent mod damage on the effect prefab from hurting players on PvE servers. public bool wasInstigatedByPlayer Field Value bool Methods GetDirection() public Vector3 GetDirection() Returns Vector3 GetRotation() Get world-space rotation for the effect. public Quaternion GetRotation() Returns Quaternion SetDirection(Vector3) public void SetDirection(Vector3 forward) Parameters forward Vector3 SetDirection(Vector3, Vector3) public void SetDirection(Vector3 forward, Vector3 upwards) Parameters forward Vector3 upwards Vector3 SetRelevantPlayer(ITransportConnection) public void SetRelevantPlayer(ITransportConnection transportConnection) Parameters transportConnection ITransportConnection SetRelevantPlayer(SteamPlayer) public void SetRelevantPlayer(SteamPlayer player) Parameters player SteamPlayer SetRelevantTransportConnections(PooledTransportConnectionList) public void SetRelevantTransportConnections(PooledTransportConnectionList transportConnections) Parameters transportConnections PooledTransportConnectionList SetRelevantTransportConnections(IEnumerable<ITransportConnection>) [Obsolete(\"Replaced by the List overload\")] public void SetRelevantTransportConnections(IEnumerable<ITransportConnection> transportConnections) Parameters transportConnections IEnumerable<ITransportConnection> SetRotation(Quaternion) Set world-space rotation for the effect. public void SetRotation(Quaternion rotation) Parameters rotation Quaternion SetUniformScale(float) public void SetUniformScale(float scale) Parameters scale float"
  },
  "api/SDG.Unturned.TriggerGrenadeBase.html": {
    "href": "api/SDG.Unturned.TriggerGrenadeBase.html",
    "title": "Class TriggerGrenadeBase | Unturned Analyse Doc",
    "keywords": "Class TriggerGrenadeBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TriggerGrenadeBase : MonoBehaviour Inheritance object TriggerGrenadeBase Derived ImpactGrenade StickyGrenade Constructors TriggerGrenadeBase() public TriggerGrenadeBase() Fields ignoreTransform public Transform ignoreTransform Field Value Transform Methods GrenadeTriggered() protected virtual void GrenadeTriggered()"
  },
  "api/SDG.Unturned.TriggerReceive.html": {
    "href": "api/SDG.Unturned.TriggerReceive.html",
    "title": "Delegate TriggerReceive | Unturned Analyse Doc",
    "keywords": "Delegate TriggerReceive Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete] public delegate void TriggerReceive(SteamChannel channel, CSteamID steamID, byte[] packet, int offset, int size) Parameters channel SteamChannel steamID CSteamID packet byte[] offset int size int Constructors TriggerReceive(object, IntPtr) public TriggerReceive(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamChannel, CSteamID, byte[], int, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamChannel channel, CSteamID steamID, byte[] packet, int offset, int size, AsyncCallback callback, object @object) Parameters channel SteamChannel steamID CSteamID packet byte[] offset int size int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SteamChannel, CSteamID, byte[], int, int) public virtual void Invoke(SteamChannel channel, CSteamID steamID, byte[] packet, int offset, int size) Parameters channel SteamChannel steamID CSteamID packet byte[] offset int size int"
  },
  "api/SDG.Unturned.TriggerSend.html": {
    "href": "api/SDG.Unturned.TriggerSend.html",
    "title": "Delegate TriggerSend | Unturned Analyse Doc",
    "keywords": "Delegate TriggerSend Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete] public delegate void TriggerSend(SteamPlayer player, string name, ESteamCall mode, ESteamPacket type, params object[] arguments) Parameters player SteamPlayer name string mode ESteamCall type ESteamPacket arguments object[] Constructors TriggerSend(object, IntPtr) public TriggerSend(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, string, ESteamCall, ESteamPacket, object[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer player, string name, ESteamCall mode, ESteamPacket type, object[] arguments, AsyncCallback callback, object @object) Parameters player SteamPlayer name string mode ESteamCall type ESteamPacket arguments object[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SteamPlayer, string, ESteamCall, ESteamPacket, params object[]) public virtual void Invoke(SteamPlayer player, string name, ESteamCall mode, ESteamPacket type, params object[] arguments) Parameters player SteamPlayer name string mode ESteamCall type ESteamPacket arguments object[]"
  },
  "api/SDG.Unturned.TurretInfo.html": {
    "href": "api/SDG.Unturned.TurretInfo.html",
    "title": "Class TurretInfo | Unturned Analyse Doc",
    "keywords": "Class TurretInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TurretInfo Inheritance object TurretInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TurretInfo() public TurretInfo() Fields itemID public ushort itemID Field Value ushort pitchMax public float pitchMax Field Value float pitchMin public float pitchMin Field Value float seatIndex public byte seatIndex Field Value byte useAimCamera public bool useAimCamera Field Value bool yawMax public float yawMax Field Value float yawMin public float yawMin Field Value float"
  },
  "api/SDG.Unturned.TypeReference-1.html": {
    "href": "api/SDG.Unturned.TypeReference-1.html",
    "title": "Struct TypeReference<T> | Unturned Analyse Doc",
    "keywords": "Struct TypeReference<T> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct TypeReference<T> : ITypeReference, IFormattedFileReadable, IFormattedFileWritable, IDatParseable, IEquatable<TypeReference<T>> Type Parameters T Implements ITypeReference IFormattedFileReadable IFormattedFileWritable IDatParseable IEquatable<TypeReference<T>> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors TypeReference(ITypeReference) public TypeReference(ITypeReference typeReference) Parameters typeReference ITypeReference TypeReference(string) public TypeReference(string assemblyQualifiedName) Parameters assemblyQualifiedName string Fields invalid public static TypeReference<T> invalid Field Value TypeReference<T> Properties assemblyQualifiedName GUID of the asset this is referring to. public string assemblyQualifiedName { readonly get; set; } Property Value string isValid Whether the type has been asigned. Note that this doesn't mean an asset with assemblyQualifiedName exists. public bool isValid { get; } Property Value bool type public Type type { get; } Property Value Type Methods Equals(TypeReference<T>) public bool Equals(TypeReference<T> other) Parameters other TypeReference<T> Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool isReferenceTo(Type) True if resovling this type reference would get that type. public bool isReferenceTo(Type type) Parameters type Type Returns bool read(IFormattedFileReader) public void read(IFormattedFileReader reader) Parameters reader IFormattedFileReader write(IFormattedFileWriter) public void write(IFormattedFileWriter writer) Parameters writer IFormattedFileWriter Operators operator ==(TypeReference<T>, TypeReference<T>) public static bool operator ==(TypeReference<T> a, TypeReference<T> b) Parameters a TypeReference<T> b TypeReference<T> Returns bool operator !=(TypeReference<T>, TypeReference<T>) public static bool operator !=(TypeReference<T> a, TypeReference<T> b) Parameters a TypeReference<T> b TypeReference<T> Returns bool"
  },
  "api/SDG.Unturned.TypeRegistryDictionary.html": {
    "href": "api/SDG.Unturned.TypeRegistryDictionary.html",
    "title": "Class TypeRegistryDictionary | Unturned Analyse Doc",
    "keywords": "Class TypeRegistryDictionary Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TypeRegistryDictionary Inheritance object TypeRegistryDictionary Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypeRegistryDictionary(Type) public TypeRegistryDictionary(Type newBaseType) Parameters newBaseType Type Methods addType(string, Type) public void addType(string key, Type value) Parameters key string value Type getType(string) public Type getType(string key) Parameters key string Returns Type removeType(string) public void removeType(string key) Parameters key string"
  },
  "api/SDG.Unturned.TypeRegistryList.html": {
    "href": "api/SDG.Unturned.TypeRegistryList.html",
    "title": "Class TypeRegistryList | Unturned Analyse Doc",
    "keywords": "Class TypeRegistryList Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class TypeRegistryList Inheritance object TypeRegistryList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TypeRegistryList(Type) public TypeRegistryList(Type newBaseType) Parameters newBaseType Type Methods addType(Type) public void addType(Type type) Parameters type Type getTypes() public List<Type> getTypes() Returns List<Type> removeType(Type) public void removeType(Type type) Parameters type Type"
  },
  "api/SDG.Unturned.Types.html": {
    "href": "api/SDG.Unturned.Types.html",
    "title": "Class Types | Unturned Analyse Doc",
    "keywords": "Class Types Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Types Inheritance object Types Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Types() public Types() Fields BOOLEAN_ARRAY_TYPE public static readonly Type BOOLEAN_ARRAY_TYPE Field Value Type BOOLEAN_TYPE public static readonly Type BOOLEAN_TYPE Field Value Type BYTE_ARRAY_TYPE public static readonly Type BYTE_ARRAY_TYPE Field Value Type BYTE_TYPE public static readonly Type BYTE_TYPE Field Value Type COLOR_TYPE public static readonly Type COLOR_TYPE Field Value Type GUID_TYPE public static readonly Type GUID_TYPE Field Value Type INT16_TYPE public static readonly Type INT16_TYPE Field Value Type INT32_ARRAY_TYPE public static readonly Type INT32_ARRAY_TYPE Field Value Type INT32_TYPE public static readonly Type INT32_TYPE Field Value Type INT64_TYPE public static readonly Type INT64_TYPE Field Value Type QUATERNION_TYPE Not originally supported by networking. Added temporarily during netpak rewrite because the quaternion compression is so much better for vehicles than three byte Euler rotation. public static readonly Type QUATERNION_TYPE Field Value Type SHIFTS public static readonly byte[] SHIFTS Field Value byte[] SINGLE_TYPE public static readonly Type SINGLE_TYPE Field Value Type STEAM_ID_TYPE public static readonly Type STEAM_ID_TYPE Field Value Type STRING_ARRAY_TYPE public static readonly Type STRING_ARRAY_TYPE Field Value Type STRING_TYPE public static readonly Type STRING_TYPE Field Value Type UINT16_TYPE public static readonly Type UINT16_TYPE Field Value Type UINT32_TYPE public static readonly Type UINT32_TYPE Field Value Type UINT64_ARRAY_TYPE public static readonly Type UINT64_ARRAY_TYPE Field Value Type UINT64_TYPE public static readonly Type UINT64_TYPE Field Value Type VECTOR3_TYPE public static readonly Type VECTOR3_TYPE Field Value Type"
  },
  "api/SDG.Unturned.UndergroundAllowlist.html": {
    "href": "api/SDG.Unturned.UndergroundAllowlist.html",
    "title": "Class UndergroundAllowlist | Unturned Analyse Doc",
    "keywords": "Class UndergroundAllowlist Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class UndergroundAllowlist Inheritance object UndergroundAllowlist Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AdjustPosition(ref Vector3, float, float) If level is using underground allowlist then conditionally clamp world-space position. public static bool AdjustPosition(ref Vector3 worldspacePosition, float offset, float threshold = 0.1) Parameters worldspacePosition Vector3 offset float threshold float Returns bool IsPositionBuildable(Vector3) Used by housing validation to check item isn't placed underground. public static bool IsPositionBuildable(Vector3 position) Parameters position Vector3 Returns bool IsPositionWithinValidHeight(Vector3, float) Used by animals and zombies to teleport to a spawnpoint if outside the map. public static bool IsPositionWithinValidHeight(Vector3 position, float threshold = 0.1) Parameters position Vector3 threshold float Returns bool"
  },
  "api/SDG.Unturned.UndergroundWhitelist.html": {
    "href": "api/SDG.Unturned.UndergroundWhitelist.html",
    "title": "Class UndergroundWhitelist | Unturned Analyse Doc",
    "keywords": "Class UndergroundWhitelist Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete(\"Renamed to UndergroundAllowlist\")] public static class UndergroundWhitelist Inheritance object UndergroundWhitelist Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods adjustPosition(ref Vector3, float, float) If level is using underground whitelist then conditionally clamp world-space position. [Obsolete(\"Renamed to UndergroundAllowlist.AdjustPosition\")] public static bool adjustPosition(ref Vector3 worldspacePosition, float offset, float threshold = 0.1) Parameters worldspacePosition Vector3 offset float threshold float Returns bool isPointInsideVolume(Vector3) public static bool isPointInsideVolume(Vector3 worldspacePosition) Parameters worldspacePosition Vector3 Returns bool"
  },
  "api/SDG.Unturned.UnityEventConfigData.html": {
    "href": "api/SDG.Unturned.UnityEventConfigData.html",
    "title": "Class UnityEventConfigData | Unturned Analyse Doc",
    "keywords": "Class UnityEventConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UnityEventConfigData Inheritance object UnityEventConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UnityEventConfigData() public UnityEventConfigData() Fields Allow_Client_Commands Should ClientTextChatMessenger be allowed to execute commands? public bool Allow_Client_Commands Field Value bool Allow_Client_Messages Should ClientTextChatMessenger be allowed to broadcast? public bool Allow_Client_Messages Field Value bool Allow_Server_Commands Should ServerTextChatMessenger be allowed to execute commands? public bool Allow_Server_Commands Field Value bool Allow_Server_Messages Should ServerTextChatMessenger be allowed to broadcast? public bool Allow_Server_Messages Field Value bool"
  },
  "api/SDG.Unturned.UnturnedCanvasScaler.html": {
    "href": "api/SDG.Unturned.UnturnedCanvasScaler.html",
    "title": "Class UnturnedCanvasScaler | Unturned Analyse Doc",
    "keywords": "Class UnturnedCanvasScaler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UnturnedCanvasScaler : MonoBehaviour Inheritance object UnturnedCanvasScaler Constructors UnturnedCanvasScaler() public UnturnedCanvasScaler() Fields scaler public CanvasScaler scaler Field Value CanvasScaler"
  },
  "api/SDG.Unturned.UnturnedCanvasSortOrders.html": {
    "href": "api/SDG.Unturned.UnturnedCanvasSortOrders.html",
    "title": "Class UnturnedCanvasSortOrders | Unturned Analyse Doc",
    "keywords": "Class UnturnedCanvasSortOrders Namespace SDG.Unturned Assembly Assembly-CSharp.dll Keep all the uGUI Canvas sort orders in the same place. public static class UnturnedCanvasSortOrders Inheritance object UnturnedCanvasSortOrders Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields Cursor uGUI cursor needs to show above plugin canvas. Unity exposes sort order as an int32, but it is actually an int16, so this value is slightly below the 32767 max. public const int Cursor = 30000 Field Value int Devkit Devkit canvas in the Setup scene. public const int Devkit = 1 Field Value int DevkitOverlay Dropdowns, drag-drop content, tab destinations, etc. public const int DevkitOverlay = 5 Field Value int DevkitTooltip Devkit tooltips should be visible over all other devkit content. public const int DevkitTooltip = 10 Field Value int Glazier uGUI glazier contains tooltips and cursor regardless of mode (e.g. devkit), so takes absolute priority. public const int Glazier = 15 Field Value int LoadingScreen Plugins were spawning canvases with high sort orders that showed over the loading screen, so as a hacky workaround we put the uGUI loading screen on a higher sort order than normal glazier. public const int LoadingScreen = 29000 Field Value int MenuNewsFeed Manually created canvas in the Menu scene. public const int MenuNewsFeed = 0 Field Value int"
  },
  "api/SDG.Unturned.UnturnedDatEx.html": {
    "href": "api/SDG.Unturned.UnturnedDatEx.html",
    "title": "Class UnturnedDatEx | Unturned Analyse Doc",
    "keywords": "Class UnturnedDatEx Namespace SDG.Unturned Assembly Assembly-CSharp.dll These are methods moved from the Data class which rely on core types and so cannot go in the UnturnedDat assembly. public static class UnturnedDatEx Inheritance object UnturnedDatEx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ParseGuidOrLegacyId(DatDictionary, string, out Guid) Intended as a drop-in replacement for existing assets with property uint16s. public static ushort ParseGuidOrLegacyId(this DatDictionary dictionary, string key, out Guid guid) Parameters dictionary DatDictionary key string guid Guid Returns ushort ParseGuidOrLegacyId(DatDictionary, string, out Guid, out ushort) public static void ParseGuidOrLegacyId(this DatDictionary dictionary, string key, out Guid guid, out ushort legacyId) Parameters dictionary DatDictionary key string guid Guid legacyId ushort ReadAudioReference(DatDictionary, string, Bundle) public static AudioReference ReadAudioReference(this DatDictionary dictionary, string key, Bundle defaultBundle = null) Parameters dictionary DatDictionary key string defaultBundle Bundle Returns AudioReference ReadAudioReference(DatDictionary, string, MasterBundleConfig) public static AudioReference ReadAudioReference(this DatDictionary dictionary, string key, MasterBundleConfig defaultMasterBundle = null) Parameters dictionary DatDictionary key string defaultMasterBundle MasterBundleConfig Returns AudioReference readAssetReference<T>(DatDictionary, string) public static AssetReference<T> readAssetReference<T>(this DatDictionary dictionary, string key) where T : Asset Parameters dictionary DatDictionary key string Returns AssetReference<T> Type Parameters T readAssetReference<T>(DatDictionary, string, in AssetReference<T>) public static AssetReference<T> readAssetReference<T>(this DatDictionary dictionary, string key, in AssetReference<T> defaultValue) where T : Asset Parameters dictionary DatDictionary key string defaultValue AssetReference<T> Returns AssetReference<T> Type Parameters T readMasterBundleReference<T>(DatDictionary, string, Bundle) public static MasterBundleReference<T> readMasterBundleReference<T>(this DatDictionary dictionary, string key, Bundle defaultBundle = null) where T : Object Parameters dictionary DatDictionary key string defaultBundle Bundle Returns MasterBundleReference<T> Type Parameters T readMasterBundleReference<T>(DatDictionary, string, MasterBundleConfig) public static MasterBundleReference<T> readMasterBundleReference<T>(this DatDictionary dictionary, string key, MasterBundleConfig defaultMasterBundle = null) where T : Object Parameters dictionary DatDictionary key string defaultMasterBundle MasterBundleConfig Returns MasterBundleReference<T> Type Parameters T"
  },
  "api/SDG.Unturned.UnturnedLog.html": {
    "href": "api/SDG.Unturned.UnturnedLog.html",
    "title": "Class UnturnedLog | Unturned Analyse Doc",
    "keywords": "Class UnturnedLog Namespace SDG.Unturned Assembly Assembly-CSharp.dll Unturned wrapper for Debug.Log, Debug.LogWarning, Debug.LogError, etc. public static class UnturnedLog Inheritance object UnturnedLog Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods error(object) public static void error(object message) Parameters message object error(string) public static void error(string message) Parameters message string error(string, params object[]) public static void error(string format, params object[] args) Parameters format string args object[] exception(Exception) public static void exception(Exception e) Parameters e Exception exception(Exception, string) Log an exception with message providing context. public static void exception(Exception e, string message) Parameters e Exception message string exception(Exception, string, params object[]) Log an exception with message providing context. public static void exception(Exception e, string format, params object[] args) Parameters e Exception format string args object[] info(object) public static void info(object message) Parameters message object info(string) public static void info(string message) Parameters message string info(string, params object[]) public static void info(string format, params object[] args) Parameters format string args object[] warn(object) public static void warn(object message) Parameters message object warn(string) public static void warn(string message) Parameters message string warn(string, params object[]) public static void warn(string format, params object[] args) Parameters format string args object[]"
  },
  "api/SDG.Unturned.UnturnedMasterVolume.html": {
    "href": "api/SDG.Unturned.UnturnedMasterVolume.html",
    "title": "Class UnturnedMasterVolume | Unturned Analyse Doc",
    "keywords": "Class UnturnedMasterVolume Namespace SDG.Unturned Assembly Assembly-CSharp.dll Helper wrapping Unturned's usage of AudioListener.volume, which is the master volume level. This makes it easier to track what controls the master volume and avoid bugs. public static class UnturnedMasterVolume Inheritance object UnturnedMasterVolume Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties UnfocusedVolume Player's unfocused volume multiplier from the options menu. public static float UnfocusedVolume { get; set; } Property Value float mutedByDedicatedServer Is audio muted because this is a dedicated server? While dedicated server should not even be processing audio code, older versions of Unity in particular have issues with headless audio. public static bool mutedByDedicatedServer { get; set; } Property Value bool mutedByLoadingScreen Is audio muted because loading screen is visible? public static bool mutedByLoadingScreen { get; set; } Property Value bool preferredVolume Player's volume multiplier from the options menu. public static float preferredVolume { get; set; } Property Value float"
  },
  "api/SDG.Unturned.UnturnedNexus.html": {
    "href": "api/SDG.Unturned.UnturnedNexus.html",
    "title": "Class UnturnedNexus | Unturned Analyse Doc",
    "keywords": "Class UnturnedNexus Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UnturnedNexus : IModuleNexus Inheritance object UnturnedNexus Implements IModuleNexus Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UnturnedNexus() public UnturnedNexus() Methods initialize() Register all built-in asset and useable types. public void initialize() shutdown() Cleanup after this module. public void shutdown()"
  },
  "api/SDG.Unturned.UnturnedPaths.html": {
    "href": "api/SDG.Unturned.UnturnedPaths.html",
    "title": "Class UnturnedPaths | Unturned Analyse Doc",
    "keywords": "Class UnturnedPaths Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class UnturnedPaths Inheritance object UnturnedPaths Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields RootDirectory Directory the game files are installed in. For the editor this is the /Builds/Shared directory. Windows and Linux: contains the executable and the Unturned_Data directory. MacOS: contains the Unturned.app bundle. public static readonly DirectoryInfo RootDirectory Field Value DirectoryInfo"
  },
  "api/SDG.Unturned.UnturnedPlayerLoop.html": {
    "href": "api/SDG.Unturned.UnturnedPlayerLoop.html",
    "title": "Class UnturnedPlayerLoop | Unturned Analyse Doc",
    "keywords": "Class UnturnedPlayerLoop Namespace SDG.Unturned Assembly Assembly-CSharp.dll Disables Unity native systems unused by Unturned. public static class UnturnedPlayerLoop Inheritance object UnturnedPlayerLoop Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods initialize() public static void initialize()"
  },
  "api/SDG.Unturned.UnturnedPostProcess.html": {
    "href": "api/SDG.Unturned.UnturnedPostProcess.html",
    "title": "Class UnturnedPostProcess | Unturned Analyse Doc",
    "keywords": "Class UnturnedPostProcess Namespace SDG.Unturned Assembly Assembly-CSharp.dll Manages global post-process volumes. public class UnturnedPostProcess : MonoBehaviour Inheritance object UnturnedPostProcess Constructors UnturnedPostProcess() public UnturnedPostProcess() Fields BASE_LAYER public const int BASE_LAYER = 8 Field Value int VIEWMODEL_LAYER public const int VIEWMODEL_LAYER = 11 Field Value int dirtTexture public Texture dirtTexture Field Value Texture Properties DisableAntiAliasingForScreenshot public bool DisableAntiAliasingForScreenshot { get; set; } Property Value bool instance public static UnturnedPostProcess instance { get; } Property Value UnturnedPostProcess Methods applyUserSettings() Callback when in-game graphic settings change. public void applyUserSettings() initialize() public void initialize() notifyPerspectiveChanged() Callback when player changes perspective. public void notifyPerspectiveChanged() setBaseCamera(Camera) public void setBaseCamera(Camera baseCamera) Parameters baseCamera Camera setIsHallucinating(bool) public void setIsHallucinating(bool isHallucinating) Parameters isHallucinating bool setOverlayCamera(Camera) public void setOverlayCamera(Camera overlayCamera) Parameters overlayCamera Camera setScopeCamera(Camera) public void setScopeCamera(Camera scopeCamera) Parameters scopeCamera Camera tickIsHallucinating(float, float) public void tickIsHallucinating(float deltaTime, float hallucinationTimer) Parameters deltaTime float hallucinationTimer float"
  },
  "api/SDG.Unturned.Useable.html": {
    "href": "api/SDG.Unturned.Useable.html",
    "title": "Class Useable | Unturned Analyse Doc",
    "keywords": "Class Useable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Useable : PlayerCaller Inheritance object SteamCaller PlayerCaller Useable Derived UseableArrestEnd UseableArrestStart UseableBarricade UseableCarjack UseableCarlockpick UseableClothing UseableCloud UseableConsumeable UseableDetonator UseableFilter UseableFisher UseableFuel UseableGrower UseableGun UseableHousingPlanner UseableMelee UseableOptic UseableRefill UseableStructure UseableThrowable UseableTire UseableVehicleBattery UseableVehiclePaint UseableWalkieTalkie Inherited Members PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors Useable() public Useable() Properties canInspect public virtual bool canInspect { get; } Property Value bool isUseableShowingMenu Does useable have a menu open? If so pause menu, dashboard, and other menus cannot be opened. public virtual bool isUseableShowingMenu { get; } Property Value bool Methods dequip() public virtual void dequip() equip() public virtual void equip() simulate(uint, bool) public virtual void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public virtual bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public virtual bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. stopPrimary() public virtual void stopPrimary() stopSecondary() public virtual void stopSecondary() tick() public virtual void tick() tock(uint) public virtual void tock(uint clock) Parameters clock uint updateState(byte[]) public virtual void updateState(byte[] newState) Parameters newState byte[]"
  },
  "api/SDG.Unturned.UseableArrestEnd.html": {
    "href": "api/SDG.Unturned.UseableArrestEnd.html",
    "title": "Class UseableArrestEnd | Unturned Analyse Doc",
    "keywords": "Class UseableArrestEnd Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableArrestEnd : Useable Inheritance object SteamCaller PlayerCaller Useable UseableArrestEnd Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableArrestEnd() public UseableArrestEnd() Methods ReceivePlayArrest() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askArrest\")] public void ReceivePlayArrest() askArrest(CSteamID) [Obsolete] public void askArrest(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableArrestEnd_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableArrestEnd_NetMethods.html",
    "title": "Class UseableArrestEnd_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableArrestEnd_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableArrestEnd))] public static class UseableArrestEnd_NetMethods Inheritance object UseableArrestEnd_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayArrest_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayArrest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayArrest_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayArrest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayArrest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayArrest_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableArrestStart.html": {
    "href": "api/SDG.Unturned.UseableArrestStart.html",
    "title": "Class UseableArrestStart | Unturned Analyse Doc",
    "keywords": "Class UseableArrestStart Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableArrestStart : Useable Inheritance object SteamCaller PlayerCaller Useable UseableArrestStart Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableArrestStart() public UseableArrestStart() Methods ReceivePlayArrest() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askArrest\")] public void ReceivePlayArrest() askArrest(CSteamID) public void askArrest(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableArrestStart_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableArrestStart_NetMethods.html",
    "title": "Class UseableArrestStart_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableArrestStart_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableArrestStart))] public static class UseableArrestStart_NetMethods Inheritance object UseableArrestStart_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayArrest_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayArrest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayArrest_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayArrest_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayArrest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayArrest_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableBarricade.html": {
    "href": "api/SDG.Unturned.UseableBarricade.html",
    "title": "Class UseableBarricade | Unturned Analyse Doc",
    "keywords": "Class UseableBarricade Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableBarricade : Useable Inheritance object SteamCaller PlayerCaller Useable UseableBarricade Inherited Members Useable.stopPrimary() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableBarricade() public UseableBarricade() Properties equippedBarricadeAsset public ItemBarricadeAsset equippedBarricadeAsset { get; } Property Value ItemBarricadeAsset Methods OnDestroy() protected void OnDestroy() ReceiveBarricadeNone(in ServerInvocationContext, Vector3, float, float, float) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askBarricadeNone\")] public void ReceiveBarricadeNone(in ServerInvocationContext context, Vector3 newPoint, float newAngle_X, float newAngle_Y, float newAngle_Z) Parameters context ServerInvocationContext newPoint Vector3 newAngle_X float newAngle_Y float newAngle_Z float ReceiveBarricadeVehicle(in ServerInvocationContext, Vector3, float, float, float, NetId) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10)] public void ReceiveBarricadeVehicle(in ServerInvocationContext context, Vector3 newPoint, float newAngle_X, float newAngle_Y, float newAngle_Z, NetId regionNetId) Parameters context ServerInvocationContext newPoint Vector3 newAngle_X float newAngle_Y float newAngle_Z float regionNetId NetId ReceivePlayBuild() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askBuild\")] public void ReceivePlayBuild() askBarricadeNone(CSteamID, Vector3, float, float, float) [Obsolete] public void askBarricadeNone(CSteamID steamID, Vector3 newPoint, float newAngle_X, float newAngle_Y, float newAngle_Z) Parameters steamID CSteamID newPoint Vector3 newAngle_X float newAngle_Y float newAngle_Z float askBarricadeVehicle(CSteamID, Vector3, float, float, float, ushort) [Obsolete] public void askBarricadeVehicle(CSteamID steamID, Vector3 newPoint, float newAngle_X, float newAngle_Y, float newAngle_Z, ushort plant) Parameters steamID CSteamID newPoint Vector3 newAngle_X float newAngle_Y float newAngle_Z float plant ushort askBuild(CSteamID) [Obsolete] public void askBuild(CSteamID steamID) Parameters steamID CSteamID dequip() public override void dequip() equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. stopSecondary() public override void stopSecondary() tick() public override void tick()"
  },
  "api/SDG.Unturned.UseableBarricade_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableBarricade_NetMethods.html",
    "title": "Class UseableBarricade_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableBarricade_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableBarricade))] public static class UseableBarricade_NetMethods Inheritance object UseableBarricade_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveBarricadeNone_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBarricadeNone\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBarricadeNone_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveBarricadeNone_Write(NetPakWriter, Vector3, float, float, float) [NetInvokableGeneratedMethod(\"ReceiveBarricadeNone\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBarricadeNone_Write(NetPakWriter writer, Vector3 newPoint, float newAngle_X, float newAngle_Y, float newAngle_Z) Parameters writer NetPakWriter newPoint Vector3 newAngle_X float newAngle_Y float newAngle_Z float ReceiveBarricadeVehicle_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBarricadeVehicle\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBarricadeVehicle_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveBarricadeVehicle_Write(NetPakWriter, Vector3, float, float, float, NetId) [NetInvokableGeneratedMethod(\"ReceiveBarricadeVehicle\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBarricadeVehicle_Write(NetPakWriter writer, Vector3 newPoint, float newAngle_X, float newAngle_Y, float newAngle_Z, NetId regionNetId) Parameters writer NetPakWriter newPoint Vector3 newAngle_X float newAngle_Y float newAngle_Z float regionNetId NetId ReceivePlayBuild_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayBuild\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayBuild_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayBuild_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayBuild\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayBuild_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableCarjack.html": {
    "href": "api/SDG.Unturned.UseableCarjack.html",
    "title": "Class UseableCarjack | Unturned Analyse Doc",
    "keywords": "Class UseableCarjack Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableCarjack : Useable Inheritance object SteamCaller PlayerCaller Useable UseableCarjack Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableCarjack() public UseableCarjack() Methods ReceivePlayPull() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askPull\")] public void ReceivePlayPull() askPull(CSteamID) [Obsolete] public void askPull(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableCarjack_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableCarjack_NetMethods.html",
    "title": "Class UseableCarjack_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableCarjack_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableCarjack))] public static class UseableCarjack_NetMethods Inheritance object UseableCarjack_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayPull_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayPull\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayPull_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayPull_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayPull\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayPull_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableCarlockpick.html": {
    "href": "api/SDG.Unturned.UseableCarlockpick.html",
    "title": "Class UseableCarlockpick | Unturned Analyse Doc",
    "keywords": "Class UseableCarlockpick Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableCarlockpick : Useable Inheritance object SteamCaller PlayerCaller Useable UseableCarlockpick Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableCarlockpick() public UseableCarlockpick() Methods ReceivePlayJimmy() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askJimmy\")] public void ReceivePlayJimmy() askJimmy(CSteamID) [Obsolete] public void askJimmy(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableCarlockpick_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableCarlockpick_NetMethods.html",
    "title": "Class UseableCarlockpick_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableCarlockpick_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableCarlockpick))] public static class UseableCarlockpick_NetMethods Inheritance object UseableCarlockpick_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayJimmy_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayJimmy\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayJimmy_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayJimmy_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayJimmy\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayJimmy_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableClothing.html": {
    "href": "api/SDG.Unturned.UseableClothing.html",
    "title": "Class UseableClothing | Unturned Analyse Doc",
    "keywords": "Class UseableClothing Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableClothing : Useable Inheritance object SteamCaller PlayerCaller Useable UseableClothing Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableClothing() public UseableClothing() Methods ReceivePlayWear() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askWear\")] public void ReceivePlayWear() askWear(CSteamID) [Obsolete] public void askWear(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableClothing_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableClothing_NetMethods.html",
    "title": "Class UseableClothing_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableClothing_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableClothing))] public static class UseableClothing_NetMethods Inheritance object UseableClothing_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayWear_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayWear\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayWear_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayWear_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayWear\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayWear_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableCloud.html": {
    "href": "api/SDG.Unturned.UseableCloud.html",
    "title": "Class UseableCloud | Unturned Analyse Doc",
    "keywords": "Class UseableCloud Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableCloud : Useable Inheritance object SteamCaller PlayerCaller Useable UseableCloud Inherited Members Useable.startPrimary() Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.simulate(uint, bool) Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableCloud() public UseableCloud() Methods dequip() public override void dequip() equip() public override void equip() tick() public override void tick()"
  },
  "api/SDG.Unturned.UseableConsumeable.ConsumePerformedHandler.html": {
    "href": "api/SDG.Unturned.UseableConsumeable.ConsumePerformedHandler.html",
    "title": "Delegate UseableConsumeable.ConsumePerformedHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableConsumeable.ConsumePerformedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableConsumeable.ConsumePerformedHandler(Player instigatingPlayer, ItemConsumeableAsset consumeableAsset) Parameters instigatingPlayer Player consumeableAsset ItemConsumeableAsset Constructors ConsumePerformedHandler(object, IntPtr) public ConsumePerformedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, ItemConsumeableAsset, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player instigatingPlayer, ItemConsumeableAsset consumeableAsset, AsyncCallback callback, object @object) Parameters instigatingPlayer Player consumeableAsset ItemConsumeableAsset callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, ItemConsumeableAsset) public virtual void Invoke(Player instigatingPlayer, ItemConsumeableAsset consumeableAsset) Parameters instigatingPlayer Player consumeableAsset ItemConsumeableAsset"
  },
  "api/SDG.Unturned.UseableConsumeable.ConsumeRequestedHandler.html": {
    "href": "api/SDG.Unturned.UseableConsumeable.ConsumeRequestedHandler.html",
    "title": "Delegate UseableConsumeable.ConsumeRequestedHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableConsumeable.ConsumeRequestedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableConsumeable.ConsumeRequestedHandler(Player instigatingPlayer, ItemConsumeableAsset consumeableAsset, ref bool shouldAllow) Parameters instigatingPlayer Player consumeableAsset ItemConsumeableAsset shouldAllow bool Constructors ConsumeRequestedHandler(object, IntPtr) public ConsumeRequestedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, ItemConsumeableAsset, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player instigatingPlayer, ItemConsumeableAsset consumeableAsset, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigatingPlayer Player consumeableAsset ItemConsumeableAsset shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(Player, ItemConsumeableAsset, ref bool) public virtual void Invoke(Player instigatingPlayer, ItemConsumeableAsset consumeableAsset, ref bool shouldAllow) Parameters instigatingPlayer Player consumeableAsset ItemConsumeableAsset shouldAllow bool"
  },
  "api/SDG.Unturned.UseableConsumeable.PerformedAidHandler.html": {
    "href": "api/SDG.Unturned.UseableConsumeable.PerformedAidHandler.html",
    "title": "Delegate UseableConsumeable.PerformedAidHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableConsumeable.PerformedAidHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableConsumeable.PerformedAidHandler(Player instigator, Player target) Parameters instigator Player target Player Constructors PerformedAidHandler(object, IntPtr) public PerformedAidHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, Player, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player instigator, Player target, AsyncCallback callback, object @object) Parameters instigator Player target Player callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Player, Player) public virtual void Invoke(Player instigator, Player target) Parameters instigator Player target Player"
  },
  "api/SDG.Unturned.UseableConsumeable.PerformingAidHandler.html": {
    "href": "api/SDG.Unturned.UseableConsumeable.PerformingAidHandler.html",
    "title": "Delegate UseableConsumeable.PerformingAidHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableConsumeable.PerformingAidHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableConsumeable.PerformingAidHandler(Player instigator, Player target, ItemConsumeableAsset asset, ref bool shouldAllow) Parameters instigator Player target Player asset ItemConsumeableAsset shouldAllow bool Constructors PerformingAidHandler(object, IntPtr) public PerformingAidHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, Player, ItemConsumeableAsset, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player instigator, Player target, ItemConsumeableAsset asset, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters instigator Player target Player asset ItemConsumeableAsset shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(Player, Player, ItemConsumeableAsset, ref bool) public virtual void Invoke(Player instigator, Player target, ItemConsumeableAsset asset, ref bool shouldAllow) Parameters instigator Player target Player asset ItemConsumeableAsset shouldAllow bool"
  },
  "api/SDG.Unturned.UseableConsumeable.html": {
    "href": "api/SDG.Unturned.UseableConsumeable.html",
    "title": "Class UseableConsumeable | Unturned Analyse Doc",
    "keywords": "Class UseableConsumeable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableConsumeable : Useable Inheritance object SteamCaller PlayerCaller Useable UseableConsumeable Inherited Members Useable.stopPrimary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableConsumeable() public UseableConsumeable() Methods ReceivePlayConsume(EConsumeMode) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askConsume\")] public void ReceivePlayConsume(EConsumeMode mode) Parameters mode EConsumeMode askConsume(CSteamID, byte) [Obsolete] public void askConsume(CSteamID steamID, byte mode) Parameters steamID CSteamID mode byte equip() public override void equip() performAid(ItemConsumeableAsset) Called serverside when using consumeable on another player. protected void performAid(ItemConsumeableAsset asset) Parameters asset ItemConsumeableAsset performBleeding(Player, Bleeding) protected void performBleeding(Player target, ItemConsumeableAsset.Bleeding bleedingModifier) Parameters target Player bleedingModifier ItemConsumeableAsset.Bleeding performBrokenBones(Player, Bones) protected void performBrokenBones(Player target, ItemConsumeableAsset.Bones bonesModifier) Parameters target Player bonesModifier ItemConsumeableAsset.Bones performHealth(Player, byte) protected void performHealth(Player target, byte delta) Parameters target Player delta byte performUseOnSelf(ItemConsumeableAsset) Called by owner and server when using consumeable on self. protected void performUseOnSelf(ItemConsumeableAsset asset) Parameters asset ItemConsumeableAsset simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. Events onConsumePerformed Broadcasts for plugins after applying consumeable stats to self. public static event UseableConsumeable.ConsumePerformedHandler onConsumePerformed Event Type UseableConsumeable.ConsumePerformedHandler onConsumeRequested Broadcasts for plugins before applying consumeable stats to self. public static event UseableConsumeable.ConsumeRequestedHandler onConsumeRequested Event Type UseableConsumeable.ConsumeRequestedHandler onPerformedAid Broadcasts for plugins after applying consumeable stats to another player. public static event UseableConsumeable.PerformedAidHandler onPerformedAid Event Type UseableConsumeable.PerformedAidHandler onPerformingAid Broadcasts for plugins before applying consumeable stats to another player. public static event UseableConsumeable.PerformingAidHandler onPerformingAid Event Type UseableConsumeable.PerformingAidHandler"
  },
  "api/SDG.Unturned.UseableConsumeable_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableConsumeable_NetMethods.html",
    "title": "Class UseableConsumeable_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableConsumeable_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableConsumeable))] public static class UseableConsumeable_NetMethods Inheritance object UseableConsumeable_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayConsume_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayConsume\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayConsume_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayConsume_Write(NetPakWriter, EConsumeMode) [NetInvokableGeneratedMethod(\"ReceivePlayConsume\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayConsume_Write(NetPakWriter writer, EConsumeMode mode) Parameters writer NetPakWriter mode EConsumeMode"
  },
  "api/SDG.Unturned.UseableDetonator.html": {
    "href": "api/SDG.Unturned.UseableDetonator.html",
    "title": "Class UseableDetonator | Unturned Analyse Doc",
    "keywords": "Class UseableDetonator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableDetonator : Useable Inheritance object SteamCaller PlayerCaller Useable UseableDetonator Inherited Members Useable.stopPrimary() Useable.stopSecondary() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableDetonator() public UseableDetonator() Methods ReceivePlayPlunge() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askPlunge\")] public void ReceivePlayPlunge() askPlunge(CSteamID) [Obsolete] public void askPlunge(CSteamID steamID) Parameters steamID CSteamID dequip() public override void dequip() equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. tick() public override void tick()"
  },
  "api/SDG.Unturned.UseableDetonator_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableDetonator_NetMethods.html",
    "title": "Class UseableDetonator_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableDetonator_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableDetonator))] public static class UseableDetonator_NetMethods Inheritance object UseableDetonator_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayPlunge_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayPlunge\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayPlunge_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayPlunge_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayPlunge\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayPlunge_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableEventHook.html": {
    "href": "api/SDG.Unturned.UseableEventHook.html",
    "title": "Class UseableEventHook | Unturned Analyse Doc",
    "keywords": "Class UseableEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to EquipablePrefab item GameObject to receive events. public class UseableEventHook : MonoBehaviour Inheritance object UseableEventHook Constructors UseableEventHook() public UseableEventHook() Fields OnInspectStarted Invoked when item begins inspect animation. public UnityEvent OnInspectStarted Field Value UnityEvent"
  },
  "api/SDG.Unturned.UseableFilter.html": {
    "href": "api/SDG.Unturned.UseableFilter.html",
    "title": "Class UseableFilter | Unturned Analyse Doc",
    "keywords": "Class UseableFilter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableFilter : Useable Inheritance object SteamCaller PlayerCaller Useable UseableFilter Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableFilter() public UseableFilter() Methods ReceivePlayFilter() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askFilter\")] public void ReceivePlayFilter() askFilter(CSteamID) [Obsolete] public void askFilter(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableFilter_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableFilter_NetMethods.html",
    "title": "Class UseableFilter_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableFilter_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableFilter))] public static class UseableFilter_NetMethods Inheritance object UseableFilter_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayFilter_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayFilter\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayFilter_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayFilter_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayFilter\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayFilter_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableFisher.html": {
    "href": "api/SDG.Unturned.UseableFisher.html",
    "title": "Class UseableFisher | Unturned Analyse Doc",
    "keywords": "Class UseableFisher Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableFisher : Useable Inheritance object SteamCaller PlayerCaller Useable UseableFisher Inherited Members Useable.startSecondary() Useable.stopSecondary() Useable.updateState(byte[]) Useable.canInspect PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableFisher() public UseableFisher() Properties isUseableShowingMenu Does useable have a menu open? If so pause menu, dashboard, and other menus cannot be opened. public override bool isUseableShowingMenu { get; } Property Value bool Methods ReceiveCatch() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askCatch\")] public void ReceiveCatch() ReceiveLuckTime(float) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveLuckTime(float NewLuckTime) Parameters NewLuckTime float ReceivePlayCast() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askCast\")] public void ReceivePlayCast() ReceivePlayReel() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askReel\")] public void ReceivePlayReel() askCast(CSteamID) [Obsolete] public void askCast(CSteamID steamID) Parameters steamID CSteamID askCatch(CSteamID) [Obsolete] public void askCatch(CSteamID steamID) Parameters steamID CSteamID askReel(CSteamID) [Obsolete] public void askReel(CSteamID steamID) Parameters steamID CSteamID dequip() public override void dequip() equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. stopPrimary() public override void stopPrimary() tick() public override void tick() tock(uint) public override void tock(uint clock) Parameters clock uint"
  },
  "api/SDG.Unturned.UseableFisher_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableFisher_NetMethods.html",
    "title": "Class UseableFisher_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableFisher_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableFisher))] public static class UseableFisher_NetMethods Inheritance object UseableFisher_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveCatch_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveCatch\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveCatch_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveCatch_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveCatch\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveCatch_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveLuckTime_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveLuckTime\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveLuckTime_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveLuckTime_Write(NetPakWriter, float) [NetInvokableGeneratedMethod(\"ReceiveLuckTime\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveLuckTime_Write(NetPakWriter writer, float NewLuckTime) Parameters writer NetPakWriter NewLuckTime float ReceivePlayCast_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayCast\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayCast_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayCast_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayCast\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayCast_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlayReel_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayReel\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayReel_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayReel_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayReel\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayReel_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableFuel.html": {
    "href": "api/SDG.Unturned.UseableFuel.html",
    "title": "Class UseableFuel | Unturned Analyse Doc",
    "keywords": "Class UseableFuel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableFuel : Useable Inheritance object SteamCaller PlayerCaller Useable UseableFuel Inherited Members Useable.stopPrimary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableFuel() public UseableFuel() Methods ReceivePlayGlug() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askGlug\")] public void ReceivePlayGlug() askGlug(CSteamID) [Obsolete] public void askGlug(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. updateState(byte[]) public override void updateState(byte[] newState) Parameters newState byte[]"
  },
  "api/SDG.Unturned.UseableFuel_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableFuel_NetMethods.html",
    "title": "Class UseableFuel_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableFuel_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableFuel))] public static class UseableFuel_NetMethods Inheritance object UseableFuel_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayGlug_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayGlug\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayGlug_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayGlug_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayGlug\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayGlug_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableGrower.html": {
    "href": "api/SDG.Unturned.UseableGrower.html",
    "title": "Class UseableGrower | Unturned Analyse Doc",
    "keywords": "Class UseableGrower Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableGrower : Useable Inheritance object SteamCaller PlayerCaller Useable UseableGrower Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableGrower() public UseableGrower() Methods ReceivePlayGrow() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askGrow\")] public void ReceivePlayGrow() askGrow(CSteamID) [Obsolete] public void askGrow(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableGrower_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableGrower_NetMethods.html",
    "title": "Class UseableGrower_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableGrower_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableGrower))] public static class UseableGrower_NetMethods Inheritance object UseableGrower_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayGrow_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayGrow\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayGrow_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayGrow_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayGrow\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayGrow_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableGun.BulletHitHandler.html": {
    "href": "api/SDG.Unturned.UseableGun.BulletHitHandler.html",
    "title": "Delegate UseableGun.BulletHitHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableGun.BulletHitHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableGun.BulletHitHandler(UseableGun gun, BulletInfo bullet, InputInfo hit, ref bool shouldAllow) Parameters gun UseableGun bullet BulletInfo hit InputInfo shouldAllow bool Constructors BulletHitHandler(object, IntPtr) public BulletHitHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(UseableGun, BulletInfo, InputInfo, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(UseableGun gun, BulletInfo bullet, InputInfo hit, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters gun UseableGun bullet BulletInfo hit InputInfo shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(UseableGun, BulletInfo, InputInfo, ref bool) public virtual void Invoke(UseableGun gun, BulletInfo bullet, InputInfo hit, ref bool shouldAllow) Parameters gun UseableGun bullet BulletInfo hit InputInfo shouldAllow bool"
  },
  "api/SDG.Unturned.UseableGun.BulletSpawnedHandler.html": {
    "href": "api/SDG.Unturned.UseableGun.BulletSpawnedHandler.html",
    "title": "Delegate UseableGun.BulletSpawnedHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableGun.BulletSpawnedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableGun.BulletSpawnedHandler(UseableGun gun, BulletInfo bullet) Parameters gun UseableGun bullet BulletInfo Constructors BulletSpawnedHandler(object, IntPtr) public BulletSpawnedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(UseableGun, BulletInfo, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(UseableGun gun, BulletInfo bullet, AsyncCallback callback, object @object) Parameters gun UseableGun bullet BulletInfo callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(UseableGun, BulletInfo) public virtual void Invoke(UseableGun gun, BulletInfo bullet) Parameters gun UseableGun bullet BulletInfo"
  },
  "api/SDG.Unturned.UseableGun.ChangeAttachmentRequestHandler.html": {
    "href": "api/SDG.Unturned.UseableGun.ChangeAttachmentRequestHandler.html",
    "title": "Delegate UseableGun.ChangeAttachmentRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableGun.ChangeAttachmentRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableGun.ChangeAttachmentRequestHandler(PlayerEquipment equipment, UseableGun gun, Item oldItem, ItemJar newItem, ref bool shouldAllow) Parameters equipment PlayerEquipment gun UseableGun oldItem Item newItem ItemJar shouldAllow bool Constructors ChangeAttachmentRequestHandler(object, IntPtr) public ChangeAttachmentRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerEquipment, UseableGun, Item, ItemJar, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerEquipment equipment, UseableGun gun, Item oldItem, ItemJar newItem, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters equipment PlayerEquipment gun UseableGun oldItem Item newItem ItemJar shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(PlayerEquipment, UseableGun, Item, ItemJar, ref bool) public virtual void Invoke(PlayerEquipment equipment, UseableGun gun, Item oldItem, ItemJar newItem, ref bool shouldAllow) Parameters equipment PlayerEquipment gun UseableGun oldItem Item newItem ItemJar shouldAllow bool"
  },
  "api/SDG.Unturned.UseableGun.ProjectileSpawnedHandler.html": {
    "href": "api/SDG.Unturned.UseableGun.ProjectileSpawnedHandler.html",
    "title": "Delegate UseableGun.ProjectileSpawnedHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableGun.ProjectileSpawnedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableGun.ProjectileSpawnedHandler(UseableGun sender, GameObject projectile) Parameters sender UseableGun projectile GameObject Constructors ProjectileSpawnedHandler(object, IntPtr) public ProjectileSpawnedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(UseableGun, GameObject, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(UseableGun sender, GameObject projectile, AsyncCallback callback, object @object) Parameters sender UseableGun projectile GameObject callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(UseableGun, GameObject) public virtual void Invoke(UseableGun sender, GameObject projectile) Parameters sender UseableGun projectile GameObject"
  },
  "api/SDG.Unturned.UseableGun.html": {
    "href": "api/SDG.Unturned.UseableGun.html",
    "title": "Class UseableGun | Unturned Analyse Doc",
    "keywords": "Class UseableGun Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableGun : Useable Inheritance object SteamCaller PlayerCaller Useable UseableGun Inherited Members Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableGun() public UseableGun() Properties canInspect public override bool canInspect { get; } Property Value bool equippedGunAsset public ItemGunAsset equippedGunAsset { get; } Property Value ItemGunAsset isAiming public bool isAiming { get; protected set; } Property Value bool Methods GetVehicleTurretEventHook() protected VehicleTurretEventHook GetVehicleTurretEventHook() Returns VehicleTurretEventHook ReceiveAttachBarrel(byte, byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askAttachBarrel\")] public void ReceiveAttachBarrel(byte page, byte x, byte y, byte[] hash) Parameters page byte x byte y byte hash byte[] ReceiveAttachGrip(byte, byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askAttachGrip\")] public void ReceiveAttachGrip(byte page, byte x, byte y, byte[] hash) Parameters page byte x byte y byte hash byte[] ReceiveAttachMagazine(in ServerInvocationContext, byte, byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askAttachMagazine\")] public void ReceiveAttachMagazine(in ServerInvocationContext context, byte page, byte x, byte y, byte[] hash) Parameters context ServerInvocationContext page byte x byte y byte hash byte[] ReceiveAttachSight(byte, byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askAttachSight\")] public void ReceiveAttachSight(byte page, byte x, byte y, byte[] hash) Parameters page byte x byte y byte hash byte[] ReceiveAttachTactical(byte, byte, byte, byte[]) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askAttachTactical\")] public void ReceiveAttachTactical(byte page, byte x, byte y, byte[] hash) Parameters page byte x byte y byte hash byte[] ReceiveChangeFiremode(EFiremode) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 2, legacyName = \"askFiremode\")] public void ReceiveChangeFiremode(EFiremode newFiremode) Parameters newFiremode EFiremode ReceivePlayAimStart() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askAimStart\")] public void ReceivePlayAimStart() ReceivePlayAimStop() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askAimStop\")] public void ReceivePlayAimStop() ReceivePlayChamberJammed(byte) Request from the server to play a gun jammed animation. Since client can't predict chamber jams we fixup the predicted ammo count. [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askPlayChamberJammed\")] public void ReceivePlayChamberJammed(byte correctedAmmo) Parameters correctedAmmo byte ReceivePlayProject(Vector3, Vector3, ushort, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askProject\")] public void ReceivePlayProject(Vector3 origin, Vector3 direction, ushort barrelId, ushort magazineId) Parameters origin Vector3 direction Vector3 barrelId ushort magazineId ushort ReceivePlayReload(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askReload\")] public void ReceivePlayReload(bool newHammer) Parameters newHammer bool ReceivePlayShoot() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askShoot\")] public void ReceivePlayShoot() ServerPlayReload(bool) Requested for plugin use. public void ServerPlayReload(bool shouldHammer) Parameters shouldHammer bool askAimStart(CSteamID) [Obsolete] public void askAimStart(CSteamID steamID) Parameters steamID CSteamID askAimStop(CSteamID) [Obsolete] public void askAimStop(CSteamID steamID) Parameters steamID CSteamID askAttachBarrel(CSteamID, byte, byte, byte, byte[]) [Obsolete] public void askAttachBarrel(CSteamID steamID, byte page, byte x, byte y, byte[] hash) Parameters steamID CSteamID page byte x byte y byte hash byte[] askAttachGrip(CSteamID, byte, byte, byte, byte[]) [Obsolete] public void askAttachGrip(CSteamID steamID, byte page, byte x, byte y, byte[] hash) Parameters steamID CSteamID page byte x byte y byte hash byte[] askAttachMagazine(CSteamID, byte, byte, byte, byte[]) [Obsolete] public void askAttachMagazine(CSteamID steamID, byte page, byte x, byte y, byte[] hash) Parameters steamID CSteamID page byte x byte y byte hash byte[] askAttachSight(CSteamID, byte, byte, byte, byte[]) [Obsolete] public void askAttachSight(CSteamID steamID, byte page, byte x, byte y, byte[] hash) Parameters steamID CSteamID page byte x byte y byte hash byte[] askAttachTactical(CSteamID, byte, byte, byte, byte[]) [Obsolete] public void askAttachTactical(CSteamID steamID, byte page, byte x, byte y, byte[] hash) Parameters steamID CSteamID page byte x byte y byte hash byte[] askFiremode(CSteamID, byte) [Obsolete] public void askFiremode(CSteamID steamID, byte id) Parameters steamID CSteamID id byte askInteractGun() public void askInteractGun() askPlayChamberJammed(CSteamID, byte) [Obsolete] public void askPlayChamberJammed(CSteamID steamID, byte correctedAmmo) Parameters steamID CSteamID correctedAmmo byte askProject(CSteamID, Vector3, Vector3, ushort, ushort) [Obsolete] public void askProject(CSteamID steamID, Vector3 origin, Vector3 direction, ushort barrelId, ushort magazineId) Parameters steamID CSteamID origin Vector3 direction Vector3 barrelId ushort magazineId ushort askReload(CSteamID, bool) [Obsolete] public void askReload(CSteamID steamID, bool newHammer) Parameters steamID CSteamID newHammer bool askShoot(CSteamID) [Obsolete] public void askShoot(CSteamID steamID) Parameters steamID CSteamID dequip() public override void dequip() equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. stopPrimary() public override void stopPrimary() stopSecondary() public override void stopSecondary() tick() public override void tick() tock(uint) public override void tock(uint clock) Parameters clock uint updateState(byte[]) public override void updateState(byte[] newState) Parameters newState byte[] Events OnAimingChanged_Global public static event Action<UseableGun> OnAimingChanged_Global Event Type Action<UseableGun> OnReloading_Global public static event Action<UseableGun> OnReloading_Global Event Type Action<UseableGun> onBulletHit Plugin-only event when bullet hit is received from client. public static event UseableGun.BulletHitHandler onBulletHit Event Type UseableGun.BulletHitHandler onBulletSpawned Plugin-only event when bullet is fired on server. public static event UseableGun.BulletSpawnedHandler onBulletSpawned Event Type UseableGun.BulletSpawnedHandler onChangeBarrelRequested public static event UseableGun.ChangeAttachmentRequestHandler onChangeBarrelRequested Event Type UseableGun.ChangeAttachmentRequestHandler onChangeGripRequested public static event UseableGun.ChangeAttachmentRequestHandler onChangeGripRequested Event Type UseableGun.ChangeAttachmentRequestHandler onChangeMagazineRequested public static event UseableGun.ChangeAttachmentRequestHandler onChangeMagazineRequested Event Type UseableGun.ChangeAttachmentRequestHandler onChangeSightRequested public static event UseableGun.ChangeAttachmentRequestHandler onChangeSightRequested Event Type UseableGun.ChangeAttachmentRequestHandler onChangeTacticalRequested public static event UseableGun.ChangeAttachmentRequestHandler onChangeTacticalRequested Event Type UseableGun.ChangeAttachmentRequestHandler onProjectileSpawned Plugin-only event when projectile is spawned on server. public static event UseableGun.ProjectileSpawnedHandler onProjectileSpawned Event Type UseableGun.ProjectileSpawnedHandler"
  },
  "api/SDG.Unturned.UseableGunEventHook.html": {
    "href": "api/SDG.Unturned.UseableGunEventHook.html",
    "title": "Class UseableGunEventHook | Unturned Analyse Doc",
    "keywords": "Class UseableGunEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to EquipablePrefab item GameObject to receive events. public class UseableGunEventHook : MonoBehaviour Inheritance object UseableGunEventHook Constructors UseableGunEventHook() public UseableGunEventHook() Fields OnAimingStarted Invoked when gun begins aiming. public UnityEvent OnAimingStarted Field Value UnityEvent OnAimingStopped Invoked when gun ends aiming. public UnityEvent OnAimingStopped Field Value UnityEvent OnChamberingStarted Invoked when gun begins hammer sequence. public UnityEvent OnChamberingStarted Field Value UnityEvent OnReloadingStarted Invoked when gun begins reload sequence. public UnityEvent OnReloadingStarted Field Value UnityEvent OnShotFired Invoked when gun is fired. public UnityEvent OnShotFired Field Value UnityEvent"
  },
  "api/SDG.Unturned.UseableGun_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableGun_NetMethods.html",
    "title": "Class UseableGun_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableGun_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableGun))] public static class UseableGun_NetMethods Inheritance object UseableGun_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveAttachBarrel_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAttachBarrel\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAttachBarrel_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAttachBarrel_Write(NetPakWriter, byte, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveAttachBarrel\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAttachBarrel_Write(NetPakWriter writer, byte page, byte x, byte y, byte[] hash) Parameters writer NetPakWriter page byte x byte y byte hash byte[] ReceiveAttachGrip_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAttachGrip\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAttachGrip_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAttachGrip_Write(NetPakWriter, byte, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveAttachGrip\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAttachGrip_Write(NetPakWriter writer, byte page, byte x, byte y, byte[] hash) Parameters writer NetPakWriter page byte x byte y byte hash byte[] ReceiveAttachMagazine_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAttachMagazine\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAttachMagazine_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAttachMagazine_Write(NetPakWriter, byte, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveAttachMagazine\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAttachMagazine_Write(NetPakWriter writer, byte page, byte x, byte y, byte[] hash) Parameters writer NetPakWriter page byte x byte y byte hash byte[] ReceiveAttachSight_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAttachSight\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAttachSight_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAttachSight_Write(NetPakWriter, byte, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveAttachSight\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAttachSight_Write(NetPakWriter writer, byte page, byte x, byte y, byte[] hash) Parameters writer NetPakWriter page byte x byte y byte hash byte[] ReceiveAttachTactical_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveAttachTactical\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveAttachTactical_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveAttachTactical_Write(NetPakWriter, byte, byte, byte, byte[]) [NetInvokableGeneratedMethod(\"ReceiveAttachTactical\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveAttachTactical_Write(NetPakWriter writer, byte page, byte x, byte y, byte[] hash) Parameters writer NetPakWriter page byte x byte y byte hash byte[] ReceiveChangeFiremode_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveChangeFiremode\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveChangeFiremode_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveChangeFiremode_Write(NetPakWriter, EFiremode) [NetInvokableGeneratedMethod(\"ReceiveChangeFiremode\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveChangeFiremode_Write(NetPakWriter writer, EFiremode newFiremode) Parameters writer NetPakWriter newFiremode EFiremode ReceivePlayAimStart_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayAimStart\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayAimStart_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayAimStart_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayAimStart\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayAimStart_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlayAimStop_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayAimStop\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayAimStop_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayAimStop_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayAimStop\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayAimStop_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlayChamberJammed_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayChamberJammed\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayChamberJammed_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayChamberJammed_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceivePlayChamberJammed\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayChamberJammed_Write(NetPakWriter writer, byte correctedAmmo) Parameters writer NetPakWriter correctedAmmo byte ReceivePlayProject_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayProject\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayProject_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayProject_Write(NetPakWriter, Vector3, Vector3, ushort, ushort) [NetInvokableGeneratedMethod(\"ReceivePlayProject\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayProject_Write(NetPakWriter writer, Vector3 origin, Vector3 direction, ushort barrelId, ushort magazineId) Parameters writer NetPakWriter origin Vector3 direction Vector3 barrelId ushort magazineId ushort ReceivePlayReload_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayReload\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayReload_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayReload_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceivePlayReload\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayReload_Write(NetPakWriter writer, bool newHammer) Parameters writer NetPakWriter newHammer bool ReceivePlayShoot_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayShoot\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayShoot_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayShoot_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayShoot\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayShoot_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableHousingPlanner.html": {
    "href": "api/SDG.Unturned.UseableHousingPlanner.html",
    "title": "Class UseableHousingPlanner | Unturned Analyse Doc",
    "keywords": "Class UseableHousingPlanner Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableHousingPlanner : Useable Inheritance object SteamCaller PlayerCaller Useable UseableHousingPlanner Inherited Members Useable.stopPrimary() Useable.stopSecondary() Useable.simulate(uint, bool) Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableHousingPlanner() public UseableHousingPlanner() Properties isUseableShowingMenu Does useable have a menu open? If so pause menu, dashboard, and other menus cannot be opened. public override bool isUseableShowingMenu { get; } Property Value bool Methods ReceivePlaceHousingItem(in ServerInvocationContext, Guid, Vector3, float) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 5)] public void ReceivePlaceHousingItem(in ServerInvocationContext context, Guid assetGuid, Vector3 position, float yaw) Parameters context ServerInvocationContext assetGuid Guid position Vector3 yaw float ReceivePlaceHousingItemResult(bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceivePlaceHousingItemResult(bool success) Parameters success bool dequip() public override void dequip() equip() public override void equip() startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. tick() public override void tick()"
  },
  "api/SDG.Unturned.UseableHousingPlanner_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableHousingPlanner_NetMethods.html",
    "title": "Class UseableHousingPlanner_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableHousingPlanner_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableHousingPlanner))] public static class UseableHousingPlanner_NetMethods Inheritance object UseableHousingPlanner_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlaceHousingItemResult_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlaceHousingItemResult\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlaceHousingItemResult_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlaceHousingItemResult_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceivePlaceHousingItemResult\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlaceHousingItemResult_Write(NetPakWriter writer, bool success) Parameters writer NetPakWriter success bool ReceivePlaceHousingItem_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlaceHousingItem\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlaceHousingItem_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceivePlaceHousingItem_Write(NetPakWriter, Guid, Vector3, float) [NetInvokableGeneratedMethod(\"ReceivePlaceHousingItem\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlaceHousingItem_Write(NetPakWriter writer, Guid assetGuid, Vector3 position, float yaw) Parameters writer NetPakWriter assetGuid Guid position Vector3 yaw float"
  },
  "api/SDG.Unturned.UseableMelee.html": {
    "href": "api/SDG.Unturned.UseableMelee.html",
    "title": "Class UseableMelee | Unturned Analyse Doc",
    "keywords": "Class UseableMelee Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableMelee : Useable Inheritance object SteamCaller PlayerCaller Useable UseableMelee Inherited Members Useable.stopSecondary() Useable.tock(uint) Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableMelee() public UseableMelee() Properties canInspect public override bool canInspect { get; } Property Value bool equippedMeleeAsset public ItemMeleeAsset equippedMeleeAsset { get; } Property Value ItemMeleeAsset Methods ReceiveInteractMelee() [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10, legacyName = \"askInteractMelee\")] public void ReceiveInteractMelee() ReceivePlaySwing(ESwingMode) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askSwing\")] public void ReceivePlaySwing(ESwingMode mode) Parameters mode ESwingMode ReceivePlaySwingStart() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askSwingStart\")] public void ReceivePlaySwingStart() ReceivePlaySwingStop() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askSwingStop\")] public void ReceivePlaySwingStop() ReceiveSpawnMeleeImpact(Vector3, Vector3, string, Transform) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceiveSpawnMeleeImpact(Vector3 position, Vector3 normal, string materialName, Transform colliderTransform) Parameters position Vector3 normal Vector3 materialName string colliderTransform Transform askInteractMelee(CSteamID) [Obsolete] public void askInteractMelee(CSteamID steamID) Parameters steamID CSteamID askSwing(CSteamID, byte) [Obsolete] public void askSwing(CSteamID steamID, byte mode) Parameters steamID CSteamID mode byte askSwingStart(CSteamID) [Obsolete] public void askSwingStart(CSteamID steamID) Parameters steamID CSteamID askSwingStop(CSteamID) [Obsolete] public void askSwingStop(CSteamID steamID) Parameters steamID CSteamID dequip() public override void dequip() equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. stopPrimary() public override void stopPrimary() tick() public override void tick() updateState(byte[]) public override void updateState(byte[] newState) Parameters newState byte[]"
  },
  "api/SDG.Unturned.UseableMelee_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableMelee_NetMethods.html",
    "title": "Class UseableMelee_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableMelee_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableMelee))] public static class UseableMelee_NetMethods Inheritance object UseableMelee_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveInteractMelee_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveInteractMelee\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveInteractMelee_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveInteractMelee_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveInteractMelee\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveInteractMelee_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlaySwingStart_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlaySwingStart\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlaySwingStart_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlaySwingStart_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlaySwingStart\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlaySwingStart_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlaySwingStop_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlaySwingStop\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlaySwingStop_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlaySwingStop_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlaySwingStop\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlaySwingStop_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlaySwing_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlaySwing\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlaySwing_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlaySwing_Write(NetPakWriter, ESwingMode) [NetInvokableGeneratedMethod(\"ReceivePlaySwing\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlaySwing_Write(NetPakWriter writer, ESwingMode mode) Parameters writer NetPakWriter mode ESwingMode ReceiveSpawnMeleeImpact_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSpawnMeleeImpact\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSpawnMeleeImpact_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSpawnMeleeImpact_Write(NetPakWriter, Vector3, Vector3, string, Transform) [NetInvokableGeneratedMethod(\"ReceiveSpawnMeleeImpact\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSpawnMeleeImpact_Write(NetPakWriter writer, Vector3 position, Vector3 normal, string materialName, Transform colliderTransform) Parameters writer NetPakWriter position Vector3 normal Vector3 materialName string colliderTransform Transform"
  },
  "api/SDG.Unturned.UseableOptic.html": {
    "href": "api/SDG.Unturned.UseableOptic.html",
    "title": "Class UseableOptic | Unturned Analyse Doc",
    "keywords": "Class UseableOptic Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableOptic : Useable Inheritance object SteamCaller PlayerCaller Useable UseableOptic Inherited Members Useable.stopPrimary() Useable.tick() Useable.simulate(uint, bool) Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableOptic() public UseableOptic() Methods dequip() public override void dequip() equip() public override void equip() startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. stopSecondary() public override void stopSecondary()"
  },
  "api/SDG.Unturned.UseableRefill.html": {
    "href": "api/SDG.Unturned.UseableRefill.html",
    "title": "Class UseableRefill | Unturned Analyse Doc",
    "keywords": "Class UseableRefill Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableRefill : Useable Inheritance object SteamCaller PlayerCaller Useable UseableRefill Inherited Members Useable.stopPrimary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableRefill() public UseableRefill() Methods ReceivePlayRefill() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askRefill\")] public void ReceivePlayRefill() ReceivePlayUse() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askUse\")] public void ReceivePlayUse() askRefill(CSteamID) [Obsolete] public void askRefill(CSteamID steamID) Parameters steamID CSteamID askUse(CSteamID) [Obsolete] public void askUse(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableRefill_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableRefill_NetMethods.html",
    "title": "Class UseableRefill_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableRefill_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableRefill))] public static class UseableRefill_NetMethods Inheritance object UseableRefill_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayRefill_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayRefill\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayRefill_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayRefill_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayRefill\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayRefill_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceivePlayUse_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayUse\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayUse_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayUse_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayUse\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayUse_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableStructure.html": {
    "href": "api/SDG.Unturned.UseableStructure.html",
    "title": "Class UseableStructure | Unturned Analyse Doc",
    "keywords": "Class UseableStructure Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableStructure : Useable Inheritance object SteamCaller PlayerCaller Useable UseableStructure Inherited Members Useable.stopPrimary() Useable.stopSecondary() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableStructure() public UseableStructure() Properties equippedStructureAsset public ItemStructureAsset equippedStructureAsset { get; } Property Value ItemStructureAsset Methods ReceiveBuildStructure(in ServerInvocationContext, Vector3, float) [SteamCall(ESteamCallValidation.ONLY_FROM_OWNER, ratelimitHz = 10)] public void ReceiveBuildStructure(in ServerInvocationContext context, Vector3 newPoint, float newAngle) Parameters context ServerInvocationContext newPoint Vector3 newAngle float ReceivePlayConstruct() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askConstruct\")] public void ReceivePlayConstruct() askConstruct(CSteamID) [Obsolete] public void askConstruct(CSteamID steamID) Parameters steamID CSteamID askStructure(CSteamID, Vector3, float) [Obsolete] public void askStructure(CSteamID steamID, Vector3 newPoint, float newAngle) Parameters steamID CSteamID newPoint Vector3 newAngle float dequip() public override void dequip() equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. tick() public override void tick()"
  },
  "api/SDG.Unturned.UseableStructure_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableStructure_NetMethods.html",
    "title": "Class UseableStructure_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableStructure_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableStructure))] public static class UseableStructure_NetMethods Inheritance object UseableStructure_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveBuildStructure_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBuildStructure\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBuildStructure_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveBuildStructure_Write(NetPakWriter, Vector3, float) [NetInvokableGeneratedMethod(\"ReceiveBuildStructure\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBuildStructure_Write(NetPakWriter writer, Vector3 newPoint, float newAngle) Parameters writer NetPakWriter newPoint Vector3 newAngle float ReceivePlayConstruct_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayConstruct\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayConstruct_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayConstruct_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayConstruct\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayConstruct_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableThrowable.ThrowableSpawnedHandler.html": {
    "href": "api/SDG.Unturned.UseableThrowable.ThrowableSpawnedHandler.html",
    "title": "Delegate UseableThrowable.ThrowableSpawnedHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableThrowable.ThrowableSpawnedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableThrowable.ThrowableSpawnedHandler(UseableThrowable useable, GameObject throwable) Parameters useable UseableThrowable throwable GameObject Constructors ThrowableSpawnedHandler(object, IntPtr) public ThrowableSpawnedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(UseableThrowable, GameObject, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(UseableThrowable useable, GameObject throwable, AsyncCallback callback, object @object) Parameters useable UseableThrowable throwable GameObject callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(UseableThrowable, GameObject) public virtual void Invoke(UseableThrowable useable, GameObject throwable) Parameters useable UseableThrowable throwable GameObject"
  },
  "api/SDG.Unturned.UseableThrowable.html": {
    "href": "api/SDG.Unturned.UseableThrowable.html",
    "title": "Class UseableThrowable | Unturned Analyse Doc",
    "keywords": "Class UseableThrowable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableThrowable : Useable Inheritance object SteamCaller PlayerCaller Useable UseableThrowable Inherited Members Useable.stopPrimary() Useable.stopSecondary() Useable.dequip() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableThrowable() public UseableThrowable() Properties equippedThrowableAsset public ItemThrowableAsset equippedThrowableAsset { get; } Property Value ItemThrowableAsset Methods ReceivePlaySwing() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askSwing\")] public void ReceivePlaySwing() ReceiveToss(Vector3, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askToss\")] public void ReceiveToss(Vector3 origin, Vector3 force) Parameters origin Vector3 force Vector3 askSwing(CSteamID) [Obsolete] public void askSwing(CSteamID steamID) Parameters steamID CSteamID askToss(CSteamID, Vector3, Vector3) [Obsolete] public void askToss(CSteamID steamID, Vector3 origin, Vector3 force) Parameters steamID CSteamID origin Vector3 force Vector3 equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startAttack(ESwingMode) protected bool startAttack(ESwingMode newSwingMode) Parameters newSwingMode ESwingMode Returns bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. startSecondary() public override bool startSecondary() Returns bool True if secondary action was started and stopSecondary should be called in the future. Useful to allow input to be held until action executes. tick() public override void tick() Events onThrowableSpawned Plugin-only event when throwable is spawned on server. public static event UseableThrowable.ThrowableSpawnedHandler onThrowableSpawned Event Type UseableThrowable.ThrowableSpawnedHandler"
  },
  "api/SDG.Unturned.UseableThrowable_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableThrowable_NetMethods.html",
    "title": "Class UseableThrowable_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableThrowable_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableThrowable))] public static class UseableThrowable_NetMethods Inheritance object UseableThrowable_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlaySwing_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlaySwing\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlaySwing_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlaySwing_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlaySwing\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlaySwing_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveToss_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToss\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToss_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveToss_Write(NetPakWriter, Vector3, Vector3) [NetInvokableGeneratedMethod(\"ReceiveToss\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToss_Write(NetPakWriter writer, Vector3 origin, Vector3 force) Parameters writer NetPakWriter origin Vector3 force Vector3"
  },
  "api/SDG.Unturned.UseableTire.ModifyTireRequestHandler.html": {
    "href": "api/SDG.Unturned.UseableTire.ModifyTireRequestHandler.html",
    "title": "Delegate UseableTire.ModifyTireRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate UseableTire.ModifyTireRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void UseableTire.ModifyTireRequestHandler(UseableTire useable, InteractableVehicle vehicle, int wheelIndex, ref bool shouldAllow) Parameters useable UseableTire vehicle InteractableVehicle wheelIndex int shouldAllow bool Constructors ModifyTireRequestHandler(object, IntPtr) public ModifyTireRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(UseableTire, InteractableVehicle, int, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(UseableTire useable, InteractableVehicle vehicle, int wheelIndex, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters useable UseableTire vehicle InteractableVehicle wheelIndex int shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(UseableTire, InteractableVehicle, int, ref bool) public virtual void Invoke(UseableTire useable, InteractableVehicle vehicle, int wheelIndex, ref bool shouldAllow) Parameters useable UseableTire vehicle InteractableVehicle wheelIndex int shouldAllow bool"
  },
  "api/SDG.Unturned.UseableTire.html": {
    "href": "api/SDG.Unturned.UseableTire.html",
    "title": "Class UseableTire | Unturned Analyse Doc",
    "keywords": "Class UseableTire Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableTire : Useable Inheritance object SteamCaller PlayerCaller Useable UseableTire Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableTire() public UseableTire() Methods ReceivePlayAttach() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askAttach\")] public void ReceivePlayAttach() askAttach(CSteamID) [Obsolete] public void askAttach(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. Events onModifyTireRequested public static event UseableTire.ModifyTireRequestHandler onModifyTireRequested Event Type UseableTire.ModifyTireRequestHandler"
  },
  "api/SDG.Unturned.UseableTire_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableTire_NetMethods.html",
    "title": "Class UseableTire_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableTire_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableTire))] public static class UseableTire_NetMethods Inheritance object UseableTire_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayAttach_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayAttach\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayAttach_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayAttach_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayAttach\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayAttach_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableVehicleBattery.html": {
    "href": "api/SDG.Unturned.UseableVehicleBattery.html",
    "title": "Class UseableVehicleBattery | Unturned Analyse Doc",
    "keywords": "Class UseableVehicleBattery Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableVehicleBattery : Useable Inheritance object SteamCaller PlayerCaller Useable UseableVehicleBattery Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableVehicleBattery() public UseableVehicleBattery() Methods ReceivePlayReplace() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askReplace\")] public void ReceivePlayReplace() askReplace(CSteamID) [Obsolete] public void askReplace(CSteamID steamID) Parameters steamID CSteamID equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes."
  },
  "api/SDG.Unturned.UseableVehicleBattery_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableVehicleBattery_NetMethods.html",
    "title": "Class UseableVehicleBattery_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableVehicleBattery_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableVehicleBattery))] public static class UseableVehicleBattery_NetMethods Inheritance object UseableVehicleBattery_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayReplace_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayReplace\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayReplace_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayReplace_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayReplace\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayReplace_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableVehiclePaint.html": {
    "href": "api/SDG.Unturned.UseableVehiclePaint.html",
    "title": "Class UseableVehiclePaint | Unturned Analyse Doc",
    "keywords": "Class UseableVehiclePaint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableVehiclePaint : Useable Inheritance object SteamCaller PlayerCaller Useable UseableVehiclePaint Inherited Members Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.dequip() Useable.tick() Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableVehiclePaint() public UseableVehiclePaint() Methods ReceivePlayReplace() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public void ReceivePlayReplace() equip() public override void equip() simulate(uint, bool) public override void simulate(uint simulation, bool inputSteady) Parameters simulation uint inputSteady bool startPrimary() public override bool startPrimary() Returns bool True if primary action was started and stopPrimary should be called in the future. Useful to allow input to be held until action executes. Events OnPaintVehicleRequested public static event PaintVehicleRequestHandler OnPaintVehicleRequested Event Type PaintVehicleRequestHandler"
  },
  "api/SDG.Unturned.UseableVehiclePaint_NetMethods.html": {
    "href": "api/SDG.Unturned.UseableVehiclePaint_NetMethods.html",
    "title": "Class UseableVehiclePaint_NetMethods | Unturned Analyse Doc",
    "keywords": "Class UseableVehiclePaint_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(UseableVehiclePaint))] public static class UseableVehiclePaint_NetMethods Inheritance object UseableVehiclePaint_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceivePlayReplace_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceivePlayReplace\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceivePlayReplace_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceivePlayReplace_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceivePlayReplace\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceivePlayReplace_Write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.UseableWalkieTalkie.html": {
    "href": "api/SDG.Unturned.UseableWalkieTalkie.html",
    "title": "Class UseableWalkieTalkie | Unturned Analyse Doc",
    "keywords": "Class UseableWalkieTalkie Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class UseableWalkieTalkie : Useable Inheritance object SteamCaller PlayerCaller Useable UseableWalkieTalkie Inherited Members Useable.startPrimary() Useable.stopPrimary() Useable.startSecondary() Useable.stopSecondary() Useable.tick() Useable.simulate(uint, bool) Useable.tock(uint) Useable.updateState(byte[]) Useable.canInspect Useable.isUseableShowingMenu PlayerCaller._player PlayerCaller.GetNetId() PlayerCaller.player SteamCaller._channel SteamCaller.channel Constructors UseableWalkieTalkie() public UseableWalkieTalkie() Methods dequip() public override void dequip() equip() public override void equip()"
  },
  "api/SDG.Unturned.Valued.html": {
    "href": "api/SDG.Unturned.Valued.html",
    "title": "Delegate Valued | Unturned Analyse Doc",
    "keywords": "Delegate Valued Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void Valued(SleekValue value, float state) Parameters value SleekValue state float Constructors Valued(object, IntPtr) public Valued(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SleekValue, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SleekValue value, float state, AsyncCallback callback, object @object) Parameters value SleekValue state float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SleekValue, float) public virtual void Invoke(SleekValue value, float state) Parameters value SleekValue state float"
  },
  "api/SDG.Unturned.VehicleAsset.html": {
    "href": "api/SDG.Unturned.VehicleAsset.html",
    "title": "Class VehicleAsset | Unturned Analyse Doc",
    "keywords": "Class VehicleAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleAsset : Asset, IAssetErrorContext, ISkinableAsset Inheritance object Asset VehicleAsset Implements IAssetErrorContext ISkinableAsset Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleAsset() public VehicleAsset() Fields _albedoBase protected Texture2D _albedoBase Field Value Texture2D _brake protected float _brake Field Value float _bumperMultiplier protected float _bumperMultiplier Field Value float _camFollowDistance protected float _camFollowDistance Field Value float _emissionBase protected Texture2D _emissionBase Field Value Texture2D _engine protected EEngine _engine Field Value EEngine _exit protected float _exit Field Value float _explosion protected ushort _explosion Field Value ushort _fuel protected ushort _fuel Field Value ushort _fuelMax protected ushort _fuelMax Field Value ushort _fuelMin protected ushort _fuelMin Field Value ushort _hasBicycle protected bool _hasBicycle Field Value bool _hasCrawler protected bool _hasCrawler Field Value bool _hasHeadlights protected bool _hasHeadlights Field Value bool _hasHook protected bool _hasHook Field Value bool _hasLockMouse protected bool _hasLockMouse Field Value bool _hasSirens protected bool _hasSirens Field Value bool _hasSleds protected bool _hasSleds Field Value bool _hasTraction protected bool _hasTraction Field Value bool _hasZip protected bool _hasZip Field Value bool _health protected ushort _health Field Value ushort _healthMax protected ushort _healthMax Field Value ushort _healthMin protected ushort _healthMin Field Value ushort _horn protected AudioClip _horn Field Value AudioClip _ignition protected AudioClip _ignition Field Value AudioClip _lift protected float _lift Field Value float _metallicBase protected Texture2D _metallicBase Field Value Texture2D _numSeats protected int _numSeats Field Value int _passengerExplosionArmor protected float _passengerExplosionArmor Field Value float _pitchDrive protected float _pitchDrive Field Value float _pitchIdle protected float _pitchIdle Field Value float _rarity protected EItemRarity _rarity Field Value EItemRarity _sharedSkinLookupID protected ushort _sharedSkinLookupID Field Value ushort _sharedSkinName protected string _sharedSkinName Field Value string _shouldVerifyHash protected bool _shouldVerifyHash Field Value bool _size2_z protected float _size2_z Field Value float _sqrDelta protected float _sqrDelta Field Value float _steerMax protected float _steerMax Field Value float _steerMin protected float _steerMin Field Value float _turrets protected TurretInfo[] _turrets Field Value TurretInfo[] _vehicleName protected string _vehicleName Field Value string canTiresBeDamaged public bool canTiresBeDamaged Field Value bool isVulnerable To non-explosions. public bool isVulnerable Field Value bool isVulnerableToBumper Crashing into stuff. public bool isVulnerableToBumper Field Value bool isVulnerableToEnvironment Mega zombie rocks, zombies, animals. public bool isVulnerableToEnvironment Field Value bool isVulnerableToExplosions public bool isVulnerableToExplosions Field Value bool Properties AllowsEngineRpmAndGearsInHud If this and UsesEngineRpmAndGears are true, HUD will show RPM and gear number. public bool AllowsEngineRpmAndGearsInHud { get; protected set; } Property Value bool BuildablePlacementRule public EVehicleBuildablePlacementRule BuildablePlacementRule { get; protected set; } Property Value EVehicleBuildablePlacementRule CanDecay public bool CanDecay { get; } Property Value bool CrawlerTrackSteeringMaxSpeedScale Multiplier for CrawlerTrackSteeringTorque and CrawlerTrackSteeringSidewaysFrictionMultiplier while at target maximum speed (for the current forward/backward direction). public float CrawlerTrackSteeringMaxSpeedScale { get; } Property Value float CrawlerTrackSteeringSidewaysFrictionMultiplier When a wheel is in SDG.Unturned.EWheelSteeringMode.CrawlerTrack mode and a steering input is applied the UnityEngine.WheelCollider.sidewaysFriction stiffness is multiplied by this factor. This allows the vehicle to rotate in-place with a lower steering torque, which helps prevent the vehicle from going out of control while turning and accelerating. public float CrawlerTrackSteeringSidewaysFrictionMultiplier { get; } Property Value float CrawlerTrackSteeringTorque Added or subtracted from wheel motor torque in SDG.Unturned.EWheelSteeringMode.CrawlerTrack mode. public float CrawlerTrackSteeringTorque { get; } Property Value float DefaultPaintColors Null if vehicle doesn't support paint color. public List<Color32> DefaultPaintColors { get; protected set; } Property Value List<Color32> EngineIdleRpm Minimum engine RPM. public float EngineIdleRpm { get; } Property Value float EngineMaxRpm Maximum engine RPM. public float EngineMaxRpm { get; } Property Value float EngineMaxTorque Maximum torque (multiplied by output of torque curve). public float EngineMaxTorque { get; } Property Value float EngineRpmDecreaseRate How quickly RPM can decrease in RPM/s. e.g., 1000 will take 2 seconds to go from 4000 to 2000 RPM. public float EngineRpmDecreaseRate { get; } Property Value float EngineRpmIncreaseRate How quickly RPM can increase in RPM/s. e.g., 1000 will take 2 seconds to go from 2000 to 4000 RPM. public float EngineRpmIncreaseRate { get; } Property Value float ExplosionEffectGuid public Guid ExplosionEffectGuid { get; } Property Value Guid ForwardGearsCount Get number of forward gear ratios. Exposed for plugin use. public int ForwardGearsCount { get; } Property Value int FriendlyName public override string FriendlyName { get; } Property Value string GearShiftDownThresholdRpm When engine RPM dips below this value shift to the next lower gear if available. public float GearShiftDownThresholdRpm { get; } Property Value float GearShiftDuration How long after changing gears before throttle is engaged again. public float GearShiftDuration { get; } Property Value float GearShiftInterval How long between changing gears to allow another automatic gear change. public float GearShiftInterval { get; } Property Value float GearShiftUpThresholdRpm When engine RPM exceeds this value shift to the next higher gear if available. public float GearShiftUpThresholdRpm { get; } Property Value float IsPaintable If true, Vehicle Paint items can be used on this vehicle. Always false if SupportsPaintColor is false. Certain vehicles may support paint colors without also being paintable by players. For example, the creator of a vehicle may want to use color variants without also allowing players to make it bright pink. public bool IsPaintable { get; protected set; } Property Value bool PaintableVehicleSections Null if vehicle doesn't support paint color. public PaintableVehicleSection[] PaintableVehicleSections { get; protected set; } Property Value PaintableVehicleSection[] ReverseGearsCount Get number of reverse gear ratios. Exposed for plugin use. public int ReverseGearsCount { get; } Property Value int SharedSkinLookupGuid Please refer to: FindSharedSkinVehicleAsset() public Guid SharedSkinLookupGuid { get; } Property Value Guid ShouldExplosionBurnMaterials public bool ShouldExplosionBurnMaterials { get; protected set; } Property Value bool ShouldExplosionCauseDamage If true, explosion will damage nearby entities and kill passengers. public bool ShouldExplosionCauseDamage { get; protected set; } Property Value bool SteeringAngleTurnSpeed Steering angle rotation change in degrees per second. public float SteeringAngleTurnSpeed { get; } Property Value float SupportsPaintColor public bool SupportsPaintColor { get; } Property Value bool TargetForwardSpeed Maximum speed to aim for while accelerating forward. public float TargetForwardSpeed { get; } Property Value float TargetForwardVelocity Maximum velocity to aim for while accelerating forward. public float TargetForwardVelocity { get; } Property Value float TargetReverseSpeed Maximum speed to aim for while accelerating backward. public float TargetReverseSpeed { get; } Property Value float TargetReverseVelocity Maximum (negative) velocity to aim for while accelerating backward. public float TargetReverseVelocity { get; } Property Value float airSteerMax public float airSteerMax { get; protected set; } Property Value float airSteerMin public float airSteerMin { get; protected set; } Property Value float airTurnResponsiveness public float airTurnResponsiveness { get; protected set; } Property Value float albedoBase public Texture albedoBase { get; } Property Value Texture assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType batteryBurnRate Battery decrease per second. public float batteryBurnRate { get; protected set; } Property Value float batteryChargeRate Battery increase per second. public float batteryChargeRate { get; protected set; } Property Value float batteryDriving public EBatteryMode batteryDriving { get; protected set; } Property Value EBatteryMode batteryEmpty public EBatteryMode batteryEmpty { get; protected set; } Property Value EBatteryMode batteryHeadlights public EBatteryMode batteryHeadlights { get; protected set; } Property Value EBatteryMode batterySirens public EBatteryMode batterySirens { get; protected set; } Property Value EBatteryMode batterySpawnChargeMultiplier Battery charge when first spawning in is multiplied by this [0, 1] number. public float batterySpawnChargeMultiplier { get; protected set; } Property Value float bicycleAnimSpeed public float bicycleAnimSpeed { get; protected set; } Property Value float brake public float brake { get; } Property Value float bumperMultiplier public float bumperMultiplier { get; } Property Value float camDriverOffset Vertical first-person view translation. public float camDriverOffset { get; protected set; } Property Value float camFollowDistance public float camFollowDistance { get; } Property Value float camPassengerOffset Vertical first-person view translation. public float camPassengerOffset { get; protected set; } Property Value float canBeLocked Can players lock the vehicle to their clan/group? True by default, but mods want to be able to disable. public bool canBeLocked { get; protected set; } Property Value bool canRepairWhileSeated Can this vehicle be repaired by a seated player? public bool canRepairWhileSeated { get; protected set; } Property Value bool canSpawnWithBattery Can this vehicle ever spawn with a charged battery? Uses game mode battery stats when true, or overrides by preventing battery spawn when false. public bool canSpawnWithBattery { get; protected set; } Property Value bool canStealBattery Can players steal the battery? public bool canStealBattery { get; protected set; } Property Value bool carjackForceMultiplier public float carjackForceMultiplier { get; protected set; } Property Value float centerOfMass If hasCenterOfMassOverride, use this value. public Vector3 centerOfMass { get; protected set; } Property Value Vector3 childExplosionArmorMultiplier public float childExplosionArmorMultiplier { get; protected set; } Property Value float defaultBatteryGuid Battery item given to the player when a specific battery hasn't been manually installed yet. Defaults to the vanilla car battery (098b13be34a7411db7736b7f866ada69). public Guid defaultBatteryGuid { get; protected set; } Property Value Guid dropsMax Maximum number of items to drop on death. public byte dropsMax { get; protected set; } Property Value byte dropsMin Minimum number of items to drop on death. public byte dropsMin { get; protected set; } Property Value byte dropsTableId Spawn table to drop items from on death. public ushort dropsTableId { get; protected set; } Property Value ushort emissionBase public Texture emissionBase { get; } Property Value Texture engine public EEngine engine { get; } Property Value EEngine engineForceMultiplier Multiplier for otherwise not-yet-configurable plane/heli/boat forces. Nelson 2024-03-06: Required for increasing mass of vehicles without significantly messing with behavior. public float engineForceMultiplier { get; protected set; } Property Value float exit public float exit { get; } Property Value float explosion public ushort explosion { get; } Property Value ushort fuel public ushort fuel { get; } Property Value ushort fuelBurnRate Fuel decrease per second. public float fuelBurnRate { get; protected set; } Property Value float fuelMax public ushort fuelMax { get; } Property Value ushort fuelMin public ushort fuelMin { get; } Property Value ushort hasBicycle When true the bicycle animation is used and extra speed is stamina powered. Bad way to implement it. public bool hasBicycle { get; } Property Value bool hasCenterOfMassOverride Was a center of mass specified in the .dat? public bool hasCenterOfMassOverride { get; protected set; } Property Value bool hasCrawler [Obsolete(\"Replaced by VehicleWheelConfiguration. Only used for backwards compatibility.\")] public bool hasCrawler { get; } Property Value bool hasHeadlights public bool hasHeadlights { get; } Property Value bool hasHook public bool hasHook { get; } Property Value bool hasHorn public bool hasHorn { get; protected set; } Property Value bool hasLockMouse public bool hasLockMouse { get; } Property Value bool hasSirens public bool hasSirens { get; } Property Value bool hasSleds public bool hasSleds { get; } Property Value bool hasTraction public bool hasTraction { get; } Property Value bool hasZip public bool hasZip { get; } Property Value bool health public ushort health { get; } Property Value ushort healthMax public ushort healthMax { get; } Property Value ushort healthMin public ushort healthMin { get; } Property Value ushort horn public AudioClip horn { get; } Property Value AudioClip ignition public AudioClip ignition { get; } Property Value AudioClip isBatteryPowered public bool isBatteryPowered { get; protected set; } Property Value bool isExplosive [Obsolete(\"Separated into ShouldExplosionCauseDamage and ShouldExplosionBurnMaterials.\")] public bool isExplosive { get; } Property Value bool isReclined public bool isReclined { get; protected set; } Property Value bool isStaminaPowered public bool isStaminaPowered { get; protected set; } Property Value bool lift public float lift { get; } Property Value float maxExplosionForce public Vector3 maxExplosionForce { get; set; } Property Value Vector3 metallicBase public Texture metallicBase { get; } Property Value Texture minExplosionForce public Vector3 minExplosionForce { get; set; } Property Value Vector3 numSeats public int numSeats { get; } Property Value int numSteeringTires Number of tire visuals to rotate with steering wheel. [Obsolete(\"Replaced by VehicleWheelConfiguration. Only used for backwards compatibility.\")] public int numSteeringTires { get; protected set; } Property Value int passengerExplosionArmor public float passengerExplosionArmor { get; } Property Value float physicsProfileRef public AssetReference<VehiclePhysicsProfileAsset> physicsProfileRef { get; protected set; } Property Value AssetReference<VehiclePhysicsProfileAsset> pitchDrive public float pitchDrive { get; } Property Value float pitchIdle public float pitchIdle { get; } Property Value float rarity public EItemRarity rarity { get; } Property Value EItemRarity sharedSkinLookupID Please refer to: FindSharedSkinVehicleAsset() [Obsolete] public ushort sharedSkinLookupID { get; } Property Value ushort sharedSkinName public string sharedSkinName { get; } Property Value string shouldSpawnSeatCapsules Should capsule colliders be added to seat transforms? Useful to prevent bikes from leaning into walls. public bool shouldSpawnSeatCapsules { get; protected set; } Property Value bool shouldVerifyHash public bool shouldVerifyHash { get; } Property Value bool size2_z public float size2_z { get; } Property Value float speedMax [Obsolete(\"Renamed to TargetForwardVelocity.\")] public float speedMax { get; } Property Value float speedMin [Obsolete(\"Renamed to TargetReverseVelocity.\")] public float speedMin { get; } Property Value float sqrDelta public float sqrDelta { get; } Property Value float staminaBoost public float staminaBoost { get; protected set; } Property Value float steerMax Steering angle range at target maximum speed (for the current forward/backward direction). public float steerMax { get; } Property Value float steerMin Steering angle range at zero speed. public float steerMin { get; } Property Value float steeringTireIndices [Obsolete(\"Replaced by VehicleWheelConfiguration. Only used for backwards compatibility.\")] public int[] steeringTireIndices { get; protected set; } Property Value int[] supportsMobileBuildables Can mobile barricades e.g. bed or sentry guns be placed on this vehicle? [Obsolete(\"Replaced by BuildablePlacementRule\")] public bool supportsMobileBuildables { get; } Property Value bool tireID Item ID of compatible tire. public ushort tireID { get; protected set; } Property Value ushort trainCarLength public float trainCarLength { get; protected set; } Property Value float trainTrackOffset public float trainTrackOffset { get; protected set; } Property Value float trainWheelOffset public float trainWheelOffset { get; protected set; } Property Value float trunkStorage_X public byte trunkStorage_X { get; set; } Property Value byte trunkStorage_Y public byte trunkStorage_Y { get; set; } Property Value byte turrets public TurretInfo[] turrets { get; } Property Value TurretInfo[] useStaminaBoost public bool useStaminaBoost { get; protected set; } Property Value bool validSpeedDown Client sends physics simulation results to server. If downward (-Y) speed exceeds this, mark the move invalid. public float validSpeedDown { get; protected set; } Property Value float validSpeedUp Client sends physics simulation results to server. If upward (+Y) speed exceeds this, mark the move invalid. public float validSpeedUp { get; protected set; } Property Value float vehicleName public string vehicleName { get; } Property Value string wheelColliderMassOverride If set, override the wheel collider mass with this value. public float? wheelColliderMassOverride { get; protected set; } Property Value float? Methods DebugDumpWheelConfigurationToString() public string DebugDumpWheelConfigurationToString() Returns string DebugDumpWheelConfigurationToStringBuilder(StringBuilder) public void DebugDumpWheelConfigurationToStringBuilder(StringBuilder output) Parameters output StringBuilder FindExplosionEffectAsset() public EffectAsset FindExplosionEffectAsset() Returns EffectAsset FindSharedSkinVehicleAsset() Supports redirects by VehicleRedirectorAsset. \"Shared Skins\" were implemented when there were several asset variants of each vehicle. For example, Off_Roader_Orange, Off_Roader_Purple, Off_Roader_Green, etc. Each vehicle had their \"shared skin\" set to the same ID, and the skin asset had its target ID set to the shared ID. This isn't as necessary after merging vanilla vehicle variants, but some mods may rely on it, and it needed GUID support now that the target vehicle might not have a legacy ID. public VehicleAsset FindSharedSkinVehicleAsset() Returns VehicleAsset GetEngineGearRatio(int) Returns reverseGearRatio for negative gears, actual value for valid gear number, otherwise zero. Exposed for plugin use. public float GetEngineGearRatio(int gearNumber) Parameters gearNumber int Returns float GetOrLoadModel() public GameObject GetOrLoadModel() Returns GameObject GetRandomDefaultPaintColor() Pick a random paint color according to SDG.Unturned.VehicleAsset.defaultPaintColorMode. Null if unsupported or not configured. public Color32? GetRandomDefaultPaintColor() Returns Color32? IsExplosionEffectRefNull() public bool IsExplosionEffectRefNull() Returns bool OnClientModelLoaded(GameObject) Vehicle.prefab protected void OnClientModelLoaded(GameObject asset) Parameters asset GameObject OnServerModelLoaded(GameObject) Clip.prefab protected void OnServerModelLoaded(GameObject asset) Parameters asset GameObject PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local onModelLoaded(GameObject) protected void onModelLoaded(GameObject asset) Parameters asset GameObject"
  },
  "api/SDG.Unturned.VehicleBarricadeRegion.html": {
    "href": "api/SDG.Unturned.VehicleBarricadeRegion.html",
    "title": "Class VehicleBarricadeRegion | Unturned Analyse Doc",
    "keywords": "Class VehicleBarricadeRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleBarricadeRegion : BarricadeRegion Inheritance object BarricadeRegion VehicleBarricadeRegion Inherited Members BarricadeRegion.isNetworked BarricadeRegion.IndexOfBarricadeByRootTransform(Transform) BarricadeRegion.FindBarricadeByRootTransform(Transform) BarricadeRegion.findBarricadeByInstanceID(uint) BarricadeRegion.destroy() BarricadeRegion.drops BarricadeRegion.barricades BarricadeRegion.parent object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleBarricadeRegion(Transform, InteractableVehicle, int) public VehicleBarricadeRegion(Transform parent, InteractableVehicle vehicle, int subvehicleIndex) Parameters parent Transform vehicle InteractableVehicle subvehicleIndex int Properties subvehicleIndex public int subvehicleIndex { get; } Property Value int vehicle public InteractableVehicle vehicle { get; } Property Value InteractableVehicle"
  },
  "api/SDG.Unturned.VehicleBatteryChangedHandler.html": {
    "href": "api/SDG.Unturned.VehicleBatteryChangedHandler.html",
    "title": "Delegate VehicleBatteryChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate VehicleBatteryChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleBatteryChangedHandler() Constructors VehicleBatteryChangedHandler(object, IntPtr) public VehicleBatteryChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehicleBlimpUpdated.html": {
    "href": "api/SDG.Unturned.VehicleBlimpUpdated.html",
    "title": "Delegate VehicleBlimpUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VehicleBlimpUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleBlimpUpdated() Constructors VehicleBlimpUpdated(object, IntPtr) public VehicleBlimpUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehicleCarjackedSignature.html": {
    "href": "api/SDG.Unturned.VehicleCarjackedSignature.html",
    "title": "Delegate VehicleCarjackedSignature | Unturned Analyse Doc",
    "keywords": "Delegate VehicleCarjackedSignature Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleCarjackedSignature(InteractableVehicle vehicle, Player instigatingPlayer, ref bool allow, ref Vector3 force, ref Vector3 torque) Parameters vehicle InteractableVehicle instigatingPlayer Player allow bool force Vector3 torque Vector3 Constructors VehicleCarjackedSignature(object, IntPtr) public VehicleCarjackedSignature(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableVehicle, Player, ref bool, ref Vector3, ref Vector3, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool allow, ref Vector3 force, ref Vector3 torque, AsyncCallback callback, object @object) Parameters vehicle InteractableVehicle instigatingPlayer Player allow bool force Vector3 torque Vector3 callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref Vector3, ref Vector3, IAsyncResult) public virtual void EndInvoke(ref bool allow, ref Vector3 force, ref Vector3 torque, IAsyncResult result) Parameters allow bool force Vector3 torque Vector3 result IAsyncResult Invoke(InteractableVehicle, Player, ref bool, ref Vector3, ref Vector3) public virtual void Invoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool allow, ref Vector3 force, ref Vector3 torque) Parameters vehicle InteractableVehicle instigatingPlayer Player allow bool force Vector3 torque Vector3"
  },
  "api/SDG.Unturned.VehicleEventHook.html": {
    "href": "api/SDG.Unturned.VehicleEventHook.html",
    "title": "Class VehicleEventHook | Unturned Analyse Doc",
    "keywords": "Class VehicleEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to Vehicle GameObject to receive events. public class VehicleEventHook : MonoBehaviour Inheritance object VehicleEventHook Constructors VehicleEventHook() public VehicleEventHook() Fields OnDriverAdded Invoked when any player enters the driver seat. public UnityEvent OnDriverAdded Field Value UnityEvent OnDriverRemoved Invoked when any player exits the driver seat. public UnityEvent OnDriverRemoved Field Value UnityEvent OnExploded Invoked after explosion plays. public UnityEvent OnExploded Field Value UnityEvent OnHornUsed Invoked when horn is played. public UnityEvent OnHornUsed Field Value UnityEvent OnLocalDriverAdded Invoked when a locally controlled player enters the driver seat. public UnityEvent OnLocalDriverAdded Field Value UnityEvent OnLocalDriverRemoved Invoked when a locally controlled player exits the driver seat. public UnityEvent OnLocalDriverRemoved Field Value UnityEvent OnLocalPassengerAdded Invoked when a locally controlled player enters the vehicle. public UnityEvent OnLocalPassengerAdded Field Value UnityEvent OnLocalPassengerRemoved Invoked when a locally controlled player exits the vehicle. public UnityEvent OnLocalPassengerRemoved Field Value UnityEvent OnLocked Invoked when lock is engaged. public UnityEvent OnLocked Field Value UnityEvent OnUnlocked Invoked when lock is disengaged. public UnityEvent OnUnlocked Field Value UnityEvent"
  },
  "api/SDG.Unturned.VehicleHeadlightsUpdated.html": {
    "href": "api/SDG.Unturned.VehicleHeadlightsUpdated.html",
    "title": "Delegate VehicleHeadlightsUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VehicleHeadlightsUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleHeadlightsUpdated() Constructors VehicleHeadlightsUpdated(object, IntPtr) public VehicleHeadlightsUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehicleIconInfo.html": {
    "href": "api/SDG.Unturned.VehicleIconInfo.html",
    "title": "Class VehicleIconInfo | Unturned Analyse Doc",
    "keywords": "Class VehicleIconInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleIconInfo Inheritance object VehicleIconInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleIconInfo() public VehicleIconInfo() Fields callback public VehicleIconReady callback Field Value VehicleIconReady id public ushort id Field Value ushort readableOnCPU public bool readableOnCPU Field Value bool skin public ushort skin Field Value ushort skinAsset public SkinAsset skinAsset Field Value SkinAsset vehicleAsset public VehicleAsset vehicleAsset Field Value VehicleAsset x public int x Field Value int y public int y Field Value int"
  },
  "api/SDG.Unturned.VehicleIconReady.html": {
    "href": "api/SDG.Unturned.VehicleIconReady.html",
    "title": "Delegate VehicleIconReady | Unturned Analyse Doc",
    "keywords": "Delegate VehicleIconReady Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleIconReady(Texture2D texture) Parameters texture Texture2D Constructors VehicleIconReady(object, IntPtr) public VehicleIconReady(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Texture2D, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Texture2D texture, AsyncCallback callback, object @object) Parameters texture Texture2D callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Texture2D) public virtual void Invoke(Texture2D texture) Parameters texture Texture2D"
  },
  "api/SDG.Unturned.VehicleLockUpdated.html": {
    "href": "api/SDG.Unturned.VehicleLockUpdated.html",
    "title": "Delegate VehicleLockUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VehicleLockUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleLockUpdated() Constructors VehicleLockUpdated(object, IntPtr) public VehicleLockUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehicleLockpickedSignature.html": {
    "href": "api/SDG.Unturned.VehicleLockpickedSignature.html",
    "title": "Delegate VehicleLockpickedSignature | Unturned Analyse Doc",
    "keywords": "Delegate VehicleLockpickedSignature Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleLockpickedSignature(InteractableVehicle vehicle, Player instigatingPlayer, ref bool allow) Parameters vehicle InteractableVehicle instigatingPlayer Player allow bool Constructors VehicleLockpickedSignature(object, IntPtr) public VehicleLockpickedSignature(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableVehicle, Player, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool allow, AsyncCallback callback, object @object) Parameters vehicle InteractableVehicle instigatingPlayer Player allow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool allow, IAsyncResult result) Parameters allow bool result IAsyncResult Invoke(InteractableVehicle, Player, ref bool) public virtual void Invoke(InteractableVehicle vehicle, Player instigatingPlayer, ref bool allow) Parameters vehicle InteractableVehicle instigatingPlayer Player allow bool"
  },
  "api/SDG.Unturned.VehicleManager.EnterVehicleRequestHandler.html": {
    "href": "api/SDG.Unturned.VehicleManager.EnterVehicleRequestHandler.html",
    "title": "Delegate VehicleManager.EnterVehicleRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate VehicleManager.EnterVehicleRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleManager.EnterVehicleRequestHandler(Player player, InteractableVehicle vehicle, ref bool shouldAllow) Parameters player Player vehicle InteractableVehicle shouldAllow bool Constructors EnterVehicleRequestHandler(object, IntPtr) public EnterVehicleRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, InteractableVehicle, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, InteractableVehicle vehicle, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters player Player vehicle InteractableVehicle shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(Player, InteractableVehicle, ref bool) public virtual void Invoke(Player player, InteractableVehicle vehicle, ref bool shouldAllow) Parameters player Player vehicle InteractableVehicle shouldAllow bool"
  },
  "api/SDG.Unturned.VehicleManager.ExitVehicleRequestHandler.html": {
    "href": "api/SDG.Unturned.VehicleManager.ExitVehicleRequestHandler.html",
    "title": "Delegate VehicleManager.ExitVehicleRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate VehicleManager.ExitVehicleRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleManager.ExitVehicleRequestHandler(Player player, InteractableVehicle vehicle, ref bool shouldAllow, ref Vector3 pendingLocation, ref float pendingYaw) Parameters player Player vehicle InteractableVehicle shouldAllow bool pendingLocation Vector3 pendingYaw float Constructors ExitVehicleRequestHandler(object, IntPtr) public ExitVehicleRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, InteractableVehicle, ref bool, ref Vector3, ref float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, InteractableVehicle vehicle, ref bool shouldAllow, ref Vector3 pendingLocation, ref float pendingYaw, AsyncCallback callback, object @object) Parameters player Player vehicle InteractableVehicle shouldAllow bool pendingLocation Vector3 pendingYaw float callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref Vector3, ref float, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, ref Vector3 pendingLocation, ref float pendingYaw, IAsyncResult result) Parameters shouldAllow bool pendingLocation Vector3 pendingYaw float result IAsyncResult Invoke(Player, InteractableVehicle, ref bool, ref Vector3, ref float) public virtual void Invoke(Player player, InteractableVehicle vehicle, ref bool shouldAllow, ref Vector3 pendingLocation, ref float pendingYaw) Parameters player Player vehicle InteractableVehicle shouldAllow bool pendingLocation Vector3 pendingYaw float"
  },
  "api/SDG.Unturned.VehicleManager.SwapSeatRequestHandler.html": {
    "href": "api/SDG.Unturned.VehicleManager.SwapSeatRequestHandler.html",
    "title": "Delegate VehicleManager.SwapSeatRequestHandler | Unturned Analyse Doc",
    "keywords": "Delegate VehicleManager.SwapSeatRequestHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleManager.SwapSeatRequestHandler(Player player, InteractableVehicle vehicle, ref bool shouldAllow, byte fromSeatIndex, ref byte toSeatIndex) Parameters player Player vehicle InteractableVehicle shouldAllow bool fromSeatIndex byte toSeatIndex byte Constructors SwapSeatRequestHandler(object, IntPtr) public SwapSeatRequestHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Player, InteractableVehicle, ref bool, byte, ref byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Player player, InteractableVehicle vehicle, ref bool shouldAllow, byte fromSeatIndex, ref byte toSeatIndex, AsyncCallback callback, object @object) Parameters player Player vehicle InteractableVehicle shouldAllow bool fromSeatIndex byte toSeatIndex byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, ref byte, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, ref byte toSeatIndex, IAsyncResult result) Parameters shouldAllow bool toSeatIndex byte result IAsyncResult Invoke(Player, InteractableVehicle, ref bool, byte, ref byte) public virtual void Invoke(Player player, InteractableVehicle vehicle, ref bool shouldAllow, byte fromSeatIndex, ref byte toSeatIndex) Parameters player Player vehicle InteractableVehicle shouldAllow bool fromSeatIndex byte toSeatIndex byte"
  },
  "api/SDG.Unturned.VehicleManager.ToggleVehicleLockRequested.html": {
    "href": "api/SDG.Unturned.VehicleManager.ToggleVehicleLockRequested.html",
    "title": "Delegate VehicleManager.ToggleVehicleLockRequested | Unturned Analyse Doc",
    "keywords": "Delegate VehicleManager.ToggleVehicleLockRequested Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleManager.ToggleVehicleLockRequested(InteractableVehicle vehicle, ref bool shouldAllow) Parameters vehicle InteractableVehicle shouldAllow bool Constructors ToggleVehicleLockRequested(object, IntPtr) public ToggleVehicleLockRequested(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(InteractableVehicle, ref bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(InteractableVehicle vehicle, ref bool shouldAllow, AsyncCallback callback, object @object) Parameters vehicle InteractableVehicle shouldAllow bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(ref bool, IAsyncResult) public virtual void EndInvoke(ref bool shouldAllow, IAsyncResult result) Parameters shouldAllow bool result IAsyncResult Invoke(InteractableVehicle, ref bool) public virtual void Invoke(InteractableVehicle vehicle, ref bool shouldAllow) Parameters vehicle InteractableVehicle shouldAllow bool"
  },
  "api/SDG.Unturned.VehicleManager.html": {
    "href": "api/SDG.Unturned.VehicleManager.html",
    "title": "Class VehicleManager | Unturned Analyse Doc",
    "keywords": "Class VehicleManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleManager : SteamCaller Inheritance object SteamCaller VehicleManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors VehicleManager() public VehicleManager() Fields OnVehicleExploded public static Action<InteractableVehicle> OnVehicleExploded Field Value Action<InteractableVehicle> SAVEDATA_VERSION public static readonly byte SAVEDATA_VERSION Field Value byte SAVEDATA_VERSION_ADDED_DECAY public const byte SAVEDATA_VERSION_ADDED_DECAY = 13 Field Value byte SAVEDATA_VERSION_ADDED_NATURAL_SPAWNED public const byte SAVEDATA_VERSION_ADDED_NATURAL_SPAWNED = 17 Field Value byte SAVEDATA_VERSION_ADDED_PAINT_COLOR public const byte SAVEDATA_VERSION_ADDED_PAINT_COLOR = 16 Field Value byte SAVEDATA_VERSION_BATTERY_GUID public const byte SAVEDATA_VERSION_BATTERY_GUID = 15 Field Value byte SAVEDATA_VERSION_REPLACED_ID_WITH_GUID public const byte SAVEDATA_VERSION_REPLACED_ID_WITH_GUID = 14 Field Value byte onDamageTireRequested public static DamageTireRequestHandler onDamageTireRequested Field Value DamageTireRequestHandler onDamageVehicleRequested public static DamageVehicleRequestHandler onDamageVehicleRequested Field Value DamageVehicleRequestHandler onRepairVehicleRequested public static RepairVehicleRequestHandler onRepairVehicleRequested Field Value RepairVehicleRequestHandler onSiphonVehicleRequested public static SiphonVehicleRequestHandler onSiphonVehicleRequested Field Value SiphonVehicleRequestHandler onVehicleCarjacked public static VehicleCarjackedSignature onVehicleCarjacked Field Value VehicleCarjackedSignature onVehicleLockpicked public static VehicleLockpickedSignature onVehicleLockpicked Field Value VehicleLockpickedSignature Properties instance Exposed for Rocket transition to modules backwards compatibility. public static VehicleManager instance { get; } Property Value VehicleManager maxInstances public static uint maxInstances { get; } Property Value uint vehicles public static List<InteractableVehicle> vehicles { get; } Property Value List<InteractableVehicle> Methods ReceiveDestroyAllVehicles() [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleDestroyAll\")] public static void ReceiveDestroyAllVehicles() ReceiveDestroySingleVehicle(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleDestroy\")] public static void ReceiveDestroySingleVehicle(uint instanceID) Parameters instanceID uint ReceiveEnterVehicle(uint, byte, CSteamID) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellEnterVehicle\")] public static void ReceiveEnterVehicle(uint instanceID, byte seat, CSteamID player) Parameters instanceID uint seat byte player CSteamID ReceiveEnterVehicleRequest(in ServerInvocationContext, uint, byte[], byte[], byte) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askEnterVehicle\")] public static void ReceiveEnterVehicleRequest(in ServerInvocationContext context, uint instanceID, byte[] hash, byte[] physicsProfileHash, byte engine) Parameters context ServerInvocationContext instanceID uint hash byte[] physicsProfileHash byte[] engine byte ReceiveExitVehicle(uint, byte, Vector3, byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellExitVehicle\")] public static void ReceiveExitVehicle(uint instanceID, byte seat, Vector3 point, byte angle, bool forceUpdate) Parameters instanceID uint seat byte point Vector3 angle byte forceUpdate bool ReceiveExitVehicleRequest(in ServerInvocationContext, Vector3) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askExitVehicle\")] public static void ReceiveExitVehicleRequest(in ServerInvocationContext context, Vector3 velocity) Parameters context ServerInvocationContext velocity Vector3 ReceiveMultipleVehicles(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveMultipleVehicles(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSingleVehicle(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveSingleVehicle(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveStealVehicleBattery(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askVehicleStealBattery\")] public static void ReceiveStealVehicleBattery(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapVehicleRequest(in ServerInvocationContext, byte) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askSwapVehicle\")] public static void ReceiveSwapVehicleRequest(in ServerInvocationContext context, byte toSeat) Parameters context ServerInvocationContext toSeat byte ReceiveSwapVehicleSeats(uint, byte, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellSwapVehicle\")] public static void ReceiveSwapVehicleSeats(uint instanceID, byte fromSeat, byte toSeat) Parameters instanceID uint fromSeat byte toSeat byte ReceiveToggleVehicleHeadlights(in ServerInvocationContext, bool) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10, legacyName = \"askVehicleHeadlights\")] public static void ReceiveToggleVehicleHeadlights(in ServerInvocationContext context, bool wantsHeadlightsOn) Parameters context ServerInvocationContext wantsHeadlightsOn bool ReceiveUseVehicleBonus(in ServerInvocationContext, byte) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 5, legacyName = \"askVehicleBonus\")] public static void ReceiveUseVehicleBonus(in ServerInvocationContext context, byte bonusType) Parameters context ServerInvocationContext bonusType byte ReceiveVehicleBatteryCharge(uint, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleBatteryCharge\")] public static void ReceiveVehicleBatteryCharge(uint instanceID, ushort newBatteryCharge) Parameters instanceID uint newBatteryCharge ushort ReceiveVehicleBlimp(uint, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleBlimp\")] public static void ReceiveVehicleBlimp(uint instanceID, bool on) Parameters instanceID uint on bool ReceiveVehicleExploded(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleExploded\")] public static void ReceiveVehicleExploded(uint instanceID) Parameters instanceID uint ReceiveVehicleFuel(uint, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleFuel\")] public static void ReceiveVehicleFuel(uint instanceID, ushort newFuel) Parameters instanceID uint newFuel ushort ReceiveVehicleHeadlights(uint, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleHeadlights\")] public static void ReceiveVehicleHeadlights(uint instanceID, bool on) Parameters instanceID uint on bool ReceiveVehicleHealth(uint, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleHealth\")] public static void ReceiveVehicleHealth(uint instanceID, ushort newHealth) Parameters instanceID uint newHealth ushort ReceiveVehicleHorn(uint) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleHorn\")] public static void ReceiveVehicleHorn(uint instanceID) Parameters instanceID uint ReceiveVehicleHornRequest(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 10, legacyName = \"askVehicleHorn\")] public static void ReceiveVehicleHornRequest(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveVehicleLockRequest(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 4, legacyName = \"askVehicleLock\")] public static void ReceiveVehicleLockRequest(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveVehicleLockState(uint, CSteamID, CSteamID, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleLock\")] public static void ReceiveVehicleLockState(uint instanceID, CSteamID owner, CSteamID group, bool locked) Parameters instanceID uint owner CSteamID group CSteamID locked bool ReceiveVehicleRecov(uint, Vector3, int) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleRecov\")] public static void ReceiveVehicleRecov(uint instanceID, Vector3 newPosition, int newRecov) Parameters instanceID uint newPosition Vector3 newRecov int ReceiveVehicleSirens(uint, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleSirens\")] public static void ReceiveVehicleSirens(uint instanceID, bool on) Parameters instanceID uint on bool ReceiveVehicleSkin(uint, ushort, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleSkin\")] public static void ReceiveVehicleSkin(uint instanceID, ushort skinID, ushort mythicID) Parameters instanceID uint skinID ushort mythicID ushort ReceiveVehicleSkinRequest(in ServerInvocationContext) [SteamCall(ESteamCallValidation.SERVERSIDE, ratelimitHz = 2, legacyName = \"askVehicleSkin\")] public static void ReceiveVehicleSkinRequest(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveVehicleStates(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveVehicleStates(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleTireAliveMask(uint, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellVehicleTireAliveMask\")] public static void ReceiveVehicleTireAliveMask(uint instanceID, byte newTireAliveMask) Parameters instanceID uint newTireAliveMask byte ServerForcePassengerIntoVehicle(Player, InteractableVehicle) Does as few tests as possible while maintaining base game expectations. public static bool ServerForcePassengerIntoVehicle(Player player, InteractableVehicle vehicle) Parameters player Player vehicle InteractableVehicle Returns bool ServerSetVehicleLock(InteractableVehicle, CSteamID, CSteamID, bool) public static void ServerSetVehicleLock(InteractableVehicle vehicle, CSteamID ownerID, CSteamID groupID, bool isLocked) Parameters vehicle InteractableVehicle ownerID CSteamID groupID CSteamID isLocked bool SpawnVehicleV3(VehicleAsset, ushort, ushort, float, Vector3, Quaternion, bool, bool, bool, bool, ushort, ushort, ushort, CSteamID, CSteamID, bool, byte[][], byte) For backwards compatibility. This older method spawns a vehicle with a random paint color. (set paintColor to zero for a random paint color) public static InteractableVehicle SpawnVehicleV3(VehicleAsset asset, ushort skinID, ushort mythicID, float roadPosition, Vector3 point, Quaternion angle, bool sirens, bool blimp, bool headlights, bool taillights, ushort fuel, ushort health, ushort batteryCharge, CSteamID owner, CSteamID group, bool locked, byte[][] turrets, byte tireAliveMask) Parameters asset VehicleAsset skinID ushort mythicID ushort roadPosition float point Vector3 angle Quaternion sirens bool blimp bool headlights bool taillights bool fuel ushort health ushort batteryCharge ushort zero spawns without a battery, ushort.MaxValue indicates the battery should be randomly spawned according to asset configuration, other values force a battery to spawn. owner CSteamID group CSteamID locked bool turrets byte[][] tireAliveMask byte Returns InteractableVehicle SpawnVehicleV3(VehicleAsset, ushort, ushort, float, Vector3, Quaternion, bool, bool, bool, bool, ushort, ushort, ushort, CSteamID, CSteamID, bool, byte[][], byte, Color32) Added so that garage plugins do not need to invoke RPC manually. public static InteractableVehicle SpawnVehicleV3(VehicleAsset asset, ushort skinID, ushort mythicID, float roadPosition, Vector3 point, Quaternion angle, bool sirens, bool blimp, bool headlights, bool taillights, ushort fuel, ushort health, ushort batteryCharge, CSteamID owner, CSteamID group, bool locked, byte[][] turrets, byte tireAliveMask, Color32 paintColor) Parameters asset VehicleAsset skinID ushort mythicID ushort roadPosition float point Vector3 angle Quaternion sirens bool blimp bool headlights bool taillights bool fuel ushort health ushort batteryCharge ushort zero spawns without a battery, ushort.MaxValue indicates the battery should be randomly spawned according to asset configuration, other values force a battery to spawn. owner CSteamID group CSteamID locked bool turrets byte[][] tireAliveMask byte paintColor Color32 Returns InteractableVehicle askEnterVehicle(CSteamID, uint, byte[], byte) [Obsolete] public void askEnterVehicle(CSteamID steamID, uint instanceID, byte[] hash, byte engine) Parameters steamID CSteamID instanceID uint hash byte[] engine byte askExitVehicle(CSteamID, Vector3) [Obsolete] public void askExitVehicle(CSteamID steamID, Vector3 velocity) Parameters steamID CSteamID velocity Vector3 askSwapVehicle(CSteamID, byte) [Obsolete] public void askSwapVehicle(CSteamID steamID, byte toSeat) Parameters steamID CSteamID toSeat byte askVehicleBonus(CSteamID, byte) [Obsolete] public void askVehicleBonus(CSteamID steamID, byte bonusType) Parameters steamID CSteamID bonusType byte askVehicleDestroy(InteractableVehicle) public static void askVehicleDestroy(InteractableVehicle vehicle) Parameters vehicle InteractableVehicle askVehicleDestroyAll() public static void askVehicleDestroyAll() askVehicleHeadlights(CSteamID, bool) [Obsolete] public void askVehicleHeadlights(CSteamID steamID, bool wantsHeadlightsOn) Parameters steamID CSteamID wantsHeadlightsOn bool askVehicleHorn(CSteamID) [Obsolete] public void askVehicleHorn(CSteamID steamID) Parameters steamID CSteamID askVehicleLock(CSteamID) [Obsolete] public void askVehicleLock(CSteamID steamID) Parameters steamID CSteamID askVehicleSkin(CSteamID) [Obsolete] public void askVehicleSkin(CSteamID steamID) Parameters steamID CSteamID askVehicleStealBattery(CSteamID) [Obsolete] public void askVehicleStealBattery(CSteamID steamID) Parameters steamID CSteamID askVehicles(CSteamID) [Obsolete] public void askVehicles(CSteamID steamID) Parameters steamID CSteamID carjackVehicle(InteractableVehicle, Player, Vector3, Vector3) public static void carjackVehicle(InteractableVehicle vehicle, Player instigatingPlayer, Vector3 force, Vector3 torque) Parameters vehicle InteractableVehicle instigatingPlayer Player force Vector3 torque Vector3 damage(InteractableVehicle, float, float, bool, CSteamID, EDamageOrigin) public static void damage(InteractableVehicle vehicle, float damage, float times, bool canRepair, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters vehicle InteractableVehicle damage float times float canRepair bool instigatorSteamID CSteamID damageOrigin EDamageOrigin damageTire(InteractableVehicle, int, CSteamID, EDamageOrigin) public static void damageTire(InteractableVehicle vehicle, int tireIndex, CSteamID instigatorSteamID = null, EDamageOrigin damageOrigin = EDamageOrigin.Unknown) Parameters vehicle InteractableVehicle tireIndex int instigatorSteamID CSteamID damageOrigin EDamageOrigin enterVehicle(InteractableVehicle) public static void enterVehicle(InteractableVehicle vehicle) Parameters vehicle InteractableVehicle exitVehicle() public static void exitVehicle() findVehicleByNetInstanceID(uint) Find vehicle with matching replicated instance ID. public static InteractableVehicle findVehicleByNetInstanceID(uint instanceID) Parameters instanceID uint Returns InteractableVehicle forceRemovePlayer(InteractableVehicle, CSteamID) public static void forceRemovePlayer(InteractableVehicle vehicle, CSteamID player) Parameters vehicle InteractableVehicle player CSteamID forceRemovePlayer(CSteamID) Force remove player from vehicle they were in, if any. Called when player disconnects to tidy up and run callbacks. public static bool forceRemovePlayer(CSteamID player) Parameters player CSteamID Returns bool True if player was in a vehicle, false otherwise. getVehicle(uint) public static InteractableVehicle getVehicle(uint instanceID) Parameters instanceID uint Returns InteractableVehicle getVehicleRandomTireAliveMask(VehicleAsset) public static byte getVehicleRandomTireAliveMask(VehicleAsset asset) Parameters asset VehicleAsset Returns byte getVehiclesInRadius(Vector3, float, List<InteractableVehicle>) public static void getVehiclesInRadius(Vector3 center, float sqrRadius, List<InteractableVehicle> result) Parameters center Vector3 sqrRadius float result List<InteractableVehicle> load() public static void load() removePlayerTeleportUnsafe(InteractableVehicle, Player, Vector3, float) Remove player from vehicle and teleport them to an unchecked destination. public static bool removePlayerTeleportUnsafe(InteractableVehicle vehicle, Player player, Vector3 position, float yaw) Parameters vehicle InteractableVehicle player Player position Vector3 yaw float Returns bool repair(InteractableVehicle, float, float) public static void repair(InteractableVehicle vehicle, float damage, float times) Parameters vehicle InteractableVehicle damage float times float repair(InteractableVehicle, float, float, CSteamID) public static void repair(InteractableVehicle vehicle, float damage, float times, CSteamID instigatorSteamID = null) Parameters vehicle InteractableVehicle damage float times float instigatorSteamID CSteamID save() public static void save() sendExitVehicle(InteractableVehicle, byte, Vector3, byte, bool) public static void sendExitVehicle(InteractableVehicle vehicle, byte seat, Vector3 point, byte angle, bool forceUpdate) Parameters vehicle InteractableVehicle seat byte point Vector3 angle byte forceUpdate bool sendVehicle(InteractableVehicle) [Obsolete] public void sendVehicle(InteractableVehicle vehicle) Parameters vehicle InteractableVehicle sendVehicleBatteryCharge(InteractableVehicle, ushort) public static void sendVehicleBatteryCharge(InteractableVehicle vehicle, ushort newBatteryCharge) Parameters vehicle InteractableVehicle newBatteryCharge ushort sendVehicleBonus() As client request server to use bonus feature like towing hook or police sirens. public static void sendVehicleBonus() sendVehicleExploded(InteractableVehicle) public static void sendVehicleExploded(InteractableVehicle vehicle) Parameters vehicle InteractableVehicle sendVehicleFuel(InteractableVehicle, ushort) public static void sendVehicleFuel(InteractableVehicle vehicle, ushort newFuel) Parameters vehicle InteractableVehicle newFuel ushort sendVehicleHeadlights() Client-side request server to toggle headlights. public static void sendVehicleHeadlights() sendVehicleHealth(InteractableVehicle, ushort) public static void sendVehicleHealth(InteractableVehicle vehicle, ushort newHealth) Parameters vehicle InteractableVehicle newHealth ushort sendVehicleHorn() public static void sendVehicleHorn() sendVehicleLock() public static void sendVehicleLock() sendVehicleRecov(InteractableVehicle, Vector3, int) public static void sendVehicleRecov(InteractableVehicle vehicle, Vector3 newPosition, int newRecov) Parameters vehicle InteractableVehicle newPosition Vector3 newRecov int sendVehicleSkin() public static void sendVehicleSkin() sendVehicleStealBattery() public static void sendVehicleStealBattery() sendVehicleTireAliveMask(InteractableVehicle, byte) public static void sendVehicleTireAliveMask(InteractableVehicle vehicle, byte newTireAliveMask) Parameters vehicle InteractableVehicle newTireAliveMask byte siphonFromVehicle(InteractableVehicle, Player, ushort) public static ushort siphonFromVehicle(InteractableVehicle vehicle, Player instigatingPlayer, ushort desiredAmount) Parameters vehicle InteractableVehicle instigatingPlayer Player desiredAmount ushort Returns ushort spawnLockedVehicleForPlayer(ushort, Vector3, Quaternion, Player) [Obsolete(\"spawnLockedVehicleForPlayerV2 returns the spawned instance\")] public static void spawnLockedVehicleForPlayer(ushort id, Vector3 point, Quaternion angle, Player player) Parameters id ushort point Vector3 angle Quaternion player Player spawnLockedVehicleForPlayerV2(Asset, Vector3, Quaternion, Player) Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public static InteractableVehicle spawnLockedVehicleForPlayerV2(Asset asset, Vector3 point, Quaternion angle, Player player) Parameters asset Asset point Vector3 angle Quaternion player Player Returns InteractableVehicle spawnLockedVehicleForPlayerV2(Asset, Vector3, Quaternion, Player, Color32?) Supports redirects by VehicleRedirectorAsset. If paintColor is set that takes priority, otherwise if redirector's SpawnPaintColor is set, that color is used, public static InteractableVehicle spawnLockedVehicleForPlayerV2(Asset asset, Vector3 point, Quaternion angle, Player player, Color32? paintColor) Parameters asset Asset point Vector3 angle Quaternion player Player paintColor Color32? Returns InteractableVehicle spawnLockedVehicleForPlayerV2(ushort, Vector3, Quaternion, Player) Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public static InteractableVehicle spawnLockedVehicleForPlayerV2(ushort id, Vector3 point, Quaternion angle, Player player) Parameters id ushort point Vector3 angle Quaternion player Player Returns InteractableVehicle spawnLockedVehicleForPlayerV2(ushort, Vector3, Quaternion, Player, Color32?) Supports redirects by VehicleRedirectorAsset. If paintColor is set that takes priority, otherwise if redirector's SpawnPaintColor is set, that color is used, public static InteractableVehicle spawnLockedVehicleForPlayerV2(ushort id, Vector3 point, Quaternion angle, Player player, Color32? paintColor) Parameters id ushort point Vector3 angle Quaternion player Player paintColor Color32? Returns InteractableVehicle spawnVehicle(ushort, Vector3, Quaternion) [Obsolete(\"spawnVehicleV2 returns the spawned instance\")] public static void spawnVehicle(ushort id, Vector3 point, Quaternion angle) Parameters id ushort point Vector3 angle Quaternion spawnVehicleV2(Asset, Vector3, Quaternion) Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public static InteractableVehicle spawnVehicleV2(Asset asset, Vector3 point, Quaternion angle) Parameters asset Asset point Vector3 angle Quaternion Returns InteractableVehicle spawnVehicleV2(Asset, Vector3, Quaternion, Color32?) Supports redirects by VehicleRedirectorAsset. If paintColor is set that takes priority, otherwise if redirector's SpawnPaintColor is set, that color is used, public static InteractableVehicle spawnVehicleV2(Asset asset, Vector3 point, Quaternion angle, Color32? paintColor) Parameters asset Asset point Vector3 angle Quaternion paintColor Color32? Returns InteractableVehicle spawnVehicleV2(ushort, Vector3, Quaternion) Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public static InteractableVehicle spawnVehicleV2(ushort id, Vector3 point, Quaternion angle) Parameters id ushort point Vector3 angle Quaternion Returns InteractableVehicle spawnVehicleV2(ushort, Vector3, Quaternion, Color32?) Supports redirects by VehicleRedirectorAsset. If paintColor is set that takes priority, otherwise if redirector's SpawnPaintColor is set, that color is used, public static InteractableVehicle spawnVehicleV2(ushort id, Vector3 point, Quaternion angle, Color32? paintColor) Parameters id ushort point Vector3 angle Quaternion paintColor Color32? Returns InteractableVehicle swapVehicle(byte) public static void swapVehicle(byte toSeat) Parameters toSeat byte tellEnterVehicle(CSteamID, uint, byte, CSteamID) [Obsolete] public void tellEnterVehicle(CSteamID steamID, uint instanceID, byte seat, CSteamID player) Parameters steamID CSteamID instanceID uint seat byte player CSteamID tellExitVehicle(CSteamID, uint, byte, Vector3, byte, bool) [Obsolete] public void tellExitVehicle(CSteamID steamID, uint instanceID, byte seat, Vector3 point, byte angle, bool forceUpdate) Parameters steamID CSteamID instanceID uint seat byte point Vector3 angle byte forceUpdate bool tellSwapVehicle(CSteamID, uint, byte, byte) [Obsolete] public void tellSwapVehicle(CSteamID steamID, uint instanceID, byte fromSeat, byte toSeat) Parameters steamID CSteamID instanceID uint fromSeat byte toSeat byte tellVehicle(CSteamID) [Obsolete] public void tellVehicle(CSteamID steamID) Parameters steamID CSteamID tellVehicleBatteryCharge(CSteamID, uint, ushort) [Obsolete] public void tellVehicleBatteryCharge(CSteamID steamID, uint instanceID, ushort newBatteryCharge) Parameters steamID CSteamID instanceID uint newBatteryCharge ushort tellVehicleBlimp(CSteamID, uint, bool) [Obsolete] public void tellVehicleBlimp(CSteamID steamID, uint instanceID, bool on) Parameters steamID CSteamID instanceID uint on bool tellVehicleDestroy(CSteamID, uint) [Obsolete] public void tellVehicleDestroy(CSteamID steamID, uint instanceID) Parameters steamID CSteamID instanceID uint tellVehicleDestroyAll(CSteamID) [Obsolete] public void tellVehicleDestroyAll(CSteamID steamID) Parameters steamID CSteamID tellVehicleExploded(CSteamID, uint) [Obsolete] public void tellVehicleExploded(CSteamID steamID, uint instanceID) Parameters steamID CSteamID instanceID uint tellVehicleFuel(CSteamID, uint, ushort) [Obsolete] public void tellVehicleFuel(CSteamID steamID, uint instanceID, ushort newFuel) Parameters steamID CSteamID instanceID uint newFuel ushort tellVehicleHeadlights(CSteamID, uint, bool) [Obsolete] public void tellVehicleHeadlights(CSteamID steamID, uint instanceID, bool on) Parameters steamID CSteamID instanceID uint on bool tellVehicleHealth(CSteamID, uint, ushort) [Obsolete] public void tellVehicleHealth(CSteamID steamID, uint instanceID, ushort newHealth) Parameters steamID CSteamID instanceID uint newHealth ushort tellVehicleHorn(CSteamID, uint) [Obsolete] public void tellVehicleHorn(CSteamID steamID, uint instanceID) Parameters steamID CSteamID instanceID uint tellVehicleLock(CSteamID, uint, CSteamID, CSteamID, bool) [Obsolete] public void tellVehicleLock(CSteamID steamID, uint instanceID, CSteamID owner, CSteamID group, bool locked) Parameters steamID CSteamID instanceID uint owner CSteamID group CSteamID locked bool tellVehicleRecov(CSteamID, uint, Vector3, int) [Obsolete] public void tellVehicleRecov(CSteamID steamID, uint instanceID, Vector3 newPosition, int newRecov) Parameters steamID CSteamID instanceID uint newPosition Vector3 newRecov int tellVehicleSirens(CSteamID, uint, bool) [Obsolete] public void tellVehicleSirens(CSteamID steamID, uint instanceID, bool on) Parameters steamID CSteamID instanceID uint on bool tellVehicleSkin(CSteamID, uint, ushort, ushort) [Obsolete] public void tellVehicleSkin(CSteamID steamID, uint instanceID, ushort skinID, ushort mythicID) Parameters steamID CSteamID instanceID uint skinID ushort mythicID ushort tellVehicleStates(CSteamID) [Obsolete] public void tellVehicleStates(CSteamID steamID) Parameters steamID CSteamID tellVehicleTireAliveMask(CSteamID, uint, byte) [Obsolete] public void tellVehicleTireAliveMask(CSteamID steamID, uint instanceID, byte newTireAliveMask) Parameters steamID CSteamID instanceID uint newTireAliveMask byte tellVehicles(CSteamID) [Obsolete] public void tellVehicles(CSteamID steamID) Parameters steamID CSteamID unlockVehicle(InteractableVehicle, Player) public static void unlockVehicle(InteractableVehicle vehicle, Player instigatingPlayer) Parameters vehicle InteractableVehicle instigatingPlayer Player Events OnPreDestroyVehicle Invoked immediately before Destroy vehicle. public static event Action<InteractableVehicle> OnPreDestroyVehicle Event Type Action<InteractableVehicle> OnToggleVehicleLockRequested public static event VehicleManager.ToggleVehicleLockRequested OnToggleVehicleLockRequested Event Type VehicleManager.ToggleVehicleLockRequested OnToggledVehicleLock public static event Action<InteractableVehicle> OnToggledVehicleLock Event Type Action<InteractableVehicle> onEnterVehicleRequested public static event VehicleManager.EnterVehicleRequestHandler onEnterVehicleRequested Event Type VehicleManager.EnterVehicleRequestHandler onExitVehicleRequested public static event VehicleManager.ExitVehicleRequestHandler onExitVehicleRequested Event Type VehicleManager.ExitVehicleRequestHandler onSwapSeatRequested public static event VehicleManager.SwapSeatRequestHandler onSwapSeatRequested Event Type VehicleManager.SwapSeatRequestHandler"
  },
  "api/SDG.Unturned.VehicleManager_NetMethods.html": {
    "href": "api/SDG.Unturned.VehicleManager_NetMethods.html",
    "title": "Class VehicleManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class VehicleManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(VehicleManager))] public static class VehicleManager_NetMethods Inheritance object VehicleManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveDestroyAllVehicles_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDestroyAllVehicles\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDestroyAllVehicles_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDestroyAllVehicles_Write(NetPakWriter) [NetInvokableGeneratedMethod(\"ReceiveDestroyAllVehicles\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDestroyAllVehicles_Write(NetPakWriter writer) Parameters writer NetPakWriter ReceiveDestroySingleVehicle_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveDestroySingleVehicle\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveDestroySingleVehicle_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveDestroySingleVehicle_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveDestroySingleVehicle\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveDestroySingleVehicle_Write(NetPakWriter writer, uint instanceID) Parameters writer NetPakWriter instanceID uint ReceiveEnterVehicleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEnterVehicleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEnterVehicleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveEnterVehicleRequest_Write(NetPakWriter, uint, byte[], byte[], byte) [NetInvokableGeneratedMethod(\"ReceiveEnterVehicleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEnterVehicleRequest_Write(NetPakWriter writer, uint instanceID, byte[] hash, byte[] physicsProfileHash, byte engine) Parameters writer NetPakWriter instanceID uint hash byte[] physicsProfileHash byte[] engine byte ReceiveEnterVehicle_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveEnterVehicle\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveEnterVehicle_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveEnterVehicle_Write(NetPakWriter, uint, byte, CSteamID) [NetInvokableGeneratedMethod(\"ReceiveEnterVehicle\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveEnterVehicle_Write(NetPakWriter writer, uint instanceID, byte seat, CSteamID player) Parameters writer NetPakWriter instanceID uint seat byte player CSteamID ReceiveExitVehicleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveExitVehicleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveExitVehicleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveExitVehicleRequest_Write(NetPakWriter, Vector3) [NetInvokableGeneratedMethod(\"ReceiveExitVehicleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveExitVehicleRequest_Write(NetPakWriter writer, Vector3 velocity) Parameters writer NetPakWriter velocity Vector3 ReceiveExitVehicle_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveExitVehicle\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveExitVehicle_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveExitVehicle_Write(NetPakWriter, uint, byte, Vector3, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveExitVehicle\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveExitVehicle_Write(NetPakWriter writer, uint instanceID, byte seat, Vector3 point, byte angle, bool forceUpdate) Parameters writer NetPakWriter instanceID uint seat byte point Vector3 angle byte forceUpdate bool ReceiveSwapVehicleRequest_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapVehicleRequest\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapVehicleRequest_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveSwapVehicleRequest_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapVehicleRequest\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapVehicleRequest_Write(NetPakWriter writer, byte toSeat) Parameters writer NetPakWriter toSeat byte ReceiveSwapVehicleSeats_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveSwapVehicleSeats\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveSwapVehicleSeats_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveSwapVehicleSeats_Write(NetPakWriter, uint, byte, byte) [NetInvokableGeneratedMethod(\"ReceiveSwapVehicleSeats\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveSwapVehicleSeats_Write(NetPakWriter writer, uint instanceID, byte fromSeat, byte toSeat) Parameters writer NetPakWriter instanceID uint fromSeat byte toSeat byte ReceiveToggleVehicleHeadlights_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveToggleVehicleHeadlights\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveToggleVehicleHeadlights_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveToggleVehicleHeadlights_Write(NetPakWriter, bool) [NetInvokableGeneratedMethod(\"ReceiveToggleVehicleHeadlights\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveToggleVehicleHeadlights_Write(NetPakWriter writer, bool wantsHeadlightsOn) Parameters writer NetPakWriter wantsHeadlightsOn bool ReceiveUseVehicleBonus_Read(in ServerInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveUseVehicleBonus\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveUseVehicleBonus_Read(in ServerInvocationContext context) Parameters context ServerInvocationContext ReceiveUseVehicleBonus_Write(NetPakWriter, byte) [NetInvokableGeneratedMethod(\"ReceiveUseVehicleBonus\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveUseVehicleBonus_Write(NetPakWriter writer, byte bonusType) Parameters writer NetPakWriter bonusType byte ReceiveVehicleBatteryCharge_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleBatteryCharge\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleBatteryCharge_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleBatteryCharge_Write(NetPakWriter, uint, ushort) [NetInvokableGeneratedMethod(\"ReceiveVehicleBatteryCharge\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleBatteryCharge_Write(NetPakWriter writer, uint instanceID, ushort newBatteryCharge) Parameters writer NetPakWriter instanceID uint newBatteryCharge ushort ReceiveVehicleBlimp_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleBlimp\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleBlimp_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleBlimp_Write(NetPakWriter, uint, bool) [NetInvokableGeneratedMethod(\"ReceiveVehicleBlimp\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleBlimp_Write(NetPakWriter writer, uint instanceID, bool on) Parameters writer NetPakWriter instanceID uint on bool ReceiveVehicleExploded_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleExploded\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleExploded_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleExploded_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveVehicleExploded\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleExploded_Write(NetPakWriter writer, uint instanceID) Parameters writer NetPakWriter instanceID uint ReceiveVehicleFuel_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleFuel\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleFuel_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleFuel_Write(NetPakWriter, uint, ushort) [NetInvokableGeneratedMethod(\"ReceiveVehicleFuel\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleFuel_Write(NetPakWriter writer, uint instanceID, ushort newFuel) Parameters writer NetPakWriter instanceID uint newFuel ushort ReceiveVehicleHeadlights_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleHeadlights\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleHeadlights_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleHeadlights_Write(NetPakWriter, uint, bool) [NetInvokableGeneratedMethod(\"ReceiveVehicleHeadlights\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleHeadlights_Write(NetPakWriter writer, uint instanceID, bool on) Parameters writer NetPakWriter instanceID uint on bool ReceiveVehicleHealth_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleHealth\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleHealth_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleHealth_Write(NetPakWriter, uint, ushort) [NetInvokableGeneratedMethod(\"ReceiveVehicleHealth\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleHealth_Write(NetPakWriter writer, uint instanceID, ushort newHealth) Parameters writer NetPakWriter instanceID uint newHealth ushort ReceiveVehicleHorn_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleHorn\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleHorn_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleHorn_Write(NetPakWriter, uint) [NetInvokableGeneratedMethod(\"ReceiveVehicleHorn\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleHorn_Write(NetPakWriter writer, uint instanceID) Parameters writer NetPakWriter instanceID uint ReceiveVehicleLockState_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleLockState\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleLockState_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleLockState_Write(NetPakWriter, uint, CSteamID, CSteamID, bool) [NetInvokableGeneratedMethod(\"ReceiveVehicleLockState\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleLockState_Write(NetPakWriter writer, uint instanceID, CSteamID owner, CSteamID group, bool locked) Parameters writer NetPakWriter instanceID uint owner CSteamID group CSteamID locked bool ReceiveVehicleRecov_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleRecov\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleRecov_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleRecov_Write(NetPakWriter, uint, Vector3, int) [NetInvokableGeneratedMethod(\"ReceiveVehicleRecov\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleRecov_Write(NetPakWriter writer, uint instanceID, Vector3 newPosition, int newRecov) Parameters writer NetPakWriter instanceID uint newPosition Vector3 newRecov int ReceiveVehicleSirens_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleSirens\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleSirens_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleSirens_Write(NetPakWriter, uint, bool) [NetInvokableGeneratedMethod(\"ReceiveVehicleSirens\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleSirens_Write(NetPakWriter writer, uint instanceID, bool on) Parameters writer NetPakWriter instanceID uint on bool ReceiveVehicleSkin_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleSkin\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleSkin_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleSkin_Write(NetPakWriter, uint, ushort, ushort) [NetInvokableGeneratedMethod(\"ReceiveVehicleSkin\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleSkin_Write(NetPakWriter writer, uint instanceID, ushort skinID, ushort mythicID) Parameters writer NetPakWriter instanceID uint skinID ushort mythicID ushort ReceiveVehicleTireAliveMask_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveVehicleTireAliveMask\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveVehicleTireAliveMask_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveVehicleTireAliveMask_Write(NetPakWriter, uint, byte) [NetInvokableGeneratedMethod(\"ReceiveVehicleTireAliveMask\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveVehicleTireAliveMask_Write(NetPakWriter writer, uint instanceID, byte newTireAliveMask) Parameters writer NetPakWriter instanceID uint newTireAliveMask byte"
  },
  "api/SDG.Unturned.VehiclePassengersUpdated.html": {
    "href": "api/SDG.Unturned.VehiclePassengersUpdated.html",
    "title": "Delegate VehiclePassengersUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VehiclePassengersUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehiclePassengersUpdated() Constructors VehiclePassengersUpdated(object, IntPtr) public VehiclePassengersUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehiclePhysicsProfileAsset.EDriveModel.html": {
    "href": "api/SDG.Unturned.VehiclePhysicsProfileAsset.EDriveModel.html",
    "title": "Enum VehiclePhysicsProfileAsset.EDriveModel | Unturned Analyse Doc",
    "keywords": "Enum VehiclePhysicsProfileAsset.EDriveModel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum VehiclePhysicsProfileAsset.EDriveModel Fields All = 2 Front = 0 Rear = 1"
  },
  "api/SDG.Unturned.VehiclePhysicsProfileAsset.Friction.html": {
    "href": "api/SDG.Unturned.VehiclePhysicsProfileAsset.Friction.html",
    "title": "Struct VehiclePhysicsProfileAsset.Friction | Unturned Analyse Doc",
    "keywords": "Struct VehiclePhysicsProfileAsset.Friction Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct VehiclePhysicsProfileAsset.Friction Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields asymptoteSlip public float asymptoteSlip Field Value float asymptoteValue public float asymptoteValue Field Value float extremumSlip public float extremumSlip Field Value float extremumValue public float extremumValue Field Value float stiffness public float stiffness Field Value float Methods applyTo(ref WheelFrictionCurve) public void applyTo(ref WheelFrictionCurve frictionCurve) Parameters frictionCurve WheelFrictionCurve"
  },
  "api/SDG.Unturned.VehiclePhysicsProfileAsset.html": {
    "href": "api/SDG.Unturned.VehiclePhysicsProfileAsset.html",
    "title": "Class VehiclePhysicsProfileAsset | Unturned Analyse Doc",
    "keywords": "Class VehiclePhysicsProfileAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Overrides vehicle physics values in bulk without building asset bundles. public class VehiclePhysicsProfileAsset : Asset, IAssetErrorContext Inheritance object Asset VehiclePhysicsProfileAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehiclePhysicsProfileAsset() public VehiclePhysicsProfileAsset() Fields defaultProfile_Boat public static AssetReference<VehiclePhysicsProfileAsset> defaultProfile_Boat Field Value AssetReference<VehiclePhysicsProfileAsset> defaultProfile_Car public static AssetReference<VehiclePhysicsProfileAsset> defaultProfile_Car Field Value AssetReference<VehiclePhysicsProfileAsset> defaultProfile_Helicopter public static AssetReference<VehiclePhysicsProfileAsset> defaultProfile_Helicopter Field Value AssetReference<VehiclePhysicsProfileAsset> defaultProfile_Plane public static AssetReference<VehiclePhysicsProfileAsset> defaultProfile_Plane Field Value AssetReference<VehiclePhysicsProfileAsset> Properties brakeTorqueMultiplier public float? brakeTorqueMultiplier { get; protected set; } Property Value float? brakeTorqueTractionMultiplier public float? brakeTorqueTractionMultiplier { get; protected set; } Property Value float? carjackForceMultiplier public float? carjackForceMultiplier { get; protected set; } Property Value float? forwardFriction public VehiclePhysicsProfileAsset.Friction? forwardFriction { get; protected set; } Property Value VehiclePhysicsProfileAsset.Friction? motorTorqueClampMultiplier public float? motorTorqueClampMultiplier { get; protected set; } Property Value float? motorTorqueMultiplier public float? motorTorqueMultiplier { get; protected set; } Property Value float? rootAngularDragMultiplier public float? rootAngularDragMultiplier { get; protected set; } Property Value float? rootDragMultiplier public float? rootDragMultiplier { get; protected set; } Property Value float? rootMassMultiplier public float? rootMassMultiplier { get; protected set; } Property Value float? rootMassOverride public float? rootMassOverride { get; protected set; } Property Value float? sidewaysFriction public VehiclePhysicsProfileAsset.Friction? sidewaysFriction { get; protected set; } Property Value VehiclePhysicsProfileAsset.Friction? wheelBrakeModel public VehiclePhysicsProfileAsset.EDriveModel? wheelBrakeModel { get; protected set; } Property Value VehiclePhysicsProfileAsset.EDriveModel? wheelDampingRate public float? wheelDampingRate { get; protected set; } Property Value float? wheelDriveModel public VehiclePhysicsProfileAsset.EDriveModel? wheelDriveModel { get; protected set; } Property Value VehiclePhysicsProfileAsset.EDriveModel? wheelMassMultiplier public float? wheelMassMultiplier { get; protected set; } Property Value float? wheelMassOverride public float? wheelMassOverride { get; protected set; } Property Value float? wheelStiffnessTractionMultiplier public float? wheelStiffnessTractionMultiplier { get; protected set; } Property Value float? wheelSuspensionDamper public float? wheelSuspensionDamper { get; protected set; } Property Value float? wheelSuspensionForce public float? wheelSuspensionForce { get; protected set; } Property Value float? Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local applyTo(InteractableVehicle) public void applyTo(InteractableVehicle vehicle) Parameters vehicle InteractableVehicle readFriction(DatDictionary, string) protected VehiclePhysicsProfileAsset.Friction? readFriction(DatDictionary data, string key) Parameters data DatDictionary key string Returns VehiclePhysicsProfileAsset.Friction?"
  },
  "api/SDG.Unturned.VehicleRedirectorAsset.html": {
    "href": "api/SDG.Unturned.VehicleRedirectorAsset.html",
    "title": "Class VehicleRedirectorAsset | Unturned Analyse Doc",
    "keywords": "Class VehicleRedirectorAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll When loaded or spawned as a vehicle, creates a different vehicle instead. For example, Off_Roader_Orange has ID 4. When that ID is loaded/spawned the new combined Off_Roader vehicle is used instead. Can also optionally apply a paint color, allowing saves to be converted without losing colors. public class VehicleRedirectorAsset : Asset, IAssetErrorContext Inheritance object Asset VehicleRedirectorAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleRedirectorAsset() public VehicleRedirectorAsset() Properties LoadPaintColor If set, overrides the default random paint color when loading a vehicle from a save file. Used to preserve colors of vehicles in existing saves. public Color32? LoadPaintColor { get; protected set; } Property Value Color32? SpawnPaintColor If set, overrides the default random paint color when spawning a new vehicle. Optionally used to preserve colors of vehicles in spawn tables. public Color32? SpawnPaintColor { get; protected set; } Property Value Color32? TargetVehicle Vehicle to use when attempting to load or spawn this asset. public AssetReference<VehicleAsset> TargetVehicle { get; protected set; } Property Value AssetReference<VehicleAsset> assetCategory Redirectors are in the Vehicle category so that legacy vehicle IDs point at the redirector. public override EAssetType assetCategory { get; } Property Value EAssetType Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.VehicleRef.html": {
    "href": "api/SDG.Unturned.VehicleRef.html",
    "title": "Class VehicleRef | Unturned Analyse Doc",
    "keywords": "Class VehicleRef Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleRef : MonoBehaviour Inheritance object VehicleRef Constructors VehicleRef() public VehicleRef() Fields vehicle public InteractableVehicle vehicle Field Value InteractableVehicle"
  },
  "api/SDG.Unturned.VehicleSirensUpdated.html": {
    "href": "api/SDG.Unturned.VehicleSirensUpdated.html",
    "title": "Delegate VehicleSirensUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VehicleSirensUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleSirensUpdated() Constructors VehicleSirensUpdated(object, IntPtr) public VehicleSirensUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehicleSkinChangedHandler.html": {
    "href": "api/SDG.Unturned.VehicleSkinChangedHandler.html",
    "title": "Delegate VehicleSkinChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate VehicleSkinChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleSkinChangedHandler() Constructors VehicleSkinChangedHandler(object, IntPtr) public VehicleSkinChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehicleSpawn.html": {
    "href": "api/SDG.Unturned.VehicleSpawn.html",
    "title": "Class VehicleSpawn | Unturned Analyse Doc",
    "keywords": "Class VehicleSpawn Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleSpawn Inheritance object VehicleSpawn Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleSpawn(ushort) public VehicleSpawn(ushort newVehicle) Parameters newVehicle ushort Properties vehicle public ushort vehicle { get; } Property Value ushort"
  },
  "api/SDG.Unturned.VehicleSpawnpoint.html": {
    "href": "api/SDG.Unturned.VehicleSpawnpoint.html",
    "title": "Class VehicleSpawnpoint | Unturned Analyse Doc",
    "keywords": "Class VehicleSpawnpoint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleSpawnpoint Inheritance object VehicleSpawnpoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleSpawnpoint(byte, Vector3, float) public VehicleSpawnpoint(byte newType, Vector3 newPoint, float newAngle) Parameters newType byte newPoint Vector3 newAngle float Fields type public byte type Field Value byte Properties angle public float angle { get; } Property Value float node public Transform node { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 Methods setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.VehicleState.html": {
    "href": "api/SDG.Unturned.VehicleState.html",
    "title": "Class VehicleState | Unturned Analyse Doc",
    "keywords": "Class VehicleState Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleState Inheritance object VehicleState Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleState() public VehicleState() Fields angle public Quaternion angle Field Value Quaternion net public float net Field Value float point public Vector3 point Field Value Vector3"
  },
  "api/SDG.Unturned.VehicleStateUpdate.html": {
    "href": "api/SDG.Unturned.VehicleStateUpdate.html",
    "title": "Struct VehicleStateUpdate | Unturned Analyse Doc",
    "keywords": "Struct VehicleStateUpdate Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Obsolete(\"Replaced by MarkForReplicationUpdate. Will be removed in a future release.\")] public struct VehicleStateUpdate Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors VehicleStateUpdate(Vector3, Quaternion) public VehicleStateUpdate(Vector3 pos, Quaternion rot) Parameters pos Vector3 rot Quaternion Fields pos public Vector3 pos Field Value Vector3 rot public Quaternion rot Field Value Quaternion"
  },
  "api/SDG.Unturned.VehicleTable.html": {
    "href": "api/SDG.Unturned.VehicleTable.html",
    "title": "Class VehicleTable | Unturned Analyse Doc",
    "keywords": "Class VehicleTable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleTable Inheritance object VehicleTable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleTable(List<VehicleTier>, Color, string, ushort) public VehicleTable(List<VehicleTier> newTiers, Color newColor, string newName, ushort newTableID) Parameters newTiers List<VehicleTier> newColor Color newName string newTableID ushort VehicleTable(string) public VehicleTable(string newName) Parameters newName string Fields name public string name Field Value string tableID public ushort tableID Field Value ushort Properties color public Color color { get; set; } Property Value Color tiers public List<VehicleTier> tiers { get; } Property Value List<VehicleTier> Methods GetRandomAsset() Resolve spawn table asset if set, otherwise find asset by legacy in-editor ID configuration. Returned asset is not necessarily a vehicle asset yet: It can also be a VehicleRedirectorAsset which the vehicle spawner requires to properly set paint color. public Asset GetRandomAsset() Returns Asset addTier(string) public void addTier(string name) Parameters name string addVehicle(byte, ushort) public void addVehicle(byte tierIndex, ushort id) Parameters tierIndex byte id ushort buildTable() public void buildTable() getVehicle() [Obsolete(\"GetRandomAsset should be used instead because it properly supports guids in spawn assets.\")] public ushort getVehicle() Returns ushort removeTier(int) public void removeTier(int tierIndex) Parameters tierIndex int removeVehicle(byte, byte) public void removeVehicle(byte tierIndex, byte vehicleIndex) Parameters tierIndex byte vehicleIndex byte updateChance(int, float) public void updateChance(int tierIndex, float chance) Parameters tierIndex int chance float"
  },
  "api/SDG.Unturned.VehicleTaillightsUpdated.html": {
    "href": "api/SDG.Unturned.VehicleTaillightsUpdated.html",
    "title": "Delegate VehicleTaillightsUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VehicleTaillightsUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleTaillightsUpdated() Constructors VehicleTaillightsUpdated(object, IntPtr) public VehicleTaillightsUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object @object) Parameters callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/SDG.Unturned.VehicleTier.html": {
    "href": "api/SDG.Unturned.VehicleTier.html",
    "title": "Class VehicleTier | Unturned Analyse Doc",
    "keywords": "Class VehicleTier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleTier Inheritance object VehicleTier Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehicleTier(List<VehicleSpawn>, string, float) public VehicleTier(List<VehicleSpawn> newTable, string newName, float newChance) Parameters newTable List<VehicleSpawn> newName string newChance float Fields chance public float chance Field Value float name public string name Field Value string Properties table public List<VehicleSpawn> table { get; } Property Value List<VehicleSpawn> Methods addVehicle(ushort) public void addVehicle(ushort id) Parameters id ushort removeVehicle(byte) public void removeVehicle(byte index) Parameters index byte"
  },
  "api/SDG.Unturned.VehicleTool.html": {
    "href": "api/SDG.Unturned.VehicleTool.html",
    "title": "Class VehicleTool | Unturned Analyse Doc",
    "keywords": "Class VehicleTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehicleTool : MonoBehaviour Inheritance object VehicleTool Constructors VehicleTool() public VehicleTool() Methods FindVehicleByGuidAndHandleRedirects(Guid) Handles VehicleRedirectorAsset (if any) and returns actual vehicle asset (if any). public static VehicleAsset FindVehicleByGuidAndHandleRedirects(Guid guid) Parameters guid Guid Returns VehicleAsset FindVehicleByGuidAndHandleRedirectsWithLoadColor(Guid, out Color32) Handles VehicleRedirectorAsset returning load paint color override (if any) and returns actual vehicle asset (if any). public static VehicleAsset FindVehicleByGuidAndHandleRedirectsWithLoadColor(Guid guid, out Color32 paintColor) Parameters guid Guid paintColor Color32 Returns VehicleAsset FindVehicleByGuidAndHandleRedirectsWithSpawnColor(Guid, out Color32) Handles VehicleRedirectorAsset returning spawn paint color override (if any) and returns actual vehicle asset (if any). public static VehicleAsset FindVehicleByGuidAndHandleRedirectsWithSpawnColor(Guid guid, out Color32 paintColor) Parameters guid Guid paintColor Color32 Returns VehicleAsset FindVehicleByLegacyIdAndHandleRedirects(ushort) Handles VehicleRedirectorAsset (if any) and returns actual vehicle asset (if any). public static VehicleAsset FindVehicleByLegacyIdAndHandleRedirects(ushort legacyId) Parameters legacyId ushort Returns VehicleAsset FindVehicleByLegacyIdAndHandleRedirectsWithLoadColor(ushort, out Color32) Handles VehicleRedirectorAsset returning load paint color override (if any) and returns actual vehicle asset (if any). public static VehicleAsset FindVehicleByLegacyIdAndHandleRedirectsWithLoadColor(ushort legacyId, out Color32 paintColor) Parameters legacyId ushort paintColor Color32 Returns VehicleAsset FindVehicleByLegacyIdAndHandleRedirectsWithSpawnColor(ushort, out Color32) Handles VehicleRedirectorAsset returning spawn paint color override (if any) and returns actual vehicle asset (if any). public static VehicleAsset FindVehicleByLegacyIdAndHandleRedirectsWithSpawnColor(ushort legacyId, out Color32 paintColor) Parameters legacyId ushort paintColor Color32 Returns VehicleAsset HandleRedirects(Asset) Handles VehicleRedirectorAsset (if any) and returns actual vehicle asset (if any). public static VehicleAsset HandleRedirects(Asset asset) Parameters asset Asset Returns VehicleAsset HandleRedirectsWithLoadColor(Asset, out Color32) Handles VehicleRedirectorAsset returning load paint color override (if any) and returns actual vehicle asset (if any). public static VehicleAsset HandleRedirectsWithLoadColor(Asset asset, out Color32 paintColor) Parameters asset Asset paintColor Color32 Returns VehicleAsset HandleRedirectsWithSpawnColor(Asset, out Color32) Handles VehicleRedirectorAsset returning spawn paint color override (if any) and returns actual vehicle asset (if any). public static VehicleAsset HandleRedirectsWithSpawnColor(Asset asset, out Color32 paintColor) Parameters asset Asset paintColor Color32 Returns VehicleAsset SpawnVehicleForPlayer(Player, Asset) Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public static InteractableVehicle SpawnVehicleForPlayer(Player player, Asset asset) Parameters player Player asset Asset Returns InteractableVehicle getIcon(ushort, ushort, VehicleAsset, SkinAsset, int, int, bool, VehicleIconReady) public static void getIcon(ushort id, ushort skin, VehicleAsset vehicleAsset, SkinAsset skinAsset, int x, int y, bool readableOnCPU, VehicleIconReady callback) Parameters id ushort skin ushort vehicleAsset VehicleAsset skinAsset SkinAsset x int y int readableOnCPU bool callback VehicleIconReady getVehicle(ushort, ushort, ushort, VehicleAsset, SkinAsset) public static Transform getVehicle(ushort id, ushort skin, ushort mythic, VehicleAsset vehicleAsset, SkinAsset skinAsset) Parameters id ushort skin ushort mythic ushort vehicleAsset VehicleAsset skinAsset SkinAsset Returns Transform giveVehicle(Player, ushort) Supports redirects by VehicleRedirectorAsset. If redirector's SpawnPaintColor is set, that color is used. public static bool giveVehicle(Player player, ushort id) Parameters player Player id ushort Returns bool true if matching vehicle asset was found. (Not necessarily whether vehicle was spawned.)"
  },
  "api/SDG.Unturned.VehicleTurretEventHook.html": {
    "href": "api/SDG.Unturned.VehicleTurretEventHook.html",
    "title": "Class VehicleTurretEventHook | Unturned Analyse Doc",
    "keywords": "Class VehicleTurretEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to Vehicle Turret_# GameObject to receive events. public class VehicleTurretEventHook : MonoBehaviour Inheritance object VehicleTurretEventHook Constructors VehicleTurretEventHook() public VehicleTurretEventHook() Fields OnAimingStarted Invoked when turret gun begins aiming. public UnityEvent OnAimingStarted Field Value UnityEvent OnAimingStarted_Local Invoked when turret gun controlled by a local player begins aiming. public UnityEvent OnAimingStarted_Local Field Value UnityEvent OnAimingStopped Invoked when turret gun ends aiming. public UnityEvent OnAimingStopped Field Value UnityEvent OnAimingStopped_Local Invoked when turret gun controlled by a local player ends aiming. public UnityEvent OnAimingStopped_Local Field Value UnityEvent OnChamberingStarted Invoked when turret gun begins hammer sequence. public UnityEvent OnChamberingStarted Field Value UnityEvent OnInspectingAttachmentsStarted_Local Invoked when turret gun controlled by a local player begins inspecting attachments. public UnityEvent OnInspectingAttachmentsStarted_Local Field Value UnityEvent OnInspectingAttachmentsStopped_Local Invoked when turret gun controlled by a local player ends inspecting attachments. public UnityEvent OnInspectingAttachmentsStopped_Local Field Value UnityEvent OnLocalPassengerAdded Invoked when a locally controlled player enters the seat. public UnityEvent OnLocalPassengerAdded Field Value UnityEvent OnLocalPassengerRemoved Invoked when a locally controlled player exits the seat. public UnityEvent OnLocalPassengerRemoved Field Value UnityEvent OnPassengerAdded Invoked when any player enters the seat. public UnityEvent OnPassengerAdded Field Value UnityEvent OnPassengerRemoved Invoked when any player exits the seat. public UnityEvent OnPassengerRemoved Field Value UnityEvent OnReloadingStarted Invoked when turret gun begins reload sequence. public UnityEvent OnReloadingStarted Field Value UnityEvent OnShotFired Invoked when turret gun is fired. public UnityEvent OnShotFired Field Value UnityEvent"
  },
  "api/SDG.Unturned.VehicleUpdated.html": {
    "href": "api/SDG.Unturned.VehicleUpdated.html",
    "title": "Delegate VehicleUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VehicleUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VehicleUpdated(bool isDriveable, ushort newFuel, ushort maxFuel, float newSpeed, float minSpeed, float maxSpeed, ushort newHealth, ushort maxHealth, ushort newBatteryCharge) Parameters isDriveable bool newFuel ushort maxFuel ushort newSpeed float minSpeed float maxSpeed float newHealth ushort maxHealth ushort newBatteryCharge ushort Constructors VehicleUpdated(object, IntPtr) public VehicleUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, ushort, ushort, float, float, float, ushort, ushort, ushort, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isDriveable, ushort newFuel, ushort maxFuel, float newSpeed, float minSpeed, float maxSpeed, ushort newHealth, ushort maxHealth, ushort newBatteryCharge, AsyncCallback callback, object @object) Parameters isDriveable bool newFuel ushort maxFuel ushort newSpeed float minSpeed float maxSpeed float newHealth ushort maxHealth ushort newBatteryCharge ushort callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool, ushort, ushort, float, float, float, ushort, ushort, ushort) public virtual void Invoke(bool isDriveable, ushort newFuel, ushort maxFuel, float newSpeed, float minSpeed, float maxSpeed, ushort newHealth, ushort maxHealth, ushort newBatteryCharge) Parameters isDriveable bool newFuel ushort maxFuel ushort newSpeed float minSpeed float maxSpeed float newHealth ushort maxHealth ushort newBatteryCharge ushort"
  },
  "api/SDG.Unturned.VehiclesConfigData.html": {
    "href": "api/SDG.Unturned.VehiclesConfigData.html",
    "title": "Class VehiclesConfigData | Unturned Analyse Doc",
    "keywords": "Class VehiclesConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VehiclesConfigData Inheritance object VehiclesConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VehiclesConfigData(EGameMode) public VehiclesConfigData(EGameMode mode) Parameters mode EGameMode Fields Armor_Multiplier public float Armor_Multiplier Field Value float Child_Explosion_Armor_Multiplier public float Child_Explosion_Armor_Multiplier Field Value float Decay_Damage_Per_Second After vehicle has been neglected for more than Decay_Time seconds it will begin taking this much damage per second. public float Decay_Damage_Per_Second Field Value float Decay_Time Seconds vehicle can be neglected before it begins taking damage. public float Decay_Time Field Value float Gun_Highcal_Damage_Multiplier public float Gun_Highcal_Damage_Multiplier Field Value float Gun_Lowcal_Damage_Multiplier public float Gun_Lowcal_Damage_Multiplier Field Value float Has_Battery_Chance public float Has_Battery_Chance Field Value float Has_Tire_Chance public float Has_Tire_Chance Field Value float Max_Battery_Charge public float Max_Battery_Charge Field Value float Max_Instances_Insane public uint Max_Instances_Insane Field Value uint Max_Instances_Large public uint Max_Instances_Large Field Value uint Max_Instances_Medium public uint Max_Instances_Medium Field Value uint Max_Instances_Small public uint Max_Instances_Small Field Value uint Max_Instances_Tiny public uint Max_Instances_Tiny Field Value uint Melee_Damage_Multiplier public float Melee_Damage_Multiplier Field Value float Melee_Repair_Multiplier public float Melee_Repair_Multiplier Field Value float Min_Battery_Charge public float Min_Battery_Charge Field Value float Min_Natural_Vehicles Vehicles are considered \"natural\" if they were spawned by the level as opposed to players or vendors. If less than this many natural vehicles exist in the level, more will be spawned. The minimum of this or Max_Instances is used. (i.e., if this value is higher than max instances the max instances value is used instead.) public uint Min_Natural_Vehicles Field Value uint Respawn_Time public float Respawn_Time Field Value float Unlocked_After_Seconds_In_Safezone public float Unlocked_After_Seconds_In_Safezone Field Value float"
  },
  "api/SDG.Unturned.VendorAsset.html": {
    "href": "api/SDG.Unturned.VendorAsset.html",
    "title": "Class VendorAsset | Unturned Analyse Doc",
    "keywords": "Class VendorAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VendorAsset : Asset, IAssetErrorContext Inheritance object Asset VendorAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorAsset() public VendorAsset() Properties FriendlyName public override string FriendlyName { get; } Property Value string assetCategory public override EAssetType assetCategory { get; } Property Value EAssetType buying public VendorBuying[] buying { get; protected set; } Property Value VendorBuying[] currency public AssetReference<ItemCurrencyAsset> currency { get; protected set; } Property Value AssetReference<ItemCurrencyAsset> enableSorting Should the buying and selling lists be alphabetically sorted? public bool enableSorting { get; protected set; } Property Value bool faceOverride public byte? faceOverride { get; } Property Value byte? selling public VendorSellingBase[] selling { get; protected set; } Property Value VendorSellingBase[] vendorDescription public string vendorDescription { get; protected set; } Property Value string vendorName public string vendorName { get; protected set; } Property Value string Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.VendorBuying.html": {
    "href": "api/SDG.Unturned.VendorBuying.html",
    "title": "Class VendorBuying | Unturned Analyse Doc",
    "keywords": "Class VendorBuying Namespace SDG.Unturned Assembly Assembly-CSharp.dll Represents an item the vendor is buying from players. public class VendorBuying : VendorElement Inheritance object VendorElement VendorBuying Inherited Members VendorElement.rewardsList VendorElement.areConditionsMet(Player) VendorElement.ApplyConditions(Player) VendorElement.GrantRewards(Player) VendorElement.applyConditions(Player, bool) VendorElement.grantRewards(Player, bool) VendorElement.outerAsset VendorElement.index VendorElement.TargetAssetGuid VendorElement.id VendorElement.cost VendorElement.conditions VendorElement.rewards VendorElement.hasIcon object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorBuying(VendorAsset, byte, Guid, ushort, uint, INPCCondition[], NPCRewardsList) public VendorBuying(VendorAsset newOuterAsset, byte newIndex, Guid newTargetAssetGuid, ushort newTargetAssetLegacyId, uint newCost, INPCCondition[] newConditions, NPCRewardsList newRewardsList) Parameters newOuterAsset VendorAsset newIndex byte newTargetAssetGuid Guid newTargetAssetLegacyId ushort newCost uint newConditions INPCCondition[] newRewardsList NPCRewardsList Properties displayDesc public override string displayDesc { get; } Property Value string displayName public override string displayName { get; } Property Value string rarity public override EItemRarity rarity { get; } Property Value EItemRarity Methods FindItemAsset() public ItemAsset FindItemAsset() Returns ItemAsset canSell(Player) public bool canSell(Player player) Parameters player Player Returns bool format(Player, out ushort, out byte) public void format(Player player, out ushort total, out byte amount) Parameters player Player total ushort amount byte sell(Player) public void sell(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.VendorBuyingNameAscendingComparator.html": {
    "href": "api/SDG.Unturned.VendorBuyingNameAscendingComparator.html",
    "title": "Class VendorBuyingNameAscendingComparator | Unturned Analyse Doc",
    "keywords": "Class VendorBuyingNameAscendingComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VendorBuyingNameAscendingComparator : IComparer<VendorBuying> Inheritance object VendorBuyingNameAscendingComparator Implements IComparer<VendorBuying> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorBuyingNameAscendingComparator() public VendorBuyingNameAscendingComparator() Methods Compare(VendorBuying, VendorBuying) public int Compare(VendorBuying a, VendorBuying b) Parameters a VendorBuying b VendorBuying Returns int"
  },
  "api/SDG.Unturned.VendorElement.html": {
    "href": "api/SDG.Unturned.VendorElement.html",
    "title": "Class VendorElement | Unturned Analyse Doc",
    "keywords": "Class VendorElement Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class VendorElement Inheritance object VendorElement Derived VendorBuying VendorSellingBase Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorElement(VendorAsset, byte, Guid, ushort, uint, INPCCondition[], NPCRewardsList) public VendorElement(VendorAsset newOuterAsset, byte newIndex, Guid newGuid, ushort newLegacyId, uint newCost, INPCCondition[] newConditions, NPCRewardsList newRewardsList) Parameters newOuterAsset VendorAsset newIndex byte newGuid Guid newLegacyId ushort newCost uint newConditions INPCCondition[] newRewardsList NPCRewardsList Fields rewardsList protected NPCRewardsList rewardsList Field Value NPCRewardsList Properties TargetAssetGuid public Guid TargetAssetGuid { get; protected set; } Property Value Guid conditions public INPCCondition[] conditions { get; protected set; } Property Value INPCCondition[] cost public uint cost { get; protected set; } Property Value uint displayDesc public virtual string displayDesc { get; } Property Value string displayName public abstract string displayName { get; } Property Value string hasIcon public virtual bool hasIcon { get; } Property Value bool id [Obsolete] public ushort id { get; protected set; } Property Value ushort index public byte index { get; protected set; } Property Value byte outerAsset Vendor asset that owns this buy/sell record. public VendorAsset outerAsset { get; protected set; } Property Value VendorAsset rarity public abstract EItemRarity rarity { get; } Property Value EItemRarity rewards public INPCReward[] rewards { get; } Property Value INPCReward[] Methods ApplyConditions(Player) public void ApplyConditions(Player player) Parameters player Player GrantRewards(Player) public void GrantRewards(Player player) Parameters player Player applyConditions(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void applyConditions(Player player, bool shouldSend) Parameters player Player shouldSend bool areConditionsMet(Player) public bool areConditionsMet(Player player) Parameters player Player Returns bool grantRewards(Player, bool) [Obsolete(\"Removed shouldSend parameter\")] public void grantRewards(Player player, bool shouldSend) Parameters player Player shouldSend bool"
  },
  "api/SDG.Unturned.VendorSellingBase.html": {
    "href": "api/SDG.Unturned.VendorSellingBase.html",
    "title": "Class VendorSellingBase | Unturned Analyse Doc",
    "keywords": "Class VendorSellingBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class VendorSellingBase : VendorElement Inheritance object VendorElement VendorSellingBase Derived VendorSellingItem VendorSellingVehicle Inherited Members VendorElement.rewardsList VendorElement.areConditionsMet(Player) VendorElement.ApplyConditions(Player) VendorElement.GrantRewards(Player) VendorElement.applyConditions(Player, bool) VendorElement.grantRewards(Player, bool) VendorElement.outerAsset VendorElement.index VendorElement.TargetAssetGuid VendorElement.id VendorElement.cost VendorElement.conditions VendorElement.rewards VendorElement.displayName VendorElement.displayDesc VendorElement.hasIcon VendorElement.rarity object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorSellingBase(VendorAsset, byte, Guid, ushort, uint, INPCCondition[], NPCRewardsList) public VendorSellingBase(VendorAsset newOuterAsset, byte newIndex, Guid newTargetAssetGuid, ushort newLegacyAssetId, uint newCost, INPCCondition[] newConditions, NPCRewardsList newRewardsList) Parameters newOuterAsset VendorAsset newIndex byte newTargetAssetGuid Guid newLegacyAssetId ushort newCost uint newConditions INPCCondition[] newRewardsList NPCRewardsList Methods buy(Player) public virtual void buy(Player player) Parameters player Player canBuy(Player) public bool canBuy(Player player) Parameters player Player Returns bool format(Player, out ushort) public virtual void format(Player player, out ushort total) Parameters player Player total ushort"
  },
  "api/SDG.Unturned.VendorSellingItem.html": {
    "href": "api/SDG.Unturned.VendorSellingItem.html",
    "title": "Class VendorSellingItem | Unturned Analyse Doc",
    "keywords": "Class VendorSellingItem Namespace SDG.Unturned Assembly Assembly-CSharp.dll Represents an item the vendor is selling to players. public class VendorSellingItem : VendorSellingBase Inheritance object VendorElement VendorSellingBase VendorSellingItem Inherited Members VendorSellingBase.canBuy(Player) VendorElement.rewardsList VendorElement.areConditionsMet(Player) VendorElement.ApplyConditions(Player) VendorElement.GrantRewards(Player) VendorElement.applyConditions(Player, bool) VendorElement.grantRewards(Player, bool) VendorElement.outerAsset VendorElement.index VendorElement.TargetAssetGuid VendorElement.id VendorElement.cost VendorElement.conditions VendorElement.rewards VendorElement.hasIcon object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorSellingItem(VendorAsset, byte, Guid, ushort, uint, INPCCondition[], NPCRewardsList, int, int, int, int, int, int) public VendorSellingItem(VendorAsset newOuterAsset, byte newIndex, Guid newTargetAssetGuid, ushort newTargetAssetLegacyId, uint newCost, INPCCondition[] newConditions, NPCRewardsList newRewardsList, int newSight, int newTactical, int newGrip, int newBarrel, int newMagazine, int newAmmo) Parameters newOuterAsset VendorAsset newIndex byte newTargetAssetGuid Guid newTargetAssetLegacyId ushort newCost uint newConditions INPCCondition[] newRewardsList NPCRewardsList newSight int newTactical int newGrip int newBarrel int newMagazine int newAmmo int Properties ammo public int ammo { get; protected set; } Property Value int barrel public int barrel { get; protected set; } Property Value int displayDesc public override string displayDesc { get; } Property Value string displayName public override string displayName { get; } Property Value string grip public int grip { get; protected set; } Property Value int magazine public int magazine { get; protected set; } Property Value int rarity public override EItemRarity rarity { get; } Property Value EItemRarity sight public int sight { get; protected set; } Property Value int tactical public int tactical { get; protected set; } Property Value int Methods FindItemAsset() public ItemAsset FindItemAsset() Returns ItemAsset buy(Player) public override void buy(Player player) Parameters player Player format(Player, out ushort) public override void format(Player player, out ushort total) Parameters player Player total ushort"
  },
  "api/SDG.Unturned.VendorSellingNameAscendingComparator.html": {
    "href": "api/SDG.Unturned.VendorSellingNameAscendingComparator.html",
    "title": "Class VendorSellingNameAscendingComparator | Unturned Analyse Doc",
    "keywords": "Class VendorSellingNameAscendingComparator Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VendorSellingNameAscendingComparator : IComparer<VendorSellingBase> Inheritance object VendorSellingNameAscendingComparator Implements IComparer<VendorSellingBase> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorSellingNameAscendingComparator() public VendorSellingNameAscendingComparator() Methods Compare(VendorSellingBase, VendorSellingBase) public int Compare(VendorSellingBase a, VendorSellingBase b) Parameters a VendorSellingBase b VendorSellingBase Returns int"
  },
  "api/SDG.Unturned.VendorSellingVehicle.html": {
    "href": "api/SDG.Unturned.VendorSellingVehicle.html",
    "title": "Class VendorSellingVehicle | Unturned Analyse Doc",
    "keywords": "Class VendorSellingVehicle Namespace SDG.Unturned Assembly Assembly-CSharp.dll Represents a vehicle the vendor is selling to players. public class VendorSellingVehicle : VendorSellingBase Inheritance object VendorElement VendorSellingBase VendorSellingVehicle Inherited Members VendorSellingBase.canBuy(Player) VendorSellingBase.format(Player, out ushort) VendorElement.rewardsList VendorElement.areConditionsMet(Player) VendorElement.ApplyConditions(Player) VendorElement.GrantRewards(Player) VendorElement.applyConditions(Player, bool) VendorElement.grantRewards(Player, bool) VendorElement.outerAsset VendorElement.index VendorElement.TargetAssetGuid VendorElement.id VendorElement.cost VendorElement.conditions VendorElement.rewards VendorElement.displayDesc object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VendorSellingVehicle(VendorAsset, byte, Guid, ushort, uint, string, Color32?, INPCCondition[], NPCRewardsList) public VendorSellingVehicle(VendorAsset newOuterAsset, byte newIndex, Guid newTargetAssetGuid, ushort newTargetAssetLegacyId, uint newCost, string newSpawnpoint, Color32? newPaintColor, INPCCondition[] newConditions, NPCRewardsList newRewardsList) Parameters newOuterAsset VendorAsset newIndex byte newTargetAssetGuid Guid newTargetAssetLegacyId ushort newCost uint newSpawnpoint string newPaintColor Color32? newConditions INPCCondition[] newRewardsList NPCRewardsList Properties displayName public override string displayName { get; } Property Value string hasIcon public override bool hasIcon { get; } Property Value bool paintColor If set, takes priority over VehicleRedirectorAsset's paint color and over VehicleAsset's default paint color. public Color32? paintColor { get; protected set; } Property Value Color32? rarity public override EItemRarity rarity { get; } Property Value EItemRarity spawnpoint public string spawnpoint { get; protected set; } Property Value string Methods FindAsset() Returned asset is not necessarily a vehicle asset yet: It can also be a VehicleRedirectorAsset which the vehicle spawner requires to properly set paint color. public Asset FindAsset() Returns Asset FindVehicleAssetAndHandleRedirects() public VehicleAsset FindVehicleAssetAndHandleRedirects() Returns VehicleAsset buy(Player) public override void buy(Player player) Parameters player Player"
  },
  "api/SDG.Unturned.VersionUtils.html": {
    "href": "api/SDG.Unturned.VersionUtils.html",
    "title": "Class VersionUtils | Unturned Analyse Doc",
    "keywords": "Class VersionUtils Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class VersionUtils Inheritance object VersionUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods binaryToHexadecimal(uint) Convert 32-bit version into 8-char string. String is advertised on server list for clients to filter their local map version. public static string binaryToHexadecimal(uint binaryVersion) Parameters binaryVersion uint Returns string hexadecimalToBinary(string, out uint) Parse 32-bit version from 8-char string. String is advertised on server list for clients to filter their local map version. public static bool hexadecimalToBinary(string hexadecimalVersion, out uint binaryVersion) Parameters hexadecimalVersion string binaryVersion uint Returns bool"
  },
  "api/SDG.Unturned.VestUpdated.html": {
    "href": "api/SDG.Unturned.VestUpdated.html",
    "title": "Delegate VestUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VestUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VestUpdated(ushort newVest, byte newVestQuality, byte[] newVestState) Parameters newVest ushort newVestQuality byte newVestState byte[] Constructors VestUpdated(object, IntPtr) public VestUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(ushort, byte, byte[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ushort newVest, byte newVestQuality, byte[] newVestState, AsyncCallback callback, object @object) Parameters newVest ushort newVestQuality byte newVestState byte[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(ushort, byte, byte[]) public virtual void Invoke(ushort newVest, byte newVestQuality, byte[] newVestState) Parameters newVest ushort newVestQuality byte newVestState byte[]"
  },
  "api/SDG.Unturned.ViewmodelPreferenceData.html": {
    "href": "api/SDG.Unturned.ViewmodelPreferenceData.html",
    "title": "Class ViewmodelPreferenceData | Unturned Analyse Doc",
    "keywords": "Class ViewmodelPreferenceData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ViewmodelPreferenceData Inheritance object ViewmodelPreferenceData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ViewmodelPreferenceData() public ViewmodelPreferenceData() Fields Field_Of_View_Aim public float Field_Of_View_Aim Field Value float Field_Of_View_Hip public float Field_Of_View_Hip Field Value float Offset_Depth public float Offset_Depth Field Value float Offset_Horizontal public float Offset_Horizontal Field Value float Offset_Vertical public float Offset_Vertical Field Value float Methods Clamp() public void Clamp()"
  },
  "api/SDG.Unturned.VirusUpdated.html": {
    "href": "api/SDG.Unturned.VirusUpdated.html",
    "title": "Delegate VirusUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VirusUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VirusUpdated(byte newVirus) Parameters newVirus byte Constructors VirusUpdated(object, IntPtr) public VirusUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte newVirus, AsyncCallback callback, object @object) Parameters newVirus byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte) public virtual void Invoke(byte newVirus) Parameters newVirus byte"
  },
  "api/SDG.Unturned.VisionUpdated.html": {
    "href": "api/SDG.Unturned.VisionUpdated.html",
    "title": "Delegate VisionUpdated | Unturned Analyse Doc",
    "keywords": "Delegate VisionUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VisionUpdated(bool isViewing) Parameters isViewing bool Constructors VisionUpdated(object, IntPtr) public VisionUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool isViewing, AsyncCallback callback, object @object) Parameters isViewing bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool) public virtual void Invoke(bool isViewing) Parameters isViewing bool"
  },
  "api/SDG.Unturned.VisualToggleChanged.html": {
    "href": "api/SDG.Unturned.VisualToggleChanged.html",
    "title": "Delegate VisualToggleChanged | Unturned Analyse Doc",
    "keywords": "Delegate VisualToggleChanged Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VisualToggleChanged(PlayerClothing sender) Parameters sender PlayerClothing Constructors VisualToggleChanged(object, IntPtr) public VisualToggleChanged(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(PlayerClothing, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(PlayerClothing sender, AsyncCallback callback, object @object) Parameters sender PlayerClothing callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(PlayerClothing) public virtual void Invoke(PlayerClothing sender) Parameters sender PlayerClothing"
  },
  "api/SDG.Unturned.VolumeBase.html": {
    "href": "api/SDG.Unturned.VolumeBase.html",
    "title": "Class VolumeBase | Unturned Analyse Doc",
    "keywords": "Class VolumeBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class VolumeBase : DevkitHierarchyWorldItem, IDevkitHierarchyItem, IFormattedFileReadable, IFormattedFileWritable Inheritance object DevkitHierarchyItemBase DevkitHierarchyWorldItem VolumeBase Implements IDevkitHierarchyItem IFormattedFileReadable IFormattedFileWritable Derived LevelVolume<TVolume, TManager> Inherited Members DevkitHierarchyWorldItem.read(IFormattedFileReader) DevkitHierarchyWorldItem.readHierarchyItem(IFormattedFileReader) DevkitHierarchyWorldItem.write(IFormattedFileWriter) DevkitHierarchyWorldItem.writeHierarchyItem(IFormattedFileWriter) DevkitHierarchyWorldItem.inspectablePosition DevkitHierarchyWorldItem.inspectableRotation DevkitHierarchyWorldItem.inspectableScale DevkitHierarchyItemBase.GetNetIdFromInstanceId() DevkitHierarchyItemBase.instanceID DevkitHierarchyItemBase.areaSelectGameObject DevkitHierarchyItemBase.ShouldSave DevkitHierarchyItemBase.CanBeSelected Constructors VolumeBase() protected VolumeBase() Methods CreateMenu() public virtual ISleekElement CreateMenu() Returns ISleekElement"
  },
  "api/SDG.Unturned.VolumeManager-2.html": {
    "href": "api/SDG.Unturned.VolumeManager-2.html",
    "title": "Class VolumeManager<TVolume, TManager> | Unturned Analyse Doc",
    "keywords": "Class VolumeManager<TVolume, TManager> Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VolumeManager<TVolume, TManager> : VolumeManagerBase where TVolume : LevelVolume<TVolume, TManager> where TManager : VolumeManager<TVolume, TManager> Type Parameters TVolume TManager Inheritance object VolumeManagerBase VolumeManager<TVolume, TManager> Derived AmbianceVolumeManager DeadzoneVolumeManager EffectVolumeManager KillVolumeManager NPCRewardVolumeManager NavClipVolumeManager PlayerClipVolumeManager TeleporterEntranceVolumeManager TeleporterExitVolumeManager UndergroundWhitelistVolumeManager FoliageVolumeManager LandscapeHoleVolumeManager WaterVolumeManager ArenaCompactorVolumeManager CartographyVolumeManager CullingVolumeManager HordePurchaseVolumeManager OxygenVolumeManager SafezoneVolumeManager Inherited Members VolumeManagerBase.FriendlyName object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VolumeManager() public VolumeManager() Fields allVolumes protected List<TVolume> allVolumes Field Value List<TVolume> allowInstantiation Should calling InstantiateVolume create a new volume? False for deprecated (landscape hole volume) types. protected bool allowInstantiation Field Value bool supportsFalloff protected bool supportsFalloff Field Value bool Properties DefaultVisibility protected virtual ELevelVolumeVisibility DefaultVisibility { get; } Property Value ELevelVolumeVisibility Visibility public override ELevelVolumeVisibility Visibility { get; set; } Property Value ELevelVolumeVisibility Methods AddVolume(TVolume) public virtual void AddVolume(TVolume volume) Parameters volume TVolume EnumerateAllVolumes() public override IEnumerable<VolumeBase> EnumerateAllVolumes() Returns IEnumerable<VolumeBase> ForceUpdateEditorVisibility() public void ForceUpdateEditorVisibility() Get() public static TManager Get() Returns TManager GetAllVolumes() public IReadOnlyList<TVolume> GetAllVolumes() Returns IReadOnlyList<TVolume> GetFirstOverlappingVolume(Vector3) public TVolume GetFirstOverlappingVolume(Vector3 position) Parameters position Vector3 Returns TVolume GetRandomVolumeOrNull() public TVolume GetRandomVolumeOrNull() Returns TVolume InstantiateVolume(Vector3, Quaternion, Vector3) public override void InstantiateVolume(Vector3 position, Quaternion rotation, Vector3 scale) Parameters position Vector3 rotation Quaternion scale Vector3 IsPositionInsideAnyVolume(Vector3) public bool IsPositionInsideAnyVolume(Vector3 position) Parameters position Vector3 Returns bool OnUpdateGizmos(RuntimeGizmos) protected virtual void OnUpdateGizmos(RuntimeGizmos runtimeGizmos) Parameters runtimeGizmos RuntimeGizmos Raycast(Ray, out RaycastHit, float) public override bool Raycast(Ray ray, out RaycastHit hitInfo, float maxDistance) Parameters ray Ray hitInfo RaycastHit maxDistance float Returns bool Raycast(Ray, out RaycastHit, out TVolume, float) public bool Raycast(Ray ray, out RaycastHit hitInfo, out TVolume hitVolume, float maxDistance) Parameters ray Ray hitInfo RaycastHit hitVolume TVolume maxDistance float Returns bool RemoveVolume(TVolume) public virtual void RemoveVolume(TVolume volume) Parameters volume TVolume SetDebugColor(Color) protected void SetDebugColor(Color debugColor) Parameters debugColor Color"
  },
  "api/SDG.Unturned.VolumeManagerBase.html": {
    "href": "api/SDG.Unturned.VolumeManagerBase.html",
    "title": "Class VolumeManagerBase | Unturned Analyse Doc",
    "keywords": "Class VolumeManagerBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public abstract class VolumeManagerBase Inheritance object VolumeManagerBase Derived VolumeManager<TVolume, TManager> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VolumeManagerBase() protected VolumeManagerBase() Properties FriendlyName public string FriendlyName { get; protected set; } Property Value string Visibility public virtual ELevelVolumeVisibility Visibility { get; set; } Property Value ELevelVolumeVisibility Methods EnumerateAllVolumes() public abstract IEnumerable<VolumeBase> EnumerateAllVolumes() Returns IEnumerable<VolumeBase> InstantiateVolume(Vector3, Quaternion, Vector3) public abstract void InstantiateVolume(Vector3 position, Quaternion rotation, Vector3 scale) Parameters position Vector3 rotation Quaternion scale Vector3 Raycast(Ray, out RaycastHit, float) public abstract bool Raycast(Ray ray, out RaycastHit hitInfo, float maxDistance) Parameters ray Ray hitInfo RaycastHit maxDistance float Returns bool"
  },
  "api/SDG.Unturned.VolumeTeleporter.html": {
    "href": "api/SDG.Unturned.VolumeTeleporter.html",
    "title": "Class VolumeTeleporter | Unturned Analyse Doc",
    "keywords": "Class VolumeTeleporter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VolumeTeleporter : MonoBehaviour Inheritance object VolumeTeleporter Constructors VolumeTeleporter() public VolumeTeleporter() Fields achievement public string achievement Field Value string effectHook public Transform effectHook Field Value Transform target public Transform target Field Value Transform teleportEffect public ushort teleportEffect Field Value ushort"
  },
  "api/SDG.Unturned.VolumesEditor.html": {
    "href": "api/SDG.Unturned.VolumesEditor.html",
    "title": "Class VolumesEditor | Unturned Analyse Doc",
    "keywords": "Class VolumesEditor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class VolumesEditor : SelectionTool, IDevkitTool Inheritance object SelectionTool VolumesEditor Implements IDevkitTool Inherited Members SelectionTool.copyBuffer SelectionTool.copySelectionDelay SelectionTool.pendingClickSelection SelectionTool.handlePosition SelectionTool.handleRotation SelectionTool.referencePosition SelectionTool.referenceRotation SelectionTool.referenceScale SelectionTool.hasReferenceRotation SelectionTool.hasReferenceScale SelectionTool.beginAreaSelect SelectionTool.beginAreaSelectTime SelectionTool.isAreaSelecting SelectionTool.isDragging SelectionTool.areaSelection SelectionTool.transformSelection() SelectionTool.moveHandle(Vector3, Quaternion, Vector3, bool, bool) SelectionTool.update() SelectionTool.equip() SelectionTool.dequip() SelectionTool.handleGLRender() SelectionTool.mode object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VolumesEditor() public VolumesEditor() Properties activeVolumeManager public VolumeManagerBase activeVolumeManager { get; set; } Property Value VolumeManagerBase Methods EnumerateBoxSelectableObjects() protected override IEnumerable<GameObject> EnumerateBoxSelectableObjects() Returns IEnumerable<GameObject> HasBoxSelectableObjects() protected override bool HasBoxSelectableObjects() Returns bool RaycastSelectableObjects(Ray, out RaycastHit) protected override bool RaycastSelectableObjects(Ray ray, out RaycastHit hitInfo) Parameters ray Ray hitInfo RaycastHit Returns bool RequestInstantiation(Vector3) protected override void RequestInstantiation(Vector3 position) Parameters position Vector3"
  },
  "api/SDG.Unturned.VotingMessage.html": {
    "href": "api/SDG.Unturned.VotingMessage.html",
    "title": "Delegate VotingMessage | Unturned Analyse Doc",
    "keywords": "Delegate VotingMessage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VotingMessage(EVotingMessage message) Parameters message EVotingMessage Constructors VotingMessage(object, IntPtr) public VotingMessage(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EVotingMessage, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EVotingMessage message, AsyncCallback callback, object @object) Parameters message EVotingMessage callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EVotingMessage) public virtual void Invoke(EVotingMessage message) Parameters message EVotingMessage"
  },
  "api/SDG.Unturned.VotingStart.html": {
    "href": "api/SDG.Unturned.VotingStart.html",
    "title": "Delegate VotingStart | Unturned Analyse Doc",
    "keywords": "Delegate VotingStart Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VotingStart(SteamPlayer origin, SteamPlayer target, byte votesNeeded) Parameters origin SteamPlayer target SteamPlayer votesNeeded byte Constructors VotingStart(object, IntPtr) public VotingStart(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(SteamPlayer, SteamPlayer, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(SteamPlayer origin, SteamPlayer target, byte votesNeeded, AsyncCallback callback, object @object) Parameters origin SteamPlayer target SteamPlayer votesNeeded byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(SteamPlayer, SteamPlayer, byte) public virtual void Invoke(SteamPlayer origin, SteamPlayer target, byte votesNeeded) Parameters origin SteamPlayer target SteamPlayer votesNeeded byte"
  },
  "api/SDG.Unturned.VotingStop.html": {
    "href": "api/SDG.Unturned.VotingStop.html",
    "title": "Delegate VotingStop | Unturned Analyse Doc",
    "keywords": "Delegate VotingStop Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VotingStop(EVotingMessage message) Parameters message EVotingMessage Constructors VotingStop(object, IntPtr) public VotingStop(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(EVotingMessage, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(EVotingMessage message, AsyncCallback callback, object @object) Parameters message EVotingMessage callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(EVotingMessage) public virtual void Invoke(EVotingMessage message) Parameters message EVotingMessage"
  },
  "api/SDG.Unturned.VotingUpdate.html": {
    "href": "api/SDG.Unturned.VotingUpdate.html",
    "title": "Delegate VotingUpdate | Unturned Analyse Doc",
    "keywords": "Delegate VotingUpdate Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void VotingUpdate(byte voteYes, byte voteNo) Parameters voteYes byte voteNo byte Constructors VotingUpdate(object, IntPtr) public VotingUpdate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte voteYes, byte voteNo, AsyncCallback callback, object @object) Parameters voteYes byte voteNo byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte, byte) public virtual void Invoke(byte voteYes, byte voteNo) Parameters voteYes byte voteNo byte"
  },
  "api/SDG.Unturned.WalkingPlayerInputPacket.html": {
    "href": "api/SDG.Unturned.WalkingPlayerInputPacket.html",
    "title": "Class WalkingPlayerInputPacket | Unturned Analyse Doc",
    "keywords": "Class WalkingPlayerInputPacket Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WalkingPlayerInputPacket : PlayerInputPacket Inheritance object PlayerInputPacket WalkingPlayerInputPacket Inherited Members PlayerInputPacket.clientsideInputs PlayerInputPacket.serversideInputs PlayerInputPacket.clientSimulationFrameNumber PlayerInputPacket.recov PlayerInputPacket.keys PlayerInputPacket.primaryAttack PlayerInputPacket.secondaryAttack object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WalkingPlayerInputPacket() public WalkingPlayerInputPacket() Fields analog public byte analog Field Value byte clientPosition Resulting transform.position immediately after movement.simulate was called. public Vector3 clientPosition Field Value Vector3 pitch public float pitch Field Value float yaw public float yaw Field Value float Methods read(SteamChannel, NetPakReader) public override void read(SteamChannel channel, NetPakReader reader) Parameters channel SteamChannel reader NetPakReader write(NetPakWriter) public override void write(NetPakWriter writer) Parameters writer NetPakWriter"
  },
  "api/SDG.Unturned.WaterHeightTransparentSort.html": {
    "href": "api/SDG.Unturned.WaterHeightTransparentSort.html",
    "title": "Class WaterHeightTransparentSort | Unturned Analyse Doc",
    "keywords": "Class WaterHeightTransparentSort Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WaterHeightTransparentSort : MonoBehaviour Inheritance object WaterHeightTransparentSort Constructors WaterHeightTransparentSort() public WaterHeightTransparentSort() Fields isUnderwater protected bool isUnderwater Field Value bool material protected Material material Field Value Material Methods OnDestroy() protected void OnDestroy() Start() protected void Start() handleIsSeaChanged(bool) protected void handleIsSeaChanged(bool isSea) Parameters isSea bool"
  },
  "api/SDG.Unturned.WaterUpdated.html": {
    "href": "api/SDG.Unturned.WaterUpdated.html",
    "title": "Delegate WaterUpdated | Unturned Analyse Doc",
    "keywords": "Delegate WaterUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void WaterUpdated(byte newWater) Parameters newWater byte Constructors WaterUpdated(object, IntPtr) public WaterUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(byte, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(byte newWater, AsyncCallback callback, object @object) Parameters newWater byte callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(byte) public virtual void Invoke(byte newWater) Parameters newWater byte"
  },
  "api/SDG.Unturned.WaveUpdated.html": {
    "href": "api/SDG.Unturned.WaveUpdated.html",
    "title": "Delegate WaveUpdated | Unturned Analyse Doc",
    "keywords": "Delegate WaveUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void WaveUpdated(bool newWaveReady, int newWaveIndex) Parameters newWaveReady bool newWaveIndex int Constructors WaveUpdated(object, IntPtr) public WaveUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(bool, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(bool newWaveReady, int newWaveIndex, AsyncCallback callback, object @object) Parameters newWaveReady bool newWaveIndex int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(bool, int) public virtual void Invoke(bool newWaveReady, int newWaveIndex) Parameters newWaveReady bool newWaveIndex int"
  },
  "api/SDG.Unturned.WeatherAsset.Effect.html": {
    "href": "api/SDG.Unturned.WeatherAsset.Effect.html",
    "title": "Struct WeatherAsset.Effect | Unturned Analyse Doc",
    "keywords": "Struct WeatherAsset.Effect Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct WeatherAsset.Effect : IDatParseable Implements IDatParseable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields emissionExponent public float emissionExponent Field Value float pitch public float pitch Field Value float prefab public MasterBundleReference<GameObject> prefab Field Value MasterBundleReference<GameObject> rotateYawWithWind public bool rotateYawWithWind Field Value bool translateWithView public bool translateWithView Field Value bool Methods TryParse(IDatNode) public bool TryParse(IDatNode node) Parameters node IDatNode Returns bool"
  },
  "api/SDG.Unturned.WeatherAsset.TimeValues.html": {
    "href": "api/SDG.Unturned.WeatherAsset.TimeValues.html",
    "title": "Class WeatherAsset.TimeValues | Unturned Analyse Doc",
    "keywords": "Class WeatherAsset.TimeValues Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WeatherAsset.TimeValues Inheritance object WeatherAsset.TimeValues Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeValues(DatDictionary) public TimeValues(DatDictionary data) Parameters data DatDictionary Fields brightnessMultiplier public float brightnessMultiplier Field Value float cloudColor public WeatherAsset.WeatherColor cloudColor Field Value WeatherAsset.WeatherColor cloudRimColor public WeatherAsset.WeatherColor cloudRimColor Field Value WeatherAsset.WeatherColor fogColor public WeatherAsset.WeatherColor fogColor Field Value WeatherAsset.WeatherColor fogDensity public float fogDensity Field Value float"
  },
  "api/SDG.Unturned.WeatherAsset.WeatherColor.html": {
    "href": "api/SDG.Unturned.WeatherAsset.WeatherColor.html",
    "title": "Struct WeatherAsset.WeatherColor | Unturned Analyse Doc",
    "keywords": "Struct WeatherAsset.WeatherColor Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct WeatherAsset.WeatherColor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WeatherColor(DatDictionary) public WeatherColor(DatDictionary data) Parameters data DatDictionary Fields customColor public Color customColor Field Value Color levelEnum If specified level editor color can be used rather than a per-asset color. public ELightingColor levelEnum Field Value ELightingColor Methods Evaluate(LightingInfo) public Color Evaluate(LightingInfo levelValues) Parameters levelValues LightingInfo Returns Color"
  },
  "api/SDG.Unturned.WeatherAsset.html": {
    "href": "api/SDG.Unturned.WeatherAsset.html",
    "title": "Class WeatherAsset | Unturned Analyse Doc",
    "keywords": "Class WeatherAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll Allows map makers to create custom weather events. public class WeatherAsset : WeatherAssetBase, IAssetErrorContext Inheritance object Asset WeatherAssetBase WeatherAsset Implements IAssetErrorContext Inherited Members WeatherAssetBase.DEFAULT_SNOW WeatherAssetBase.DEFAULT_RAIN WeatherAssetBase.minLightningInterval WeatherAssetBase.maxLightningInterval WeatherAssetBase.lightningTargetRadius WeatherAssetBase.fadeInDuration WeatherAssetBase.fadeOutDuration WeatherAssetBase.ambientAudio WeatherAssetBase.componentType WeatherAssetBase.volumeMask WeatherAssetBase.hasLightning Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WeatherAsset() public WeatherAsset() Fields cloudBlendExponent Exponent applied to effect blend alpha. public float cloudBlendExponent Field Value float effects public WeatherAsset.Effect[] effects Field Value Effect[] fogBlendExponent Exponent applied to effect blend alpha. public float fogBlendExponent Field Value float foodPerSecond public float foodPerSecond Field Value float healthPerSecond public float healthPerSecond Field Value float shadowStrengthMultiplier Directional light shadow strength multiplier. public float shadowStrengthMultiplier Field Value float staminaPerSecond public float staminaPerSecond Field Value float timeValues protected WeatherAsset.TimeValues[] timeValues Field Value TimeValues[] virusPerSecond public float virusPerSecond Field Value float waterPerSecond public float waterPerSecond Field Value float windMain SpeedTree wind strength for blizzard. Should be removed? public float windMain Field Value float Properties overrideAtmosphericFog Does this weather affect sky fog color? public bool overrideAtmosphericFog { get; protected set; } Property Value bool overrideCloudColors Does this weather affect cloud colors? public bool overrideCloudColors { get; protected set; } Property Value bool overrideFog Does this weather affect fog color and density? public bool overrideFog { get; protected set; } Property Value bool Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local getTimeValues(int, int, out TimeValues, out TimeValues) public void getTimeValues(int blendKey, int currentKey, out WeatherAsset.TimeValues blendFrom, out WeatherAsset.TimeValues blendTo) Parameters blendKey int currentKey int blendFrom WeatherAsset.TimeValues blendTo WeatherAsset.TimeValues"
  },
  "api/SDG.Unturned.WeatherAssetBase.html": {
    "href": "api/SDG.Unturned.WeatherAssetBase.html",
    "title": "Class WeatherAssetBase | Unturned Analyse Doc",
    "keywords": "Class WeatherAssetBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WeatherAssetBase : Asset, IAssetErrorContext Inheritance object Asset WeatherAssetBase Implements IAssetErrorContext Derived WeatherAsset Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WeatherAssetBase() public WeatherAssetBase() Fields DEFAULT_RAIN public static readonly AssetReference<WeatherAssetBase> DEFAULT_RAIN Field Value AssetReference<WeatherAssetBase> DEFAULT_SNOW public static readonly AssetReference<WeatherAssetBase> DEFAULT_SNOW Field Value AssetReference<WeatherAssetBase> lightningTargetRadius public float lightningTargetRadius Field Value float maxLightningInterval public float maxLightningInterval Field Value float minLightningInterval public float minLightningInterval Field Value float Properties ambientAudio Sound clip to play. Volume matches the intensity. public MasterBundleReference<AudioClip> ambientAudio { get; protected set; } Property Value MasterBundleReference<AudioClip> componentType Component to spawn for additional weather logic. public Type componentType { get; protected set; } Property Value Type fadeInDuration Seconds between weather event starting and reaching full intensity. public float fadeInDuration { get; protected set; } Property Value float fadeOutDuration Seconds between weather event ending and reaching zero intensity. public float fadeOutDuration { get; protected set; } Property Value float hasLightning public bool hasLightning { get; protected set; } Property Value bool volumeMask If per-volume mask AND is non zero the weather will blend in. public uint volumeMask { get; protected set; } Property Value uint Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local"
  },
  "api/SDG.Unturned.WeatherBlendAlphaChangedListener.html": {
    "href": "api/SDG.Unturned.WeatherBlendAlphaChangedListener.html",
    "title": "Delegate WeatherBlendAlphaChangedListener | Unturned Analyse Doc",
    "keywords": "Delegate WeatherBlendAlphaChangedListener Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void WeatherBlendAlphaChangedListener(WeatherAssetBase weatherAsset, float blendAlpha) Parameters weatherAsset WeatherAssetBase blendAlpha float Constructors WeatherBlendAlphaChangedListener(object, IntPtr) public WeatherBlendAlphaChangedListener(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(WeatherAssetBase, float, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(WeatherAssetBase weatherAsset, float blendAlpha, AsyncCallback callback, object @object) Parameters weatherAsset WeatherAssetBase blendAlpha float callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(WeatherAssetBase, float) public virtual void Invoke(WeatherAssetBase weatherAsset, float blendAlpha) Parameters weatherAsset WeatherAssetBase blendAlpha float"
  },
  "api/SDG.Unturned.WeatherComponentBase.html": {
    "href": "api/SDG.Unturned.WeatherComponentBase.html",
    "title": "Class WeatherComponentBase | Unturned Analyse Doc",
    "keywords": "Class WeatherComponentBase Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WeatherComponentBase : MonoBehaviour Inheritance object WeatherComponentBase Derived CustomWeatherComponent Constructors WeatherComponentBase() public WeatherComponentBase() Fields ambientAudioSource public AudioSource ambientAudioSource Field Value AudioSource asset public WeatherAssetBase asset Field Value WeatherAssetBase brightnessMultiplier public float brightnessMultiplier Field Value float cloudBlendExponent public float cloudBlendExponent Field Value float cloudColor public Color cloudColor Field Value Color cloudRimColor public Color cloudRimColor Field Value Color fogBlendExponent public float fogBlendExponent Field Value float fogColor public Color fogColor Field Value Color fogDensity public float fogDensity Field Value float globalBlendAlpha [0, 1] blends towards one while active regardless of local volume. public float globalBlendAlpha Field Value float hasTickedBlending If blending was not ticket yet then local blend can use global value, e.g. loading into rain storm. public bool hasTickedBlending Field Value bool isFullyTransitionedIn Is blendAlpha at 100%? public bool isFullyTransitionedIn Field Value bool isWeatherActive public bool isWeatherActive Field Value bool localVolumeBlendAlpha [0, 1] blends towards one if current volume bitwise AND with asset is non-zero. public float localVolumeBlendAlpha Field Value float overrideAtmosphericFog public bool overrideAtmosphericFog Field Value bool overrideCloudColors public bool overrideCloudColors Field Value bool overrideFog public bool overrideFog Field Value bool puddleIntensity [0, 1] Rain puddle ripples alpha. public float puddleIntensity Field Value float puddleWaterLevel [0, 1] Rain puddle alpha cutoff. public float puddleWaterLevel Field Value float shadowStrengthMultiplier public float shadowStrengthMultiplier Field Value float windMain public float windMain Field Value float Properties EffectBlendAlpha Lesser of global or volume blend alphas. public float EffectBlendAlpha { get; } Property Value float Methods EnumerateMaskedPlayers() public IEnumerable<Player> EnumerateMaskedPlayers() Returns IEnumerable<Player> GetNetId() public NetId GetNetId() Returns NetId InitializeWeather() public virtual void InitializeWeather() OnBeginTransitionIn() public virtual void OnBeginTransitionIn() OnBeginTransitionOut() public virtual void OnBeginTransitionOut() OnEndTransitionIn() public virtual void OnEndTransitionIn() OnEndTransitionOut() public virtual void OnEndTransitionOut() PreDestroyWeather() public virtual void PreDestroyWeather() UpdateLightingTime(int, int, float) public virtual void UpdateLightingTime(int blendKey, int currentKey, float timeAlpha) Parameters blendKey int currentKey int timeAlpha float UpdateWeather() public virtual void UpdateWeather()"
  },
  "api/SDG.Unturned.WeatherEventHook.html": {
    "href": "api/SDG.Unturned.WeatherEventHook.html",
    "title": "Class WeatherEventHook | Unturned Analyse Doc",
    "keywords": "Class WeatherEventHook Namespace SDG.Unturned Assembly Assembly-CSharp.dll Can be added to any GameObject to receive weather events: Day/Night Full Moon Rain Snow public class WeatherEventHook : MonoBehaviour Inheritance object WeatherEventHook Constructors WeatherEventHook() public WeatherEventHook() Fields OnDay Invoked when night changes to day. public UnityEvent OnDay Field Value UnityEvent OnFullMoonBegin Invoked when a zombie full-moon event starts. public UnityEvent OnFullMoonBegin Field Value UnityEvent OnFullMoonEnd Invoked when a zombie full-moon event finishes. public UnityEvent OnFullMoonEnd Field Value UnityEvent OnNight Invoked when day changes to night. public UnityEvent OnNight Field Value UnityEvent OnRainBegin Invoked when rain starts to fall. public UnityEvent OnRainBegin Field Value UnityEvent OnRainEnd Invoked when rain finishes falling. public UnityEvent OnRainEnd Field Value UnityEvent OnSnowBegin Invoked when snow starts to fall. public UnityEvent OnSnowBegin Field Value UnityEvent OnSnowEnd Invoked when snow finishes falling. public UnityEvent OnSnowEnd Field Value UnityEvent Methods OnDisable() protected void OnDisable() OnEnable() protected void OnEnable() onDayNightUpdated(bool) protected void onDayNightUpdated(bool isDaytime) Parameters isDaytime bool onMoonUpdated(bool) protected void onMoonUpdated(bool isFullMoon) Parameters isFullMoon bool onRainUpdated(ELightingRain) protected void onRainUpdated(ELightingRain rain) Parameters rain ELightingRain onSnowUpdated(ELightingSnow) protected void onSnowUpdated(ELightingSnow snow) Parameters snow ELightingSnow"
  },
  "api/SDG.Unturned.WeatherEventListenerManager.html": {
    "href": "api/SDG.Unturned.WeatherEventListenerManager.html",
    "title": "Class WeatherEventListenerManager | Unturned Analyse Doc",
    "keywords": "Class WeatherEventListenerManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class WeatherEventListenerManager Inheritance object WeatherEventListenerManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AddBlendAlphaListener(Guid, WeatherBlendAlphaChangedListener) public static void AddBlendAlphaListener(Guid assetGuid, WeatherBlendAlphaChangedListener listener) Parameters assetGuid Guid listener WeatherBlendAlphaChangedListener AddStatusListener(Guid, WeatherStatusChangedListener) public static void AddStatusListener(Guid assetGuid, WeatherStatusChangedListener listener) Parameters assetGuid Guid listener WeatherStatusChangedListener RemoveBlendAlphaListener(WeatherBlendAlphaChangedListener) public static void RemoveBlendAlphaListener(WeatherBlendAlphaChangedListener listener) Parameters listener WeatherBlendAlphaChangedListener RemoveStatusListener(WeatherStatusChangedListener) public static void RemoveStatusListener(WeatherStatusChangedListener listener) Parameters listener WeatherStatusChangedListener"
  },
  "api/SDG.Unturned.WeatherStatusChangedListener.html": {
    "href": "api/SDG.Unturned.WeatherStatusChangedListener.html",
    "title": "Delegate WeatherStatusChangedListener | Unturned Analyse Doc",
    "keywords": "Delegate WeatherStatusChangedListener Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void WeatherStatusChangedListener(WeatherAssetBase weatherAsset, EWeatherStatusChange statusChange) Parameters weatherAsset WeatherAssetBase statusChange EWeatherStatusChange Constructors WeatherStatusChangedListener(object, IntPtr) public WeatherStatusChangedListener(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(WeatherAssetBase, EWeatherStatusChange, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(WeatherAssetBase weatherAsset, EWeatherStatusChange statusChange, AsyncCallback callback, object @object) Parameters weatherAsset WeatherAssetBase statusChange EWeatherStatusChange callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(WeatherAssetBase, EWeatherStatusChange) public virtual void Invoke(WeatherAssetBase weatherAsset, EWeatherStatusChange statusChange) Parameters weatherAsset WeatherAssetBase statusChange EWeatherStatusChange"
  },
  "api/SDG.Unturned.WebImage.html": {
    "href": "api/SDG.Unturned.WebImage.html",
    "title": "Class WebImage | Unturned Analyse Doc",
    "keywords": "Class WebImage Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WebImage : MonoBehaviour Inheritance object WebImage Constructors WebImage() public WebImage() Fields shouldCache public bool shouldCache Field Value bool sprite protected Sprite sprite Field Value Sprite targetImage public Image targetImage Field Value Image texture If set, we are responsible for destroying texture. protected Texture2D texture Field Value Texture2D url public string url Field Value string Methods OnDestroy() protected void OnDestroy() Refresh() public void Refresh() Start() protected virtual void Start() cleanupResources() protected void cleanupResources() setAddressAndRefresh(string, bool, bool) public void setAddressAndRefresh(string newURL, bool newShouldCache, bool forceRefresh) Parameters newURL string newShouldCache bool forceRefresh bool"
  },
  "api/SDG.Unturned.WebLink.html": {
    "href": "api/SDG.Unturned.WebLink.html",
    "title": "Class WebLink | Unturned Analyse Doc",
    "keywords": "Class WebLink Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WebLink : MonoBehaviour Inheritance object WebLink Constructors WebLink() public WebLink() Fields targetButton public Button targetButton Field Value Button url public string url Field Value string"
  },
  "api/SDG.Unturned.Wheel.html": {
    "href": "api/SDG.Unturned.Wheel.html",
    "title": "Class Wheel | Unturned Analyse Doc",
    "keywords": "Class Wheel Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Wheel Inheritance object Wheel Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields brakeTorqueMultiplier public float brakeTorqueMultiplier Field Value float brakeTorqueTractionMultiplier public float brakeTorqueTractionMultiplier Field Value float hasBrakes Does this wheel affect brake torque? public bool hasBrakes Field Value bool isPowered public bool isPowered Field Value bool model public Transform model Field Value Transform motorTorqueClampMultiplier public float motorTorqueClampMultiplier Field Value float motorTorqueMultiplier public float motorTorqueMultiplier Field Value float rest public Quaternion rest Field Value Quaternion stiffnessForward public float stiffnessForward Field Value float stiffnessSideways public float stiffnessSideways Field Value float stiffnessTractionMultiplier public float stiffnessTractionMultiplier Field Value float Properties IsDead public bool IsDead { get; } Property Value bool index public int index { get; } Property Value int isAlive public bool isAlive { get; set; } Property Value bool isGrounded public bool isGrounded { get; } Property Value bool isPhysical Turn on/off physics as needed. Overridden by isAlive. public bool isPhysical { get; set; } Property Value bool vehicle public InteractableVehicle vehicle { get; } Property Value InteractableVehicle wheel public WheelCollider wheel { get; } Property Value WheelCollider Methods askDamage() public void askDamage() askRepair() public void askRepair() checkForTraps() [Obsolete(\"Should not have been public.\")] public void checkForTraps() reset() [Obsolete(\"Should not have been public.\")] public void reset() simulate(float, float, bool, float) [Obsolete(\"Should not have been public.\")] public void simulate(float input_x, float input_y, bool inputBrake, float delta) Parameters input_x float input_y float inputBrake bool delta float update(float) [Obsolete(\"Should not have been public.\")] public void update(float delta) Parameters delta float Events aliveChanged public event WheelAliveChangedHandler aliveChanged Event Type WheelAliveChangedHandler"
  },
  "api/SDG.Unturned.WheelAliveChangedHandler.html": {
    "href": "api/SDG.Unturned.WheelAliveChangedHandler.html",
    "title": "Delegate WheelAliveChangedHandler | Unturned Analyse Doc",
    "keywords": "Delegate WheelAliveChangedHandler Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void WheelAliveChangedHandler(Wheel wheel) Parameters wheel Wheel Constructors WheelAliveChangedHandler(object, IntPtr) public WheelAliveChangedHandler(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Wheel, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Wheel wheel, AsyncCallback callback, object @object) Parameters wheel Wheel callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Wheel) public virtual void Invoke(Wheel wheel) Parameters wheel Wheel"
  },
  "api/SDG.Unturned.WindowsConsole.ECtrlType.html": {
    "href": "api/SDG.Unturned.WindowsConsole.ECtrlType.html",
    "title": "Enum WindowsConsole.ECtrlType | Unturned Analyse Doc",
    "keywords": "Enum WindowsConsole.ECtrlType Namespace SDG.Unturned Assembly Assembly-CSharp.dll public enum WindowsConsole.ECtrlType Fields CTRL_BREAK_EVENT = 1 A CTRL+BREAK signal was received, either from keyboard input or from a signal generated by GenerateConsoleCtrlEvent. CTRL_CLOSE_EVENT = 2 A signal that the system sends to all processes attached to a console when the user closes the console (either by clicking Close on the console window's window menu, or by clicking the End Task button command from Task Manager). CTRL_C_EVENT = 0 A CTRL+C signal was received, either from keyboard input or from a signal generated by the GenerateConsoleCtrlEvent function."
  },
  "api/SDG.Unturned.WindowsConsole.html": {
    "href": "api/SDG.Unturned.WindowsConsole.html",
    "title": "Class WindowsConsole | Unturned Analyse Doc",
    "keywords": "Class WindowsConsole Namespace SDG.Unturned Assembly Assembly-CSharp.dll Uses the Win32 API to force a console to be created and destroyed. public static class WindowsConsole Inheritance object WindowsConsole Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AllocConsole() public static extern bool AllocConsole() Returns bool FreeConsole() public static extern bool FreeConsole() Returns bool RegisterCtrlHandler(Action<ECtrlType>) public static void RegisterCtrlHandler(Action<WindowsConsole.ECtrlType> callback) Parameters callback Action<WindowsConsole.ECtrlType> SetConsoleCP(uint) public static extern bool SetConsoleCP(uint wCodePageID) Parameters wCodePageID uint Returns bool conditionalAlloc() Allocate Windows console if enabled. public static void conditionalAlloc() conditionalFree() Free Windows console if enabled. public static void conditionalFree() setCodePageToUTF8() public static void setCodePageToUTF8()"
  },
  "api/SDG.Unturned.WindowsConsoleInputOutput.html": {
    "href": "api/SDG.Unturned.WindowsConsoleInputOutput.html",
    "title": "Class WindowsConsoleInputOutput | Unturned Analyse Doc",
    "keywords": "Class WindowsConsoleInputOutput Namespace SDG.Unturned Assembly Assembly-CSharp.dll Windows-specific extensions of console input. Uses the Win32 API to force a console to be created and destroyed. public class WindowsConsoleInputOutput : ConsoleInputOutput, ICommandInputOutput Inheritance object ConsoleInputOutputBase ConsoleInputOutput WindowsConsoleInputOutput Implements ICommandInputOutput Inherited Members ConsoleInputOutput.pendingInput ConsoleInputOutput.update() ConsoleInputOutput.clearLine() ConsoleInputOutput.redrawInputLine() ConsoleInputOutput.outputToConsole(string, ConsoleColor) ConsoleInputOutput.inputFromConsole() ConsoleInputOutput.onConsoleInputKey(ConsoleKeyInfo) ConsoleInputOutput.onConsoleInputEnter() ConsoleInputOutput.onConsoleInputBackspace() ConsoleInputOutput.onConsoleInputEscape() ConsoleInputOutputBase.defaultShouldRedirectInput ConsoleInputOutputBase.defaultShouldRedirectOutput ConsoleInputOutputBase.defaultShouldProxyRedirectedOutput ConsoleInputOutputBase.shouldRedirectInput ConsoleInputOutputBase.shouldRedirectOutput ConsoleInputOutputBase.shouldProxyRedirectedOutput ConsoleInputOutputBase.wantsToTerminate ConsoleInputOutputBase.isTerminating ConsoleInputOutputBase.desiredTitle ConsoleInputOutputBase.outputInformation(string) ConsoleInputOutputBase.outputWarning(string) ConsoleInputOutputBase.outputError(string) ConsoleInputOutputBase.notifyInputCommitted(string) ConsoleInputOutputBase.synchronizeTitle(string) ConsoleInputOutputBase.onTitleChanged(string) ConsoleInputOutputBase.handleCancelEvent(object, ConsoleCancelEventArgs) ConsoleInputOutputBase.handleTermination() ConsoleInputOutputBase.inputCommitted object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WindowsConsoleInputOutput() public WindowsConsoleInputOutput() Methods initialize(CommandWindow) Called when this implementation is setup by command window. public override void initialize(CommandWindow commandWindow) Parameters commandWindow CommandWindow shutdown(CommandWindow) Called when this implementation is deleted or application quits. public override void shutdown(CommandWindow commandWindow) Parameters commandWindow CommandWindow"
  },
  "api/SDG.Unturned.WorkshopDownloadConfig.html": {
    "href": "api/SDG.Unturned.WorkshopDownloadConfig.html",
    "title": "Class WorkshopDownloadConfig | Unturned Analyse Doc",
    "keywords": "Class WorkshopDownloadConfig Namespace SDG.Unturned Assembly Assembly-CSharp.dll Configuration for DedicatedUGC. public class WorkshopDownloadConfig Inheritance object WorkshopDownloadConfig Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorkshopDownloadConfig() public WorkshopDownloadConfig() Fields File_IDs Published workshop file IDs to download. public List<ulong> File_IDs Field Value List<ulong> Ignore_Children_File_IDs Published workshop file IDs whose children (dependencies) should be skipped. Useful if workshop author lists dependencies as a way of advertising. public List<ulong> Ignore_Children_File_IDs Field Value List<ulong> Max_Query_Retries Number of total times to try re-submitting failed workshop queries before aborting. public uint Max_Query_Retries Field Value uint Query_Cache_Max_Age_Seconds Controls SetAllowCachedResponse. Disabled when set to zero. Balance between item change frequency and allowing cached results when query fails. public uint Query_Cache_Max_Age_Seconds Field Value uint Should_Monitor_Updates Should used items be monitored for updates? public bool Should_Monitor_Updates Field Value bool Shutdown_Kick_Message Message sent to players when shutdown timer completes. public string Shutdown_Kick_Message Field Value string Shutdown_Update_Detected_Message Message broadcasted when shutdown timer begins. public string Shutdown_Update_Detected_Message Field Value string Shutdown_Update_Detected_Timer Seconds to wait before shutting down after an update is detected. public int Shutdown_Update_Detected_Timer Field Value int Use_Cached_Downloads Should items already installed be loaded? public bool Use_Cached_Downloads Field Value bool Methods get() Get instance if loaded, but do not load. public static WorkshopDownloadConfig get() Returns WorkshopDownloadConfig getOrLoad() Get instance, or load if not yet loaded. public static WorkshopDownloadConfig getOrLoad() Returns WorkshopDownloadConfig"
  },
  "api/SDG.Unturned.WorkshopDownloadRestrictions.html": {
    "href": "api/SDG.Unturned.WorkshopDownloadRestrictions.html",
    "title": "Class WorkshopDownloadRestrictions | Unturned Analyse Doc",
    "keywords": "Class WorkshopDownloadRestrictions Namespace SDG.Unturned Assembly Assembly-CSharp.dll Utilities for testing whether a particular server is allowed to download a workshop item. Available from client and server side so that clients can help enforce restrictions. public class WorkshopDownloadRestrictions Inheritance object WorkshopDownloadRestrictions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorkshopDownloadRestrictions() public WorkshopDownloadRestrictions() Fields IP_RESTRICTIONS_KVTAG Workshop item key-value tag storing IP whitelist and blacklist. public static readonly string IP_RESTRICTIONS_KVTAG Field Value string Methods getAllowedIpsTagValue(UGCQueryHandle_t, uint) Get ip restrictions value if set, otherwise null. Can be called from client or server. public static string getAllowedIpsTagValue(UGCQueryHandle_t queryHandle, uint resultIndex) Parameters queryHandle UGCQueryHandle_t resultIndex uint Returns string getRestrictionResult(UGCQueryHandle_t, uint, uint) public static EWorkshopDownloadRestrictionResult getRestrictionResult(UGCQueryHandle_t queryHandle, uint resultIndex, uint ip) Parameters queryHandle UGCQueryHandle_t resultIndex uint ip uint Returns EWorkshopDownloadRestrictionResult getRestrictionResult(string, uint) Test whether IP is whitelisted or blacklisted in filter. public static EWorkshopDownloadRestrictionResult getRestrictionResult(string filter, uint ip) Parameters filter string ip uint Returns EWorkshopDownloadRestrictionResult isAddressInList(uint, uint[]) public static bool isAddressInList(uint ip, uint[] list) Parameters ip uint list uint[] Returns bool parseAllowedIPs(string, out uint[], out uint[]) Split whitelist-blacklist format and parse string IPs into integer IPs. public static void parseAllowedIPs(string allowedIPs, out uint[] whitelist, out uint[] blacklist) Parameters allowedIPs string whitelist uint[] blacklist uint[] parseStringIps(string[], out uint[]) Parse CIDR string IPs into integer IPs. public static void parseStringIps(string[] strings, out uint[] integers) Parameters strings string[] integers uint[] splitAllowedIPs(string, out string[], out string[]) Split x,y-z format into whitelist [x, y] and blacklist [z]. public static void splitAllowedIPs(string allowedIPs, out string[] whitelistIps, out string[] blacklistIps) Parameters allowedIPs string whitelistIps string[] blacklistIps string[]"
  },
  "api/SDG.Unturned.WorkshopTool.html": {
    "href": "api/SDG.Unturned.WorkshopTool.html",
    "title": "Class WorkshopTool | Unturned Analyse Doc",
    "keywords": "Class WorkshopTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WorkshopTool Inheritance object WorkshopTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorkshopTool() public WorkshopTool() Methods checkBundleValid(string, bool) public static bool checkBundleValid(string path, bool usePath) Parameters path string usePath bool Returns bool checkItemMeta(string, bool) public static bool checkItemMeta(string path, bool usePath) Parameters path string usePath bool Returns bool checkLocalizationMeta(string, bool) public static bool checkLocalizationMeta(string path, bool usePath) Parameters path string usePath bool Returns bool checkLocalizationValid(string, bool) public static bool checkLocalizationValid(string path, bool usePath) Parameters path string usePath bool Returns bool checkMapMeta(string, bool) public static bool checkMapMeta(string path, bool usePath) Parameters path string usePath bool Returns bool checkMapValid(string, bool) public static bool checkMapValid(string path, bool usePath) Parameters path string usePath bool Returns bool checkObjectMeta(string, bool) public static bool checkObjectMeta(string path, bool usePath) Parameters path string usePath bool Returns bool checkSkinMeta(string, bool) public static bool checkSkinMeta(string path, bool usePath) Parameters path string usePath bool Returns bool checkVehicleMeta(string, bool) public static bool checkVehicleMeta(string path, bool usePath) Parameters path string usePath bool Returns bool detectUGCMetaType(string, bool, out ESteamUGCType) public static bool detectUGCMetaType(string path, bool usePath, out ESteamUGCType outType) Parameters path string usePath bool outType ESteamUGCType Returns bool findMapBundlesPath(string, out string) Given path to a workshop map, try to find its /Bundles folder. public static bool findMapBundlesPath(string path, out string bundlesPath) Parameters path string bundlesPath string Returns bool findMapContentPath(string, out string) Given path to a workshop map, try to find its /Content folder. public static bool findMapContentPath(string path, out string contentPath) Parameters path string contentPath string Returns bool loadMapBundlesAndContent(string) [Obsolete] public static void loadMapBundlesAndContent(string workshopItemPath) Parameters workshopItemPath string loadMapBundlesAndContent(string, ulong) Maps on the workshop are a root folder named after the published file id, containing the map folder itself with the level name. In order to load the map's bundles and content properly we need to find the nested Bundles and Content folders. public static void loadMapBundlesAndContent(string workshopItemPath, ulong workshopFileId) Parameters workshopItemPath string workshopFileId ulong"
  },
  "api/SDG.Unturned.WorkshopUtils.html": {
    "href": "api/SDG.Unturned.WorkshopUtils.html",
    "title": "Class WorkshopUtils | Unturned Analyse Doc",
    "keywords": "Class WorkshopUtils Namespace SDG.Unturned Assembly Assembly-CSharp.dll Utilities for calling workshop functions without worrying about client/server. This could be nicely refactored into a client and server interface, but not enough time for that right now. public class WorkshopUtils Inheritance object WorkshopUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorkshopUtils() public WorkshopUtils() Methods findQueryUGCKeyValue(UGCQueryHandle_t, uint, string, out string) Search for the value associated with a given key. public static bool findQueryUGCKeyValue(UGCQueryHandle_t queryHandle, uint resultIndex, string key, out string value) Parameters queryHandle UGCQueryHandle_t resultIndex uint key string value string Returns bool getQueryUGCBanned(UGCQueryHandle_t, uint) Is file banned? public static bool getQueryUGCBanned(UGCQueryHandle_t queryHandle, uint resultIndex) Parameters queryHandle UGCQueryHandle_t resultIndex uint Returns bool getQueryUGCKeyValueTag(UGCQueryHandle_t, uint, uint, out string, out string) Client/server safe version of GetQueryUGCKeyValueTag. public static bool getQueryUGCKeyValueTag(UGCQueryHandle_t queryHandle, uint resultIndex, uint tagIndex, out string key, out string value) Parameters queryHandle UGCQueryHandle_t resultIndex uint tagIndex uint key string value string Returns bool getQueryUGCNumKeyValueTags(UGCQueryHandle_t, uint) Client/server safe version of GetQueryUGCNumKeyValueTags. public static uint getQueryUGCNumKeyValueTags(UGCQueryHandle_t queryHandle, uint resultIndex) Parameters queryHandle UGCQueryHandle_t resultIndex uint Returns uint getQueryUGCResult(UGCQueryHandle_t, uint, out SteamUGCDetails_t) Client/server safe version of GetQueryUGCResult. public static bool getQueryUGCResult(UGCQueryHandle_t queryHandle, uint resultIndex, out SteamUGCDetails_t details) Parameters queryHandle UGCQueryHandle_t resultIndex uint details SteamUGCDetails_t Returns bool"
  },
  "api/SDG.Unturned.WorkzoneSelection.html": {
    "href": "api/SDG.Unturned.WorkzoneSelection.html",
    "title": "Class WorkzoneSelection | Unturned Analyse Doc",
    "keywords": "Class WorkzoneSelection Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class WorkzoneSelection Inheritance object WorkzoneSelection Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WorkzoneSelection(Transform) public WorkzoneSelection(Transform newTransform) Parameters newTransform Transform Fields preTransformPosition public Vector3 preTransformPosition Field Value Vector3 preTransformRotation public Quaternion preTransformRotation Field Value Quaternion Properties transform public Transform transform { get; } Property Value Transform"
  },
  "api/SDG.Unturned.YawSnapshotInfo.html": {
    "href": "api/SDG.Unturned.YawSnapshotInfo.html",
    "title": "Struct YawSnapshotInfo | Unturned Analyse Doc",
    "keywords": "Struct YawSnapshotInfo Namespace SDG.Unturned Assembly Assembly-CSharp.dll public struct YawSnapshotInfo : ISnapshotInfo<YawSnapshotInfo> Implements ISnapshotInfo<YawSnapshotInfo> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors YawSnapshotInfo(Vector3, float) public YawSnapshotInfo(Vector3 pos, float yaw) Parameters pos Vector3 yaw float Fields pos public Vector3 pos Field Value Vector3 yaw public float yaw Field Value float Methods lerp(YawSnapshotInfo, float, out YawSnapshotInfo) public void lerp(YawSnapshotInfo target, float delta, out YawSnapshotInfo result) Parameters target YawSnapshotInfo delta float result YawSnapshotInfo"
  },
  "api/SDG.Unturned.Zombie.html": {
    "href": "api/SDG.Unturned.Zombie.html",
    "title": "Class Zombie | Unturned Analyse Doc",
    "keywords": "Class Zombie Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class Zombie : MonoBehaviour, IExplosionDamageable, IEquatable<IExplosionDamageable> Inheritance object Zombie Implements IExplosionDamageable IEquatable<IExplosionDamageable> Constructors Zombie() public Zombie() Fields bound public byte bound Field Value byte gear public byte gear Field Value byte hat public byte hat Field Value byte id public ushort id Field Value ushort idleAnim public string idleAnim Field Value string isDead public bool isDead Field Value bool isUpdated public bool isUpdated Field Value bool pants public byte pants Field Value byte shirt public byte shirt Field Value byte speciality public EZombieSpeciality speciality Field Value EZombieSpeciality type public byte type Field Value byte Properties IsEligibleForExplosionDamage Used to exclude dead entities from further evaluation. public bool IsEligibleForExplosionDamage { get; } Property Value bool difficulty public ZombieDifficultyAsset difficulty { get; } Property Value ZombieDifficultyAsset idle public byte idle { get; set; } Property Value byte isBoss public bool isBoss { get; } Property Value bool isCutesy public bool isCutesy { get; } Property Value bool isHunting public bool isHunting { get; set; } Property Value bool isHyper public bool isHyper { get; } Property Value bool isMega Boss zombies are considered mega as well. public bool isMega { get; } Property Value bool isRadioactive public bool isRadioactive { get; } Property Value bool lastDead public float lastDead { get; } Property Value float move public byte move { get; set; } Property Value byte Methods ApplyExplosionDamage(in ExplosionParameters, ref ExplosionDamageParameters) public void ApplyExplosionDamage(in ExplosionParameters explosionParameters, ref ExplosionDamageParameters damageParameters) Parameters explosionParameters ExplosionParameters damageParameters ExplosionDamageParameters Equals(IExplosionDamageable) public bool Equals(IExplosionDamageable obj) Parameters obj IExplosionDamageable Returns bool GetClosestPointToExplosion(Vector3) Used to sort damage from nearest to furthest. public Vector3 GetClosestPointToExplosion(Vector3 explosionCenter) Parameters explosionCenter Vector3 Returns Vector3 GetHealth() public float GetHealth() Returns float GetMaxHealth() public float GetMaxHealth() Returns float alert(Player) public void alert(Player newPlayer) Parameters newPlayer Player alert(Vector3, bool) public void alert(Vector3 newPosition, bool isStartling) Parameters newPosition Vector3 isStartling bool askAcid(Vector3, Vector3) public void askAcid(Vector3 origin, Vector3 direction) Parameters origin Vector3 direction Vector3 askAttack(byte) public void askAttack(byte id) Parameters id byte askBoulder(Vector3, Vector3) public void askBoulder(Vector3 origin, Vector3 direction) Parameters origin Vector3 direction Vector3 askBreath() public void askBreath() askCharge() public void askCharge() askDamage(ushort, Vector3, out EPlayerKill, out uint, bool, bool, EZombieStunOverride, ERagdollEffect) public void askDamage(ushort amount, Vector3 newRagdoll, out EPlayerKill kill, out uint xp, bool trackKill = true, bool dropLoot = true, EZombieStunOverride stunOverride = EZombieStunOverride.None, ERagdollEffect ragdollEffect = ERagdollEffect.NONE) Parameters amount ushort newRagdoll Vector3 kill EPlayerKill xp uint trackKill bool dropLoot bool stunOverride EZombieStunOverride ragdollEffect ERagdollEffect askSpark(Vector3) public void askSpark(Vector3 target) Parameters target Vector3 askSpit() public void askSpit() askStartle(byte) public void askStartle(byte id) Parameters id byte askStomp() public void askStomp() askStun(byte) public void askStun(byte id) Parameters id byte askThrow() public void askThrow() checkAlert(Player) public bool checkAlert(Player newPlayer) Parameters newPlayer Player Returns bool getBulletResistance() public float getBulletResistance() Returns float getStunDamageThreshold() If damage exceeds this value, stun the zombie. public int getStunDamageThreshold() Returns int init() public void init() killWithFireExplosion() Used to kill night-only zombies at dawn. public void killWithFireExplosion() sendRevive(byte, byte, byte, byte, byte, byte, Vector3, float) public void sendRevive(byte type, byte speciality, byte shirt, byte pants, byte hat, byte gear, Vector3 position, float angle) Parameters type byte speciality byte shirt byte pants byte hat byte gear byte position Vector3 angle float tellAlive(byte, byte, byte, byte, byte, byte, Vector3, byte) public void tellAlive(byte newType, byte newSpeciality, byte newShirt, byte newPants, byte newHat, byte newGear, Vector3 newPosition, byte newAngle) Parameters newType byte newSpeciality byte newShirt byte newPants byte newHat byte newGear byte newPosition Vector3 newAngle byte tellDead(Vector3, ERagdollEffect) public void tellDead(Vector3 newRagdoll, ERagdollEffect ragdollEffect) Parameters newRagdoll Vector3 ragdollEffect ERagdollEffect tellSpeciality(EZombieSpeciality) public void tellSpeciality(EZombieSpeciality newSpeciality) Parameters newSpeciality EZombieSpeciality tellState(Vector3, byte) [Obsolete] public void tellState(Vector3 newPosition, byte newAngle) Parameters newPosition Vector3 newAngle byte tellState(Vector3, float) public void tellState(Vector3 newPosition, float newYaw) Parameters newPosition Vector3 newYaw float tick() public void tick() updateStates() public void updateStates()"
  },
  "api/SDG.Unturned.ZombieBossQuest.html": {
    "href": "api/SDG.Unturned.ZombieBossQuest.html",
    "title": "Class ZombieBossQuest | Unturned Analyse Doc",
    "keywords": "Class ZombieBossQuest Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieBossQuest : MonoBehaviour Inheritance object ZombieBossQuest Constructors ZombieBossQuest() public ZombieBossQuest() Fields sqrRadius public float sqrRadius Field Value float target public Transform target Field Value Transform teleportEffect public ushort teleportEffect Field Value ushort"
  },
  "api/SDG.Unturned.ZombieCloth.html": {
    "href": "api/SDG.Unturned.ZombieCloth.html",
    "title": "Class ZombieCloth | Unturned Analyse Doc",
    "keywords": "Class ZombieCloth Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieCloth Inheritance object ZombieCloth Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieCloth(ushort) public ZombieCloth(ushort newItem) Parameters newItem ushort Properties item public ushort item { get; } Property Value ushort"
  },
  "api/SDG.Unturned.ZombieClothing.EApplyFlags.html": {
    "href": "api/SDG.Unturned.ZombieClothing.EApplyFlags.html",
    "title": "Enum ZombieClothing.EApplyFlags | Unturned Analyse Doc",
    "keywords": "Enum ZombieClothing.EApplyFlags Namespace SDG.Unturned Assembly Assembly-CSharp.dll [Flags] public enum ZombieClothing.EApplyFlags Fields Mega = 2 None = 1 Ragdoll = 4"
  },
  "api/SDG.Unturned.ZombieClothing.html": {
    "href": "api/SDG.Unturned.ZombieClothing.html",
    "title": "Class ZombieClothing | Unturned Analyse Doc",
    "keywords": "Class ZombieClothing Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieClothing Inheritance object ZombieClothing Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieClothing() public ZombieClothing() Properties ghostMaterial public static Material ghostMaterial { get; } Property Value Material ghostSpiritMaterial public static Material ghostSpiritMaterial { get; } Property Value Material Methods apply(Transform, EApplyFlags, SkinnedMeshRenderer, SkinnedMeshRenderer, byte, byte, byte, byte, byte, ushort, ushort, out Transform, out Transform) public static void apply(Transform zombie, ZombieClothing.EApplyFlags flags, SkinnedMeshRenderer renderer_0, SkinnedMeshRenderer renderer_1, byte type, byte shirt, byte pants, byte hat, byte gear, ushort hatID, ushort gearID, out Transform attachmentModel_0, out Transform attachmentModel_1) Parameters zombie Transform flags ZombieClothing.EApplyFlags renderer_0 SkinnedMeshRenderer renderer_1 SkinnedMeshRenderer type byte shirt byte pants byte hat byte gear byte hatID ushort gearID ushort attachmentModel_0 Transform attachmentModel_1 Transform build() public static void build() paint(ushort, ushort, bool) public static Material paint(ushort shirt, ushort pants, bool isMega) Parameters shirt ushort pants ushort isMega bool Returns Material"
  },
  "api/SDG.Unturned.ZombieDamageMultiplier.html": {
    "href": "api/SDG.Unturned.ZombieDamageMultiplier.html",
    "title": "Class ZombieDamageMultiplier | Unturned Analyse Doc",
    "keywords": "Class ZombieDamageMultiplier Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieDamageMultiplier : IDamageMultiplier Inheritance object ZombieDamageMultiplier Implements IDamageMultiplier Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieDamageMultiplier(float, float, float, float, float) public ZombieDamageMultiplier(float newDamage, float newLeg, float newArm, float newSpine, float newSkull) Parameters newDamage float newLeg float newArm float newSpine float newSkull float Fields arm public float arm Field Value float damage public float damage Field Value float leg public float leg Field Value float skull public float skull Field Value float spine public float spine Field Value float Methods multiply(ELimb) public float multiply(ELimb limb) Parameters limb ELimb Returns float"
  },
  "api/SDG.Unturned.ZombieDifficultyAsset.html": {
    "href": "api/SDG.Unturned.ZombieDifficultyAsset.html",
    "title": "Class ZombieDifficultyAsset | Unturned Analyse Doc",
    "keywords": "Class ZombieDifficultyAsset Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieDifficultyAsset : Asset, IAssetErrorContext Inheritance object Asset ZombieDifficultyAsset Implements IAssetErrorContext Inherited Members Asset.name Asset.id Asset.GUID Asset.absoluteOriginFilePath Asset.requiredShaderUpgrade Asset.ignoreNPOT Asset.getFilePath() Asset.getReferenceTo<T>() Asset.GetOriginName() Asset.clearHash() Asset.appendHash(byte[]) Asset.GetTypeNameWithoutSuffix() Asset.GetTypeFriendlyName() Asset.getTypeNameAndIdDisplayString() Asset.ToString() Asset.LoadRedirectableAsset<T>(Bundle, string, DatDictionary, string) Asset.loadRequiredAsset<T>(Bundle, string) Asset.validateAnimation(Animation, string) Asset.assetOrigin Asset.originMasterBundle Asset.ignoreTextureReadable Asset.hash Asset.FriendlyName Asset.assetCategory Asset.AssetErrorPrefix Asset.OriginAllowsVanillaLegacyId object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieDifficultyAsset() public ZombieDifficultyAsset() Fields Acid_Chance public float Acid_Chance Field Value float Allow_Horde_Beacon Can horde beacons be placed in the associated bounds? public bool Allow_Horde_Beacon Field Value bool Boss_Electric_Chance public float Boss_Electric_Chance Field Value float Boss_Elver_Stomper_Chance public float Boss_Elver_Stomper_Chance Field Value float Boss_Fire_Chance public float Boss_Fire_Chance Field Value float Boss_Kuwait_Chance public float Boss_Kuwait_Chance Field Value float Boss_Wind_Chance public float Boss_Wind_Chance Field Value float Burner_Chance public float Burner_Chance Field Value float Crawler_Chance public float Crawler_Chance Field Value float DL_Blue_Volatile_Chance public float DL_Blue_Volatile_Chance Field Value float DL_Red_Volatile_Chance public float DL_Red_Volatile_Chance Field Value float Flanker_Chance public float Flanker_Chance Field Value float Mega_Stun_Threshold public int Mega_Stun_Threshold Field Value int Normal_Stun_Threshold public int Normal_Stun_Threshold Field Value int Overrides_Spawn_Chance public bool Overrides_Spawn_Chance Field Value bool Spirit_Chance public float Spirit_Chance Field Value float Sprinter_Chance public float Sprinter_Chance Field Value float Methods PopulateAsset(Bundle, DatDictionary, Local) public override void PopulateAsset(Bundle bundle, DatDictionary data, Local localization) Parameters bundle Bundle data DatDictionary localization Local construct() protected virtual void construct()"
  },
  "api/SDG.Unturned.ZombieLifeUpdated.html": {
    "href": "api/SDG.Unturned.ZombieLifeUpdated.html",
    "title": "Delegate ZombieLifeUpdated | Unturned Analyse Doc",
    "keywords": "Delegate ZombieLifeUpdated Namespace SDG.Unturned Assembly Assembly-CSharp.dll public delegate void ZombieLifeUpdated(Zombie zombie) Parameters zombie Zombie Constructors ZombieLifeUpdated(object, IntPtr) public ZombieLifeUpdated(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(Zombie, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Zombie zombie, AsyncCallback callback, object @object) Parameters zombie Zombie callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(Zombie) public virtual void Invoke(Zombie zombie) Parameters zombie Zombie"
  },
  "api/SDG.Unturned.ZombieManager.html": {
    "href": "api/SDG.Unturned.ZombieManager.html",
    "title": "Class ZombieManager | Unturned Analyse Doc",
    "keywords": "Class ZombieManager Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieManager : SteamCaller Inheritance object SteamCaller ZombieManager Inherited Members SteamCaller._channel SteamCaller.channel Constructors ZombieManager() public ZombieManager() Fields dl_attacks public static AudioClip[] dl_attacks Field Value AudioClip[] dl_deaths public static AudioClip[] dl_deaths Field Value AudioClip[] dl_enemy_spotted public static AudioClip[] dl_enemy_spotted Field Value AudioClip[] dl_taunt public static AudioClip[] dl_taunt Field Value AudioClip[] groans public static AudioClip[] groans Field Value AudioClip[] onWaveUpdated public static WaveUpdated onWaveUpdated Field Value WaveUpdated roars public static AudioClip[] roars Field Value AudioClip[] spits public static AudioClip[] spits Field Value AudioClip[] wanderingCount public static int wanderingCount Field Value int Properties canSpareWanderer public static bool canSpareWanderer { get; } Property Value bool instance Exposed for Rocket transition to modules backwards compatibility. public static ZombieManager instance { get; } Property Value ZombieManager regions public static ZombieRegion[] regions { get; } Property Value ZombieRegion[] tickingZombies public static List<Zombie> tickingZombies { get; } Property Value List<Zombie> waveIndex public static int waveIndex { get; } Property Value int waveReady public static bool waveReady { get; } Property Value bool waveRemaining public static int waveRemaining { get; } Property Value int Methods EnumerateClients(byte) [Obsolete(\"Replaced by GatherClientConnections\")] public static IEnumerable<ITransportConnection> EnumerateClients(byte bound) Parameters bound byte Returns IEnumerable<ITransportConnection> EnumerateClients_Remote(byte) [Obsolete(\"Replaced by GatherRemoteClientConnections\")] public static IEnumerable<ITransportConnection> EnumerateClients_Remote(byte bound) Parameters bound byte Returns IEnumerable<ITransportConnection> GatherClientConnections(byte) public static PooledTransportConnectionList GatherClientConnections(byte bound) Parameters bound byte Returns PooledTransportConnectionList GatherRemoteClientConnections(byte) public static PooledTransportConnectionList GatherRemoteClientConnections(byte bound) Parameters bound byte Returns PooledTransportConnectionList ReceiveBeacon(byte, bool) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellBeacon\")] public static void ReceiveBeacon(byte reference, bool hasBeacon) Parameters reference byte hasBeacon bool ReceiveWave(bool, int) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellWave\")] public static void ReceiveWave(bool newWaveReady, int newWave) Parameters newWaveReady bool newWave int ReceiveZombieAcid(byte, ushort, Vector3, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieAcid\")] public static void ReceiveZombieAcid(byte reference, ushort id, Vector3 origin, Vector3 direction) Parameters reference byte id ushort origin Vector3 direction Vector3 ReceiveZombieAlive(byte, ushort, byte, byte, byte, byte, byte, byte, Vector3, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellZombieAlive\")] public static void ReceiveZombieAlive(byte reference, ushort id, byte newType, byte newSpeciality, byte newShirt, byte newPants, byte newHat, byte newGear, Vector3 newPosition, byte newAngle) Parameters reference byte id ushort newType byte newSpeciality byte newShirt byte newPants byte newHat byte newGear byte newPosition Vector3 newAngle byte ReceiveZombieAttack(byte, ushort, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieAttack\")] public static void ReceiveZombieAttack(byte reference, ushort id, byte attack) Parameters reference byte id ushort attack byte ReceiveZombieBoulder(byte, ushort, Vector3, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieBoulder\")] public static void ReceiveZombieBoulder(byte reference, ushort id, Vector3 origin, Vector3 direction) Parameters reference byte id ushort origin Vector3 direction Vector3 ReceiveZombieBreath(byte, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieBreath\")] public static void ReceiveZombieBreath(byte reference, ushort id) Parameters reference byte id ushort ReceiveZombieCharge(byte, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieCharge\")] public static void ReceiveZombieCharge(byte reference, ushort id) Parameters reference byte id ushort ReceiveZombieDead(byte, ushort, Vector3, ERagdollEffect) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellZombieDead\")] public static void ReceiveZombieDead(byte reference, ushort id, Vector3 newRagdoll, ERagdollEffect newRagdollEffect) Parameters reference byte id ushort newRagdoll Vector3 newRagdollEffect ERagdollEffect ReceiveZombieSpark(byte, ushort, Vector3) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieSpark\")] public static void ReceiveZombieSpark(byte reference, ushort id, Vector3 target) Parameters reference byte id ushort target Vector3 ReceiveZombieSpeciality(byte, ushort, EZombieSpeciality) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"tellZombieSpeciality\")] public static void ReceiveZombieSpeciality(byte reference, ushort id, EZombieSpeciality speciality) Parameters reference byte id ushort speciality EZombieSpeciality ReceiveZombieSpit(byte, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieSpit\")] public static void ReceiveZombieSpit(byte reference, ushort id) Parameters reference byte id ushort ReceiveZombieStartle(byte, ushort, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieStartle\")] public static void ReceiveZombieStartle(byte reference, ushort id, byte startle) Parameters reference byte id ushort startle byte ReceiveZombieStates(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveZombieStates(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieStomp(byte, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieStomp\")] public static void ReceiveZombieStomp(byte reference, ushort id) Parameters reference byte id ushort ReceiveZombieStun(byte, ushort, byte) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieStun\")] public static void ReceiveZombieStun(byte reference, ushort id, byte stun) Parameters reference byte id ushort stun byte ReceiveZombieThrow(byte, ushort) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER, legacyName = \"askZombieThrow\")] public static void ReceiveZombieThrow(byte reference, ushort id) Parameters reference byte id ushort ReceiveZombies(in ClientInvocationContext) [SteamCall(ESteamCallValidation.ONLY_FROM_SERVER)] public static void ReceiveZombies(in ClientInvocationContext context) Parameters context ClientInvocationContext addZombie(byte, byte, byte, byte, byte, byte, byte, byte, byte, Vector3, float, bool) public void addZombie(byte bound, byte type, byte speciality, byte shirt, byte pants, byte hat, byte gear, byte move, byte idle, Vector3 position, float angle, bool isDead) Parameters bound byte type byte speciality byte shirt byte pants byte hat byte gear byte move byte idle byte position Vector3 angle float isDead bool askWave(CSteamID) [Obsolete] public void askWave(CSteamID steamID) Parameters steamID CSteamID askZombieAcid(CSteamID, byte, ushort, Vector3, Vector3) [Obsolete] public void askZombieAcid(CSteamID steamID, byte reference, ushort id, Vector3 origin, Vector3 direction) Parameters steamID CSteamID reference byte id ushort origin Vector3 direction Vector3 askZombieAttack(CSteamID, byte, ushort, byte) [Obsolete] public void askZombieAttack(CSteamID steamID, byte reference, ushort id, byte attack) Parameters steamID CSteamID reference byte id ushort attack byte askZombieBoulder(CSteamID, byte, ushort, Vector3, Vector3) [Obsolete] public void askZombieBoulder(CSteamID steamID, byte reference, ushort id, Vector3 origin, Vector3 direction) Parameters steamID CSteamID reference byte id ushort origin Vector3 direction Vector3 askZombieBreath(CSteamID, byte, ushort) [Obsolete] public void askZombieBreath(CSteamID steamID, byte reference, ushort id) Parameters steamID CSteamID reference byte id ushort askZombieCharge(CSteamID, byte, ushort) [Obsolete] public void askZombieCharge(CSteamID steamID, byte reference, ushort id) Parameters steamID CSteamID reference byte id ushort askZombieSpark(CSteamID, byte, ushort, Vector3) [Obsolete] public void askZombieSpark(CSteamID steamID, byte reference, ushort id, Vector3 target) Parameters steamID CSteamID reference byte id ushort target Vector3 askZombieSpit(CSteamID, byte, ushort) [Obsolete] public void askZombieSpit(CSteamID steamID, byte reference, ushort id) Parameters steamID CSteamID reference byte id ushort askZombieStartle(CSteamID, byte, ushort, byte) [Obsolete] public void askZombieStartle(CSteamID steamID, byte reference, ushort id, byte startle) Parameters steamID CSteamID reference byte id ushort startle byte askZombieStomp(CSteamID, byte, ushort) [Obsolete] public void askZombieStomp(CSteamID steamID, byte reference, ushort id) Parameters steamID CSteamID reference byte id ushort askZombieStun(CSteamID, byte, ushort, byte) [Obsolete] public void askZombieStun(CSteamID steamID, byte reference, ushort id, byte stun) Parameters steamID CSteamID reference byte id ushort stun byte askZombieThrow(CSteamID, byte, ushort) [Obsolete] public void askZombieThrow(CSteamID steamID, byte reference, ushort id) Parameters steamID CSteamID reference byte id ushort askZombies(CSteamID, byte) [Obsolete] public void askZombies(CSteamID steamID, byte bound) Parameters steamID CSteamID bound byte dropLoot(Zombie) public static void dropLoot(Zombie zombie) Parameters zombie Zombie generateZombies(byte) public void generateZombies(byte bound) Parameters bound byte getDifficultyInBound(byte) Find difficulty asset (if valid) for navigation bound index. public static ZombieDifficultyAsset getDifficultyInBound(byte bound) Parameters bound byte Returns ZombieDifficultyAsset getZombie(Vector3, ushort) public static Zombie getZombie(Vector3 point, ushort id) Parameters point Vector3 id ushort Returns Zombie getZombiesInRadius(Vector3, float, List<Zombie>) public static void getZombiesInRadius(Vector3 center, float sqrRadius, List<Zombie> result) Parameters center Vector3 sqrRadius float result List<Zombie> respawnZombies() public void respawnZombies() sendZombieAcid(Zombie, Vector3, Vector3) public static void sendZombieAcid(Zombie zombie, Vector3 origin, Vector3 direction) Parameters zombie Zombie origin Vector3 direction Vector3 sendZombieAlive(Zombie, byte, byte, byte, byte, byte, byte, Vector3, byte) public static void sendZombieAlive(Zombie zombie, byte newType, byte newSpeciality, byte newShirt, byte newPants, byte newHat, byte newGear, Vector3 newPosition, byte newAngle) Parameters zombie Zombie newType byte newSpeciality byte newShirt byte newPants byte newHat byte newGear byte newPosition Vector3 newAngle byte sendZombieAttack(Zombie, byte) public static void sendZombieAttack(Zombie zombie, byte attack) Parameters zombie Zombie attack byte sendZombieBoulder(Zombie, Vector3, Vector3) public static void sendZombieBoulder(Zombie zombie, Vector3 origin, Vector3 direction) Parameters zombie Zombie origin Vector3 direction Vector3 sendZombieBreath(Zombie) public static void sendZombieBreath(Zombie zombie) Parameters zombie Zombie sendZombieCharge(Zombie) public static void sendZombieCharge(Zombie zombie) Parameters zombie Zombie sendZombieDead(Zombie, Vector3, ERagdollEffect) public static void sendZombieDead(Zombie zombie, Vector3 newRagdoll, ERagdollEffect newRagdollEffect = ERagdollEffect.NONE) Parameters zombie Zombie newRagdoll Vector3 newRagdollEffect ERagdollEffect sendZombieSpark(Zombie, Vector3) public static void sendZombieSpark(Zombie zombie, Vector3 target) Parameters zombie Zombie target Vector3 sendZombieSpeciality(Zombie, EZombieSpeciality) public static void sendZombieSpeciality(Zombie zombie, EZombieSpeciality speciality) Parameters zombie Zombie speciality EZombieSpeciality sendZombieSpit(Zombie) public static void sendZombieSpit(Zombie zombie) Parameters zombie Zombie sendZombieStartle(Zombie, byte) public static void sendZombieStartle(Zombie zombie, byte startle) Parameters zombie Zombie startle byte sendZombieStomp(Zombie) public static void sendZombieStomp(Zombie zombie) Parameters zombie Zombie sendZombieStun(Zombie, byte) public static void sendZombieStun(Zombie zombie, byte stun) Parameters zombie Zombie stun byte sendZombieThrow(Zombie) public static void sendZombieThrow(Zombie zombie) Parameters zombie Zombie teleportZombieBackIntoMap(Zombie) Find replacement spawnpoint for a zombie and teleport it there. public static void teleportZombieBackIntoMap(Zombie zombie) Parameters zombie Zombie tellBeacon(CSteamID, byte, bool) [Obsolete] public void tellBeacon(CSteamID steamID, byte reference, bool hasBeacon) Parameters steamID CSteamID reference byte hasBeacon bool tellWave(CSteamID, bool, int) [Obsolete] public void tellWave(CSteamID steamID, bool newWaveReady, int newWave) Parameters steamID CSteamID newWaveReady bool newWave int tellZombieAlive(CSteamID, byte, ushort, byte, byte, byte, byte, byte, byte, Vector3, byte) [Obsolete] public void tellZombieAlive(CSteamID steamID, byte reference, ushort id, byte newType, byte newSpeciality, byte newShirt, byte newPants, byte newHat, byte newGear, Vector3 newPosition, byte newAngle) Parameters steamID CSteamID reference byte id ushort newType byte newSpeciality byte newShirt byte newPants byte newHat byte newGear byte newPosition Vector3 newAngle byte tellZombieDead(CSteamID, byte, ushort, Vector3, byte) [Obsolete] public void tellZombieDead(CSteamID steamID, byte reference, ushort id, Vector3 newRagdoll, byte newRagdollEffect) Parameters steamID CSteamID reference byte id ushort newRagdoll Vector3 newRagdollEffect byte tellZombieSpeciality(CSteamID, byte, ushort, byte) [Obsolete] public void tellZombieSpeciality(CSteamID steamID, byte reference, ushort id, byte speciality) Parameters steamID CSteamID reference byte id ushort speciality byte tellZombieStates(CSteamID) [Obsolete] public void tellZombieStates(CSteamID steamID) Parameters steamID CSteamID tellZombies(CSteamID) [Obsolete] public void tellZombies(CSteamID steamID) Parameters steamID CSteamID"
  },
  "api/SDG.Unturned.ZombieManager_NetMethods.html": {
    "href": "api/SDG.Unturned.ZombieManager_NetMethods.html",
    "title": "Class ZombieManager_NetMethods | Unturned Analyse Doc",
    "keywords": "Class ZombieManager_NetMethods Namespace SDG.Unturned Assembly Assembly-CSharp.dll [NetInvokableGeneratedClass(typeof(ZombieManager))] public static class ZombieManager_NetMethods Inheritance object ZombieManager_NetMethods Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ReceiveBeacon_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveBeacon\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveBeacon_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveBeacon_Write(NetPakWriter, byte, bool) [NetInvokableGeneratedMethod(\"ReceiveBeacon\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveBeacon_Write(NetPakWriter writer, byte reference, bool hasBeacon) Parameters writer NetPakWriter reference byte hasBeacon bool ReceiveWave_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveWave\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveWave_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveWave_Write(NetPakWriter, bool, int) [NetInvokableGeneratedMethod(\"ReceiveWave\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveWave_Write(NetPakWriter writer, bool newWaveReady, int newWave) Parameters writer NetPakWriter newWaveReady bool newWave int ReceiveZombieAcid_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieAcid\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieAcid_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieAcid_Write(NetPakWriter, byte, ushort, Vector3, Vector3) [NetInvokableGeneratedMethod(\"ReceiveZombieAcid\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieAcid_Write(NetPakWriter writer, byte reference, ushort id, Vector3 origin, Vector3 direction) Parameters writer NetPakWriter reference byte id ushort origin Vector3 direction Vector3 ReceiveZombieAlive_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieAlive\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieAlive_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieAlive_Write(NetPakWriter, byte, ushort, byte, byte, byte, byte, byte, byte, Vector3, byte) [NetInvokableGeneratedMethod(\"ReceiveZombieAlive\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieAlive_Write(NetPakWriter writer, byte reference, ushort id, byte newType, byte newSpeciality, byte newShirt, byte newPants, byte newHat, byte newGear, Vector3 newPosition, byte newAngle) Parameters writer NetPakWriter reference byte id ushort newType byte newSpeciality byte newShirt byte newPants byte newHat byte newGear byte newPosition Vector3 newAngle byte ReceiveZombieAttack_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieAttack\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieAttack_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieAttack_Write(NetPakWriter, byte, ushort, byte) [NetInvokableGeneratedMethod(\"ReceiveZombieAttack\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieAttack_Write(NetPakWriter writer, byte reference, ushort id, byte attack) Parameters writer NetPakWriter reference byte id ushort attack byte ReceiveZombieBoulder_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieBoulder\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieBoulder_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieBoulder_Write(NetPakWriter, byte, ushort, Vector3, Vector3) [NetInvokableGeneratedMethod(\"ReceiveZombieBoulder\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieBoulder_Write(NetPakWriter writer, byte reference, ushort id, Vector3 origin, Vector3 direction) Parameters writer NetPakWriter reference byte id ushort origin Vector3 direction Vector3 ReceiveZombieBreath_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieBreath\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieBreath_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieBreath_Write(NetPakWriter, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveZombieBreath\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieBreath_Write(NetPakWriter writer, byte reference, ushort id) Parameters writer NetPakWriter reference byte id ushort ReceiveZombieCharge_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieCharge\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieCharge_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieCharge_Write(NetPakWriter, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveZombieCharge\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieCharge_Write(NetPakWriter writer, byte reference, ushort id) Parameters writer NetPakWriter reference byte id ushort ReceiveZombieDead_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieDead\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieDead_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieDead_Write(NetPakWriter, byte, ushort, Vector3, ERagdollEffect) [NetInvokableGeneratedMethod(\"ReceiveZombieDead\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieDead_Write(NetPakWriter writer, byte reference, ushort id, Vector3 newRagdoll, ERagdollEffect newRagdollEffect) Parameters writer NetPakWriter reference byte id ushort newRagdoll Vector3 newRagdollEffect ERagdollEffect ReceiveZombieSpark_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieSpark\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieSpark_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieSpark_Write(NetPakWriter, byte, ushort, Vector3) [NetInvokableGeneratedMethod(\"ReceiveZombieSpark\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieSpark_Write(NetPakWriter writer, byte reference, ushort id, Vector3 target) Parameters writer NetPakWriter reference byte id ushort target Vector3 ReceiveZombieSpeciality_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieSpeciality\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieSpeciality_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieSpeciality_Write(NetPakWriter, byte, ushort, EZombieSpeciality) [NetInvokableGeneratedMethod(\"ReceiveZombieSpeciality\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieSpeciality_Write(NetPakWriter writer, byte reference, ushort id, EZombieSpeciality speciality) Parameters writer NetPakWriter reference byte id ushort speciality EZombieSpeciality ReceiveZombieSpit_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieSpit\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieSpit_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieSpit_Write(NetPakWriter, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveZombieSpit\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieSpit_Write(NetPakWriter writer, byte reference, ushort id) Parameters writer NetPakWriter reference byte id ushort ReceiveZombieStartle_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieStartle\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieStartle_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieStartle_Write(NetPakWriter, byte, ushort, byte) [NetInvokableGeneratedMethod(\"ReceiveZombieStartle\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieStartle_Write(NetPakWriter writer, byte reference, ushort id, byte startle) Parameters writer NetPakWriter reference byte id ushort startle byte ReceiveZombieStomp_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieStomp\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieStomp_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieStomp_Write(NetPakWriter, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveZombieStomp\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieStomp_Write(NetPakWriter writer, byte reference, ushort id) Parameters writer NetPakWriter reference byte id ushort ReceiveZombieStun_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieStun\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieStun_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieStun_Write(NetPakWriter, byte, ushort, byte) [NetInvokableGeneratedMethod(\"ReceiveZombieStun\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieStun_Write(NetPakWriter writer, byte reference, ushort id, byte stun) Parameters writer NetPakWriter reference byte id ushort stun byte ReceiveZombieThrow_Read(in ClientInvocationContext) [NetInvokableGeneratedMethod(\"ReceiveZombieThrow\", ENetInvokableGeneratedMethodPurpose.Read)] public static void ReceiveZombieThrow_Read(in ClientInvocationContext context) Parameters context ClientInvocationContext ReceiveZombieThrow_Write(NetPakWriter, byte, ushort) [NetInvokableGeneratedMethod(\"ReceiveZombieThrow\", ENetInvokableGeneratedMethodPurpose.Write)] public static void ReceiveZombieThrow_Write(NetPakWriter writer, byte reference, ushort id) Parameters writer NetPakWriter reference byte id ushort"
  },
  "api/SDG.Unturned.ZombieRegion.html": {
    "href": "api/SDG.Unturned.ZombieRegion.html",
    "title": "Class ZombieRegion | Unturned Analyse Doc",
    "keywords": "Class ZombieRegion Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieRegion Inheritance object ZombieRegion Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieRegion(byte) public ZombieRegion(byte newNav) Parameters newNav byte Fields alive Number of alive zombies. public int alive Field Value int flagData public FlagData flagData Field Value FlagData hasMega public bool hasMega Field Value bool isNetworked public bool isNetworked Field Value bool isRadioactive public bool isRadioactive Field Value bool lastMega public float lastMega Field Value float onHyperUpdated public HyperUpdated onHyperUpdated Field Value HyperUpdated onZombieLifeUpdated public ZombieLifeUpdated onZombieLifeUpdated Field Value ZombieLifeUpdated respawnZombieIndex public ushort respawnZombieIndex Field Value ushort updates public ushort updates Field Value ushort Properties HasInfiniteAgroRange public bool HasInfiniteAgroRange { get; } Property Value bool hasBeacon public bool hasBeacon { get; set; } Property Value bool isHyper public bool isHyper { get; } Property Value bool nav public byte nav { get; protected set; } Property Value byte zombies public List<Zombie> zombies { get; } Property Value List<Zombie> Methods GetAliveBossZombieCount() public int GetAliveBossZombieCount() Returns int UpdateBoss() Checks for players in the area with quests and spawns boss zombies accordingly. public void UpdateBoss() UpdateRegion() Kills the boss zombie if nobody is around, if the boss was killed it calls UpdateBoss. public void UpdateRegion() destroy() public void destroy() init() public void init() resetQuestBossTimer() Allow another quest to spawn a boss zombie immediately. public void resetQuestBossTimer()"
  },
  "api/SDG.Unturned.ZombieSlot.html": {
    "href": "api/SDG.Unturned.ZombieSlot.html",
    "title": "Class ZombieSlot | Unturned Analyse Doc",
    "keywords": "Class ZombieSlot Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieSlot Inheritance object ZombieSlot Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieSlot(float, List<ZombieCloth>) public ZombieSlot(float newChance, List<ZombieCloth> newTable) Parameters newChance float newTable List<ZombieCloth> Fields chance public float chance Field Value float Properties table public List<ZombieCloth> table { get; } Property Value List<ZombieCloth> Methods addCloth(ushort) public void addCloth(ushort id) Parameters id ushort removeCloth(byte) public void removeCloth(byte index) Parameters index byte"
  },
  "api/SDG.Unturned.ZombieSoulFlag.html": {
    "href": "api/SDG.Unturned.ZombieSoulFlag.html",
    "title": "Class ZombieSoulFlag | Unturned Analyse Doc",
    "keywords": "Class ZombieSoulFlag Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieSoulFlag : MonoBehaviour Inheritance object ZombieSoulFlag Constructors ZombieSoulFlag() public ZombieSoulFlag() Fields collectEffect public ushort collectEffect Field Value ushort flagKills public ushort flagKills Field Value ushort flagPlaced public ushort flagPlaced Field Value ushort soulsNeeded public byte soulsNeeded Field Value byte sqrRadius public float sqrRadius Field Value float teleportEffect public ushort teleportEffect Field Value ushort"
  },
  "api/SDG.Unturned.ZombieSoulTeleporter.html": {
    "href": "api/SDG.Unturned.ZombieSoulTeleporter.html",
    "title": "Class ZombieSoulTeleporter | Unturned Analyse Doc",
    "keywords": "Class ZombieSoulTeleporter Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieSoulTeleporter : MonoBehaviour Inheritance object ZombieSoulTeleporter Constructors ZombieSoulTeleporter() public ZombieSoulTeleporter() Fields collectEffect public ushort collectEffect Field Value ushort soulsNeeded public byte soulsNeeded Field Value byte sqrRadius public float sqrRadius Field Value float target public Transform target Field Value Transform targetBoss public Transform targetBoss Field Value Transform teleportEffect public ushort teleportEffect Field Value ushort"
  },
  "api/SDG.Unturned.ZombieSpawnpoint.html": {
    "href": "api/SDG.Unturned.ZombieSpawnpoint.html",
    "title": "Class ZombieSpawnpoint | Unturned Analyse Doc",
    "keywords": "Class ZombieSpawnpoint Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieSpawnpoint Inheritance object ZombieSpawnpoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieSpawnpoint(byte, Vector3) public ZombieSpawnpoint(byte newType, Vector3 newPoint) Parameters newType byte newPoint Vector3 Fields type public byte type Field Value byte Properties node public Transform node { get; } Property Value Transform point public Vector3 point { get; } Property Value Vector3 Methods setEnabled(bool) public void setEnabled(bool isEnabled) Parameters isEnabled bool"
  },
  "api/SDG.Unturned.ZombieSpecialityExtension.html": {
    "href": "api/SDG.Unturned.ZombieSpecialityExtension.html",
    "title": "Class ZombieSpecialityExtension | Unturned Analyse Doc",
    "keywords": "Class ZombieSpecialityExtension Namespace SDG.Unturned Assembly Assembly-CSharp.dll public static class ZombieSpecialityExtension Inheritance object ZombieSpecialityExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods IsBoss(EZombieSpeciality) Does this have the BOSS_* prefix? public static bool IsBoss(this EZombieSpeciality speciality) Parameters speciality EZombieSpeciality Returns bool IsDLVolatile(EZombieSpeciality) Is this one of the Dying Light volatile zombies? Only spawns during night. Explodes into fire at dawn. public static bool IsDLVolatile(this EZombieSpeciality speciality) Parameters speciality EZombieSpeciality Returns bool IsFromBuakMap(EZombieSpeciality) public static bool IsFromBuakMap(this EZombieSpeciality speciality) Parameters speciality EZombieSpeciality Returns bool"
  },
  "api/SDG.Unturned.ZombieTable.html": {
    "href": "api/SDG.Unturned.ZombieTable.html",
    "title": "Class ZombieTable | Unturned Analyse Doc",
    "keywords": "Class ZombieTable Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieTable Inheritance object ZombieTable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieTable(ZombieSlot[], Color, string, bool, ushort, byte, byte, ushort, uint, float, string, int) public ZombieTable(ZombieSlot[] newSlots, Color newColor, string newName, bool newMega, ushort newHealth, byte newDamage, byte newLootIndex, ushort newLootID, uint newXP, float newRegen, string newDifficultyGUID, int newTableUniqueId) Parameters newSlots ZombieSlot[] newColor Color newName string newMega bool newHealth ushort newDamage byte newLootIndex byte newLootID ushort newXP uint newRegen float newDifficultyGUID string newTableUniqueId int ZombieTable(string) public ZombieTable(string newName) Parameters newName string Fields damage public byte damage Field Value byte health public ushort health Field Value ushort isMega public bool isMega Field Value bool lootID public ushort lootID Field Value ushort lootIndex public byte lootIndex Field Value byte name public string name Field Value string regen public float regen Field Value float xp public uint xp Field Value uint Properties color public Color color { get; set; } Property Value Color difficulty public AssetReference<ZombieDifficultyAsset> difficulty { get; } Property Value AssetReference<ZombieDifficultyAsset> difficultyGUID public string difficultyGUID { get; set; } Property Value string slots public ZombieSlot[] slots { get; } Property Value ZombieSlot[] tableUniqueId ID unique to this zombie table in the level. If this table is deleted the ID will not be recycled. Used to refer to zombie table from external files, e.g., NPC zombie kills condition. public int tableUniqueId { get; } Property Value int Methods addCloth(byte, ushort) public void addCloth(byte slotIndex, ushort id) Parameters slotIndex byte id ushort removeCloth(byte, byte) public void removeCloth(byte slotIndex, byte clothIndex) Parameters slotIndex byte clothIndex byte resolveDifficulty() public ZombieDifficultyAsset resolveDifficulty() Returns ZombieDifficultyAsset"
  },
  "api/SDG.Unturned.ZombieTool.html": {
    "href": "api/SDG.Unturned.ZombieTool.html",
    "title": "Class ZombieTool | Unturned Analyse Doc",
    "keywords": "Class ZombieTool Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombieTool Inheritance object ZombieTool Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombieTool() public ZombieTool() Methods giveZombie(Player, byte) public static void giveZombie(Player player, byte zombies) Parameters player Player zombies byte"
  },
  "api/SDG.Unturned.ZombiesConfigData.html": {
    "href": "api/SDG.Unturned.ZombiesConfigData.html",
    "title": "Class ZombiesConfigData | Unturned Analyse Doc",
    "keywords": "Class ZombiesConfigData Namespace SDG.Unturned Assembly Assembly-CSharp.dll public class ZombiesConfigData Inheritance object ZombiesConfigData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZombiesConfigData(EGameMode) public ZombiesConfigData(EGameMode mode) Parameters mode EGameMode Fields Acid_Chance public float Acid_Chance Field Value float Armor_Multiplier public float Armor_Multiplier Field Value float Backstab_Multiplier public float Backstab_Multiplier Field Value float Beacon_Experience_Multiplier public float Beacon_Experience_Multiplier Field Value float Beacon_Max_Participants public uint Beacon_Max_Participants Field Value uint Beacon_Max_Rewards public uint Beacon_Max_Rewards Field Value uint Beacon_Rewards_Multiplier public float Beacon_Rewards_Multiplier Field Value float Boss_Electric_Chance public float Boss_Electric_Chance Field Value float Boss_Elver_Stomper_Chance public float Boss_Elver_Stomper_Chance Field Value float Boss_Fire_Chance public float Boss_Fire_Chance Field Value float Boss_Kuwait_Chance public float Boss_Kuwait_Chance Field Value float Boss_Wind_Chance public float Boss_Wind_Chance Field Value float Burner_Chance public float Burner_Chance Field Value float Can_Stun public bool Can_Stun Field Value bool Can_Target_Barricades public bool Can_Target_Barricades Field Value bool Can_Target_Objects public bool Can_Target_Objects Field Value bool Can_Target_Structures public bool Can_Target_Structures Field Value bool Can_Target_Vehicles public bool Can_Target_Vehicles Field Value bool Crawler_Chance public float Crawler_Chance Field Value float DL_Blue_Volatile_Chance public float DL_Blue_Volatile_Chance Field Value float DL_Red_Volatile_Chance public float DL_Red_Volatile_Chance Field Value float Damage_Multiplier public float Damage_Multiplier Field Value float Flanker_Chance public float Flanker_Chance Field Value float Full_Moon_Experience_Multiplier public float Full_Moon_Experience_Multiplier Field Value float Loot_Chance public float Loot_Chance Field Value float Max_Boss_Drops public uint Max_Boss_Drops Field Value uint Max_Drops public uint Max_Drops Field Value uint Max_Mega_Drops public uint Max_Mega_Drops Field Value uint Min_Boss_Drops public uint Min_Boss_Drops Field Value uint Min_Drops public uint Min_Drops Field Value uint Min_Mega_Drops public uint Min_Mega_Drops Field Value uint NonHeadshot_Armor_Multiplier Weapon damage multiplier against body, arms, legs. Useful for headshot-only mode. public float NonHeadshot_Armor_Multiplier Field Value float Only_Critical_Stuns public bool Only_Critical_Stuns Field Value bool Quest_Boss_Respawn_Interval Minimum seconds between boss zombie spawns for players doing quests. Players were abusing the spawns to farm boss tier loot. public float Quest_Boss_Respawn_Interval Field Value float Respawn_Beacon_Time public float Respawn_Beacon_Time Field Value float Respawn_Day_Time public float Respawn_Day_Time Field Value float Respawn_Night_Time public float Respawn_Night_Time Field Value float Slow_Movement public bool Slow_Movement Field Value bool Spawn_Chance public float Spawn_Chance Field Value float Spirit_Chance public float Spirit_Chance Field Value float Sprinter_Chance public float Sprinter_Chance Field Value float Weapons_Use_Player_Damage public bool Weapons_Use_Player_Damage Field Value bool"
  },
  "api/SDG.Unturned.html": {
    "href": "api/SDG.Unturned.html",
    "title": "Namespace SDG.Unturned | Unturned Analyse Doc",
    "keywords": "Namespace SDG.Unturned Classes Achievement AchievementStatusData Acid Action ActionBlueprint ActivationEventHook AirdropAsset AirdropDevkitNode AirdropDevkitNodeSystem AirdropInfo AirdropNode AlertTool Animal AnimalAsset AnimalDamageMultiplier AnimalManager AnimalManager_NetMethods AnimalSpawn AnimalSpawnpoint AnimalTable AnimalTier AnimalsConfigData AppNews ArenaCompactorVolume ArenaCompactorVolumeManager ArenaGameMode ArenaLoadout ArenaNode ArenaPlayer ArrayEx Asset AssetBundleCustomData AssetBundleVersion Used to aid backwards compatibility as much as possible when transitioning Unity versions breaks asset bundles. AssetIdListExporter AssetNameAscendingComparator AssetOrigin Replacement for enum origin. AssetValidation Assets Assets_NetMethods Attachments AudioPreferenceData AutoSubscribeMap Barricade BarricadeData BarricadeDrop BarricadeDrop_NetMethods BarricadeManager BarricadeManager_NetMethods BarricadeRegion BarricadeTool BarricadesConfigData Barrier BbCodeTokenizer Breaks down Steam's version of BBcode into tokens like, \"[b]\", \"[i]\", \"actual text\", etc. BbCodeWidgetConverter Converts Steam BBcode tokens into widgets displayable using Glazier UI. BeaconManager BezierTool BinaryRandomComponent Single percentage randomness with two outcomes. BlinkingLight Block Blueprint BlueprintItemIconsInfo BlueprintOutput BlueprintSupply Boulder BrowserConfigData BuildRequestManager When placing structures that snap to grid multiple requests can come in to the server at the same time, and checking overlaps against structures can be problematic, so as a backup we track pending build requests and cancel ones which conflict. BulletInfo Bumper Bundle Bundles Buoyancy Carepackage CarepackageDestroy CargoExporter Helper for wiki writers to dump game data into a useful format. CartographyVolume CartographyVolumeManager Character CharacterAnimator Characters ChatManager ChatManager_NetMethods ChatPreferenceData ClaimBase ClaimBubble ClaimManager ClaimPlant ClientInstanceMethod ClientInstanceMethodBase ClientInstanceMethod<T> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ClientInstanceMethod<T1, T2> ClientInstanceMethod<T1, T2, T3> ClientInstanceMethod<T1, T2, T3, T4> ClientInstanceMethod<T1, T2, T3, T4, T5> ClientInstanceMethod<T1, T2, T3, T4, T5, T6> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> ClientInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> ClientMethodHandle ClientMethodInfo ClientStaticMethod ClientStaticMethod<T> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ClientStaticMethod<T1, T2> ClientStaticMethod<T1, T2, T3> ClientStaticMethod<T1, T2, T3, T4> ClientStaticMethod<T1, T2, T3, T4, T5> ClientStaticMethod<T1, T2, T3, T4, T5, T6> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9> ClientTextChatMessenger Allows Unity events to send text chat messages from the client, for example to execute commands. ColliderGizmosEx CollisionEventHook Can be added to any GameObject with a Trigger to receive events. Ensure that Layer will detect player overlaps. Trap is a good candidate. CollisionTeleporter Seamlessly teleports player to an equivalent position at the destination upon contact. CollisionUtil Command CommandAdmin CommandAdmins CommandAirdrop CommandAnimal CommandArmor CommandBan CommandBans CommandBind CommandCamera CommandChatrate CommandCheats CommandCopyFakeIP CommandCopyServerCode CommandCycle CommandDay CommandDebug CommandDecay CommandEffectUI CommandExperience CommandFilter CommandFlag CommandGSLT CommandGameMode Essentially deprecated for now. CommandGive CommandGold CommandHelp CommandHideAdmins CommandKick CommandKill CommandLine CommandLineBool CommandLineFlag CommandLineFloat CommandLineInt CommandLineString CommandLineValue<T> Parses -X=Y from command-line. Ideally we could do \"where T : TryParse\" but for the meantime there are specialized subclasses. CommandLoadout CommandLog CommandLogMemoryUsage CommandLogTransportConnections CommandMap CommandMaxPlayers CommandMode CommandModules CommandName CommandNight CommandNpcEvent CommandOwner CommandPassword CommandPermit CommandPermits CommandPlayers CommandPort CommandPvE CommandQuest CommandQueue CommandReload CommandReputation CommandResetConfig CommandSave CommandSay CommandScheduledShutdownInfo CommandSetNpcSpawnId CommandShutdown CommandSlay CommandSpy CommandSync CommandTeleport CommandTime CommandTimeout CommandToggleNpcCutsceneMode CommandUnadmin CommandUnban CommandUnlockNpcAchievement CommandUnpermit CommandVehicle CommandVotify CommandWeather CommandWelcome CommandWhitelisted CommandWindow Commander CommentComponent ConfigData ConsoleInputOutput Read commands from standard input, and write logs to standard output. ConsoleInputOutputBase Read commands from standard input, and write logs to standard output. ConsoleInputRedirector ConsoleOutputRedirector ConsoleWriterProxy ContinuousIntegration Report success or failure from game systems, conditionally compiled into the Windows 64-bit build. ControlBinding ControlsSettings ConvenientSavedata Unturned equivalent of unity's PlayerPrefs. Convenient for saving one-off key-value pairs. CosmeticPreviewCapture CraftingBlacklistAsset Restricts which items can be crafted. Crosshair CullingVolume CullingVolumeManager CuratedMapLink CustomWeatherComponent CustomWeatherEventHook Can be added to any GameObject to receive weather events for a specific custom weather asset. Customization DamageInfo DamageTool DamageTool_NetMethods Data DateTimeRange DeadzoneNode Decal DecalRenderer DecalSystem DedicatedUGC DedicatedWorkshopUpdateMonitor If using a map or mods from the workshop, this class monitors them for changes so the server can be restarted. DedicatedWorkshopUpdateMonitorFactory Static functions for creating monitor instance on server. Dedicator DestroyEventHook DialogueAsset DialogueElement DialogueMessage DialoguePage DialogueResponse DismissableTimeSpan Distraction DrivingPlayerInputPacket DynamicWaterTransparentSort Manages render queue for transparent materials on non-stationary objects. Updates one material per frame. DynamicWaterTransparentSortComponent Registers renderers with DynamicWaterTransparentSort manager. EArenaMessage_NetEnum ECameraMode_NetEnum EChatMode_NetEnum EClientMessage_NetEnum EClientPlatform_NetEnum EConsumeMode_NetEnum EDeathCause_NetEnum EFiremode_NetEnum EGameMode_NetEnum ELimb_NetEnum EMannequinUpdateMode_NetEnum ENPCHoliday_NetEnum EPhysicsMaterial_NetEnum EPlayerBoost_NetEnum EPlayerGesture_NetEnum EPlayerGroupRank_NetEnum EPlayerMessage_NetEnum EPlayerSkillset_NetEnum EPlayerStance_NetEnum EPlayerStat_NetEnum ERagdollEffect_NetEnum ERaycastInfoType_NetEnum ERaycastInfoUsage_NetEnum EServerMessage_NetEnum ESteamRejection_NetEnum ESwingMode_NetEnum EVisualToggleType_NetEnum EVotingMessage_NetEnum EZombieSpeciality_NetEnum EconCraftOption EconItemRarityComparer Sorts higher rarity items into the front of the list. EconSortMode_Name Sorts name alphabetically to the front of the list. EconSortMode_Rarity Sorts higher rarity items into the front of the list. EconSortMode_Type Sorts type alphabetically to the front of the list. Editor EditorArea EditorAssetRedirector Allows mappers to bulk replace assets by listing pairs in a text file. https://github.com/SmartlyDressedGames/Unturned-3.x-Community/issues/2275 EditorCopy EditorDashboardUI EditorDrag EditorEnvironmentLightingUI EditorEnvironmentNavigationUI EditorEnvironmentRoadsUI EditorEnvironmentUI EditorLevelObjectsUI EditorLevelPlayersUI EditorLevelUI EditorLevelVisibilityUI EditorLook EditorMovement EditorNavigation EditorObjectSearchFilter EditorObjects EditorPauseUI EditorRoads EditorSelection EditorSpawns EditorSpawnsAnimalsUI EditorSpawnsItemsUI EditorSpawnsUI EditorSpawnsVehiclesUI EditorSpawnsZombiesUI EditorTerrainUI EditorUI EffectAsset EffectManager EffectManager_NetMethods EffectNode EffectSpawner Allows Unity events to spawn effects. EngineCurvesComponent EventsConfigData ExplosionSpawner Allow Unity events to apply damage in a sphere. (doesn't have any visual effects) Intended to replace unsupported/unintentional use of \"Grenade.cs\" and \"Rocket.cs\" scripts. ExtraItemIconInfo FallDamageOverride Overrides how fall damage is calculated when landing on this game object or its descendants. FilterSettings FilterSettings.ServerBrowserColumns FilterSettings.ServerBrowserFilterVisibility Flag FlagData Flashbang FlickeringLight FloatExtension GameMode GameObjectPool GameObjectPoolDictionary GameProject GameStatusData GameUpdateMonitor GameplayConfigData GermanyTeleporterA GermanyTeleporterB GlazierFactory GrantPackagePromo GraphicsPreferenceData GraphicsSettings GraphicsSettingsData GraphicsSettingsResolution GrassDisplacement Grenade GroupInfo GroupManager GroupManager_NetMethods Hash HashStream Run hash algorithm for all data passing through a stream. HighlighterTool HolidayUtil HookInfo HordePurchaseVolume HordePurchaseVolumeManager HotkeyInfo HousingConnections HumanAnimator HumanClothes INPCCondition INPCReward IconUtils Moved icon code from MenuTitleUI to here. IgnoredCraftingBlueprint ImpactGrenade InputEx Extensions to the built-in Input class. InputInfo Interactable Interactable2 Interactable2HP Interactable2SalvageBarricade Interactable2SalvageStructure InteractableBeacon InteractableBed InteractableBed_NetMethods InteractableCharge InteractableClaim InteractableClock InteractableDoor InteractableDoor_NetMethods InteractableFarm InteractableFarm_NetMethods InteractableFire InteractableFire_NetMethods InteractableForage InteractableGenerator InteractableGenerator_NetMethods InteractableItem InteractableLadder InteractableLibrary InteractableLibrary_NetMethods InteractableMannequin InteractableMannequin_NetMethods InteractableObject InteractableObjectBinaryState InteractableObjectBinaryStateEventHook Can be added to any GameObject with an interactable binary state in its parents. If players should not be allowed to interact with the object in the ordinary manner, add the Interactability_Remote flag to its asset to indicate only mod hooks should control it. InteractableObjectDialogue InteractableObjectDropper InteractableObjectNPC InteractableObjectNote InteractableObjectQuest InteractableObjectQuestEventHook Can be added to any GameObject with a Dropper, Note, or Quest interactable object in its parents. InteractableObjectQuestEventHook_NetMethods InteractableObjectResource InteractableObjectRubble InteractableObjectTriggerableBase Nelson 2024-02-06: when looking into resolving public issue #3703 I figured since there is a common behavior between InteractableObjectQuest, InteractableObjectNote, and InteractableObjectDropper (in that they all request the server to do X we may as well support a \"mod hook\" that works with all three. InteractableOil InteractableOil_NetMethods InteractableOven InteractableOven_NetMethods InteractableOxygenator InteractableOxygenator_NetMethods InteractablePower InteractableRainBarrel InteractableRainBarrel_NetMethods InteractableSafezone InteractableSafezone_NetMethods InteractableSentry InteractableSentry_NetMethods InteractableSign InteractableSign_NetMethods InteractableSpot InteractableSpot_NetMethods InteractableStereo InteractableStereo_NetMethods InteractableStorage InteractableStorage_NetMethods InteractableTank InteractableTank_NetMethods InteractableTrap InteractableTrapDamageTires InteractableVehicle InteractableVehicle_NetMethods InventorySearch InventorySearchAmountAscendingComparator InventorySearchAmountDescendingComparator InventorySearchQualityAscendingComparator InventorySearchQualityDescendingComparator Item ItemArrestEndAsset ItemArrestStartAsset ItemAsset ItemBackpackAsset ItemBagAsset ItemBarrelAsset ItemBarricadeAsset ItemBeaconAsset ItemBoxAsset ItemCaliberAsset ItemChargeAsset ItemClothingAsset ItemCloudAsset ItemConsumeableAsset ItemCurrencyAsset Associates items of the same currency, e.g. dollars or bullets. ItemData ItemDefIconInfo ItemDetonatorAsset ItemDrop ItemFarmAsset ItemFilterAsset ItemFisherAsset ItemFoodAsset ItemFuelAsset ItemGearAsset ItemGeneratorAsset ItemGlassesAsset ItemGripAsset ItemGrowerAsset ItemGunAsset ItemHatAsset ItemIconInfo ItemJar ItemKeyAsset ItemLibraryAsset ItemMagazineAsset ItemManager ItemManager_NetMethods ItemMapAsset ItemMaskAsset ItemMedicalAsset ItemMeleeAsset ItemOilPumpAsset ItemOpticAsset ItemPantsAsset ItemPlaceableAsset Common base for barricades and structures. 2023-01-16: not ideal to be adding this so late in development, but at least it is a step in the right direction. ItemRefillAsset ItemRegion ItemSentryAsset ItemShirtAsset Mesh Replacement Details .dat Flags: Has_1P_Character_Mesh_Override True Bool Character_Mesh_3P_Override_LODs # Int Has_Character_Material_Override True Bool Asset Bundle Objects: Character_Mesh_1P_Override_# GameObject with MeshFilter (mesh set to a skinned mesh) Character_Mesh_3P_Override_# GameObject with MeshFilter (mesh set to a skinned mesh) Character_Material_Override Material ItemSightAsset ItemSpawn ItemSpawnpoint ItemStorageAsset ItemStoreSavedata Tracks whether we should show the \"NEW\" label on listings and item store button. ItemStructureAsset ItemSupplyAsset ItemTable ItemTacticalAsset ItemTankAsset ItemThrowableAsset ItemTier ItemTireAsset ItemTool ItemToolAsset ItemTrapAsset ItemVehiclePaintToolAsset ItemVehicleRepairToolAsset ItemVestAsset ItemWaterAsset ItemWeaponAsset Items ItemsConfigData LODGroupAdditionalData Optional Unturned extensions to the LOD Group component. LandscapeMaterialAsset LayerMasks Layerer LegacyInputOutput Matches the console behavior prior to command IO refactor. LegacyRainComponent LegacySnowComponent Level LevelAnimals LevelAsset LevelAsset.SkillRule LevelBarricades LevelBuildableObject LevelGround LevelIconCache Each level should have a 380x80 Icon.png file. This class caches them so that the server list can show them quickly. LevelInfo LevelInfoConfigData LevelItems LevelLighting LevelManager LevelManager_NetMethods LevelNavigation LevelNodes LevelObject LevelObjects LevelPlayers LevelRoads LevelSavedata LevelStructures LevelTrainAssociation Associates a train vehicle ID with the index of a road path to spawn it on. The level only spawns the train if this vehicle ID isn't present in the map yet, so every train on the map has to be different. LevelVehicles LevelVisibility LevelVolume<TVolume, TManager> LevelZombies LightLOD LightLODTool LightingInfo LightingManager LightingManager_NetMethods LightningWeatherComponent LightningWeatherComponent_NetMethods ListExtension LiveConfig LiveConfigEx LoadedBound LoadedRegion LoadingUI Lobbies Local LocalHwid Utility for getting local hardware ID. One option for future improvement would be using Windows Management Infrastructure (WMI) API: https://github.com/SmartlyDressedGames/Unturned-3.x/issues/1593 LocalNews LocalWorkshopSettings Localization LocationDevkitNode LocationDevkitNodeSystem LocationNode LodGroupExtension LogFile LogMessengerComponent Allows Unity events to print messages to the log file for debugging. Logs Responsible for the per-process .log file in the Logs directory. Kept multiple log files in the past, but now consolidates all information into a single file named Client.log or Server_{Identifier}.log. LookAtLocalPlayer MainCamera Managers MapsStatusData MasterBundle Remaps asset load requests into a large asset bundle rather than small individual asset bundles. MasterBundleConfig MasterBundleHelper MaterialPaletteAsset MeasurementTool MenuConfigurationAudioUI MenuConfigurationControls MenuConfigurationControlsUI MenuConfigurationDisplayUI MenuConfigurationGraphicsUI MenuConfigurationOptions MenuConfigurationOptionsUI MenuConfigurationUI MenuCreditsUI MenuDashboardUI MenuMapVisibility Component in the root Menu scene. Additively loads decoration levels without modifying main scene. MenuPauseUI MenuPlayConfigUI MenuPlayConnectUI MenuPlayLobbiesUI MenuPlayLobbiesUI.SleekLobbyPlayerButton MenuPlayMapFiltersUI MenuPlayOnlineSafetyUI MenuPlayServerBookmarksUI MenuPlayServerCurationUI MenuPlayServerInfoUI MenuPlayServerListFiltersUI MenuPlayServersUI MenuPlaySingleplayerUI MenuPlayUI MenuServerPasswordUI MenuSettings MenuStatusData MenuSurvivorsAppearanceUI MenuSurvivorsCharacterUI MenuSurvivorsClothing MenuSurvivorsClothingBoxUI MenuSurvivorsClothingDeleteUI MenuSurvivorsClothingInspectUI MenuSurvivorsClothingItemUI MenuSurvivorsClothingUI MenuSurvivorsGroupUI MenuSurvivorsUI MenuTitleUI MenuUI MenuWorkshopEditorUI MenuWorkshopErrorUI MenuWorkshopLocalizationUI MenuWorkshopSpawnsUI MenuWorkshopSubmitUI MenuWorkshopSubscriptionsUI Repurposed from the Modules UI because it was unused. MenuWorkshopUI Messager ModeConfigData MythicAsset MythicalEffectController Manages lifetime and attachment of a mythical effect. Added by ApplyMythicalEffect(Transform, ushort, EEffectType). Was called MythicLocker with a paired MythicLockee prior to 2024-06-11. NPCAchievementReward NPCAnimalKillsCondition NPCAssetOutfit NPCBoolFlagCondition NPCBoolFlagReward NPCCompareFlagsCondition NPCCurrencyCondition NPCCurrencyReward NPCCutsceneModeReward NPCDateCounterCondition NPCEffectReward NPCEventManager Allows NPCs to trigger plugin or script events. NPCEventManager_NetMethods NPCEventReward NPCExperienceCondition NPCExperienceReward NPCFlagCondition NPCFlagMathReward NPCHintReward NPCHolidayCondition NPCHordeKillsCondition NPCIsFullMoonCondition NPCItemCondition NPCItemReward NPCLogicCondition NPCObjectKillsCondition NPCPlayerKillsCondition NPCPlayerLifeFoodCondition NPCPlayerLifeFoodReward NPCPlayerLifeHealthCondition NPCPlayerLifeHealthReward NPCPlayerLifeStaminaCondition NPCPlayerLifeStaminaReward NPCPlayerLifeVirusCondition NPCPlayerLifeVirusReward NPCPlayerLifeWaterCondition NPCPlayerLifeWaterReward NPCPlayerSpawnpointReward NPCQuestCondition NPCQuestReward NPCRandomItemReward NPCRandomShortFlagReward NPCReputationCondition NPCReputationReward NPCRewardsAsset NPCRewardsListAssetReward NPCShortFlagCondition NPCShortFlagReward NPCSkillsetCondition NPCTeleportReward NPCTimeOfDayCondition NPCTool NPCTreeKillsCondition NPCVehicleReward NPCWeatherBlendAlphaCondition Compares weather intensity to value. NPCWeatherStatusCondition NPCZombieKillsCondition NameTool NetIdPakEx NetIdRegistry NetInvocationDeferralRegistry When a client method is called on a target object that does not exist yet this class is responsible for deferring the invocation until the instance does exist. For example until finished async loading. NetInvokableGeneratedClassAttribute NetInvokableGeneratedMethodAttribute NetPakColor32Attribute NetPakNormalAttribute NetPakSpecialQuaternionAttribute NetPakVector3Attribute NetReflection NetworkSnapshotBuffer<T> NewsItem NewsResponse NewsStatusData NightLight Node NodesEditor NpcGlobalEventHook Can be added to any GameObject to listen for the Event NPC reward type. NpcGlobalEventMessenger Allows Unity events to broadcast Event NPC rewards. NsbLog Logs enabled when WITH_NSB_LOGGING is defined. Tracking down an issue where snapshot buffer stops working for groups of networked objects. ObjectAsset ObjectConfigData ObjectManager ObjectManager_NetMethods ObjectNPCAsset ObjectRegion OneShotAudioDefinition OptionsSettings OutfitAsset OxygenBubble OxygenManager OxygenVolume OxygenVolumeManager Overrides breathability for example in a deep cave with no oxygen, or near a deep sea plant that provides oxygen. PackInfo Palette Parser ParticleSystemCollisionAudio Passenger PhysicsEx Extensions to the built-in Physics class. Shares similar functionality to the SDG.Framework.Utilities.PhysicsUtility class, but that should be moved here because the \"framework\" is unused and and the long name is annoying. PhysicsMaterialAsset Expands upon Unity physics material properties for gameplay features. PhysicsMaterialAssetBase Properties common to asset and extensions. For example both can specify sounds. PhysicsMaterialExtensionAsset Adds custom data to base physics material asset. For example how a vanilla material should respond to custom laser guns. PhysicsMaterialNetIdPakEx PhysicsMaterialNetTable String table specifically for Unity physics material names. Implemented so that tires can more efficiently replicate which ground material they are touching. PhysicsMaterialNetTable_NetMethods PhysicsTool PlaySettings Player PlayerAnimator PlayerAnimator_NetMethods PlayerBarricadeLibraryUI PlayerBarricadeMannequinUI PlayerBarricadeSignUI PlayerBarricadeStereoUI PlayerCaller PlayerClothing PlayerClothing_NetMethods PlayerContinuousIntegrationReport PlayerCrafting PlayerCrafting_NetMethods PlayerDamageMultiplier PlayerDashboardCraftingUI PlayerDashboardInformationUI PlayerDashboardInventoryUI PlayerDashboardSkillsUI PlayerDashboardUI PlayerDeathUI PlayerDelayedQuestRewardsComponent PlayerEquipment PlayerEquipment_NetMethods PlayerInput PlayerInputPacket PlayerInput_NetMethods PlayerInteract PlayerInteract_NetMethods PlayerInventory PlayerInventory_NetMethods PlayerLife PlayerLifeUI PlayerLife_NetMethods PlayerLook PlayerLook_NetMethods PlayerManager PlayerManager_NetMethods PlayerMovement PlayerMovement_NetMethods PlayerNPCDialogueUI PlayerNPCQuestUI PlayerNPCVendorUI PlayerPauseUI PlayerQuest PlayerQuestComparator PlayerQuestFlag PlayerQuestFlagComparator PlayerQuests PlayerQuests_NetMethods PlayerSavedata PlayerSkills PlayerSkills_NetMethods PlayerSpawnpoint PlayerStance PlayerStance_NetMethods PlayerTool PlayerUI PlayerVoice PlayerVoice_NetMethods PlayerWorkzone PlayerWorkzoneUI Player_NetMethods PlayersConfigData PluginAdvertising PluginButtonListener PluginInputFieldListener PoolReference PooledTransportConnectionList PowerTool PreferenceData ProfanityFilter PropellerModel Provider PurchaseNode QuestAsset QueuedGroupExit RagdollTool Rain RayMasks RaycastInfo ReadWrite RedirectorAsset Special asset type that isn't (shouldn't be) returned by asset Find methods. Instead, if found when resolving an asset legacy ID or GUID, Find is called again with the target specified by this asset. Regions ResourceAsset ResourceHash ResourceManager ResourceManager_NetMethods ResourceRegion ResourceSpawnpoint ReunObjectAdd ReunObjectRemove ReunObjectTransform RichTextUtil River Road RoadJoint RoadMaterial RoadPath RoadSample Rocket RubbleInfo RubbleRagdollInfo RuntimeGizmos In-game debug drawing utility similar to Unity's editor Gizmos. SHA1Stream SafezoneBubble SafezoneManager SafezoneNode SafezoneVolume SafezoneVolumeManager SaveManager ScopedObjectUndo ScreenEx Extensions to the built-in Screen class. We have run into multiple problems with the Screen.resolutions property over the years, so this class aims to protect against bad data. Scrolling SearchFilterUtil SelectionTool ServerConfigData ServerConnectParameters Parameters for connecting to a game server. Admittedly there are other parameters to the Connect method, but those are for detecting advertisement discrepencies and can be null. ServerInstanceMethod ServerInstanceMethodBase ServerInstanceMethod<T> ServerInstanceMethod<T1, T2> ServerInstanceMethod<T1, T2, T3> ServerInstanceMethod<T1, T2, T3, T4> ServerInstanceMethod<T1, T2, T3, T4, T5> ServerInstanceMethod<T1, T2, T3, T4, T5, T6> ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7> ServerInstanceMethod<T1, T2, T3, T4, T5, T6, T7, T8> ServerListComparer_AnticheatDefault ServerListComparer_AnticheatInverted ServerListComparer_Base ServerListComparer_CheatsDefault ServerListComparer_CheatsInverted ServerListComparer_CombatDefault ServerListComparer_CombatInverted ServerListComparer_FullnessDefault Sort servers by normalized player count high to low. ServerListComparer_FullnessInverted Sort servers by normalized player count low to high. ServerListComparer_GoldDefault ServerListComparer_GoldInverted ServerListComparer_MapAscending Sort servers by map name A to Z. ServerListComparer_MapDescending Sort servers by map name Z to A. ServerListComparer_MaxPlayersDefault Sort servers by max player count high to low. ServerListComparer_MaxPlayersInverted Sort servers by max player count low to high. ServerListComparer_MonetizationDefault ServerListComparer_MonetizationInverted ServerListComparer_NameAscending Sort servers by name A to Z. ServerListComparer_NameDescending Sort servers by name Z to A. ServerListComparer_PasswordDefault ServerListComparer_PasswordInverted ServerListComparer_PerspectiveDefault ServerListComparer_PerspectiveInverted ServerListComparer_PingAscending Sort servers by ping low to high. ServerListComparer_PingDescending Sort servers by ping high to low. ServerListComparer_PlayersDefault Sort servers by player count high to low. ServerListComparer_PlayersInverted Sort servers by player count low to high. ServerListComparer_PluginsDefault ServerListComparer_PluginsInverted ServerListComparer_UtilityScore ServerListComparer_WorkshopDefault ServerListComparer_WorkshopInverted ServerListCurationAsset ServerListFilters ServerMethodHandle ServerMethodInfo ServerSavedata ServerStaticMethod ServerStaticMethod<T> ServerStaticMethod<T1, T2> ServerStaticMethod<T1, T2, T3> ServerStaticMethod<T1, T2, T3, T4> ServerStaticMethod<T1, T2, T3, T4, T5> ServerStaticMethod<T1, T2, T3, T4, T5, T6> ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7> ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8> ServerTextChatMessenger Allows Unity events to broadcast text chat messages from the server. Setup ShaderConsolidator Skill SkinAsset SkyFog SkyFogRenderer SleekBlueprint SleekBoomboxSong SleekBoost SleekBoxIcon SleekButtonIcon SleekButtonIconConfirm SleekButtonState SleekButtonStateEnum<T> SleekCameraImage SleekCharacter SleekChatEntryV1 SleekChatEntryV2 SleekColorPicker SleekCuratedLevelLink SleekCustomServerListPresetButton SleekDefaultServerListPresetButton SleekDismissWorkshopArticleButton SleekEconIcon SleekEditorLevel Button in the list of levels for the map editor. SleekFilterLevel Button in the list of levels for server browser filters. SleekFullscreenBox Almost every menu has a container element for its contents which spans the entire screen. This element is then animated into and out of view. In the IMGUI implementation this was fine because containers off-screen were not processed, but with uGUI they were still considered active. To solve the uGUI performance overhead this class was introduced to disable visibility after animating out of view. SleekHitmarker SleekInventory SleekItem SleekItemIcon SleekItems SleekJars SleekLevel Button in a list of levels. SleekList<T> SleekLoadingScreenProgressBar SleekManageWorkshopEntry SleekNew SleekPlayer SleekProgress SleekReadMoreButton SleekScopeOverlay SleekServer SleekServerBookmark Entry in the MenuPlayServerBookmarksUI list. SleekServerCurationItem Entry in the MenuPlayServerCurationUI list. SleekServerCurationRule Entry in the MenuPlayServerCurationRulesUI list. SleekSkill SleekSlot SleekStockpileLinkButton SleekValue SleekVendor SleekWebImage SleekWebLinkButton SleekWorkshopSubscriptionButton SleekYouTubeVideoButton SlotTypeExtension Snow SpawnAsset SpawnTable SpawnTableTool SpecialitySkillPair StandardShaderUtils Standard shader mode changes are based on built-in StandardShaderGUI.cs StatTracker StaticResourceRef<T> Assets cannot be loaded from Resources during static initialization, so this reference defers the load until the first time user tries to use it. StatusData SteamAdminID SteamAdminlist SteamBBCodeUtils SteamBlacklist SteamBlacklistID SteamCall SteamCaller SteamChannel SteamChannelMethod SteamConnectedClientBase Some new code common to SteamPending and SteamPlayer. SteamConnectionInfo SteamContent SteamGameServerNetworkingUtils SteamGroup SteamIPAddress_tEx SteamPacker SteamPending SteamPlayer SteamPlayerID SteamPlayer_NetMethods SteamPublished SteamServerAdvertisement Information about a game server retrieved through Steam's \"A2S\" query system. Available when joining using the Steam server list API (in-game server browser) or querying the Server's A2S port directly (connect by IP menu), but not when joining by Steam ID. SteamWhitelist SteamWhitelistID StereoSongAsset StickyGrenade Structure StructureData StructureDrop StructureDrop_NetMethods StructureManager StructureManager_NetMethods StructureRegion StructureTool StructuresConfigData SubcontentInfo SurvivalGameMode SystemActionEx TMP_PluginInputFieldListener TacticalLaserScale Component for the tactical laser attachment's red dot. Resizes itself per-camera to maintain a constant on-screen size. TempNodeBase TempNodeSystemBase TemperatureBubble TemperatureManager TemperatureTrigger TerrainEditor TextChatEventHook Can be added to any GameObject to receive text chat events. TextMeshProUtils ThreadUtil ThreadedConsoleInputOutput ThreadedWindowsConsoleInputOutput Windows-specific extensions of Windows console input. Uses the Win32 API to force a console to be created and destroyed. TimeSliceHash<T> Utility to hash a stream of bytes over several frames. TimerEventHook TrackSample TrainCar TransformHandles Merging the devkit, legacy, and housing transform handles into one place. TransformRecursiveFind TriggerGrenadeBase TurretInfo TypeRegistryDictionary TypeRegistryList Types UndergroundAllowlist UndergroundWhitelist UnityEventConfigData UnturnedCanvasScaler UnturnedCanvasSortOrders Keep all the uGUI Canvas sort orders in the same place. UnturnedDatEx These are methods moved from the Data class which rely on core types and so cannot go in the UnturnedDat assembly. UnturnedLog Unturned wrapper for Debug.Log, Debug.LogWarning, Debug.LogError, etc. UnturnedMasterVolume Helper wrapping Unturned's usage of AudioListener.volume, which is the master volume level. This makes it easier to track what controls the master volume and avoid bugs. UnturnedNexus UnturnedPaths UnturnedPlayerLoop Disables Unity native systems unused by Unturned. UnturnedPostProcess Manages global post-process volumes. Useable UseableArrestEnd UseableArrestEnd_NetMethods UseableArrestStart UseableArrestStart_NetMethods UseableBarricade UseableBarricade_NetMethods UseableCarjack UseableCarjack_NetMethods UseableCarlockpick UseableCarlockpick_NetMethods UseableClothing UseableClothing_NetMethods UseableCloud UseableConsumeable UseableConsumeable_NetMethods UseableDetonator UseableDetonator_NetMethods UseableEventHook Can be added to EquipablePrefab item GameObject to receive events. UseableFilter UseableFilter_NetMethods UseableFisher UseableFisher_NetMethods UseableFuel UseableFuel_NetMethods UseableGrower UseableGrower_NetMethods UseableGun UseableGunEventHook Can be added to EquipablePrefab item GameObject to receive events. UseableGun_NetMethods UseableHousingPlanner UseableHousingPlanner_NetMethods UseableMelee UseableMelee_NetMethods UseableOptic UseableRefill UseableRefill_NetMethods UseableStructure UseableStructure_NetMethods UseableThrowable UseableThrowable_NetMethods UseableTire UseableTire_NetMethods UseableVehicleBattery UseableVehicleBattery_NetMethods UseableVehiclePaint UseableVehiclePaint_NetMethods UseableWalkieTalkie VehicleAsset VehicleBarricadeRegion VehicleEventHook Can be added to Vehicle GameObject to receive events. VehicleIconInfo VehicleManager VehicleManager_NetMethods VehiclePhysicsProfileAsset Overrides vehicle physics values in bulk without building asset bundles. VehicleRedirectorAsset When loaded or spawned as a vehicle, creates a different vehicle instead. For example, Off_Roader_Orange has ID 4. When that ID is loaded/spawned the new combined Off_Roader vehicle is used instead. Can also optionally apply a paint color, allowing saves to be converted without losing colors. VehicleRef VehicleSpawn VehicleSpawnpoint VehicleState VehicleTable VehicleTier VehicleTool VehicleTurretEventHook Can be added to Vehicle Turret_# GameObject to receive events. VehiclesConfigData VendorAsset VendorBuying Represents an item the vendor is buying from players. VendorBuyingNameAscendingComparator VendorElement VendorSellingBase VendorSellingItem Represents an item the vendor is selling to players. VendorSellingNameAscendingComparator VendorSellingVehicle Represents a vehicle the vendor is selling to players. VersionUtils ViewmodelPreferenceData VolumeBase VolumeManagerBase VolumeManager<TVolume, TManager> VolumeTeleporter VolumesEditor WalkingPlayerInputPacket WaterHeightTransparentSort WeatherAsset Allows map makers to create custom weather events. WeatherAsset.TimeValues WeatherAssetBase WeatherComponentBase WeatherEventHook Can be added to any GameObject to receive weather events: Day/Night Full Moon Rain Snow WeatherEventListenerManager WebImage WebLink Wheel WindowsConsole Uses the Win32 API to force a console to be created and destroyed. WindowsConsoleInputOutput Windows-specific extensions of console input. Uses the Win32 API to force a console to be created and destroyed. WorkshopDownloadConfig Configuration for DedicatedUGC. WorkshopDownloadRestrictions Utilities for testing whether a particular server is allowed to download a workshop item. Available from client and server side so that clients can help enforce restrictions. WorkshopTool WorkshopUtils Utilities for calling workshop functions without worrying about client/server. This could be nicely refactored into a client and server interface, but not enough time for that right now. WorkzoneSelection Zombie ZombieBossQuest ZombieCloth ZombieClothing ZombieDamageMultiplier ZombieDifficultyAsset ZombieManager ZombieManager_NetMethods ZombieRegion ZombieSlot ZombieSoulFlag ZombieSoulTeleporter ZombieSpawnpoint ZombieSpecialityExtension ZombieTable ZombieTool ZombiesConfigData Structs AssetReference<T> AudioReference BbCodeToken BbCodeWidget BrowserConfigData.Link ClientInvocationContext Optional parameter for error logging. ContentReference<T> CraftingBlacklistAsset.BlacklistedBlueprint DamageAnimalParameters Payload for the DamageTool.damageAnimal function. DamagePlayerParameters Payload for the DamageTool.damagePlayer function. DamageZombieParameters Payload for the DamageTool.damageZombie function. DedicatedWorkshopUpdateMonitor.MonitoredItem DeferredMasterAsset<T> ExplosionDamageParameters Intended for internal use only. ExplosionParameters Payload for the DamageTool.explode function. Moved into struct because the amount of arguments to that function were insane, but now is not the time to completely refactor damage. FavoriteSearchFilter<T> Parses fv:X from input string and loads X.txt from game folder. HitmarkerInfo ItemCurrencyAsset.Entry ItemDescriptionBuilder ItemDescriptionLine ItemSightAsset.DistanceMarker LevelAsset.LoadingScreenMusic LevelAsset.SchedulableWeather LodGroupEnumerator Allows foreach loop to iterate renderers defined in lod group. MagazineReplacement MasterBundleReference<T> Essentially identical to ContentReference, but MasterBundle is more convenient. Perhaps in the future all asset/content systems will be consolidated. MasterBundleSearchFilter Parses mb:X from input string and filters assets using X master bundle. NPCRewardsList NetId NetworkSnapshot<T> NonDeferredAsset<T> Legacy implementation that preloads assets. OncePerFrameGuard True once per frame, false otherwise. OneShotAudioHandle Wraps audio source to prevent caller from meddling with it, and to allow the implementation to change in the future if necessary. OneShotAudioParameters PaintableVehicleSection PhysicsMaterialNetId PitchYawSnapshotInfo PlayerInputPacket.ClientRaycast PlayerSpotLightConfig PlayerStateUpdate Provider.IconQueryParams RateLimitedAction Note: new official code should be using per-method rate limit attribute. This is kept for backwards compatibility with plugins however. Timestamp for server-side rate limiting. ReceivedChatMessage Created when a chat entry is received from the server for display in the UI. RegionBounds RegionCoord RegionCoordinate Rk4Spring Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ Rk4Spring2 Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ Rk4Spring3 Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ Rk4SpringQ Thanks to Glenn Fiedler for this RK4 implementation article: https://gafferongames.com/post/integration_basics/ ServerInvocationContext Optional parameter for error logging and responding to the invoker. SkinIconInfo SpawnTableReward Nelson 2023-08-11: this probably should be rewritten a bit if used in the future because the error context currently assumes this is an item reward for consumables. SpawnTableRewardEnumerator TokenSearchFilter Splits string and compares substrings ignoring case. Tokens containing a colon ':' are ignored so that they can represent special filters like MasterBundleSearchFilter. TransformSnapshotInfo TriggerEffectParameters Payload for the EffectManager.triggerEffect method. TypeReference<T> VehiclePhysicsProfileAsset.Friction VehicleStateUpdate WeatherAsset.Effect WeatherAsset.WeatherColor YawSnapshotInfo Interfaces IAmbianceNode IAssetErrorContext Context for the Assets.ReportError methods. Nelson 2024-11-20: Converted from directly using asset to this interface so that asset-related features can more easily log warnings to the in-game menu. IAssetReference ICommandInputOutput Interface between the dedicated server command I/O and per-platform console. IContentReference IConvenientSavedata IDamageMultiplier IDeadzoneNode IDedicatedWorkshopUpdateMonitor IDeferredAsset<T> Struct interface so that for transient asset bundles (older workshop mods) they can be preloaded and retrieved as-needed, but for master bundles the asset loading can be deferred until needed. IDialogueTarget Implemented by components the player can talk with using DialogeAssets. (e.g., InteractableObjectNPC) IExplodableThrowable IExplosionDamageable Implemented by components to support taking damage from explosions. Not intended for external use (yet?) and may need to change. ILocalWorkshopSettings IManualOnDestroy IPluginAdvertising IReun ISkinableAsset ISnapshotInfo<T> ITransformedHandler ITypeReference Enums ClientInvocationContext.EOrigin ClientTextChatMessenger.EChannel DamagePlayerParameters.Bleeding DamagePlayerParameters.Bones EAction EActionType EAnimalBehaviour EAnisotropicFilteringMode EAntiAliasingType EArenaMessage EArenaState EArmorTier EAssetOrigin EAssetType EAttackInputFlags Start/Stop input is encoded as 2 bits, 1 bit for Start flag and 1 bit for Stop flag. Prior to 2023-03-16 it was a single bit. The server would Start if true and the previous frame was false, and vice versa call Stop if false and the previous frame was true. The problem with that approach was when the client FPS is higher than the simulation FPS a series of repeated attack presses would be treated as a continuous held attack input. Semi-auto guns were difficult to shoot at their max rate of fire. Sending both allows the server to theoretically call Start every simulation frame as opposed to only half. First approach was to OR Start if held, otherwise OR Stop. This doesn't work because for example when Aim is pressed the Stop flag will already be enabled, so the gun Starts aiming, Stops aiming, Starts aiming, and then stays aiming rather than just Start and stay aiming. Instead we only want Stop to be sent once. EAttendance EBatteryMode EBattlEyeProtectionFilter EBbCodeTokenType EBbCodeWidgetType EBlueprintSkill EBlueprintType EBoxItemOrigin EBoxProbabilityModel EBuild 2023-02-28: note order is important because BarricadeManager saves as a byte! ECameraMode EChatMode ECheats EClientMessage When adding or removing entries remember to update NetMessages size and regenerate NetCode! EClientPlatform ECombat EConstruct EConsumeMode EControlMode ECrosshairShape EDamageFlinchMode EDamageOrigin Currently used by plugins to identify what damaged a buildable. EDeadzoneType EDeathCause EDecalType EDeleteMode EDragCoordinate EDragMode EDragType EEconFilterMode EEditorMessage EEffectType EEngine EEquipableModelParent Which parent to use when attaching an equipped/useable item to the player. EExplosionDamageType EFiremode EGameMode EGizmoLayer EGraphicQuality EHitmarkerStyle EHuntType EItemOrigin EItemRarity EItemType ELandmarkQuality ELayerMask ELevelObjectPlacementOrigin ELevelSize ELevelType ELevelVolumeShape ELevelVolumeVisibility ELevelWeatherOverride Map creator can specify a constant weather mode. ELightingColor ELightingRain ELightingSingle ELightingSnow ELightingTime ELightingVision ELimb ELoadingTip ELogType EMannequinUpdateMode EMenuPlayMapFiltersUIOpenContext EMenuSurvivorsClothingInspectUIOpenContext ENPCConditionType ENPCHoliday ENPCLogicType ENPCModificationType ENPCOperationType ENPCPose ENPCQuestStatus ENPCRewardType ENPCWeatherStatus ENetInvocationDeferMode Defines how instance methods handle invocation when the target instance does not exist yet, for example if the target instance is async loading or has time sliced instantiation. ENetInvokableGeneratedMethodPurpose ENodeShape ENodeType EObjectChart EObjectInteractability EObjectInteractabilityEditor EObjectInteractabilityHint EObjectInteractabilityNav EObjectInteractabilityPower EObjectLOD EObjectRubble EObjectRubbleEditor EObjectRubbleNavMode Controls how rubble affects Nav game object. EObjectType EOnlineSafetyDestination EPaintMode EPassword EPhysicsMaterial EPhysicsMaterialCharacterFrictionMode EPlayerAdminUsageFlags 32-bit mask indicating to the server which admin powers are being used. Does not control which admin powers are available. EPlayerBoost EPlayerDefense EPlayerGesture EPlayerGroupRank EPlayerHeight EPlayerHit EPlayerKill 2023-01-25: fixing killing self with explosive to track kill under the assumption that this is only used for tracking stats. (public issue #2692) EPlayerMessage EPlayerOffense EPlayerPerspective EPlayerPunch EPlayerSkillset EPlayerSpeciality EPlayerStance EPlayerStat EPlayerSupport EPlayerTemperature EPlayerType EPluginWidgetFlags 32-bit mask granting server plugins additional control over custom UIs. Only replicated to owner. EPlugins Server list filter for plugin usage. EQuestViewMode ERagdollEffect ERayMask ERaycastInfoType ERaycastInfoUsage Tags how client expects server to use a raycast input. For example, client may think they fired a gun while server thinks they dequipped the gun, so tagging the input prevents the server from handling it as a punch instead. EReadTextureFromFileMode ERefillMode ERefillWaterType ERenderMode ERoadMode ERotateSnapPreset ESensitivityScalingMode ESentryMode EServerListGoldFilter Filter for whether the Permanent Gold Upgrade DLC is required to join a server. EServerMessage When adding or removing entries remember to update NetMessages size and regenerate NetCode! EServerMonetizationTag ESingleplayerMapCategory ESkinIconSize ESlotType Used for item placement in displays / holsters, and whether useable can be placed in primary/secondary slot. ESpawnMode ESteamCall ESteamCallValidation ESteamConnectionFailureInfo ESteamPacket ESteamRejection ESteamServerList ESteamServerVisibility ESteamUGCType ESteamUGCVisibility ESwingMode ETankSource ETransformSnapPreset EUseableTireMode EUseableType EVACProtectionFilter EVehicleBuildablePlacementRule Controls whether vehicle allows barricades to be attached to it. EVehicleThirdPersonCameraMode EVisualToggleType EVotingMessage EWeatherStatusChange EWorkshop EWorkshopDownloadRestrictionResult EWorkshopMenuSubmissionMode Nelson 2024-12-16: This menu and ESteamUGCType are far from ideal, but I'm just trying to hack in a new tag for server browser curation assets before the update. :P EZombiePath EZombieSpeciality EZombieStunOverride Used when damaging zombies to override in which situations they are stunned. FallDamageOverride.EMode Could be extended in the future to increase, decrease, or set fall damage. InteractableObjectBinaryStateEventHook.EListenServerHostMode ItemConsumeableAsset.Bleeding ItemConsumeableAsset.Bones ItemSightAsset.DistanceMarker.ESide LODGroupAdditionalData.ELODBiasOverride Could be extended, e.g. to clamp cull size separately from the per-LOD sizes. MenuPlayServerInfoUI.EServerInfoOpenContext SelectionTool.ESelectionMode ServerInvocationContext.EOrigin SleekPlayer.ESleekPlayerDisplayContext SteamChannelMethod.EContextType SteamServerAdvertisement.EInfoSource SteamServerAdvertisement.EPluginFramework TerrainEditor.EDevkitLandscapeToolHeightmapMode TerrainEditor.EDevkitLandscapeToolMode TerrainEditor.EDevkitLandscapeToolSplatmapMode TextChatEventHook.EModeFilter TextChatEventHook.EPhraseFilter TransformHandles.EMode VehiclePhysicsProfileAsset.EDriveModel WindowsConsole.ECtrlType ZombieClothing.EApplyFlags Delegates AdminUsageFlagsChanged ApplyingDefaultSkillsHandler ArenaMessageUpdated ArenaPlayerUpdated AssetsRefreshed BackpackUpdated BarricadeDrop.SalvageRequestHandler BarricadeSpawnedHandler BeaconUpdated BleedingUpdated BlueprintItemIconsReady BoostUpdated BrokenUpdated CharacterUpdated ChatManager.ClientUnityEventPermissionsHandler ChatMessageReceivedHandler Chatted CheckPermissions ClickedCharacter ClickedInventory ClickedItem ClickedJar ClickedLevel ClickedServer ClientMethodReceive ClientStaticMethod.ReceiveDelegate ClientStaticMethod.ReceiveDelegateWithContext ClientStaticMethod<T>.ReceiveDelegate ClientStaticMethod<T>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2>.ReceiveDelegate ClientStaticMethod<T1, T2>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3>.ReceiveDelegate ClientStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegate ClientStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ReceiveDelegateWithContext ColorPicked CommandInputHandler CommandWindowInputted CommandWindowOutputted CommandWindowTitleChanged Commander.ServerUnityEventPermissionHandler Confirm CraftingUpdated DamageBarricadeRequestHandler DamageObjectRequestHandler DamageResourceRequestHandler DamageStructureRequestHandler DamageTireRequestHandler DamageTool.DamageAnimalHandler DamageTool.DamagePlayerHandler DamageTool.DamageZombieHandler DamageTool.PlayerAllowedToDamagePlayerHandler DamageToolAnimalDamagedHandler DamageToolPlayerDamagedHandler DamageToolZombieDamagedHandler DamageVehicleRequestHandler Damaged DayNightUpdated DedicatedUGCInstalledHandler DedicatedWorkshopUpdateMonitorFactory.CreateHandler Deny DeployBarricadeRequestHandler DeployStructureRequestHandler DragStarted DragStopped DraggedItem DropItemRequestHandler EditorAreaRegisteredHandler EditorBoundUpdated EditorCreated EditorRegionUpdated EffectManager.EffectButtonClickedHandler EffectManager.EffectTextCommittedHandler ExperienceUpdated ExternalConditionsUpdated FavoriteSearchFilter<T>.SubFilterParser FlagUpdated FlagsUpdated FoodUpdated GameUpdateMonitor.GameUpdateDetectedHandler GestureUpdated GetCommands GetStatTrackerValueHandler GlassesUpdated GrabbedItem GraphicsSettingsApplied GroupIDChangedHandler GroupInfoReadyHandler GroupInvitesChangedHandler GroupRankChangedHandler GroupUpdatedHandler HatUpdated HealthUpdated HookVehicleRequestHandler HotkeysUpdated Hurt HyperUpdated InteractableFarm.HarvestRequestHandler InteractableObjectBinaryState.UsedChanged InteractableStorage.RebuiltStateHandler InventoryAdded InventoryRemoved InventoryResized InventoryStateUpdated InventoryStored InventoryUpdated IsBlindfoldedChangedHandler ItemAdded ItemDiscarded ItemDropAdded ItemDropRemoved ItemIconReady ItemRemoved ItemUpdated ItemsResized Landed Level.SatelliteCaptureDelegate LevelExited LevelLighting.IsSeaChangedHandler LevelLoaded LevelLoadingStepHandler LevelNumberUpdated LevelsRefreshed LifeUpdated LoadedAssetDeferredCallback<T> LobbiesEnteredHandler LobbiesRefreshedHandler MainCameraAvailabilityChangedHandler MainCameraInstanceChangedHandler MaskUpdated ModifySignRequestHandler MoonUpdated NPCEventHandler NPCEventTriggeredHandler NetInvokeDeferred OpenStorageRequestHandler OxygenUpdated PaintVehicleRequestHandler PantsUpdated PerspectiveUpdated PlacedItem Player.PlayerStatIncremented Player.PluginWidgetFlagsChanged PlayerAnimator.InventoryGestureListener PlayerBoundUpdated PlayerCraftingRequestHandler PlayerCreated PlayerDequipRequestHandler PlayerEquipRequestHandler PlayerLife.FallDamageRequestHandler PlayerLife.PlayerDiedCallback PlayerLife.RespawnPointSelector PlayerLifeUpdated PlayerNavChanged PlayerQuests.AnyFlagChangedHandler PlayerQuests.GroupChangedCallback PlayerRegionUpdated PlayerSpyReady PlayerTeleported PlayerVoice.RelayVoiceCullingHandler PlayerVoice.RelayVoiceHandler PluginKeyTickHandler PostLevelLoaded PreLevelLoaded PrePreLevelLoaded Provider.BackendRealtimeAvailableHandler Provider.BattlEyeKickCallback Provider.CheckBanStatusHandler Provider.CheckBanStatusWithHWIDHandler Provider.CheckValid Provider.CheckValidWithExplanation Provider.ClientConnected Provider.ClientDisconnected Provider.CommenceShutdownHandler Provider.EnemyConnected Provider.EnemyDisconnected Provider.IconQueryCallback Provider.LoginSpawningHandler Provider.QueuePositionUpdated Provider.RejectingPlayerCallback Provider.RequestBanPlayerHandler Provider.RequestBanPlayerHandlerV2 Provider.RequestUnbanPlayerHandler Provider.ServerConnected Provider.ServerDisconnected Provider.ServerHosted Provider.ServerReadingPacketHandler Provider.ServerShutdown Provider.ServerWritingPacketHandler PurchaseUpdated QuestCompletedHandler RadiationUpdated RainUpdated RegionActivated RepairBarricadeRequestHandler RepairStructureRequestHandler RepairVehicleRequestHandler RepairedBarricadeHandler RepairedStructureHandler ReputationUpdated SafetyUpdated SalvageBarricadeRequestHandler SalvageStructureRequestHandler SaveHandler Seated SelectedItem ServerFormattingChatMessageHandler ServerMethodReceive ServerSendingChatMessageHandler ServerSpawningItemDropHandler ServerStaticMethod.ReceiveDelegate ServerStaticMethod.ReceiveDelegateWithContext ServerStaticMethod<T>.ReceiveDelegate ServerStaticMethod<T>.ReceiveDelegateWithContext ServerStaticMethod<T1, T2>.ReceiveDelegate ServerStaticMethod<T1, T2>.ReceiveDelegateWithContext ServerStaticMethod<T1, T2, T3>.ReceiveDelegate ServerStaticMethod<T1, T2, T3>.ReceiveDelegateWithContext ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegate ServerStaticMethod<T1, T2, T3, T4>.ReceiveDelegateWithContext ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegate ServerStaticMethod<T1, T2, T3, T4, T5>.ReceiveDelegateWithContext ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegate ServerStaticMethod<T1, T2, T3, T4, T5, T6>.ReceiveDelegateWithContext ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7>.ReceiveDelegateWithContext ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegate ServerStaticMethod<T1, T2, T3, T4, T5, T6, T7, T8>.ReceiveDelegateWithContext ShirtUpdated SiphonVehicleRequestHandler SkillsUpdated SleekBlueprint.Clicked SleekList<T>.CreateElement SnowUpdated StaminaUpdated StanceUpdated StateUpdated StructureDrop.SalvageRequestHandler StructureSpawnedHandler SwappedState TakeItemRequestHandler Talked TemperatureUpdated TerrainEditor.DevkitLandscapeToolModeChangedHandler TerrainEditor.DevkitLandscapeToolSelectedTileChangedHandler TimeOfDayChanged TrackedQuestUpdated TransformBarricadeRequestHandler TransformHandles.PreTransformEventHandler TransformHandles.TransformedEventHandler TransformHandles.TranslatedAndRotatedEventHandler TransformStructureRequestHandler TriggerReceive TriggerSend UseableConsumeable.ConsumePerformedHandler UseableConsumeable.ConsumeRequestedHandler UseableConsumeable.PerformedAidHandler UseableConsumeable.PerformingAidHandler UseableGun.BulletHitHandler UseableGun.BulletSpawnedHandler UseableGun.ChangeAttachmentRequestHandler UseableGun.ProjectileSpawnedHandler UseableThrowable.ThrowableSpawnedHandler UseableTire.ModifyTireRequestHandler Valued VehicleBatteryChangedHandler VehicleBlimpUpdated VehicleCarjackedSignature VehicleHeadlightsUpdated VehicleIconReady VehicleLockUpdated VehicleLockpickedSignature VehicleManager.EnterVehicleRequestHandler VehicleManager.ExitVehicleRequestHandler VehicleManager.SwapSeatRequestHandler VehicleManager.ToggleVehicleLockRequested VehiclePassengersUpdated VehicleSirensUpdated VehicleSkinChangedHandler VehicleTaillightsUpdated VehicleUpdated VestUpdated VirusUpdated VisionUpdated VisualToggleChanged VotingMessage VotingStart VotingStop VotingUpdate WaterUpdated WaveUpdated WeatherBlendAlphaChangedListener WeatherStatusChangedListener WheelAliveChangedHandler ZombieLifeUpdated"
  },
  "api/System.Collections.Generic.ListExtension.html": {
    "href": "api/System.Collections.Generic.ListExtension.html",
    "title": "Class ListExtension | Unturned Analyse Doc",
    "keywords": "Class ListExtension Namespace System.Collections.Generic Assembly Assembly-CSharp.dll public static class ListExtension Inheritance object ListExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetInternalArray<T>(List<T>) public static T[] GetInternalArray<T>(this List<T> list) Parameters list List<T> Returns T[] Type Parameters T RemoveAtFast<T>(List<T>, int) public static void RemoveAtFast<T>(this List<T> list, int index) Parameters list List<T> index int Type Parameters T RemoveFast<T>(List<T>, T) public static bool RemoveFast<T>(this List<T> list, T item) Parameters list List<T> item T Returns bool Type Parameters T"
  },
  "api/System.Collections.Generic.html": {
    "href": "api/System.Collections.Generic.html",
    "title": "Namespace System.Collections.Generic | Unturned Analyse Doc",
    "keywords": "Namespace System.Collections.Generic Classes ListExtension"
  },
  "api/System.TypeExtension.html": {
    "href": "api/System.TypeExtension.html",
    "title": "Class TypeExtension | Unturned Analyse Doc",
    "keywords": "Class TypeExtension Namespace System Assembly Assembly-CSharp.dll public static class TypeExtension Inheritance object TypeExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods getDefaultValue(Type) public static object getDefaultValue(this Type type) Parameters type Type Returns object"
  },
  "api/System.html": {
    "href": "api/System.html",
    "title": "Namespace System | Unturned Analyse Doc",
    "keywords": "Namespace System Classes TypeExtension"
  },
  "api/UnityEngine.CharacterControllerExtension.html": {
    "href": "api/UnityEngine.CharacterControllerExtension.html",
    "title": "Class CharacterControllerExtension | Unturned Analyse Doc",
    "keywords": "Class CharacterControllerExtension Namespace UnityEngine Assembly Assembly-CSharp.dll public static class CharacterControllerExtension Inheritance object CharacterControllerExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CheckedMove(CharacterController, Vector3) Perform a move, then do a capsule cast to determine if Unity PhysX went through a wall. Required when disabling overlap recovery because there are issues when walking toward slopes that bend inward. To test if Unity works properly in the future; walk toward the inside of a barracks building in the PEI base. public static void CheckedMove(this CharacterController component, Vector3 motion) Parameters component CharacterController motion Vector3 DisableDetectCollisions(CharacterController) Set detectCollisions to false and cancel deferred requests to enable. public static void DisableDetectCollisions(this CharacterController component) Parameters component CharacterController DisableDetectCollisionsUntilNextFrame(CharacterController) public static void DisableDetectCollisionsUntilNextFrame(this CharacterController component) Parameters component CharacterController EnableDetectCollisionsNextFrame(CharacterController) Set detectCollisions to true on the next frame. Useful when CharacterController is teleported to prevent adding huge forces to overlapping rigidbodies. public static void EnableDetectCollisionsNextFrame(this CharacterController component) Parameters component CharacterController SetDetectCollisionsDeferred(CharacterController, bool) If true EnableDetectCollisionsNextFrame, if false DisableDetectCollisions. public static void SetDetectCollisionsDeferred(this CharacterController component, bool detectCollisions) Parameters component CharacterController detectCollisions bool"
  },
  "api/UnityEngine.RectTransformExtension.html": {
    "href": "api/UnityEngine.RectTransformExtension.html",
    "title": "Class RectTransformExtension | Unturned Analyse Doc",
    "keywords": "Class RectTransformExtension Namespace UnityEngine Assembly Assembly-CSharp.dll public static class RectTransformExtension Inheritance object RectTransformExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetAbsoluteRect(RectTransform) public static Rect GetAbsoluteRect(this RectTransform transform) Parameters transform RectTransform Returns Rect reset(RectTransform) public static void reset(this RectTransform transform) Parameters transform RectTransform"
  },
  "api/UnityEngine.html": {
    "href": "api/UnityEngine.html",
    "title": "Namespace UnityEngine | Unturned Analyse Doc",
    "keywords": "Namespace UnityEngine Classes CharacterControllerExtension RectTransformExtension"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started (test) | Unturned Analyse Doc",
    "keywords": "Getting Started (test)"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Unturned Analyse Doc",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to Unturned Analyse API Documentation! | Unturned Analyse Doc",
    "keywords": "Welcome to Unturned Analyse API Documentation! Overview A platform for analyzing Unturned's core code and simplifying plugin development. You can download Assembly-CSharp.xml and Assembly-CSharp.dll, then use dnSpy/ILSpy/dotPeek to analyze the DLL file. This will help you take your understanding beyond Nelson's documentation to the next level! The XML merging tool is being developed in Python and is currently a work in progress. For Documentation Contributors You can navigate to the xml-documentation directory in this repository and create files named <namespace>.<class-name>.xml. We implement a \"one class, one XML file\" system, which allows for better management of custom documentation files without getting confused by automatically generated XML documentation. Like this: <member name=\"T:TestNamespace.Player\"> <summary>Represents a player in the game.</summary> <remarks> This class is used to interact with a player in the game, such as sending messages, killing them, or teleporting them to a different location. </remarks> <example> Here's an example of how to use the <see cref=\"T:TestNamespace.Player\"/> class: <code> Player player = UnturnedPlayer.FromCSteamID(steamID); player.Teleport(new Vector3(100, 100, 100)); </code> </example> </member> The summary tag is used to provide a brief description of the class, while the remarks tag is used to provide more detailed information. The example tag is used to provide an example of how to use the class. Useful Documentation Links Documentation comments - Learn about XML documentation comments in C#, including their purpose and basic syntax. Recommended XML tags for C# documentation comments - Explore Microsoft's comprehensive guide to recommended XML tags for documenting your C# code. Powered by DocFX and hosted on GitHub Pages"
  }
}